var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractBaseForm.html",[0,0.015,1,2.96]],["body/classes/AbstractBaseForm.html",[0,0.019,1,4.732,2,2.187,3,0.161,4,0.191,5,0.103,6,5.79,7,1.892,8,4.03,9,0.206,10,0.753,11,2.953,12,5.59,13,0.861,14,2.797,15,5.426,16,4.192,17,2.293,18,4.224,19,0.881,20,3.056,21,4.145,22,0.698,23,6.859,24,1.102,25,0.011,26,0.579,27,0.297,28,0.651,29,1.178,30,5.462,31,5.472,32,1.679,33,1.875,34,5.061,35,0.754,36,0.708,37,1.07,38,4.796,39,3.388,40,4.459,41,5.061,42,1.774,43,3.673,44,1.419,45,2.034,46,3.885,47,5.061,48,1.873,49,0.823,50,5.462,51,5.061,52,2.158,53,4.732,54,4.019,55,5.472,56,4.224,57,1.34,58,1.17,59,5.472,60,0.438,61,5.59,62,4.609,63,5.462,64,5.061,65,2.746,66,3.673,67,4.732,68,3.837,69,2.187,70,2.597,71,0.24,72,2.336,73,5.472,74,4.796,75,4.357,76,0.161,77,3.201,78,5.462,79,5.462,80,0.007,81,0.008,82,0.007]],["title/classes/AbstractForm.html",[0,0.015,83,3.423]],["body/classes/AbstractForm.html",[0,0.019,1,5.824,2,2.127,3,0.157,4,0.186,5,0.1,6,5.544,7,1.197,8,3.919,9,0.201,10,0.74,11,2.929,12,5.107,13,0.846,14,2.737,15,5.754,16,4.12,17,2.457,18,4.151,19,0.87,20,2.972,21,4.056,22,0.72,24,1.083,25,0.011,26,0.569,27,0.304,28,0.64,29,1.145,31,4.238,32,1.812,33,1.452,34,3.919,35,0.734,36,0.689,37,0.829,39,2.624,40,3.453,41,3.919,42,1.374,43,2.845,44,1.573,45,2.014,46,3.846,47,5.462,48,1.854,49,0.901,51,3.919,52,1.671,53,3.665,54,3.113,55,4.238,56,3.271,57,1.148,58,1.215,59,4.238,60,0.394,61,4.65,62,3.949,64,3.919,65,2.127,66,2.845,67,3.665,68,2.972,69,2.127,70,2.526,71,0.272,72,2.272,76,0.157,77,3.113,80,0.006,81,0.008,82,0.006,83,5.377,84,1.478,85,6.837,86,6.74,87,2.964,88,2.272,89,6.74,90,4.65,91,4.972,92,4.151,93,2.929,94,4.664,95,4.664,96,5.312,97,5.312,98,4.972,99,3.609,100,5.918,101,4.664,102,4.664,103,4.664,104,2.436,105,0.449,106,1.102,107,4.664,108,0.905,109,2.624,110,0.624,111,3.113,112,5.312,113,5.312]],["title/classes/AbstractFormControl.html",[0,0.015,114,2.041]],["body/classes/AbstractFormControl.html",[0,0.02,2,1.688,3,0.124,4,0.148,5,0.079,6,5.893,7,1.679,9,0.159,10,0.635,11,2.408,13,0.726,14,2.675,17,2.353,22,0.728,24,1.197,25,0.011,26,0.629,27,0.311,28,0.731,29,1.061,32,1.416,35,1.109,36,1.022,37,0.902,42,1.496,44,1.541,49,0.881,58,1.298,60,0.435,71,0.261,76,0.124,80,0.005,81,0.007,82,0.005,84,1.269,93,1.537,105,0.356,106,0.875,110,0.68,114,2.751,115,3.702,116,0.703,117,1.531,118,2.8,119,3.537,120,2.336,121,2.408,122,0.957,123,2.244,124,1.603,125,2.923,126,2.923,127,3.871,128,3.871,129,3.977,130,1.573,131,4.378,132,2.561,133,3.433,134,2.42,135,4.216,136,4.216,137,4.216,138,1.405,139,1.744,140,1.585,141,1.447,142,1.537,143,1.688,144,1.201,145,4.216,146,1.585,147,4.216,148,2.746,149,1.585,150,4.216,151,2.596,152,3.433,153,3.511,154,4.216,155,3.543,156,3.186,157,4.365,158,2.653,159,0.925,160,2.236,161,2.082,162,4.216,163,3.029,164,4.216,165,4.216,166,1.866,167,4.216,168,4.216,169,4.216,170,4.216,171,4.616,172,1.125,173,2.166,174,1.273,175,2.909,176,3.702,177,3.702,178,1.491,179,4.216,180,2.653,181,2.005,182,0.474,183,2.909,184,2.258,185,2.74,186,4.216,187,2.175,188,4.616,189,2.561,190,3.363,191,1.491,192,2.596,193,1.447,194,2.909,195,2.139,196,2.74,197,4.216,198,2.596,199,2.359,200,3.11,201,2.258,202,3.702,203,1.211,204,5.786,205,4.873,206,4.216,207,4.216,208,1.866,209,3.363,210,3.363,211,2.316,212,6.605,213,3.363,214,2.909,215,3.702,216,4.216,217,2.175,218,0.718,219,3.11,220,2.166,221,2.359,222,4.216,223,3.11,224,4.216,225,4.216,226,4.216,227,5.786,228,4.216,229,4.216,230,4.216,231,7.109,232,2.74,233,5.786,234,3.761,235,4.216,236,2.258,237,2.082,238,4.216,239,1.866,240,3.991,241,0.697,242,4.216]],["title/classes/AbstractHttpService.html",[0,0.015,243,2.4]],["body/classes/AbstractHttpService.html",[0,0.023,2,1.681,3,0.124,4,0.147,5,0.079,9,0.159,10,0.633,13,0.891,14,2.744,17,2.689,19,0.493,22,0.695,24,1.307,25,0.011,26,0.649,27,0.314,28,0.73,29,0.822,35,0.58,36,0.544,37,0.9,49,0.864,60,0.385,61,5.132,62,2.46,69,3.328,70,1.996,71,0.26,76,0.124,77,2.46,80,0.005,81,0.007,82,0.005,99,3.089,110,0.874,138,1.399,158,1.925,159,1.445,160,1.32,172,1.386,178,2.04,203,1.309,217,2.477,223,4.256,234,3.749,243,3.227,244,6.134,245,3.439,246,3.686,247,4.552,248,3.035,249,4.284,250,5.787,251,5.661,252,4.862,253,5.431,254,5.065,255,4.602,256,2.964,257,6.531,258,3.686,259,4.158,260,5.768,261,4.895,262,4.198,263,5.808,264,4.602,265,5.065,266,4.198,267,5.065,268,5.488,269,4.198,270,4.059,271,5.011,272,5.661,273,2.309,274,4.284,275,5.065,276,4.602,277,2.168,278,4.407,279,3.552,280,4.612,281,4.198,282,4.602,283,5.787,284,4.835,285,3.749,286,5.065,287,4.256,288,2.553,289,5.065,290,5.065,291,5.065,292,5.488,293,4.198,294,5.065,295,4.198,296,5.065,297,6.748,298,3.813,299,4.198,300,5.065,301,4.256,302,1.764,303,1.231,304,1.923,305,5.065,306,3.141,307,6.231,308,2.297,309,5.065,310,5.065,311,3.979,312,4.602,313,4.198,314,4.198,315,3.552,316,4.602,317,2.46,318,2.348,319,1.736,320,3.349,321,3.686,322,2.248,323,3.529,324,2.157,325,3.349,326,3.686,327,2.585,328,4.198,329,5.768,330,5.768,331,4.198,332,1.925,333,4.198,334,5.768,335,5.768,336,1.925,337,4.198,338,2.729,339,4.198,340,4.198,341,1.736,342,3.349,343,4.602,344,4.198,345,1.868,346,5.065,347,2.585,348,4.602,349,3.349,350,4.198,351,3.686,352,3.686,353,3.686,354,2.645,355,4.198,356,4.198,357,2.729,358,1.484]],["title/injectables/AbstractPageGuardService.html",[359,1.35,360,2.96]],["body/injectables/AbstractPageGuardService.html",[0,0.027,3,0.173,4,0.205,5,0.11,9,0.221,13,1.012,14,2.888,22,0.605,24,0.94,25,0.011,26,0.494,27,0.221,28,0.556,29,1.148,49,0.786,57,1.408,60,0.452,65,2.866,69,2.866,71,0.205,76,0.173,80,0.007,81,0.009,82,0.007,105,0.494,116,0.87,122,1.392,159,1.284,244,5.707,248,3.597,359,2.252,360,5.56,361,3.007,362,4.038,363,4.509,364,4.316,365,3.679,366,2.395,367,6.429,368,6.287,369,7.16,370,4.939,371,6.287,372,6.287,373,3.405,374,5.282,375,5.712,376,2.532,377,5.56,378,1.957,379,2.252,380,2.189,381,7.16,382,5.56,383,6.792,384,5.853,385,5.139,386,5.853]],["title/injectables/AbstractPgCheckService.html",[359,1.35,387,2.789]],["body/injectables/AbstractPgCheckService.html",[0,0.025,3,0.171,4,0.203,5,0.109,9,0.219,13,0.967,14,2.947,22,0.678,24,0.93,25,0.011,26,0.489,27,0.219,28,0.55,29,1.195,49,0.881,60,0.482,65,2.847,69,2.847,71,0.203,76,0.171,80,0.007,81,0.009,82,0.007,105,0.489,116,0.703,122,1.453,244,6.08,248,3.292,359,2.237,361,2.974,363,3.978,364,3.808,365,2.974,366,2.288,367,5.673,368,5.083,371,5.083,372,5.083,373,2.753,374,4.271,375,4.618,376,2.047,378,1.944,379,2.237,380,2.174,382,5.539,387,5.357,388,5.685,389,5.083,390,5.673,391,6.244,392,4.741,393,6.405,394,5.679,395,6.405,396,5.789,397,5.789,398,5.083,399,5.789,400,5.789,401,3.238]],["title/classes/AbstractReactForm.html",[0,0.015,402,3.423]],["body/classes/AbstractReactForm.html",[0,0.017,1,5.716,2,1.942,3,0.143,4,0.17,5,0.091,6,5.529,7,1.093,8,3.578,9,0.183,10,0.698,11,2.847,12,4.891,13,0.798,14,2.671,15,5.634,16,4.034,17,2.388,18,3.914,19,0.833,20,2.713,21,3.959,22,0.714,24,1.209,25,0.011,26,0.635,27,0.309,28,0.715,29,1.113,31,3.869,32,1.735,33,1.326,34,3.578,35,0.878,36,0.824,37,0.757,38,5.581,39,2.396,40,3.153,41,3.578,42,1.254,43,3.404,44,1.546,45,1.946,46,3.716,47,5.23,48,1.792,49,0.91,51,3.578,52,1.526,53,3.346,54,2.842,55,3.869,56,2.987,57,1.082,58,1.218,59,3.869,60,0.371,61,4.385,62,3.724,64,3.578,65,1.942,66,2.598,67,3.346,68,2.713,69,1.942,70,2.307,71,0.248,72,2.074,76,0.143,77,2.842,80,0.006,81,0.008,82,0.006,84,1.394,85,5.581,90,4.385,91,4.689,92,3.914,93,2.847,94,4.259,95,4.259,98,4.689,99,3.404,100,5.581,101,4.259,102,4.259,103,4.259,106,1.007,107,4.259,108,1.082,109,3.139,110,0.747,130,1.688,181,3.023,192,3.914,195,1.57,203,1.082,211,2.545,303,1.035,357,3.153,402,5.071,403,6.394,404,8.695,405,6.356,406,6.356,407,4.85,408,7.811,409,4.85,410,6.356,411,6.356,412,4.85,413,2.058,414,4.85,415,3.578,416,4.85,417,4.85,418,1.942,419,2.713,420,4.85,421,7.089,422,4.85,423,4.259,424,3.869,425,4.85,426,3.153,427,3.346,428,2.713,429,5.071,430,4.85,431,4.85]],["title/classes/AbstractTestPage.html",[0,0.015,432,3.166]],["body/classes/AbstractTestPage.html",[0,0.023,2,1.139,3,0.156,4,0.1,5,0.099,9,0.108,10,0.477,13,0.546,14,1.969,16,3.315,18,2.677,22,0.706,24,1.21,25,0.011,26,0.723,27,0.303,28,0.715,33,1.834,35,0.816,36,1.007,44,0.784,46,2.918,48,1.793,49,0.925,52,1.367,53,5.195,57,1.282,58,1.226,60,0.515,67,4.076,68,2.432,69,2.365,71,0.1,76,0.084,80,0.003,81,0.005,82,0.003,110,0.846,122,1.11,134,2.42,144,0.902,159,1.618,174,1.191,182,0.498,199,3.754,203,0.484,208,1.924,217,3.039,236,2.328,237,2.918,240,3.64,272,3.468,274,2.825,277,1.634,288,1.924,302,1.329,304,1.449,308,1.407,311,1.962,345,1.913,354,3.991,373,2.067,378,1.615,432,4.359,433,7.375,434,5.21,435,2.497,436,3.817,437,1.191,438,3.468,439,5.187,440,4.219,441,1.528,442,2.547,443,2.547,444,6.711,445,5.908,446,3.207,447,4.347,448,1.895,449,4.633,450,5.276,451,5.908,452,5.908,453,4.347,454,4.347,455,5.908,456,4.347,457,5.908,458,4.347,459,5.908,460,5.908,461,4.362,462,6.711,463,5.908,464,5.908,465,4.347,466,4.347,467,4.347,468,4.347,469,6.365,470,4.347,471,1.528,472,2.844,473,4.347,474,2.432,475,2.328,476,3.164,477,3.468,478,3.462,479,4.347,480,3.036,481,2.844,482,3.207,483,3.817,484,3.817,485,4.347,486,4.347,487,3.817,488,2.844,489,2.999,490,3.468,491,4.347,492,3.468,493,3.817,494,5.908,495,2.844,496,4.347,497,1.442,498,4.076,499,2.825,500,3.817,501,4.347,502,2.844,503,4.347,504,6.322,505,5.354,506,4.967,507,4.347,508,2.844,509,1.993,510,3.462,511,4.783,512,6.977,513,7.2,514,2.844,515,4.347,516,2.844,517,3.207,518,2.844,519,2.844,520,4.347,521,2.844,522,4.347,523,1.292,524,4.713,525,2.844,526,2.844,527,4.347,528,2.844,529,4.347,530,2.825,531,4.347,532,2.918,533,2.615,534,4.713,535,4.391,536,5.908,537,4.347,538,4.713,539,4.347,540,2.844,541,2.999,542,5.187,543,2.844,544,3.468,545,3.468,546,3.817,547,2.432,548,2.677,549,4.347,550,4.347,551,4.347,552,3.817,553,4.347,554,5.908,555,3.468,556,2.547,557,4.347,558,3.817,559,3.817,560,2.999,561,2.844,562,2.844,563,2.825,564,4.347,565,2.844,566,2.147,567,4.347,568,5.908,569,2.844,570,5.276,571,2.918,572,2.147,573,1.094,574,3.817,575,2.147,576,2.067,577,2.677,578,3.305,579,3.468,580,2.999,581,3.817,582,3.207,583,3.468,584,4.347,585,3.817,586,4.347,587,2.677,588,3.305,589,3.207,590,5.908,591,5.187,592,3.462,593,3.754,594,4.359,595,4.347,596,2.844,597,1.798,598,4.347,599,4.347,600,2.432,601,2.677,602,3.468,603,4.347,604,4.347,605,2.844,606,4.817,607,4.347,608,2.844,609,3.468,610,4.347,611,1.667,612,0.736,613,4.347,614,2.844,615,2.844,616,2.844,617,2.844,618,2.844,619,2.844,620,2.844,621,2.844,622,2.844,623,2.844,624,2.844,625,2.269,626,2.844,627,2.844,628,2.269,629,4.347,630,4.347,631,3.817,632,2.844,633,2.844,634,2.844,635,2.844,636,1.259,637,4.347,638,2.844,639,2.844,640,4.347,641,2.844,642,2.844,643,2.844,644,2.844,645,2.844,646,2.844,647,2.844,648,2.844,649,2.844,650,2.844,651,2.844,652,2.844,653,2.844]],["title/components/AccordionCommonComponent.html",[182,0.264,654,1.141]],["body/components/AccordionCommonComponent.html",[0,0.017,3,0.145,4,0.172,5,0.121,9,0.186,10,0.704,13,0.805,19,0.838,22,0.662,25,0.011,26,0.602,27,0.27,29,0.913,32,1.569,35,0.885,36,0.831,37,1,44,1.156,45,1.27,48,1.526,49,0.539,57,1.091,58,0.766,60,0.442,71,0.172,76,0.189,80,0.006,81,0.008,82,0.006,105,0.415,116,0.779,117,1.653,122,1.18,124,1.704,144,1.33,159,1.077,172,0.837,174,1.18,182,0.439,218,0.837,378,1.752,437,1.493,448,1.236,471,1.27,497,1.343,573,1.236,612,1.657,654,2.01,655,1.306,656,1.38,657,1.46,658,4.313,659,6.409,660,1.138,661,1.498,662,6.409,663,1.612,664,6.409,665,1.33,666,6.409,667,7.842,668,7.133,669,4.83,670,4.912,671,4.912,672,4.912,673,4.912,674,4.421,675,6.409,676,4.912,677,1.343,678,1.704,679,2.247,680,1.46,681,1.46,682,1.202,683,1.46,684,1.306,685,1.077,686,1.46,687,1.27,688,1.46,689,1.27,690,1.46,691,1.306,692,1.46,693,1.306,694,1.46,695,1.306,696,1.46,697,1.306,698,1.38,699,1.46,700,1.27,701,1.905,702,1.306,703,1.38,704,1.46,705,1.306,706,1.46,707,1.306,708,1.46,709,1.27,710,1.46,711,1.46,712,1.27,713,1.46,714,1.306,715,1.46,716,1.27,717,1.46,718,1.306,719,2.12,720,1.306,721,1.236,722,1.236,723,1.905,724,1.306,725,1.419,726,1.46,727,1.27,728,1.46,729,1.306,730,1.46,731,1.306,732,1.46,733,1.236,734,1.46,735,1.306,736,1.46,737,1.343,738,1.419,739,1.46,740,1.27,741,1.202,742,1.46,743,1.306,744,1.46,745,1.236,746,1.46,747,1.27,748,1.38,749,1.306,750,1.46,751,1.343,752,1.46,753,1.306,754,1.46,755,1.27,756,1.46,757,1.306,758,1.38,759,1.27,760,1.27,761,1.419,762,1.107,763,1.27,764,1.46,765,1.27,766,1.46,767,1.27,768,1.46,769,1.27,770,1.46,771,1.27,772,1.46,773,1.27,774,1.46,775,1.27,776,1.46,777,1.27,778,1.38,779,1.46]],["title/interfaces/AddrLabelList.html",[780,0.521,781,2.96]],["body/interfaces/AddrLabelList.html",[0,0.011,3,0.089,4,0.106,5,0.057,7,1.026,9,0.114,10,0.5,11,1.102,19,0.355,25,0.011,26,0.255,27,0.27,28,0.764,29,1.155,33,1.244,35,0.629,36,1.033,37,1.254,39,1.493,52,0.951,58,0.854,60,0.514,65,1.21,71,0.25,76,0.18,80,0.004,81,0.006,82,0.004,84,0.663,87,2.193,105,0.255,106,0.627,108,1.038,110,0.913,111,1.772,116,0.367,117,1.055,118,1.711,120,1.069,121,1.102,124,0.682,130,1.748,132,1.172,141,1.038,146,1.136,148,1.518,149,1.136,160,0.951,161,1.493,163,1.386,174,1.352,182,0.375,183,3.141,184,2.438,189,2.015,191,1.069,193,1.038,194,3.141,196,3.56,199,1.691,201,1.619,203,1.17,208,1.338,211,2.618,217,1.711,232,1.965,236,1.619,237,1.493,241,0.5,273,1.21,277,1.136,302,1.675,303,1.466,304,1.008,332,1.386,336,1.386,341,2.265,345,1.773,354,1.386,365,1.553,366,1.353,379,0.951,380,1.392,413,2.309,418,2.193,437,0.5,441,0.782,461,1.965,475,1.619,510,2.668,523,1.353,533,1.338,566,1.493,571,1.493,575,4.11,576,3.787,587,3.373,588,1.691,593,1.691,597,1.25,661,0.5,665,0.627,682,1.115,685,1.804,722,0.761,741,1.115,780,0.666,781,4.205,782,0.979,783,1.61,784,1.61,785,2.231,786,4.824,787,5.216,788,5.216,789,3.931,790,4.624,791,1.178,792,1.497,793,2.438,794,2.342,795,1.947,796,2.34,797,1.136,798,2.438,799,2.231,800,2.086,801,3.56,802,3.132,803,3.141,804,2.086,805,3.962,806,3.56,807,3.141,808,2.231,809,3.962,810,4.511,811,2.086,812,2.231,813,2.412,814,2.412,815,1.438,816,1.772,817,1.862,818,1.619,819,1.386,820,2.438,821,3.632,822,2.547,823,2.086,824,2.412,825,2.412,826,2.231,827,2.231,828,2.231,829,2.412,830,2.412,831,2.412,832,2.086,833,2.412,834,2.412,835,2.535,836,5.688,837,2.086,838,2.086,839,2.231,840,2.231,841,2.438,842,2.412,843,2.231,844,2.412,845,4.026,846,2.231,847,2.412,848,2.231,849,1.965,850,3.632,851,2.412,852,2.412,853,3.632,854,2.804,855,2.412,856,2.412,857,2.412,858,2.412,859,2.412,860,2.342,861,2.605,862,1.772,863,2.998,864,2.412,865,2.412,866,2.412,867,4.205,868,1.862,869,0.874,870,3.359,871,2.412,872,2.412,873,3.632,874,6.103,875,3.632,876,2.547,877,3.632,878,6.103,879,4.369,880,1.553,881,2.231,882,1.965,883,2.412,884,2.412,885,2.412,886,2.412,887,2.412,888,2.412,889,4.863,890,1.338,891,2.412,892,2.412,893,3.632,894,2.668,895,1.772,896,4.369,897,5.482,898,5.688,899,5.482,900,2.412,901,2.412,902,4.369,903,2.412,904,4.369,905,2.668,906,2.412,907,2.231,908,2.412,909,2.412,910,1.772,911,2.412,912,2.412,913,3.373,914,2.412,915,2.412,916,2.412,917,3.359,918,2.96,919,3.632,920,3.632,921,3.632,922,3.632,923,2.412,924,1.293,925,2.412,926,2.412,927,3.778,928,2.086,929,2.412,930,1.172,931,2.412,932,2.412,933,2.412,934,2.086,935,1.772,936,2.412,937,2.412,938,2.412,939,2.086,940,2.412,941,4.863,942,2.412,943,2.412,944,2.412,945,2.412,946,2.412,947,4.041,948,2.086,949,2.412,950,4.497,951,3.632,952,3.359,953,3.632,954,4.369,955,2.231,956,2.412,957,2.412,958,2.231,959,1.862,960,1.772,961,1.772,962,1.438,963,2.412,964,2.412,965,2.412,966,3.359,967,2.412,968,2.412,969,2.231,970,2.412,971,2.412,972,2.412,973,1.493,974,2.086,975,2.412,976,1.862,977,2.412,978,2.412,979,2.231,980,2.231,981,2.231,982,2.412,983,3.632,984,3.632,985,3.632,986,2.412,987,2.412,988,2.412,989,2.412,990,2.412,991,2.412,992,2.412,993,2.412,994,2.412,995,2.412,996,2.412,997,2.412,998,2.412,999,3.632,1000,2.412,1001,2.412]],["title/classes/Address.html",[0,0.015,685,0.941]],["body/classes/Address.html",[0,0.024,2,1.819,3,0.134,4,0.159,5,0.085,9,0.172,10,0.805,13,0.764,22,0.731,24,0.978,25,0.011,26,0.514,27,0.321,28,0.747,29,1.145,33,1.663,35,0.628,36,0.589,37,0.709,49,0.805,58,0.949,60,0.511,76,0.134,80,0.005,81,0.007,82,0.005,90,4.199,110,0.862,122,1.469,158,2.79,159,0.996,160,1.429,178,2.888,181,2.16,184,3.259,187,2.287,203,0.774,241,0.752,256,3.127,302,2.241,303,0.969,315,4.949,345,1.471,358,1.606,436,5.344,441,1.175,474,3.405,477,4.855,575,3.39,576,3.264,601,3.748,685,1.892,741,1.68,789,3.526,820,4.304,835,2.661,841,4.43,881,5.063,924,2.603,930,2.843,973,3.006,976,4.227,1002,3.989,1003,3.351,1004,2.798,1005,7.056,1006,6.863,1007,6.026,1008,6.909,1009,5.475,1010,6.863,1011,5.058,1012,7.868,1013,6.863,1014,4.543,1015,4.543,1016,7.331,1017,6.437,1018,4.543,1019,4.543,1020,4.543,1021,4.543,1022,4.543,1023,4.543,1024,6.086,1025,6.515,1026,6.437,1027,3.566,1028,4.855,1029,4.855,1030,4.543,1031,4.543,1032,5.344,1033,4.543,1034,4.543,1035,6.086,1036,6.086,1037,4.543,1038,5.344,1039,5.344,1040,4.199,1041,6.086,1042,6.086,1043,4.855,1044,5.344,1045,6.086,1046,5.344,1047,6.086,1048,6.086,1049,6.086,1050,3.956,1051,4.543,1052,4.543,1053,4.543,1054,4.543,1055,4.543,1056,4.543,1057,3.748,1058,4.543,1059,3.989,1060,4.543,1061,7.644,1062,6.026,1063,2.662,1064,5.344,1065,5.344,1066,6.863,1067,4.543,1068,4.543,1069,4.543,1070,4.543,1071,4.543,1072,4.543,1073,4.543,1074,4.543,1075,4.543,1076,4.543,1077,4.543,1078,4.543,1079,4.543]],["title/interfaces/AddressResult.html",[780,0.521,1080,3.166]],["body/interfaces/AddressResult.html",[0,0.013,3,0.107,4,0.127,5,0.068,7,0.82,9,0.138,10,0.573,17,1.865,25,0.011,27,0.278,28,0.346,29,1.077,36,0.864,37,1.229,42,1.35,43,1.949,44,0.656,52,2.096,56,2.241,58,1.207,60,0.513,62,3.575,71,0.28,76,0.154,80,0.007,81,0.006,82,0.009,84,0.798,105,0.307,106,0.755,108,0.889,110,0.889,114,2.482,116,0.442,117,1.209,118,1.961,119,1.949,120,1.287,121,1.327,122,1.251,124,0.82,125,1.611,126,1.611,130,1.453,132,1.411,133,2.232,134,1.082,148,2.221,152,2.232,155,2.482,156,2.232,159,0.798,160,1.642,172,1.202,173,1.87,174,1.251,182,0.321,187,1.368,189,2.31,191,1.287,192,2.241,193,1.791,195,1.178,203,1.392,217,1.368,220,2.681,241,1.251,245,2.756,247,2.919,259,3.058,268,3.85,271,3.757,278,3.424,279,2.241,280,3.392,284,2.366,288,1.611,302,1.113,303,1.302,304,1.739,315,2.241,318,2.036,319,1.505,320,2.904,322,1.949,332,1.669,336,2.797,338,3.392,345,1.178,354,2.393,357,3.392,373,1.731,378,1.426,413,1.178,426,2.366,437,0.602,441,0.941,510,2.133,533,1.611,560,4.209,571,3.013,572,2.578,575,3.821,576,3.679,578,2.036,580,2.511,587,3.214,593,2.036,597,1.505,601,2.241,602,4.163,606,3.6,655,0.968,661,0.602,663,0.916,665,0.755,684,0.968,685,1.845,759,0.941,780,0.442,782,1.178,789,2.681,790,4.522,791,1.724,792,1.928,793,1.949,797,1.368,800,2.511,815,1.731,820,1.949,835,2.736,837,2.511,841,3.267,849,2.366,869,1.052,894,2.133,913,2.241,930,2.366,959,3.214,961,2.133,962,2.482,974,2.511,980,2.685,981,2.685,1063,3.058,1080,4.917,1081,3.196,1082,2.904,1083,3.196,1084,4.582,1085,5.357,1086,7.342,1087,7.342,1088,7.342,1089,3.392,1090,2.511,1091,4.867,1092,2.511,1093,2.685,1094,4.582,1095,3.196,1096,2.133,1097,4.582,1098,1.87,1099,2.904,1100,2.036,1101,2.681,1102,1.949,1103,3.196,1104,3.196,1105,3.569,1106,3.64,1107,3.64,1108,3.64,1109,3.64,1110,3.413,1111,2.685,1112,2.904,1113,2.036,1114,3.196,1115,2.036,1116,3.196,1117,3.196,1118,4.163,1119,3.196,1120,3.196,1121,3.196,1122,4.867,1123,4.582,1124,2.904,1125,3.196,1126,3.196,1127,3.196,1128,2.482,1129,2.511,1130,1.731,1131,3.196,1132,3.196,1133,3.196,1134,3.966,1135,3.196,1136,3.64,1137,3.196,1138,3.196,1139,3.196,1140,5.357,1141,3.196,1142,3.196,1143,3.196,1144,2.904,1145,3.196,1146,3.196,1147,3.196,1148,3.196,1149,3.196,1150,2.904,1151,3.196,1152,3.64,1153,3.196,1154,3.196,1155,3.196,1156,3.196,1157,3.196,1158,1.368,1159,3.196,1160,2.511,1161,2.904,1162,2.133,1163,3.196,1164,5.357,1165,3.64,1166,3.196,1167,3.64,1168,3.196,1169,3.196,1170,3.196,1171,3.64,1172,3.64,1173,2.904,1174,2.511,1175,4.582,1176,3.196,1177,3.64,1178,3.64,1179,3.64,1180,4.582,1181,3.196,1182,3.196,1183,2.685,1184,3.392,1185,3.196,1186,2.904,1187,3.196,1188,2.685,1189,2.904,1190,3.196,1191,3.196,1192,2.904,1193,4.582,1194,2.511,1195,2.036,1196,2.685,1197,2.904,1198,3.196,1199,2.366,1200,3.196,1201,3.196,1202,3.196,1203,1.87,1204,3.196,1205,2.904,1206,3.64,1207,3.64,1208,3.64,1209,2.904,1210,4.163,1211,2.904,1212,2.904,1213,2.036,1214,2.904,1215,2.241,1216,2.904,1217,3.64,1218,2.904,1219,3.64,1220,3.64,1221,3.64,1222,3.64,1223,3.64,1224,3.64,1225,3.64,1226,3.64,1227,3.64]],["title/classes/Base.html",[0,0.015,7,0.967]],["body/classes/Base.html",[0,0.03,2,2.557,3,0.188,4,0.224,5,0.12,7,1.871,9,0.241,10,0.828,19,0.944,22,0.637,25,0.011,27,0.241,35,0.882,36,0.828,60,0.441,71,0.224,76,0.188,80,0.008,81,0.009,82,0.008,122,1.329,123,3.114,138,2.515,140,2.836,141,2.59,142,2.75,143,3.021,144,1.722,159,1.401,315,4.647,323,4.041,324,3.282,1004,4.647,1228,5.609,1229,7.546,1230,4.221,1231,4.647,1232,3.727,1233,4.422,1234,7.546]],["title/components/ButtonComponent.html",[182,0.264,687,1.11]],["body/components/ButtonComponent.html",[0,0.021,3,0.126,4,0.15,5,0.11,9,0.162,10,0.642,11,2.427,13,0.734,19,0.783,22,0.68,24,0.688,25,0.011,26,0.604,27,0.283,28,0.407,29,0.833,32,1.431,35,1.129,36,0.863,37,0.912,44,1.055,45,1.107,48,2.063,49,0.642,57,0.996,58,0.912,60,0.342,66,3.131,71,0.205,76,0.172,80,0.005,81,0.007,82,0.005,87,2.666,88,1.831,104,1.963,105,0.362,106,0.888,116,0.711,117,1.543,124,1.613,134,2.226,144,1.213,159,0.939,172,0.996,174,1.184,178,2.068,182,0.487,218,0.729,241,0.708,288,1.895,308,2.316,366,1.738,378,1.598,380,1.788,437,1.483,448,1.077,471,1.107,497,1.17,560,2.954,573,1.077,597,2.418,600,3.271,612,1.512,628,3.415,654,1.138,655,1.138,656,1.203,657,1.272,660,0.992,661,1.49,665,1.213,677,1.17,678,1.554,679,2.127,680,1.272,681,1.272,682,1.048,683,1.272,684,1.138,685,0.939,686,1.272,687,1.85,688,1.272,689,1.107,690,1.272,691,1.138,692,1.272,693,1.138,694,1.272,695,1.138,696,1.272,697,1.138,698,1.203,699,1.272,700,1.107,701,1.738,702,1.138,703,1.203,704,1.272,705,1.138,706,1.272,707,1.138,708,1.272,709,1.107,710,1.272,711,1.272,712,1.107,713,1.272,714,1.138,715,1.272,716,1.107,717,1.272,718,1.138,719,1.979,720,1.138,721,1.077,722,1.077,723,1.738,724,1.138,725,1.237,726,1.272,727,1.107,728,1.272,729,1.138,730,1.272,731,1.138,732,1.272,733,1.077,734,1.272,735,1.138,736,1.272,737,1.17,738,1.237,739,1.272,740,1.107,741,1.048,742,1.272,743,1.138,744,1.272,745,1.077,746,1.272,747,1.107,748,1.203,749,1.138,750,1.272,751,1.17,752,1.272,753,1.138,754,1.272,755,1.107,756,1.272,757,1.138,758,1.203,759,1.107,760,1.107,761,1.237,762,0.965,763,1.107,764,1.272,765,1.107,766,1.272,767,1.107,768,1.272,769,1.107,770,1.272,771,1.107,772,1.272,773,1.107,774,1.272,775,1.107,776,1.272,777,1.107,778,1.203,779,1.272,791,1.512,792,1.956,794,2.848,795,2.848,811,4.034,819,2.681,1158,1.609,1235,3.759,1236,4.594,1237,4.314,1238,5.847,1239,2.888,1240,3.8,1241,4.314,1242,4.034,1243,5.847,1244,5.847,1245,5.847,1246,5.847,1247,5.847,1248,5.134,1249,4.034,1250,4.193,1251,5.134,1252,3.601,1253,5.134,1254,4.664,1255,5.847,1256,5.134,1257,5.134,1258,6.658,1259,2.267,1260,5.312,1261,5.847,1262,7.155,1263,4.664,1264,4.281,1265,4.281,1266,4.281,1267,4.281,1268,4.281,1269,5.134,1270,4.281,1271,4.594,1272,5.847,1273,6.789,1274,3.759]],["title/components/ButtonGroupComponent.html",[182,0.264,689,1.11]],["body/components/ButtonGroupComponent.html",[0,0.014,3,0.113,4,0.135,5,0.102,9,0.145,10,0.596,11,2.293,13,0.682,19,0.739,22,0.716,24,1.098,25,0.011,26,0.649,27,0.312,28,0.649,29,1.118,32,1.329,35,1.102,36,1.035,37,1.066,42,1.864,44,0.979,45,0.995,48,1.869,49,0.791,57,0.925,58,1.224,60,0.399,71,0.19,76,0.16,80,0.005,81,0.007,82,0.005,87,2.518,88,1.645,104,1.764,105,0.325,106,0.798,108,1.164,116,0.66,118,2.364,120,2.224,121,2.293,122,1.237,125,2.403,126,2.403,132,2.105,134,2.142,144,1.126,146,2.04,148,2.277,149,2.04,159,0.844,166,2.403,172,0.655,174,1.271,182,0.387,189,1.703,191,1.36,193,2.159,208,2.403,218,0.655,241,0.636,302,1.66,345,2.037,366,2.031,376,1.92,378,1.484,379,1.708,380,2.089,401,3.519,437,1.475,441,1.404,448,0.968,471,0.995,489,3.745,497,1.051,573,0.968,612,1.404,654,1.023,655,1.023,656,1.081,657,1.143,660,0.891,661,1.483,663,1.366,665,1.126,677,1.051,678,1.443,679,2.031,680,1.143,681,1.143,682,0.942,683,1.143,684,1.023,685,0.844,686,1.143,687,0.995,688,1.143,689,2.03,690,1.143,691,1.023,692,1.143,693,1.023,694,1.143,695,1.023,696,1.143,697,1.023,698,1.081,699,1.143,700,0.995,701,1.613,702,1.023,703,1.081,704,1.143,705,1.023,706,1.143,707,1.023,708,1.143,709,0.995,710,1.143,711,1.143,712,0.995,713,1.143,714,1.023,715,1.143,716,0.995,717,1.143,718,1.023,719,1.87,720,1.023,721,0.968,722,0.968,723,1.613,724,1.023,725,1.112,726,1.143,727,0.995,728,1.143,729,1.023,730,1.143,731,1.023,732,1.143,733,0.968,734,1.143,735,1.023,736,1.143,737,1.051,738,1.112,739,1.143,740,0.995,741,0.942,742,1.143,743,1.023,744,1.143,745,1.583,746,1.143,747,0.995,748,1.081,749,1.023,750,1.143,751,1.051,752,1.143,753,1.023,754,1.143,755,0.995,756,1.143,757,1.023,758,1.081,759,0.995,760,0.995,761,1.112,762,0.867,763,0.995,764,1.143,765,0.995,766,1.143,767,0.995,768,1.143,769,0.995,770,1.143,771,0.995,772,1.143,773,0.995,774,1.143,775,0.995,776,1.143,777,0.995,778,1.081,779,1.143,791,1.404,792,1.868,794,3.082,795,2.69,796,3.232,819,2.489,835,1.492,1050,4.441,1237,4.005,1259,2.105,1271,4.34,1275,7.479,1276,6.795,1277,3.378,1278,4.767,1279,4.767,1280,4.331,1281,4.767,1282,4.331,1283,2.489,1284,4.331,1285,5.428,1286,5.428,1287,6.29,1288,5.428,1289,7.206,1290,4.34,1291,5.018,1292,5.428,1293,3.847,1294,3.847,1295,3.847,1296,3.847,1297,3.847,1298,3.847,1299,3.847,1300,3.847,1301,3.847,1302,3.847,1303,5.428,1304,3.847,1305,3.847,1306,3.847,1307,5.428,1308,3.847,1309,3.847,1310,3.069,1311,3.847,1312,3.378,1313,5.428]],["title/injectables/CaptchaDataService.html",[359,1.35,1314,2.789]],["body/injectables/CaptchaDataService.html",[0,0.023,3,0.152,4,0.181,5,0.097,9,0.195,13,0.831,19,0.607,22,0.651,24,1.238,25,0.011,26,0.651,27,0.291,28,0.732,49,0.802,60,0.528,70,2.456,71,0.27,76,0.195,80,0.006,81,0.008,82,0.006,92,5.299,105,0.436,110,0.958,122,1.403,130,1.23,203,0.88,247,4.088,253,5.041,259,4.777,278,4.313,285,3.358,318,2.89,319,2.136,359,2.299,361,2.654,1105,4.127,1115,2.89,1314,4.303,1315,6.356,1316,4.121,1317,6.621,1318,6.621,1319,6.621,1320,5.165,1321,5.165,1322,6.416,1323,6.996,1324,5.165,1325,6.503,1326,6.416,1327,7.029,1328,5.165,1329,6.416,1330,7.371,1331,7.158,1332,5.165,1333,4.536,1334,3.811,1335,6.416,1336,3.811,1337,5.041,1338,4.536,1339,3.358,1340,6.416,1341,6.416,1342,5.813,1343,4.536,1344,5.813,1345,6.416]],["title/modules/CaptchaModule.html",[1346,2.643,1347,2.789]],["body/modules/CaptchaModule.html",[0,0.02,3,0.167,4,0.198,5,0.107,13,0.711,22,0.478,25,0.011,49,0.622,71,0.302,76,0.167,80,0.007,81,0.008,82,0.007,105,0.478,106,1.175,110,0.666,155,2.694,182,0.349,248,3.001,303,1.208,308,1.834,318,3.169,323,3.034,365,4.208,378,1.548,379,2.625,437,1.161,441,1.815,442,4.112,545,5.598,611,3.319,677,1.548,691,2.329,783,2.003,784,2.003,812,5.177,930,2.197,1009,5.598,1232,2.798,1240,3.682,1314,5.499,1325,4.519,1327,4.519,1337,5.259,1346,4.695,1347,5.734,1348,3.489,1349,5.65,1350,6.082,1351,4.974,1352,4.974,1353,4.974,1354,4.974,1355,5.598,1356,4.179,1357,5.665,1358,7.623,1359,5.665,1360,7.623,1361,6.161,1362,5.259,1363,5.665,1364,4.974,1365,5.665,1366,4.974,1367,5.665,1368,3.908,1369,5.665,1370,4.974,1371,6.161,1372,5.665,1373,4.974,1374,6.161,1375,4.519]],["title/injectables/CheckCompleteBaseService.html",[359,1.35,1376,3.166]],["body/injectables/CheckCompleteBaseService.html",[0,0.026,3,0.118,4,0.14,5,0.075,9,0.276,10,0.611,13,0.699,14,1.33,17,2.374,19,0.655,20,2.232,21,3.737,22,0.716,24,1.173,25,0.011,26,0.617,27,0.299,28,0.694,29,1.208,33,1.091,35,0.886,36,0.9,37,1.083,49,0.912,57,1.37,58,1.18,60,0.495,65,2.924,69,3.263,71,0.224,72,1.706,76,0.164,80,0.005,81,0.007,82,0.005,105,0.337,108,1.183,110,0.931,116,0.485,122,1.446,130,1.802,159,0.875,178,1.411,198,3.43,203,1.183,211,2.23,248,2.382,256,2.862,302,1.703,303,1.188,308,1.803,358,2.269,359,1.752,361,2.05,363,3.884,364,2.982,376,2.269,378,1.091,382,4.79,387,3.62,388,2.753,392,3.951,393,5.539,394,4.733,395,5.539,398,3.503,441,1.44,474,4.807,475,2.982,509,3.183,523,1.655,556,3.759,600,3.116,636,1.766,780,0.677,905,4.069,930,2.16,961,3.263,962,3.302,1004,3.43,1011,5.219,1213,3.589,1239,2.751,1376,4.109,1377,6.797,1378,3.183,1379,4.89,1380,4.109,1381,3.62,1382,5.633,1383,5.118,1384,5.633,1385,5.633,1386,6.097,1387,4.79,1388,4.513,1389,5.118,1390,5.118,1391,5.569,1392,3.99,1393,3.99,1394,3.99,1395,3.99,1396,2.202,1397,3.62,1398,3.99,1399,4.89,1400,4.069,1401,3.99,1402,4.89,1403,3.842,1404,5.582,1405,3.99,1406,3.99,1407,4.89,1408,3.99,1409,4.89,1410,4.89,1411,3.842,1412,3.99,1413,4.89,1414,4.89,1415,3.99,1416,4.733,1417,3.99,1418,3.99,1419,3.99,1420,3.99,1421,3.99,1422,4.733,1423,3.183,1424,3.503,1425,3.503,1426,2.944,1427,3.503,1428,3.183,1429,3.503,1430,3.503,1431,2.05,1432,2.05,1433,4.89,1434,4.89,1435,5.633,1436,5.388,1437,5.633,1438,4.109,1439,3.842,1440,4.443,1441,3.842,1442,4.443,1443,3.503,1444,3.503,1445,3.503,1446,3.503,1447,2.753,1448,3.503,1449,3.503,1450,3.503,1451,3.503,1452,2.944,1453,3.503,1454,3.503,1455,3.183,1456,3.503,1457,3.503]],["title/components/CheckboxComponent.html",[182,0.264,693,1.141]],["body/components/CheckboxComponent.html",[0,0.013,3,0.104,4,0.124,5,0.096,7,0.797,9,0.134,10,0.561,11,1.864,13,0.642,14,2.192,17,2.011,19,0.601,22,0.736,24,1.233,25,0.011,26,0.679,27,0.324,28,0.754,29,1.132,32,1.252,35,1.123,36,1.08,37,1.088,42,1.939,44,1.186,45,0.915,48,1.218,49,0.892,57,0.871,58,1.268,60,0.425,71,0.23,76,0.151,80,0.004,81,0.006,82,0.004,84,1.121,88,2.187,93,3.035,104,1.622,105,0.299,106,0.734,114,4.005,116,0.621,117,1.391,118,2.257,119,3.736,120,1.808,121,1.864,122,1.154,123,1.983,124,1.69,125,2.263,126,2.263,127,2.996,128,2.996,129,3.359,130,1.218,131,3.698,132,2.551,133,3.206,134,2.228,138,1.179,139,1.463,140,1.33,141,1.214,142,1.289,143,1.416,144,1.246,146,1.33,148,2.192,149,1.33,151,2.179,152,3.283,153,2.525,155,1.682,156,2.813,157,2.996,158,1.622,159,1.121,160,1.113,161,1.747,163,1.622,166,2.657,172,0.602,173,1.818,174,1.203,182,0.429,193,1.214,195,1.655,218,0.602,241,0.585,332,1.622,345,2.259,378,1.397,413,1.145,428,1.979,437,1.467,441,1.804,446,3.772,448,0.89,471,0.915,489,5.549,497,0.967,533,1.566,573,0.89,612,1.322,654,0.94,655,0.94,656,0.994,657,1.051,660,0.82,661,1.477,665,1.061,677,0.967,678,1.359,679,1.955,680,1.051,681,1.051,682,0.866,683,1.051,684,0.94,685,0.776,686,1.051,687,0.915,688,1.051,689,0.915,690,1.051,691,0.94,692,1.051,693,1.749,694,1.051,695,0.94,696,1.051,697,0.94,698,0.994,699,1.051,700,0.915,701,1.52,702,0.94,703,0.994,704,1.051,705,0.94,706,1.051,707,0.94,708,1.051,709,0.915,710,1.051,711,1.051,712,0.915,713,1.051,714,0.94,715,1.051,716,0.915,717,1.051,718,0.94,719,1.784,720,0.94,721,0.89,722,0.89,723,1.52,724,0.94,725,1.022,726,1.051,727,0.915,728,1.051,729,0.94,730,1.051,731,0.94,732,1.051,733,0.89,734,1.051,735,0.94,736,1.051,737,0.967,738,1.022,739,1.051,740,0.915,741,0.866,742,1.051,743,0.94,744,1.051,745,0.89,746,1.051,747,0.915,748,0.994,749,0.94,750,1.051,751,0.967,752,1.051,753,0.94,754,1.051,755,0.915,756,1.051,757,0.94,758,0.994,759,0.915,760,0.915,761,1.022,762,0.797,763,0.915,764,1.051,765,0.915,766,1.051,767,0.915,768,1.051,769,0.915,770,1.051,771,0.915,772,1.051,773,0.915,774,1.051,775,0.915,776,1.051,777,0.915,778,0.994,779,1.051,791,1.322,792,1.798,854,3.149,869,1.022,1050,4.275,1100,1.979,1101,3.085,1102,1.894,1128,3.318,1130,1.682,1158,1.922,1259,1.983,1271,4.142,1291,4.79,1312,4.489,1458,3.106,1459,5.113,1460,6.004,1461,5.113,1462,1.979,1463,3.537,1464,3.537,1465,5.113,1466,3.772,1467,3.323,1468,3.537,1469,3.537,1470,2.299,1471,2.299,1472,2.299,1473,3.537,1474,3.537,1475,3.537,1476,5.113,1477,3.537,1478,3.537,1479,2.299,1480,2.299,1481,2.299,1482,2.299,1483,2.299,1484,2.299,1485,2.299,1486,2.299,1487,3.537,1488,5.113,1489,3.537,1490,1.979,1491,3.537,1492,3.537,1493,2.299,1494,2.299,1495,2.299,1496,3.537,1497,2.44,1498,3.537,1499,3.537,1500,2.073,1501,3.537,1502,3.537,1503,3.537,1504,3.323]],["title/components/CityComponent.html",[182,0.264,695,1.141]],["body/components/CityComponent.html",[0,0.011,3,0.094,4,0.112,5,0.089,7,0.721,9,0.121,10,0.522,11,1.732,13,0.597,14,2.09,17,1.917,19,0.558,22,0.735,24,1.247,25,0.011,26,0.692,27,0.324,28,0.757,29,0.807,32,1.163,35,1.087,36,1.118,37,0.499,42,1.622,44,1.022,45,0.828,48,1.131,49,0.884,57,0.809,58,1.256,60,0.496,71,0.219,76,0.094,80,0.004,81,0.006,82,0.004,84,1.042,88,1.369,93,2.985,105,0.27,106,0.664,110,0.376,114,3.947,116,0.577,117,1.313,118,2.13,119,3.587,120,1.68,121,1.732,122,1.108,123,1.842,124,1.638,125,2.103,126,2.103,127,2.784,128,2.784,129,3.17,130,1.131,131,3.489,132,2.598,133,3.107,134,2.159,138,1.067,139,1.324,140,1.203,141,1.098,142,1.166,143,1.281,144,1.176,146,1.203,148,2.09,149,1.203,151,1.971,152,3.192,153,2.347,155,1.522,156,2.681,157,2.784,158,1.467,159,0.702,160,1.007,161,1.581,163,1.467,166,2.103,172,0.809,173,1.644,174,1.161,182,0.349,191,1.132,193,1.098,195,1.036,218,0.545,241,0.786,256,2.441,303,0.683,306,2.103,332,1.467,437,1.458,448,0.805,471,0.828,497,0.875,573,0.805,592,3.32,612,1.229,654,0.851,655,0.851,656,0.899,657,0.951,660,0.741,661,1.469,665,0.986,677,0.875,678,1.263,679,1.863,680,0.951,681,0.951,682,0.783,683,0.951,684,0.851,685,0.702,686,0.951,687,0.828,688,0.951,689,0.828,690,0.951,691,0.851,692,0.951,693,0.851,694,0.951,695,1.667,696,0.951,697,0.851,698,0.899,699,0.951,700,0.828,701,1.412,702,0.851,703,0.899,704,0.951,705,0.851,706,0.951,707,0.851,708,0.951,709,0.828,710,0.951,711,0.951,712,0.828,713,0.951,714,0.851,715,0.951,716,0.828,717,0.951,718,0.851,719,1.684,720,0.851,721,0.805,722,0.805,723,1.412,724,0.851,725,0.925,726,0.951,727,0.828,728,0.951,729,0.851,730,0.951,731,0.851,732,0.951,733,0.805,734,0.951,735,0.851,736,0.951,737,0.875,738,0.925,739,0.951,740,0.828,741,0.783,742,0.951,743,0.851,744,0.951,745,0.805,746,0.951,747,0.828,748,0.899,749,0.851,750,0.951,751,0.875,752,0.951,753,0.851,754,0.951,755,0.828,756,0.951,757,0.851,758,0.899,759,0.828,760,0.828,761,0.925,762,0.721,763,0.828,764,0.951,765,0.828,766,0.951,767,0.828,768,0.951,769,0.828,770,0.951,771,0.828,772,0.951,773,0.828,774,0.951,775,0.828,776,0.951,777,0.828,778,0.899,779,0.951,783,1.68,784,1.68,789,3.918,791,1.465,792,1.986,835,2.431,869,0.925,890,2.103,1062,5.505,1100,1.79,1101,3.442,1102,1.714,1110,3.17,1128,3.185,1130,1.522,1158,2.357,1199,2.08,1252,2.926,1259,1.842,1462,1.79,1470,2.08,1471,2.08,1472,2.08,1479,2.08,1480,2.08,1481,2.08,1482,2.08,1483,2.08,1484,2.08,1485,2.08,1486,2.08,1490,1.79,1493,2.08,1494,2.08,1495,2.08,1500,1.875,1504,3.088,1505,2.81,1506,4.751,1507,3.32,1508,3.489,1509,3.683,1510,3.683,1511,3.17,1512,3.2,1513,3.2,1514,4.751,1515,2.658,1516,3.2,1517,3.088,1518,3.2,1519,3.2,1520,4.751,1521,3.2,1522,3.2,1523,3.2,1524,3.2,1525,2.208,1526,3.2,1527,3.2,1528,2.544,1529,3.088,1530,2.784,1531,3.505,1532,3.277,1533,2.875,1534,3.505,1535,3.505,1536,3.505,1537,3.2,1538,3.2,1539,3.2,1540,2.08,1541,3.2,1542,2.08,1543,1.369,1544,2.032,1545,1.369,1546,2.032,1547,2.032,1548,2.032,1549,1.369,1550,1.369,1551,2.032,1552,2.032,1553,1.369,1554,1.369,1555,1.369,1556,1.369,1557,1.369,1558,2.032,1559,1.965,1560,1.369,1561,2.032,1562,2.032,1563,1.369,1564,2.032,1565,1.369,1566,1.369,1567,1.369,1568,1.369,1569,2.681,1570,1.369,1571,1.369,1572,1.369,1573,1.369,1574,1.369,1575,1.369,1576,1.369,1577,1.369,1578,1.369,1579,1.369,1580,1.369,1581,1.369,1582,1.369,1583,1.369,1584,1.369,1585,1.369,1586,2.032,1587,1.369,1588,1.369,1589,1.369,1590,1.369,1591,1.369,1592,1.369,1593,1.369,1594,1.369,1595,1.369,1596,1.369,1597,1.369,1598,1.369,1599,1.369,1600,2.032,1601,1.369,1602,1.369,1603,1.369,1604,1.369,1605,1.369,1606,1.132,1607,1.369,1608,1.369,1609,1.369,1610,1.369,1611,1.369,1612,1.369,1613,1.369,1614,1.369,1615,1.971,1616,2.208,1617,4.171]],["title/interfaces/CommonAttachmentJson.html",[780,0.521,1618,2.643]],["body/interfaces/CommonAttachmentJson.html",[0,0.026,3,0.154,4,0.183,5,0.146,9,0.198,10,0.733,17,1.601,25,0.011,26,0.442,27,0.302,28,0.497,49,0.575,52,1.647,54,3.068,60,0.507,71,0.183,76,0.241,80,0.006,81,0.008,82,0.006,110,0.785,116,0.636,122,0.866,138,1.745,172,1.252,180,2.4,187,1.968,201,2.804,217,1.968,221,2.929,239,2.317,241,0.866,245,2.165,270,4.77,298,3.497,303,1.425,304,1.745,308,1.695,323,3.938,324,2.69,345,1.695,358,2.361,376,1.851,440,3.068,480,2.69,509,2.4,523,2.622,547,2.929,780,0.811,782,1.695,822,2.929,1396,1.797,1606,1.851,1618,4.528,1619,3.224,1620,5.519,1621,5.736,1622,5.519,1623,3.403,1624,3.736,1625,4.793,1626,3.068,1627,3.224,1628,4.309,1629,3.403,1630,3.403,1631,3.403,1632,3.403,1633,3.224,1634,3.403,1635,3.403,1636,3.403,1637,3.068,1638,3.612,1639,3.612,1640,3.612,1641,3.612,1642,3.612,1643,3.224,1644,3.224,1645,3.612,1646,3.403,1647,3.612,1648,3.612,1649,3.403,1650,3.403,1651,3.403,1652,5.2,1653,4.78,1654,3.224,1655,3.612,1656,4.607,1657,3.612,1658,2.804,1659,3.612,1660,3.403,1661,3.612,1662,4.607,1663,3.403,1664,3.403,1665,3.612,1666,3.612,1667,3.612,1668,3.403,1669,2.929,1670,3.612,1671,3.612,1672,3.612,1673,3.612,1674,3.612,1675,3.612,1676,3.403,1677,3.612,1678,2.49,1679,3.403,1680,3.612,1681,3.612,1682,4.538,1683,4.607,1684,4.607,1685,4.607,1686,3.736,1687,3.612,1688,4.607,1689,4.607,1690,3.612,1691,4.607,1692,4.341]],["title/classes/CommonImage.html",[0,0.015,298,2.041]],["body/classes/CommonImage.html",[0,0.025,2,1.861,3,0.137,4,0.163,5,0.139,9,0.176,10,0.678,13,0.776,17,1.421,19,0.546,22,0.73,24,0.747,25,0.011,26,0.625,27,0.33,28,0.732,35,0.642,36,0.603,49,0.762,52,1.944,54,3.621,60,0.512,70,2.21,71,0.163,76,0.233,80,0.006,81,0.007,82,0.006,110,0.726,116,0.565,122,0.769,138,1.549,159,1.355,172,1.312,180,2.131,187,1.747,201,3.31,217,1.747,221,2.6,239,2.057,241,0.769,245,2.556,270,4.276,298,3.519,303,1.578,304,1.549,308,2.001,323,4.125,324,2.388,345,2.001,358,2.455,376,2.185,440,2.724,480,3.175,509,2.131,523,2.605,547,3.457,780,0.751,822,2.6,1396,1.596,1606,2.455,1618,4.276,1619,2.863,1620,4.263,1621,5.576,1622,4.263,1623,3.021,1624,3.457,1625,4.958,1626,2.724,1627,2.863,1628,4.336,1629,3.021,1630,3.021,1631,3.021,1632,3.021,1633,2.863,1634,3.021,1635,3.021,1636,3.021,1637,2.724,1638,3.207,1639,3.207,1640,3.207,1641,3.207,1642,3.207,1643,2.863,1644,2.863,1645,3.207,1646,3.021,1647,3.207,1648,3.207,1649,3.021,1650,3.021,1651,4.017,1652,5.401,1653,5.148,1654,3.806,1655,4.263,1656,4.263,1657,3.207,1658,3.31,1659,4.263,1660,4.017,1661,4.79,1662,5.314,1663,4.017,1664,4.017,1665,4.263,1666,4.263,1667,4.263,1668,3.021,1669,3.884,1670,4.79,1671,4.79,1672,4.79,1673,4.79,1674,3.207,1675,3.207,1676,4.017,1677,4.263,1678,2.939,1679,4.809,1680,3.207,1681,3.207,1682,4.336,1683,4.263,1684,4.263,1685,4.263,1686,3.457,1687,3.207,1688,4.263,1689,4.263,1690,3.207,1691,4.263,1692,4.017,1693,6.18,1694,4.648,1695,4.648,1696,4.648,1697,4.648,1698,4.648,1699,4.648,1700,4.648,1701,4.648,1702,4.648,1703,4.648,1704,4.648,1705,4.648,1706,4.648]],["title/classes/CommonImageProcessingError.html",[0,0.015,1637,2.514]],["body/classes/CommonImageProcessingError.html",[0,0.026,2,2.018,3,0.149,4,0.176,5,0.149,9,0.191,10,0.715,17,1.541,19,0.592,22,0.684,24,0.81,25,0.011,26,0.55,27,0.316,28,0.808,49,0.553,52,1.585,54,2.953,60,0.506,70,2.397,71,0.176,76,0.239,80,0.006,81,0.008,82,0.006,110,0.766,116,0.612,122,1.308,138,1.68,172,1.23,180,2.311,187,1.894,201,2.699,217,1.894,221,2.819,239,2.231,241,0.834,245,2.085,270,4.013,298,3.851,303,1.39,304,1.68,308,1.632,323,3.868,324,2.59,345,1.632,358,2.304,376,1.782,440,2.953,480,2.59,509,2.311,523,2.605,547,2.819,780,0.792,822,2.819,1396,1.73,1606,1.782,1618,4.013,1619,3.104,1620,4.496,1621,5.267,1622,4.496,1623,3.276,1624,3.646,1625,4.746,1626,2.953,1627,3.104,1628,4.746,1629,3.276,1630,3.276,1631,3.276,1632,3.276,1633,3.104,1634,3.276,1635,3.276,1636,3.276,1637,3.819,1638,4.982,1639,4.982,1640,3.477,1641,3.477,1642,3.477,1643,3.104,1644,3.104,1645,3.477,1646,3.276,1647,3.477,1648,3.477,1649,4.963,1650,5.139,1651,3.276,1652,5.139,1653,4.694,1654,3.104,1655,3.477,1656,4.496,1657,3.477,1658,2.699,1659,3.477,1660,3.276,1661,3.477,1662,4.496,1663,3.276,1664,3.276,1665,3.477,1666,3.477,1667,3.477,1668,3.276,1669,2.819,1670,3.477,1671,3.477,1672,3.477,1673,3.477,1674,3.477,1675,3.477,1676,3.276,1677,3.477,1678,2.397,1679,3.276,1680,3.477,1681,3.477,1682,4.474,1683,4.496,1684,4.496,1685,4.496,1686,3.646,1687,3.477,1688,4.496,1689,4.496,1690,3.477,1691,4.496,1692,4.236,1707,5.04,1708,6.516,1709,5.04,1710,6.516,1711,5.04]],["title/interfaces/CommonImageScaleFactors.html",[780,0.521,1682,2.514]],["body/interfaces/CommonImageScaleFactors.html",[0,0.026,3,0.153,4,0.181,5,0.145,9,0.196,10,0.728,13,0.833,17,1.585,22,0.438,24,0.833,25,0.011,26,0.56,27,0.301,28,0.63,49,0.728,52,1.631,54,3.038,60,0.5,71,0.181,76,0.24,80,0.006,81,0.008,82,0.006,110,0.78,116,0.63,122,0.858,138,1.728,172,1.247,180,2.377,187,1.948,201,2.776,217,1.948,221,2.9,239,2.294,241,0.858,245,2.144,270,4.087,298,3.481,303,1.416,304,1.728,308,1.678,323,3.92,324,2.664,345,1.678,358,2.347,376,1.833,440,3.038,480,2.664,509,2.377,523,2.642,547,2.9,780,0.806,782,1.678,822,2.9,1396,1.779,1606,1.833,1618,4.087,1619,3.192,1620,4.578,1621,5.323,1622,4.578,1623,3.37,1624,3.712,1625,4.781,1626,3.038,1627,3.192,1628,4.289,1629,3.37,1630,3.37,1631,3.37,1632,3.37,1633,3.192,1634,3.37,1635,3.37,1636,3.37,1637,3.038,1638,3.576,1639,3.576,1640,3.576,1641,3.576,1642,3.576,1643,3.192,1644,3.192,1645,3.576,1646,3.37,1647,3.576,1648,3.576,1649,3.37,1650,3.37,1651,3.37,1652,5.185,1653,4.757,1654,3.192,1655,3.576,1656,4.578,1657,3.576,1658,2.776,1659,3.576,1660,3.37,1661,3.576,1662,4.578,1663,3.37,1664,3.37,1665,3.576,1666,3.576,1667,3.576,1668,3.37,1669,2.9,1670,3.576,1671,3.576,1672,3.576,1673,3.576,1674,3.576,1675,3.576,1676,3.37,1677,3.576,1678,2.465,1679,3.37,1680,3.576,1681,3.576,1682,4.781,1683,5.503,1684,5.503,1685,5.049,1686,3.712,1687,3.576,1688,4.578,1689,4.578,1690,3.576,1691,4.578,1692,4.757,1712,5.827,1713,5.184]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.015,1686,2.4]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.026,2,2.043,3,0.15,4,0.179,5,0.144,9,0.193,10,0.721,13,0.825,17,1.56,19,0.6,22,0.648,24,1.055,25,0.011,26,0.613,27,0.307,28,0.69,49,0.721,52,1.605,54,2.99,60,0.498,71,0.179,76,0.239,80,0.006,81,0.008,82,0.006,110,0.772,116,0.798,122,0.844,138,1.7,172,1.237,180,2.339,187,1.918,201,2.732,217,1.918,221,2.854,239,2.258,241,0.844,245,2.11,270,4.045,298,3.454,303,1.401,304,1.7,308,1.652,323,3.89,324,2.621,345,1.652,358,2.323,376,1.804,440,2.99,480,2.621,509,2.339,523,2.647,547,2.854,780,0.798,822,2.854,1396,1.751,1606,1.804,1618,4.045,1619,3.142,1620,4.531,1621,5.292,1622,4.531,1623,3.316,1624,3.674,1625,4.761,1626,2.99,1627,3.142,1628,4.257,1629,3.316,1630,3.316,1631,3.316,1632,3.316,1633,3.142,1634,3.316,1635,3.316,1636,3.316,1637,2.99,1638,3.52,1639,3.52,1640,3.52,1641,3.52,1642,3.52,1643,3.142,1644,3.142,1645,3.52,1646,3.316,1647,3.52,1648,3.52,1649,3.316,1650,3.316,1651,3.316,1652,5.159,1653,4.722,1654,3.142,1655,3.52,1656,4.531,1657,3.52,1658,2.732,1659,3.52,1660,3.316,1661,3.52,1662,4.531,1663,3.316,1664,3.316,1665,3.52,1666,3.52,1667,3.52,1668,3.316,1669,2.854,1670,3.52,1671,3.52,1672,3.52,1673,3.52,1674,3.52,1675,3.52,1676,3.316,1677,3.52,1678,2.426,1679,3.316,1680,3.52,1681,3.52,1682,4.761,1683,5.292,1684,5.292,1685,5.011,1686,4.064,1687,4.531,1688,5.292,1689,4.531,1690,4.531,1691,4.531,1692,4.722,1712,5.767,1714,6.568,1715,5.102,1716,5.102]],["title/interfaces/CommonLogMessage.html",[780,0.521,1717,3.423]],["body/interfaces/CommonLogMessage.html",[0,0.015,3,0.195,4,0.148,5,0.079,9,0.159,10,0.635,14,1.405,17,2.278,22,0.356,25,0.011,26,0.558,27,0.269,28,0.4,33,1.152,42,1.927,60,0.486,66,2.258,69,2.316,71,0.261,76,0.195,77,2.47,80,0.005,81,0.007,82,0.005,84,0.925,93,1.537,105,0.356,110,0.957,122,1.093,130,1.774,133,2.474,158,1.933,172,1.417,174,0.697,181,2.005,184,2.258,185,2.74,200,4.268,203,1.125,215,3.702,217,2.175,241,0.957,243,3.237,245,1.744,247,3.695,248,2.474,249,2.74,252,3.11,253,3.991,257,5.08,259,3.39,261,4.557,263,5.245,264,5.269,271,3.563,273,2.316,279,2.596,280,4.294,284,2.74,285,2.74,287,3.11,288,1.866,292,4.268,302,1.289,303,1.681,306,1.866,308,1.365,315,4.068,318,2.359,319,1.744,345,1.873,348,6.139,353,5.08,354,2.653,359,1.82,378,1.152,413,1.873,419,2.359,477,3.363,533,1.866,548,2.596,572,2.858,588,2.359,594,3.11,636,2.561,780,0.703,782,1.365,820,2.258,863,3.259,924,1.803,930,1.635,934,2.909,935,2.47,959,2.596,1039,5.08,1043,3.363,1092,2.909,1105,3.807,1115,3.237,1134,3.761,1158,3.127,1233,3.871,1242,2.909,1251,3.702,1431,2.166,1432,2.166,1467,2.74,1606,2.046,1623,2.74,1624,3.237,1646,4.294,1654,3.563,1658,2.258,1676,2.74,1717,6.288,1718,3.363,1719,3.11,1720,4.216,1721,5.786,1722,4.616,1723,5.08,1724,3.363,1725,4.616,1726,5.8,1727,4.216,1728,2.909,1729,4.216,1730,4.216,1731,3.11,1732,3.702,1733,5.08,1734,4.216,1735,7.45,1736,4.216,1737,5.786,1738,5.786,1739,7.109,1740,5.786,1741,3.11,1742,5.786,1743,5.786,1744,5.786,1745,4.216,1746,5.786,1747,4.216,1748,4.873,1749,4.772,1750,4.216,1751,4.216,1752,5.786,1753,5.8,1754,5.08,1755,4.873,1756,3.363,1757,3.702,1758,4.216,1759,3.761,1760,4.216,1761,4.216,1762,4.216,1763,4.216,1764,4.216,1765,4.216,1766,4.216,1767,4.216,1768,4.216,1769,4.216,1770,4.216,1771,4.216,1772,4.216,1773,4.216,1774,4.216,1775,4.216,1776,4.216,1777,4.216,1778,3.702,1779,3.363,1780,3.363,1781,3.363,1782,5.786,1783,3.11,1784,4.216,1785,4.216,1786,4.216,1787,4.216,1788,3.363,1789,4.216,1790,4.216,1791,4.216,1792,4.216,1793,3.363,1794,3.39,1795,2.596,1796,3.702,1797,3.363,1798,3.11,1799,4.216,1800,3.702,1801,4.216,1802,4.216,1803,5.08,1804,2.909,1805,3.702,1806,3.363,1807,5.08,1808,4.216,1809,3.702,1810,3.702,1811,3.702,1812,4.216,1813,3.702,1814,4.216,1815,3.702,1816,3.702,1817,3.702,1818,2.74,1819,4.216,1820,3.702,1821,4.216,1822,4.216,1823,4.216,1824,4.216,1825,4.216,1826,4.216,1827,4.216,1828,4.216,1829,4.216]],["title/components/ConfirmTemplateComponent.html",[182,0.264,697,1.141]],["body/components/ConfirmTemplateComponent.html",[0,0.017,3,0.141,4,0.167,5,0.118,7,1.687,9,0.181,10,0.692,19,0.828,22,0.674,25,0.011,26,0.595,27,0.238,32,1.542,35,0.87,36,0.817,44,1.136,45,1.238,48,1.501,57,1.073,60,0.28,71,0.22,76,0.186,80,0.006,81,0.008,82,0.006,84,1.382,93,1.745,105,0.404,110,0.828,122,1.042,123,2.443,138,1.595,139,1.98,140,1.799,141,1.643,142,1.745,143,1.916,144,1.462,172,1.073,174,1.042,182,0.433,218,0.815,256,3.237,347,2.948,358,1.693,437,1.491,448,1.204,471,1.238,497,1.308,573,1.204,612,1.63,654,1.272,655,1.873,656,1.345,657,1.423,660,1.109,661,1.497,663,1.585,665,1.308,677,1.308,678,1.675,679,2.225,680,1.423,681,1.423,682,1.172,683,1.423,684,1.272,685,1.05,686,1.423,687,1.238,688,1.423,689,1.238,690,1.423,691,1.272,692,1.423,693,1.272,694,1.423,695,1.272,696,1.423,697,1.99,698,2.288,699,1.423,700,1.238,701,1.873,702,1.272,703,1.345,704,1.423,705,1.272,706,1.423,707,1.272,708,1.423,709,1.238,710,1.423,711,1.423,712,1.238,713,1.423,714,1.272,715,1.423,716,1.238,717,1.423,718,1.272,719,2.093,720,1.272,721,1.204,722,1.204,723,1.873,724,1.272,725,1.383,726,1.423,727,1.238,728,1.423,729,1.272,730,1.423,731,1.272,732,1.423,733,1.204,734,1.423,735,1.272,736,1.423,737,1.308,738,1.383,739,1.423,740,1.238,741,1.172,742,1.423,743,1.272,744,1.423,745,1.204,746,1.423,747,1.238,748,1.345,749,1.272,750,1.423,751,1.308,752,1.423,753,1.272,754,1.423,755,1.238,756,1.423,757,1.272,758,1.345,759,1.238,760,1.238,761,1.383,762,1.079,763,1.238,764,1.423,765,1.238,766,1.423,767,1.238,768,1.423,769,1.238,770,1.423,771,1.238,772,1.423,773,1.238,774,1.423,775,1.238,776,1.423,777,1.238,778,1.345,779,1.423,797,1.799,860,2.047,869,1.383,1396,1.643,1624,2.678,1649,4.578,1830,6.37,1831,5.891,1832,3.818,1833,6.301,1834,6.301,1835,7.044,1836,7.044,1837,7.044,1838,6.301,1839,6.185,1840,7.044,1841,4.786,1842,4.786,1843,4.786,1844,4.786,1845,4.786,1846,4.786,1847,3.818,1848,3.818,1849,4.786,1850,4.786,1851,4.786]],["title/classes/Container.html",[0,0.015,1852,2.643]],["body/classes/Container.html",[0,0.026,2,1.636,3,0.217,4,0.143,5,0.077,7,0.921,9,0.154,10,0.622,13,0.711,16,3.465,17,2.551,19,0.825,22,0.699,24,1.044,25,0.011,26,0.549,27,0.301,28,0.617,29,0.999,35,0.897,36,0.843,37,0.883,44,1.505,46,4.121,48,0.973,49,0.809,52,1.781,58,1.149,60,0.483,65,3.278,70,1.943,71,0.227,72,1.747,76,0.217,80,0.005,81,0.007,82,0.005,84,1.242,108,0.964,110,0.665,116,0.688,130,1.861,134,1.931,159,0.896,178,1.445,211,2.267,236,3.032,288,2.506,319,1.69,336,2.979,378,1.917,418,1.636,438,5.183,441,2.06,461,4.223,505,4.516,625,5.183,669,4.32,678,1.505,758,1.148,759,1.057,780,0.688,869,1.636,948,2.818,1213,3.635,1400,3.317,1755,5.435,1852,5.238,1853,3.259,1854,4.177,1855,4.516,1856,4.971,1857,4.971,1858,5.596,1859,5.596,1860,6.159,1861,4.11,1862,5.756,1863,4.971,1864,4.971,1865,4.971,1866,4.971,1867,4.971,1868,4.971,1869,4.177,1870,4.971,1871,4.971,1872,4.971,1873,4.971,1874,4.516,1875,4.177,1876,4.971,1877,4.516,1878,4.971,1879,5.705,1880,5.258,1881,5.183,1882,4.482,1883,5.183,1884,5.661,1885,5.705,1886,6.159,1887,6.159,1888,4.085,1889,5.661,1890,5.183,1891,4.085,1892,4.223,1893,4.085,1894,4.516,1895,4.793,1896,4.085,1897,4.085,1898,6.08,1899,4.085,1900,6.08,1901,4.971,1902,4.085,1903,4.971,1904,4.971,1905,5.596,1906,4.085,1907,4.085,1908,4.085,1909,4.971,1910,4.085,1911,5.175,1912,4.085,1913,4.971,1914,3.587,1915,3.587,1916,3.587,1917,3.587,1918,3.587,1919,3.587,1920,3.587,1921,3.587,1922,3.587,1923,3.587,1924,4.971,1925,3.587,1926,3.587,1927,3.587,1928,3.587,1929,4.482,1930,4.971,1931,3.587,1932,4.971,1933,3.587,1934,4.516,1935,3.587,1936,3.587]],["title/injectables/ContainerService.html",[359,1.35,1862,2.96]],["body/injectables/ContainerService.html",[0,0.018,3,0.151,4,0.179,5,0.096,9,0.194,10,0.723,13,0.827,16,3.595,19,0.856,22,0.733,24,1.17,25,0.011,26,0.615,27,0.313,28,0.691,29,1.159,35,1.209,36,1.114,37,1.027,41,4.86,43,4.356,49,0.843,58,1.198,60,0.449,71,0.23,76,0.194,80,0.006,81,0.008,82,0.006,105,0.433,108,1.385,134,2.362,203,0.873,241,1.386,319,2.12,359,2.072,361,2.633,415,6.001,905,3.86,960,3.86,1091,6.34,1431,2.633,1432,2.633,1862,4.544,1880,5.612,1882,5.022,1883,5.807,1895,5.864,1898,4.088,1929,5.022,1937,4.5,1938,7.279,1939,7.279,1940,7.279,1941,7.279,1942,7.279,1943,7.279,1944,7.279,1945,7.279,1946,7.683,1947,6.587,1948,5.124,1949,5.124,1950,6.587,1951,5.124,1952,5.124,1953,5.124,1954,5.124,1955,5.784,1956,5.124,1957,6.587,1958,5.124,1959,5.124,1960,6.587,1961,5.124,1962,8.684,1963,5.124,1964,6.587,1965,5.124,1966,5.124,1967,6.587,1968,5.124,1969,5.124,1970,5.124,1971,5.124,1972,5.124]],["title/components/CoreBreadcrumbComponent.html",[182,0.264,702,1.141]],["body/components/CoreBreadcrumbComponent.html",[0,0.017,3,0.138,4,0.163,5,0.117,7,1.671,9,0.176,13,0.778,19,0.818,22,0.523,25,0.011,26,0.587,28,0.589,33,1.276,44,1.118,45,1.207,48,1.476,49,0.512,52,1.949,57,1.055,58,0.728,68,3.466,71,0.163,76,0.183,80,0.006,81,0.007,82,0.006,91,4.572,105,0.394,116,0.753,117,1.612,124,1.671,144,1.286,159,1.023,172,0.795,182,0.428,218,0.795,302,1.894,378,1.901,437,1.49,441,1.603,448,1.174,471,1.207,480,3.184,497,1.276,506,4.275,548,3.816,571,3.061,573,1.174,578,3.466,579,4.943,585,5.441,589,4.572,612,1.917,654,1.241,655,1.241,656,1.312,657,1.387,660,1.081,661,1.495,663,1.559,665,1.286,677,1.276,678,1.647,679,2.203,680,1.387,681,1.387,682,1.142,683,1.387,684,1.241,685,1.023,686,1.387,687,1.207,688,1.387,689,1.207,690,1.387,691,1.241,692,1.387,693,1.241,694,1.387,695,1.241,696,1.387,697,1.241,698,1.312,699,1.387,700,1.207,701,1.842,702,1.97,703,2.274,704,1.387,705,1.241,706,1.387,707,1.241,708,1.387,709,1.207,710,1.387,711,1.387,712,1.207,713,1.387,714,1.241,715,1.387,716,1.207,717,1.387,718,1.241,719,2.068,720,1.241,721,1.174,722,1.174,723,1.842,724,1.241,725,1.349,726,1.387,727,1.207,728,1.387,729,1.241,730,1.387,731,1.241,732,1.387,733,1.174,734,1.387,735,1.241,736,1.387,737,1.276,738,1.349,739,1.387,740,1.207,741,1.142,742,1.387,743,1.241,744,1.387,745,1.174,746,1.387,747,1.207,748,1.312,749,1.241,750,1.387,751,1.276,752,1.387,753,1.241,754,1.387,755,1.207,756,1.387,757,1.241,758,1.312,759,1.207,760,1.207,761,1.349,762,1.052,763,1.207,764,1.387,765,1.207,766,1.387,767,1.207,768,1.387,769,1.207,770,1.387,771,1.207,772,1.387,773,1.207,774,1.387,775,1.207,776,1.387,777,1.207,778,1.312,779,1.387,783,2.191,784,2.191,861,2.947,1004,3.816,1783,4.572,1973,6.108,1974,5.55,1975,4.098,1976,5.468,1977,8.216,1978,7.411,1979,6.196,1980,6.196,1981,6.196,1982,6.196,1983,6.196,1984,6.196,1985,4.275,1986,5.441,1987,6.196,1988,6.196,1989,6.196,1990,6.196,1991,6.196,1992,6.196,1993,4.667,1994,4.667]],["title/interfaces/CountryList.html",[780,0.521,801,2.789]],["body/interfaces/CountryList.html",[0,0.007,3,0.059,4,0.07,5,0.038,7,0.74,9,0.076,10,0.361,11,0.728,19,0.235,25,0.011,27,0.124,28,0.312,29,0.69,35,0.276,36,0.878,37,0.512,42,1.081,58,0.755,60,0.422,71,0.169,76,0.17,80,0.002,81,0.004,82,0.002,84,0.438,105,0.169,106,0.415,108,0.34,110,0.386,116,0.243,117,0.761,118,1.234,120,0.707,121,0.728,122,0.331,124,0.45,125,0.884,126,0.884,129,1.118,130,0.476,132,0.775,133,2.071,134,0.594,148,1.614,152,1.405,155,1.562,156,1.405,159,1.993,160,1.315,161,0.987,163,0.916,172,0.34,173,1.027,174,1.148,182,0.202,187,0.751,189,1.454,190,1.594,191,1.161,192,1.23,193,1.127,196,1.299,203,0.825,209,1.594,210,1.594,211,0.8,213,1.594,241,0.885,303,0.426,306,0.884,332,0.916,352,1.754,376,0.707,437,0.331,571,0.987,575,2.392,576,0.95,583,1.594,592,1.171,656,0.561,661,0.331,665,0.415,705,0.531,780,0.508,782,0.647,783,1.161,784,1.161,789,1.027,791,1.081,792,1.462,797,0.751,801,3.478,802,1.687,803,2.266,835,1.878,862,1.924,868,1.23,869,0.577,890,0.884,962,0.95,966,2.423,969,1.474,1064,4.698,1102,1.07,1128,1.562,1130,0.95,1158,1.572,1252,1.23,1273,1.754,1508,1.23,1509,1.299,1511,1.118,1515,1.118,1528,1.07,1529,1.299,1530,1.171,1532,1.378,1533,1.506,1534,1.474,1535,1.474,1536,1.474,1543,0.854,1544,1.405,1545,0.854,1546,1.405,1547,1.405,1548,1.405,1549,0.854,1550,0.854,1551,1.405,1552,1.405,1553,0.854,1554,0.854,1555,0.854,1556,0.854,1557,0.854,1558,1.405,1559,1.358,1560,0.854,1561,1.405,1562,1.405,1563,0.854,1564,1.405,1565,0.854,1566,0.854,1567,0.854,1568,0.854,1569,2.071,1570,0.854,1571,0.854,1572,0.854,1573,0.854,1574,0.854,1575,0.854,1576,0.854,1577,0.854,1578,0.854,1579,0.854,1580,0.854,1581,0.854,1582,0.854,1583,0.854,1584,0.854,1585,0.854,1586,1.405,1587,0.854,1588,0.854,1589,0.854,1590,0.854,1591,0.854,1592,0.854,1593,0.854,1594,0.854,1595,0.854,1596,0.854,1597,0.854,1598,0.854,1599,0.854,1600,1.405,1601,0.854,1602,0.854,1603,0.854,1604,0.854,1605,0.854,1606,0.707,1607,0.854,1608,0.854,1609,0.854,1610,0.854,1611,0.854,1612,0.854,1613,0.854,1614,0.854,1615,1.23,1900,2.62,1995,1.754,1996,4.181,1997,9.089,1998,1.754,1999,3.284,2000,1.998,2001,1.998,2002,1.998,2003,1.998,2004,7.428,2005,1.998,2006,1.998,2007,1.998,2008,1.998,2009,1.998,2010,1.998,2011,3.284,2012,1.998,2013,1.998,2014,1.998,2015,1.998,2016,1.998,2017,1.998,2018,1.998,2019,1.998,2020,1.998,2021,1.998,2022,1.998,2023,1.998,2024,1.998,2025,1.998,2026,1.998,2027,1.998,2028,1.998,2029,1.998,2030,1.998,2031,1.998,2032,1.998,2033,1.998,2034,1.998,2035,1.998,2036,1.998,2037,1.998,2038,1.998,2039,1.998,2040,1.998,2041,1.998,2042,1.998,2043,1.998,2044,1.998,2045,1.998,2046,1.998,2047,1.998,2048,1.998,2049,1.998,2050,1.998,2051,1.998,2052,1.998,2053,1.998,2054,1.998,2055,1.998,2056,1.998,2057,1.998,2058,3.284,2059,1.998,2060,1.998,2061,1.998,2062,1.998,2063,1.998,2064,1.998,2065,1.998,2066,1.998,2067,1.998,2068,4.252,2069,1.998,2070,1.998,2071,1.998,2072,2.423,2073,1.998,2074,1.998,2075,3.284,2076,1.998,2077,1.998,2078,1.998,2079,1.998,2080,1.998,2081,1.998,2082,1.998,2083,1.998,2084,1.998,2085,1.998,2086,1.998,2087,1.998,2088,1.998,2089,1.998,2090,1.998,2091,1.998,2092,1.998,2093,1.998,2094,1.998,2095,1.754,2096,1.998,2097,1.998,2098,7.213,2099,1.998,2100,1.998,2101,1.998,2102,1.998,2103,1.998,2104,3.284,2105,1.998,2106,1.998,2107,1.998,2108,1.998,2109,1.998,2110,1.998,2111,1.998,2112,1.998,2113,1.998,2114,1.998,2115,3.284,2116,1.998,2117,4.181,2118,1.998,2119,1.998,2120,1.998,2121,1.998,2122,1.998,2123,1.998,2124,1.998,2125,1.998,2126,1.998,2127,1.998,2128,1.998,2129,1.998,2130,1.998,2131,1.998,2132,1.998,2133,1.998,2134,1.998,2135,1.998,2136,1.998,2137,1.998,2138,1.998,2139,1.998,2140,1.998,2141,1.998,2142,1.998,2143,1.998,2144,1.998,2145,1.998,2146,1.998,2147,1.998,2148,1.998,2149,1.998,2150,1.998,2151,1.998,2152,4.843,2153,1.998,2154,1.998,2155,1.998,2156,1.998,2157,1.998,2158,1.998,2159,1.998,2160,1.998,2161,1.998,2162,1.998,2163,1.998,2164,1.998,2165,1.998,2166,1.998,2167,1.998,2168,1.998,2169,1.998,2170,1.998,2171,4.843,2172,1.998,2173,1.998,2174,1.998,2175,1.998,2176,1.998,2177,1.754,2178,1.998,2179,1.998,2180,1.998,2181,1.998,2182,1.998,2183,3.284,2184,1.998,2185,1.998,2186,1.998,2187,1.998,2188,1.754,2189,1.998,2190,1.998,2191,1.998,2192,1.998,2193,1.998,2194,1.998,2195,1.998,2196,1.998,2197,1.998,2198,1.998,2199,1.998,2200,1.998,2201,1.998,2202,1.998,2203,1.998,2204,1.998,2205,1.998,2206,1.998,2207,1.998,2208,1.998,2209,1.998,2210,1.998,2211,1.998,2212,1.998,2213,1.998,2214,1.998,2215,1.998,2216,1.998,2217,1.998,2218,1.998,2219,1.998,2220,1.998,2221,1.998,2222,1.998,2223,1.998,2224,1.998,2225,1.998,2226,1.998,2227,1.998,2228,1.998,2229,1.998,2230,1.998,2231,1.998,2232,1.998,2233,1.998,2234,1.998,2235,1.998,2236,1.998,2237,1.998,2238,1.998,2239,1.998,2240,1.998,2241,1.998,2242,1.998,2243,1.998,2244,1.998,2245,1.998,2246,1.998,2247,1.998,2248,1.998,2249,1.998,2250,1.998,2251,1.998,2252,1.998,2253,1.998,2254,1.998,2255,1.998,2256,1.998,2257,1.998,2258,1.998,2259,3.284,2260,3.284,2261,1.998,2262,1.998,2263,1.998,2264,1.998,2265,1.998,2266,3.284,2267,1.998,2268,1.998,2269,1.998,2270,1.998,2271,1.998,2272,1.998,2273,1.998,2274,1.998,2275,1.998,2276,1.998,2277,1.998,2278,1.998,2279,1.998,2280,1.998,2281,1.998,2282,1.998,2283,1.998,2284,1.998,2285,1.998,2286,1.998,2287,1.998,2288,1.998,2289,1.998,2290,1.998,2291,1.998,2292,1.998,2293,1.998,2294,1.998,2295,1.998,2296,1.998,2297,1.998,2298,1.998,2299,1.998,2300,1.998,2301,1.998,2302,1.998,2303,1.998,2304,1.998,2305,1.998,2306,1.998,2307,1.998,2308,1.998,2309,1.998,2310,1.998,2311,1.998,2312,1.998,2313,1.998,2314,1.998,2315,1.998,2316,3.671,2317,1.998,2318,1.998,2319,1.998,2320,1.998,2321,1.998,2322,1.998,2323,1.998,2324,1.998,2325,1.998,2326,1.998,2327,1.998,2328,1.998,2329,1.998,2330,1.998,2331,1.998,2332,1.998,2333,3.284,2334,1.998,2335,1.998,2336,1.998,2337,1.998,2338,1.998,2339,1.998,2340,1.998,2341,1.998,2342,1.998,2343,1.998,2344,1.998,2345,1.998,2346,1.998,2347,1.998,2348,1.998,2349,1.998,2350,1.998,2351,1.998,2352,1.998,2353,1.998,2354,1.998,2355,1.998,2356,1.998,2357,1.998,2358,1.998,2359,1.998,2360,1.998,2361,1.998,2362,1.998,2363,1.998,2364,1.998,2365,1.998,2366,1.998,2367,1.998,2368,1.998,2369,1.998,2370,1.754,2371,1.998,2372,1.998,2373,1.998,2374,1.998,2375,1.998,2376,1.998,2377,1.998,2378,1.998,2379,1.998,2380,1.998,2381,1.998,2382,1.998,2383,1.998,2384,1.998,2385,1.998,2386,1.998,2387,1.998,2388,1.998,2389,1.998,2390,1.998,2391,1.998,2392,1.998,2393,1.998,2394,1.998,2395,1.998,2396,1.998,2397,1.998,2398,6.079,2399,1.998,2400,1.998,2401,1.998,2402,1.998,2403,1.998,2404,1.998,2405,1.998,2406,1.998,2407,1.998,2408,1.998,2409,1.998,2410,1.998,2411,1.998,2412,1.998,2413,1.998,2414,1.998,2415,1.998,2416,1.998,2417,1.998,2418,1.998,2419,1.998,2420,1.998,2421,1.998,2422,1.998,2423,1.998,2424,1.998,2425,1.998,2426,1.998,2427,1.998,2428,1.998,2429,1.998,2430,1.998,2431,1.998,2432,1.998,2433,1.998,2434,1.998,2435,1.998,2436,1.998,2437,1.998,2438,1.998,2439,1.998,2440,1.998,2441,1.998,2442,1.998,2443,1.998,2444,1.998,2445,1.998,2446,1.998,2447,1.998,2448,1.998,2449,1.998,2450,1.998,2451,1.998,2452,1.998,2453,4.843,2454,1.998,2455,1.998,2456,1.998,2457,1.998,2458,3.284,2459,1.998,2460,1.998,2461,1.998,2462,1.998,2463,1.998,2464,1.998,2465,1.998,2466,1.998,2467,1.998,2468,1.998,2469,1.998,2470,1.998,2471,1.998,2472,1.998,2473,1.998,2474,1.998,2475,1.998,2476,1.998,2477,1.998,2478,1.998,2479,3.284,2480,1.998,2481,1.998,2482,1.998,2483,1.998,2484,1.998,2485,1.998,2486,5.351,2487,1.998,2488,1.998,2489,1.998,2490,1.998,2491,1.998,2492,1.998,2493,1.998,2494,1.998,2495,1.998,2496,1.998,2497,1.998,2498,1.998,2499,1.998,2500,1.998,2501,1.998,2502,1.998,2503,1.998,2504,1.998,2505,1.998,2506,1.998,2507,1.998,2508,1.998,2509,1.998,2510,1.998,2511,1.998,2512,1.998,2513,1.998,2514,1.998,2515,1.998,2516,1.998,2517,1.998,2518,1.998,2519,1.998,2520,1.998,2521,1.998,2522,1.998,2523,1.998,2524,1.998,2525,1.998,2526,1.998,2527,1.998,2528,1.998,2529,1.998,2530,1.998,2531,1.998,2532,1.998,2533,3.284,2534,1.998,2535,1.998,2536,1.998,2537,1.998,2538,1.998,2539,1.998,2540,1.998,2541,1.998,2542,1.998,2543,1.998,2544,1.998,2545,1.998,2546,1.998,2547,1.998,2548,1.754,2549,1.998,2550,1.998,2551,1.998,2552,1.998,2553,1.754,2554,1.171,2555,1.299,2556,1.474,2557,1.754,2558,1.754,2559,1.474,2560,1.754]],["title/interfaces/DateErrorMsg.html",[780,0.521,2561,3.166]],["body/interfaces/DateErrorMsg.html",[0,0.012,3,0.098,4,0.116,5,0.063,7,1.102,9,0.126,10,0.537,11,1.212,19,0.391,25,0.011,27,0.278,28,0.777,29,0.826,33,0.909,35,0.94,37,0.904,39,1.643,42,2.116,43,1.782,48,1.164,49,0.365,52,1.046,58,0.997,60,0.5,66,1.782,71,0.238,76,0.171,80,0.004,81,0.006,82,0.004,84,0.73,87,2.32,92,2.049,104,1.525,105,0.281,106,0.69,108,0.833,109,2.415,110,0.837,111,1.949,116,0.404,117,1.133,118,1.837,120,1.176,121,1.212,122,0.809,124,0.75,134,1.453,141,1.142,146,1.25,148,1.629,149,1.25,159,0.73,172,0.567,174,1.354,178,1.729,180,2.929,182,0.494,187,1.837,189,1.472,191,1.176,193,1.99,195,1.077,200,2.454,203,0.833,208,2.164,211,2.32,232,2.162,237,1.643,239,3.256,241,0.959,273,2.32,274,3.178,277,2.178,302,1.017,303,1.043,304,1.109,306,1.472,308,1.077,311,2.295,316,2.654,327,2.049,332,2.658,338,2.162,341,1.376,345,1.077,358,2.259,366,1.453,376,1.176,379,1.046,380,1.495,413,2.443,418,1.332,419,2.735,427,3.373,428,1.861,437,0.55,441,1.499,476,2.618,490,3.9,499,2.162,533,1.472,535,2.295,555,2.654,563,2.162,566,2.863,593,2.735,594,2.454,597,2.397,612,1.264,661,0.55,663,0.837,665,0.69,678,0.884,709,1.264,780,0.776,782,1.077,783,1.729,784,1.729,791,1.264,792,1.336,793,2.618,794,2.479,795,2.091,796,2.512,797,1.25,815,1.582,816,3.396,817,2.049,818,1.782,819,1.525,860,1.423,869,0.961,880,2.512,882,4.424,894,2.865,910,1.949,924,1.423,939,2.295,960,2.865,1057,2.049,1063,1.949,1090,3.373,1098,3.957,1160,2.295,1174,3.373,1215,2.049,1230,2.735,1231,3.011,1232,2.415,1233,3.744,1252,2.049,1283,1.525,1380,2.454,1396,1.678,1397,2.162,1467,2.162,1543,1.423,1544,2.091,1545,1.423,1546,2.091,1547,2.091,1548,2.091,1549,1.423,1550,1.423,1551,2.091,1552,2.091,1553,1.423,1554,1.423,1555,1.423,1556,1.423,1557,1.423,1558,2.091,1559,2.397,1560,1.423,1561,2.091,1562,2.091,1563,1.423,1564,2.091,1565,1.423,1566,1.423,1567,1.423,1568,1.423,1569,2.732,1570,1.423,1571,1.423,1572,1.423,1573,1.423,1574,1.423,1575,1.423,1576,1.423,1577,1.423,1578,1.423,1579,1.423,1580,1.423,1581,1.423,1582,1.423,1583,1.423,1584,1.423,1585,1.423,1586,2.091,1587,1.423,1588,1.423,1589,1.423,1590,1.423,1591,1.423,1592,1.423,1593,1.423,1594,1.423,1595,1.423,1596,1.423,1597,1.423,1598,1.423,1599,1.423,1600,2.091,1601,1.423,1602,1.423,1603,1.423,1604,1.423,1605,1.423,1606,1.176,1607,1.423,1608,1.423,1609,1.423,1610,1.423,1611,1.423,1612,1.423,1613,1.423,1614,1.423,1624,2.735,1669,3.243,1678,1.582,1722,3.9,1759,5.359,1795,2.049,1818,2.162,2561,4.276,2562,2.454,2563,3.9,2564,3.373,2565,6.459,2566,6.459,2567,6.459,2568,6.459,2569,6.763,2570,3.373,2571,3.768,2572,3.9,2573,5.61,2574,4.293,2575,5.977,2576,4.293,2577,6.021,2578,2.654,2579,5.869,2580,2.921,2581,2.654,2582,2.921,2583,2.921,2584,2.921,2585,1.782,2586,2.921,2587,2.921,2588,2.921,2589,5.678,2590,2.921,2591,2.921,2592,2.921,2593,3.9,2594,4.293,2595,4.293,2596,4.293,2597,3.011,2598,4.293,2599,2.921,2600,2.454,2601,2.921,2602,2.921,2603,2.921,2604,2.921,2605,4.624,2606,2.654,2607,3.9,2608,5.089,2609,1.949,2610,2.921,2611,2.921,2612,2.295,2613,4.293,2614,2.654,2615,2.921,2616,4.714,2617,2.654,2618,2.921,2619,2.921,2620,2.921,2621,2.921,2622,2.921,2623,3.373,2624,2.921,2625,3.607,2626,2.921,2627,3.607,2628,2.921,2629,2.921,2630,2.921,2631,2.921,2632,2.921,2633,2.921,2634,2.921,2635,2.921,2636,2.921,2637,3.607,2638,6.249,2639,2.921,2640,2.921,2641,2.921,2642,2.921,2643,2.921,2644,2.921,2645,2.921,2646,2.921,2647,2.921,2648,2.921,2649,2.921,2650,2.921,2651,2.921,2652,2.921,2653,4.293,2654,2.921,2655,4.293,2656,2.921,2657,2.654,2658,2.921,2659,5.61,2660,3.607,2661,5.089,2662,2.921,2663,2.921,2664,4.624,2665,2.921,2666,2.921,2667,2.921,2668,2.654,2669,2.162,2670,2.654,2671,2.921,2672,2.654,2673,2.921,2674,2.921,2675,2.921,2676,2.921,2677,4.293,2678,2.921,2679,2.921,2680,2.921,2681,2.921,2682,2.654,2683,2.921,2684,2.921,2685,2.921,2686,2.921]],["title/directives/DateFieldFormatDirective.html",[218,0.731,763,1.11]],["body/directives/DateFieldFormatDirective.html",[0,0.022,3,0.184,4,0.218,5,0.117,9,0.236,22,0.629,25,0.011,27,0.236,71,0.218,76,0.184,80,0.008,81,0.009,82,0.008,105,0.527,174,1.316,203,1.268,208,3.52,218,1.268,241,1.033,358,2.208,523,1.856,660,1.447,661,1.232,762,1.407,763,1.925,791,1.925,792,2.174,1110,3.493,1158,2.99,1183,5.492,1259,2.887,2554,4.362,2687,6.985,2688,5.482,2689,7.444,2690,7.954,2691,6.537,2692,6.243,2693,5.482,2694,6.243,2695,6.243,2696,4.981,2697,6.243,2698,6.243,2699,6.243,2700,6.243,2701,6.243,2702,6.243,2703,8.416,2704,6.243,2705,6.243,2706,7.444,2707,6.243,2708,6.243,2709,6.243]],["title/components/DatepickerComponent.html",[182,0.264,709,1.11]],["body/components/DatepickerComponent.html",[0,0.009,3,0.072,4,0.086,5,0.073,7,1.23,9,0.093,10,0.426,11,1.751,13,0.487,19,0.565,22,0.713,24,1.102,25,0.011,26,0.622,27,0.311,28,0.651,29,0.9,32,0.949,33,0.671,35,1.076,36,0.889,37,0.851,39,1.212,42,1.869,43,1.314,44,0.699,45,0.635,48,1.504,49,0.809,52,1.219,57,0.66,58,1.15,60,0.438,66,1.314,71,0.208,76,0.142,80,0.003,81,0.005,82,0.003,84,0.85,87,2.185,88,1.05,92,1.512,93,0.895,104,1.125,105,0.207,106,0.509,108,0.818,109,2.696,110,0.742,111,1.438,116,0.471,117,1.113,118,1.806,120,1.699,121,1.751,122,1.134,123,1.503,124,1.23,125,1.716,126,1.716,132,1.503,134,0.729,138,0.818,139,1.015,140,0.922,141,1.331,142,0.895,143,0.983,144,0.997,146,1.457,148,1.819,149,1.457,159,0.538,172,0.66,174,1.274,178,1.93,180,1.777,182,0.474,187,1.457,189,1.086,191,0.868,193,1.649,195,1.255,200,1.811,203,0.66,208,1.086,211,2.379,218,0.418,232,1.595,237,1.212,239,2.796,241,0.795,273,1.552,274,3.548,277,2.233,302,0.75,303,0.827,304,1.292,306,1.716,308,1.255,311,1.693,316,3.092,327,1.512,332,2.203,338,1.595,341,1.015,345,0.795,358,1.93,366,1.622,376,1.371,379,1.219,380,1.669,413,2.22,418,1.552,419,1.373,427,1.693,428,2.169,437,1.429,441,1.537,448,0.618,471,0.635,476,2.573,490,4.354,497,0.671,499,1.595,533,1.086,535,2.674,555,1.958,563,1.595,566,2.696,573,0.618,593,3.053,594,2.86,597,2.458,612,1.634,654,0.653,655,0.653,656,0.69,657,0.729,660,0.569,661,1.444,663,0.975,665,0.804,677,0.671,678,1.277,679,1.622,680,0.729,681,0.729,682,0.601,683,0.729,684,0.653,685,0.538,686,0.729,687,0.635,688,0.729,689,0.635,690,0.729,691,0.653,692,0.729,693,0.653,694,0.729,695,0.653,696,0.729,697,0.653,698,0.69,699,0.729,700,0.635,701,1.152,702,0.653,703,0.69,704,0.729,705,0.653,706,0.729,707,0.653,708,0.729,709,1.634,710,0.729,711,0.729,712,0.635,713,0.729,714,0.653,715,0.729,716,0.635,717,0.729,718,0.653,719,1.428,720,0.653,721,0.618,722,0.618,723,1.152,724,0.653,725,0.709,726,0.729,727,0.635,728,0.729,729,0.653,730,0.729,731,0.653,732,0.729,733,0.618,734,0.729,735,0.653,736,0.729,737,0.671,738,0.709,739,0.729,740,0.635,741,0.601,742,0.729,743,0.653,744,0.729,745,0.618,746,0.729,747,0.635,748,0.69,749,0.653,750,0.729,751,0.671,752,0.729,753,0.653,754,0.729,755,0.635,756,0.729,757,0.653,758,0.69,759,0.635,760,0.635,761,0.709,762,0.553,763,0.635,764,0.729,765,0.635,766,0.729,767,0.635,768,0.729,769,0.635,770,0.729,771,0.635,772,0.729,773,0.635,774,0.729,775,0.635,776,0.729,777,0.635,778,0.69,779,0.729,780,0.663,783,1.371,784,1.371,791,1.003,792,1.313,793,2.573,794,2.541,795,2.055,796,2.469,797,0.922,815,1.167,816,3.198,817,1.512,818,1.314,819,1.777,860,1.05,869,0.709,880,2.804,882,4.697,894,2.815,910,2.272,924,1.05,939,1.693,960,2.815,1057,1.512,1063,1.438,1090,3.765,1098,4.04,1158,0.922,1160,1.693,1174,2.674,1215,2.387,1230,1.373,1231,1.512,1232,1.212,1233,2.815,1250,1.438,1252,1.512,1259,1.503,1283,1.777,1380,1.811,1396,1.331,1397,2.52,1467,1.595,1543,1.05,1544,1.658,1545,1.05,1546,1.658,1547,1.658,1548,1.658,1549,1.05,1550,1.05,1551,1.658,1552,1.658,1553,1.05,1554,1.05,1555,1.05,1556,1.05,1557,1.05,1558,1.658,1559,1.987,1560,1.05,1561,1.658,1562,1.658,1563,1.05,1564,1.658,1565,1.05,1566,1.05,1567,1.05,1568,1.05,1569,2.334,1570,1.05,1571,1.05,1572,1.05,1573,1.05,1574,1.05,1575,1.05,1576,1.05,1577,1.05,1578,1.05,1579,1.05,1580,1.05,1581,1.05,1582,1.05,1583,1.05,1584,1.05,1585,1.05,1586,1.658,1587,1.05,1588,1.05,1589,1.05,1590,1.05,1591,1.05,1592,1.05,1593,1.05,1594,1.05,1595,1.05,1596,1.05,1597,1.05,1598,1.05,1599,1.05,1600,1.658,1601,1.05,1602,1.05,1603,1.05,1604,1.05,1605,1.05,1606,0.868,1607,1.05,1608,1.05,1609,1.05,1610,1.05,1611,1.05,1612,1.05,1613,1.05,1614,1.05,1624,2.169,1669,3.7,1678,1.843,1722,3.092,1759,5.471,1795,1.512,1818,2.52,2561,3.545,2562,1.811,2563,1.958,2564,1.693,2565,4.219,2566,4.219,2567,4.219,2568,4.219,2569,4.792,2570,1.693,2571,3.548,2572,1.958,2573,2.155,2574,4.219,2575,6.345,2576,4.219,2577,6.144,2578,1.958,2579,6.067,2580,3.404,2581,3.092,2582,3.404,2583,3.404,2584,3.404,2585,2.076,2586,3.404,2587,3.404,2588,3.404,2589,5.88,2590,3.404,2591,4.219,2592,5.218,2593,4.354,2594,5.218,2595,4.792,2596,4.792,2597,3.361,2598,5.218,2599,3.404,2600,2.86,2601,3.404,2602,3.404,2603,4.219,2604,3.404,2605,4.354,2606,3.092,2607,4.354,2608,5.546,2609,2.272,2610,3.404,2611,4.219,2612,2.674,2613,4.792,2614,3.092,2615,3.404,2616,4.88,2617,1.958,2618,3.404,2619,4.219,2620,3.404,2621,4.219,2622,3.404,2623,2.674,2624,2.155,2625,2.86,2626,2.155,2627,2.86,2628,2.155,2629,3.404,2630,2.155,2631,2.155,2632,2.155,2633,2.155,2634,2.155,2635,3.404,2636,2.155,2637,2.86,2638,5.546,2639,2.155,2640,2.155,2641,2.155,2642,2.155,2643,2.155,2644,2.155,2645,2.155,2646,2.155,2647,2.155,2648,2.155,2649,2.155,2650,2.155,2651,2.155,2652,2.155,2653,3.404,2654,2.155,2655,3.404,2656,2.155,2657,1.958,2658,2.155,2659,4.792,2660,2.86,2661,4.219,2662,2.155,2663,2.155,2664,3.833,2665,2.155,2666,2.155,2667,2.155,2668,1.958,2669,1.595,2670,1.958,2671,2.155,2672,1.958,2673,2.155,2674,2.155,2675,2.155,2676,3.404,2677,3.404,2678,2.155,2679,2.155,2680,4.792,2681,2.155,2682,1.958,2683,2.155,2684,4.219,2685,2.155,2686,3.404,2710,3.876,2711,3.876,2712,3.876,2713,3.092,2714,3.876,2715,2.454,2716,2.454,2717,2.454,2718,2.454,2719,2.454,2720,2.454,2721,2.454,2722,2.454,2723,2.454,2724,2.454,2725,2.454,2726,2.454,2727,2.454,2728,2.454,2729,2.454,2730,2.454,2731,2.454,2732,2.454,2733,2.454,2734,2.454,2735,2.454,2736,2.454,2737,2.454,2738,2.454,2739,2.454,2740,2.454,2741,2.454,2742,3.876,2743,3.876,2744,3.876,2745,3.876,2746,3.876,2747,3.876,2748,3.876]],["title/injectables/DefaultPageGuardService.html",[359,1.35,2749,3.166]],["body/injectables/DefaultPageGuardService.html",[0,0.018,3,0.147,4,0.175,5,0.094,9,0.189,10,0.711,13,0.813,14,1.662,18,3.072,19,0.761,22,0.665,24,1.04,25,0.011,26,0.547,27,0.287,28,0.615,29,1.171,35,1.051,36,0.986,37,1.121,49,0.711,57,1.474,60,0.461,69,3.045,71,0.251,76,0.212,80,0.006,81,0.008,82,0.006,105,0.421,108,0.849,110,0.894,116,0.606,122,1.336,130,1.542,159,1.094,185,3.242,203,1.375,241,1.071,248,3.252,336,2.968,359,2.036,360,5.247,361,2.563,362,3.441,363,3.621,366,2.4,377,4.466,378,1.769,379,2.036,380,1.979,382,5.437,383,6.678,385,4.38,532,2.464,962,2.372,1063,2.923,1383,5.733,1389,6.067,1390,6.648,1422,5.611,1431,2.563,1432,2.563,1455,3.979,1725,3.979,1861,4.732,2749,5.958,2750,7.091,2751,8.334,2752,7.605,2753,6.473,2754,7.605,2755,6.473,2756,6.473,2757,4.988,2758,8.221,2759,6.473,2760,4.988,2761,4.988,2762,4.988,2763,7.186,2764,4.988,2765,4.38,2766,5.684,2767,5.684,2768,6.473,2769,4.988,2770,4.988,2771,6.473,2772,4.988,2773,4.988,2774,5.164,2775,3.979,2776,4.988,2777,4.988]],["title/components/DropdownComponent.html",[182,0.264,573,1.08]],["body/components/DropdownComponent.html",[0,0.015,3,0.122,4,0.145,5,0.108,7,1.591,9,0.157,10,0.628,13,0.718,19,0.672,22,0.726,24,1.134,25,0.011,26,0.662,27,0.32,28,0.727,29,1.091,32,1.4,35,1.134,36,1.065,37,0.892,42,1.915,44,1.031,45,1.072,48,1.362,49,0.719,57,0.974,58,1.194,60,0.474,71,0.229,76,0.122,80,0.005,81,0.007,82,0.005,84,1.254,88,1.772,93,1.51,105,0.35,106,0.86,108,0.974,116,0.695,117,0.96,118,2.46,120,2.315,121,2.386,122,1.402,123,2.217,125,2.53,126,2.53,132,2.217,134,2.411,138,1.381,139,1.714,140,1.557,141,1.422,142,1.51,143,1.659,144,1.358,146,2.149,148,2.352,149,2.149,152,3.166,156,2.445,166,2.53,172,0.706,174,1.342,182,0.403,189,1.834,191,1.465,193,1.422,218,0.706,341,2.365,437,1.481,448,1.043,471,1.072,497,1.133,524,4.561,573,1.776,612,1.479,654,1.102,655,1.102,656,1.164,657,1.232,660,0.96,661,1.488,663,1.439,665,1.186,677,1.133,678,1.52,679,2.097,680,1.232,681,1.232,682,1.014,683,1.232,684,1.102,685,0.909,686,1.232,687,1.072,688,1.232,689,1.072,690,1.232,691,1.102,692,1.232,693,1.102,694,1.232,695,1.102,696,1.232,697,1.102,698,1.164,699,1.232,700,1.072,701,1.699,702,1.102,703,1.164,704,1.232,705,1.102,706,1.232,707,1.102,708,1.232,709,1.072,710,1.232,711,1.232,712,1.072,713,1.232,714,1.102,715,1.232,716,1.072,717,1.232,718,1.102,719,1.945,720,1.102,721,1.043,722,1.043,723,1.699,724,1.102,725,1.197,726,1.232,727,1.072,728,1.232,729,1.102,730,1.232,731,1.102,732,1.232,733,1.043,734,1.232,735,1.102,736,1.232,737,1.133,738,1.197,739,1.232,740,1.072,741,1.014,742,1.232,743,1.102,744,1.232,745,1.043,746,1.232,747,1.072,748,1.164,749,1.102,750,1.232,751,1.133,752,1.232,753,1.102,754,1.232,755,1.072,756,1.232,757,1.102,758,1.164,759,1.072,760,1.072,761,1.197,762,0.934,763,1.072,764,1.232,765,1.072,766,1.232,767,1.072,768,1.232,769,1.072,770,1.232,771,1.072,772,1.232,773,1.072,774,1.232,775,1.072,776,1.232,777,1.072,778,1.164,779,1.232,794,1.772,796,2.129,797,1.557,869,1.197,1128,3.521,1130,1.971,1213,3.662,1462,2.318,1490,2.318,1509,4.255,2616,4.829,2664,3.306,2778,3.638,2779,5.717,2780,5.717,2781,6.546,2782,6.546,2783,6.546,2784,5.748,2785,5.717,2786,4.144,2787,4.144,2788,4.144,2789,4.144,2790,4.144,2791,4.144,2792,4.144,2793,4.144,2794,4.144,2795,4.144,2796,4.144,2797,4.144,2798,4.144,2799,4.144]],["title/directives/DuplicateCheckDirective.html",[218,0.731,765,1.11]],["body/directives/DuplicateCheckDirective.html",[0,0.02,3,0.168,4,0.199,5,0.107,9,0.215,13,0.884,22,0.594,24,0.915,25,0.011,26,0.481,27,0.289,28,0.541,29,1.003,32,1.723,33,1.556,49,0.625,60,0.495,71,0.246,76,0.207,80,0.007,81,0.009,82,0.007,105,0.481,106,1.181,108,1.301,110,0.964,116,0.855,160,2.403,174,1.164,195,2.705,203,0.969,211,2.818,218,1.199,220,3.926,302,1.74,317,3.336,366,2.092,379,2.214,380,2.152,413,2.705,426,3.7,509,2.61,530,5.188,578,3.184,636,3.381,660,1.319,661,1.164,698,1.6,762,1.283,765,2.064,1283,3.227,2800,6.709,2801,6.095,2802,4.998,2803,4.705,2804,6.709,2805,4.477,2806,8.468,2807,5.692,2808,3.506,2809,5.145,2810,5.692,2811,4.334,2812,3.7,2813,6.709,2814,5.692,2815,5.692,2816,3.506,2817,3.7,2818,5.692]],["title/components/EmailComponent.html",[182,0.264,712,1.11]],["body/components/EmailComponent.html",[0,0.011,3,0.093,4,0.111,5,0.089,7,0.713,9,0.12,10,0.517,11,1.717,13,0.591,14,2.078,17,1.906,19,0.554,22,0.737,24,1.243,25,0.011,26,0.678,27,0.325,28,0.755,29,0.802,32,1.153,33,1.287,35,1.098,36,1.119,37,0.493,42,1.807,44,1.015,45,0.818,48,1.122,49,0.89,57,0.802,58,1.253,60,0.474,71,0.218,76,0.093,80,0.009,81,0.006,82,0.004,84,1.033,88,1.353,93,2.979,105,0.267,106,0.656,108,0.802,110,0.733,114,3.94,116,0.572,117,1.304,119,3.57,120,1.666,121,1.717,122,1.103,123,1.827,124,1.632,125,2.085,126,2.085,127,2.76,128,2.76,129,3.148,130,1.87,131,3.466,132,2.585,133,3.096,134,2.151,138,1.054,139,1.308,140,1.189,141,1.086,142,1.153,143,1.266,144,1.168,146,1.189,148,2.078,149,1.189,151,1.948,152,3.181,153,3.292,155,1.504,156,2.666,157,2.76,158,1.45,159,1.033,160,0.995,161,1.562,163,1.45,166,2.085,172,0.539,173,1.625,174,1.103,182,0.346,191,1.119,193,1.086,195,1.024,218,0.539,219,4.6,241,0.779,256,2.42,288,2.085,302,1.44,303,0.675,336,2.58,376,1.666,413,2.018,426,3.062,434,2.901,437,1.457,441,1.218,448,0.796,471,0.818,497,0.865,556,2.76,573,0.796,592,3.298,612,1.218,654,0.841,655,0.841,656,0.889,657,0.94,660,0.733,661,1.468,663,1.185,665,0.977,677,0.865,678,1.252,679,1.853,680,0.94,681,0.94,682,0.774,683,0.94,684,0.841,685,0.694,686,0.94,687,0.818,688,0.94,689,0.818,690,0.94,691,0.841,692,0.94,693,0.841,694,0.94,695,0.841,696,0.94,697,0.841,698,0.889,699,0.94,700,0.818,701,1.4,702,0.841,703,0.889,704,0.94,705,0.841,706,0.94,707,0.841,708,0.94,709,0.818,710,0.94,711,0.94,712,1.612,713,0.94,714,0.841,715,0.94,716,0.818,717,0.94,718,0.841,719,1.673,720,0.841,721,0.796,722,0.796,723,1.4,724,0.841,725,0.914,726,0.94,727,0.818,728,0.94,729,0.841,730,0.94,731,0.841,732,0.94,733,0.796,734,0.94,735,0.841,736,0.94,737,0.865,738,0.914,739,0.94,740,0.818,741,0.774,742,0.94,743,0.841,744,0.94,745,0.796,746,0.94,747,0.818,748,0.889,749,0.841,750,0.94,751,0.865,752,0.94,753,0.841,754,0.94,755,0.818,756,0.94,757,0.841,758,0.889,759,0.818,760,0.818,761,0.914,762,0.713,763,0.818,764,0.94,765,0.818,766,0.94,767,0.818,768,0.94,769,0.818,770,0.94,771,0.818,772,0.94,773,0.818,774,0.94,775,0.818,776,0.94,777,0.818,778,0.889,779,0.94,791,1.455,792,1.978,835,2.418,869,0.914,1100,1.77,1101,3.719,1102,1.694,1110,3.148,1111,3.475,1113,2.635,1128,3.17,1130,1.504,1158,2.115,1199,2.056,1259,1.827,1462,1.77,1466,3.475,1470,2.056,1471,2.056,1472,2.056,1479,2.056,1480,2.056,1481,2.056,1482,2.056,1483,2.056,1484,2.056,1485,2.056,1486,2.056,1490,1.77,1493,2.056,1494,2.056,1495,2.056,1500,1.854,1504,3.062,1507,3.298,1508,3.466,1510,3.658,1511,3.148,1515,2.635,1525,2.182,1529,3.062,1530,2.76,1531,3.475,1540,2.056,1542,2.056,1615,1.948,1616,2.182,2817,3.062,2819,2.778,2820,3.475,2821,4.136,2822,6.531,2823,4.71,2824,4.71,2825,5.627,2826,5.627,2827,4.71,2828,3.163,2829,4.71,2830,3.163,2831,3.163,2832,4.71,2833,3.163,2834,3.163,2835,3.163,2836,3.163,2837,3.163,2838,3.163,2839,3.163,2840,3.079,2841,5.627,2842,3.062,2843,4.71,2844,4.71,2845,5.627,2846,4.136,2847,4.71,2848,3.163,2849,4.71,2850,3.163,2851,3.163,2852,3.163,2853,3.163,2854,7.438,2855,2.524,2856,2.524,2857,2.524,2858,2.778,2859,3.163,2860,3.163,2861,3.163,2862,3.163,2863,4.71,2864,4.71]],["title/components/ErrorContainerComponent.html",[182,0.264,714,1.141]],["body/components/ErrorContainerComponent.html",[0,0.018,3,0.152,4,0.18,5,0.124,9,0.195,19,0.858,22,0.558,25,0.011,26,0.616,27,0.195,29,0.942,32,1.619,35,0.712,36,0.669,37,1.032,44,1.193,45,1.334,48,1.575,57,1.126,71,0.18,76,0.152,80,0.006,81,0.008,82,0.006,105,0.435,144,1.372,172,1.411,174,1.094,182,0.449,218,0.878,437,1.496,448,1.297,471,1.334,497,1.409,573,1.297,612,1.71,654,1.371,655,1.371,656,1.449,657,1.532,660,1.195,661,1.501,663,1.664,665,1.372,677,1.409,678,1.758,679,2.289,680,1.532,681,1.532,682,1.262,683,1.532,684,1.371,685,1.131,686,1.532,687,1.334,688,1.532,689,1.334,690,1.532,691,1.371,692,1.532,693,1.371,694,1.532,695,1.371,696,1.532,697,1.371,698,1.449,699,1.532,700,1.334,701,1.965,702,1.371,703,1.449,704,1.532,705,1.371,706,1.532,707,1.371,708,1.532,709,1.334,710,1.532,711,1.532,712,1.334,713,1.532,714,2.047,715,1.532,716,1.334,717,1.532,718,1.371,719,2.17,720,1.371,721,1.297,722,1.297,723,1.965,724,1.371,725,1.49,726,1.532,727,1.334,728,1.532,729,1.371,730,1.532,731,1.371,732,1.532,733,1.297,734,1.532,735,1.371,736,1.532,737,1.409,738,1.49,739,1.532,740,1.334,741,1.262,742,1.532,743,1.371,744,1.532,745,1.297,746,1.532,747,1.334,748,1.449,749,1.371,750,1.532,751,1.409,752,1.532,753,1.371,754,1.532,755,1.334,756,1.532,757,1.371,758,1.449,759,1.334,760,1.334,761,1.49,762,1.162,763,1.334,764,1.532,765,1.334,766,1.532,767,1.334,768,1.532,769,1.334,770,1.532,771,1.334,772,1.532,773,1.334,774,1.532,775,1.334,776,1.532,777,1.334,778,1.449,779,1.532,1852,4.073,2865,6.41,2866,5.824,2867,4.528,2868,6.613,2869,6.613,2870,7.301,2871,6.613]],["title/interfaces/ErrorMessage.html",[133,1.835,780,0.521]],["body/interfaces/ErrorMessage.html",[3,0.19,4,0.226,5,0.121,9,0.244,10,0.834,22,0.545,25,0.011,27,0.244,28,0.721,36,0.985,42,2.154,60,0.514,76,0.238,80,0.008,81,0.009,82,0.008,110,0.759,133,3.248,134,2.257,160,2.389,171,5.153,178,2.284,203,1.294,241,1.069,636,3.362,780,0.785,782,2.091,1101,3.903,1719,4.765,1749,3.785,2585,3.459,2840,3.19,2872,6.669,2873,5.671,2874,6.459,2875,5.671,2876,6.459,2877,5.671,2878,6.669,2879,5.671,2880,5.671,2881,6.459]],["title/interfaces/FileUploaderMsg.html",[780,0.521,2882,3.423]],["body/interfaces/FileUploaderMsg.html",[0,0.007,3,0.121,4,0.068,5,0.153,7,0.722,9,0.199,10,0.578,12,3.632,19,0.228,21,2.022,25,0.011,26,0.445,27,0.18,28,0.184,29,0.75,33,1.3,37,0.979,42,1.682,44,0.578,51,1.43,52,1.887,53,1.337,57,0.33,58,0.884,60,0.38,71,0.269,72,0.829,76,0.094,80,0.004,81,0.004,82,0.002,84,0.425,87,1.639,90,2.824,104,0.889,105,0.164,106,0.402,108,1.196,110,0.947,116,0.236,117,0.742,124,0.437,130,1.549,140,0.729,142,1.492,156,1.751,158,0.889,160,1.887,172,1.35,174,1.109,181,0.922,182,0.252,187,1.979,195,0.628,199,1.085,203,1.422,211,0.776,217,0.729,221,1.085,234,2.082,236,1.038,237,2.8,239,0.858,241,1.22,245,0.802,248,1.751,263,2.363,273,1.283,277,0.729,278,1.646,279,1.194,288,0.858,298,3.401,302,0.979,304,1.364,308,0.628,312,3.793,319,1.693,322,1.038,323,1.038,325,1.547,326,4.622,327,1.194,341,0.802,342,2.556,343,1.547,345,1.037,346,1.702,357,2.661,358,2.43,366,0.576,370,3.632,373,0.922,376,0.686,380,0.593,401,1.792,418,1.283,419,3.172,423,1.702,424,2.556,437,0.53,443,2.399,474,1.085,475,1.038,478,1.136,500,1.702,504,1.702,509,1.469,523,1.685,530,1.26,532,0.958,541,1.337,544,1.547,556,1.877,560,2.824,563,3.9,577,1.194,578,1.085,588,1.085,601,1.194,606,1.337,609,1.547,611,1.877,612,1.361,631,1.702,655,0.515,656,0.545,660,0.949,661,0.321,663,0.488,665,0.402,674,2.21,716,0.501,780,0.236,782,0.628,783,1.133,784,1.133,791,1.059,792,1.439,793,1.716,794,1.37,795,2.033,797,0.729,815,0.922,816,1.136,818,1.716,819,0.889,820,1.038,845,2.399,846,1.43,854,1.194,860,0.829,863,0.889,869,0.56,876,1.085,910,1.136,918,2.082,924,1.37,928,1.337,960,1.136,962,0.922,976,2.521,1009,1.547,1089,2.082,1090,2.21,1096,2.399,1105,1.716,1113,1.792,1124,1.547,1129,1.337,1144,1.547,1158,2.519,1161,4.2,1162,1.136,1183,1.43,1184,2.661,1189,2.556,1192,2.556,1194,1.337,1195,1.085,1203,0.996,1233,1.877,1239,1.582,1263,1.547,1271,4.328,1290,1.337,1356,2.363,1368,1.337,1373,1.702,1396,2.059,1404,1.43,1467,2.082,1497,1.337,1517,1.26,1529,2.082,1532,1.337,1543,0.829,1544,1.37,1545,0.829,1546,1.37,1547,1.37,1548,1.37,1549,0.829,1550,0.829,1551,1.37,1552,1.37,1553,0.829,1554,0.829,1555,0.829,1556,0.829,1557,0.829,1558,1.37,1559,1.325,1560,0.829,1561,1.37,1562,1.37,1563,0.829,1564,1.37,1565,0.829,1566,0.829,1567,0.829,1568,0.829,1569,2.033,1570,0.829,1571,0.829,1572,0.829,1573,0.829,1574,0.829,1575,0.829,1576,0.829,1577,0.829,1578,0.829,1579,0.829,1580,0.829,1581,0.829,1582,0.829,1583,0.829,1584,0.829,1585,0.829,1586,1.37,1587,0.829,1588,0.829,1589,0.829,1590,0.829,1591,0.829,1592,0.829,1593,0.829,1594,0.829,1595,0.829,1596,0.829,1597,0.829,1598,0.829,1599,0.829,1600,1.37,1601,0.829,1602,0.829,1603,0.829,1604,0.829,1605,0.829,1606,1.448,1607,0.829,1608,0.829,1609,0.829,1610,0.829,1611,0.829,1612,0.829,1613,0.829,1614,0.829,1625,4.967,1627,1.194,1628,1.877,1633,1.194,1637,3.322,1643,1.194,1650,2.082,1651,2.661,1658,2.546,1664,2.082,1668,3.09,1669,3.844,1678,0.922,1682,1.877,1686,1.085,1692,1.26,1748,4.426,1754,2.813,1755,2.363,1794,1.877,1795,2.521,1797,1.547,1798,1.43,1804,1.337,1818,1.26,1858,1.547,1911,1.43,2188,1.702,2370,1.702,2555,1.26,2570,2.21,2571,1.26,2585,1.038,2597,1.973,2606,1.547,2660,1.43,2877,2.813,2882,3.266,2883,1.702,2884,1.547,2885,2.813,2886,1.939,2887,3.203,2888,1.43,2889,4.094,2890,4.523,2891,3.02,2892,1.939,2893,3.595,2894,3.203,2895,3.203,2896,1.939,2897,3.203,2898,3.203,2899,1.939,2900,3.203,2901,1.939,2902,1.939,2903,1.939,2904,1.939,2905,1.939,2906,1.939,2907,1.194,2908,1.939,2909,1.939,2910,1.939,2911,1.939,2912,3.595,2913,1.939,2914,3.266,2915,1.939,2916,3.203,2917,2.813,2918,3.203,2919,1.939,2920,3.203,2921,3.203,2922,1.939,2923,3.203,2924,3.203,2925,1.939,2926,1.26,2927,1.547,2928,1.702,2929,1.547,2930,1.939,2931,1.939,2932,1.43,2933,1.43,2934,1.939,2935,4.094,2936,1.939,2937,1.939,2938,1.939,2939,1.939,2940,1.939,2941,1.939,2942,1.939,2943,1.939,2944,1.939,2945,1.939,2946,1.939,2947,1.939,2948,3.508,2949,1.939,2950,1.939,2951,1.547,2952,1.702,2953,1.939,2954,7.152,2955,1.939,2956,1.939,2957,1.702,2958,1.939,2959,1.939,2960,1.939,2961,1.547,2962,2.556,2963,1.939,2964,4.094,2965,1.939,2966,1.939,2967,1.547,2968,1.939,2969,1.939,2970,1.939,2971,1.939,2972,3.203,2973,1.939,2974,1.939,2975,1.939,2976,1.939,2977,1.702,2978,1.939,2979,3.203,2980,1.939,2981,1.939,2982,4.094,2983,4.094,2984,1.939,2985,3.203,2986,1.939,2987,1.939,2988,1.939,2989,1.702,2990,1.939,2991,1.939,2992,1.939,2993,1.939,2994,1.939,2995,1.939,2996,1.939,2997,4.094,2998,1.702,2999,1.939,3000,1.702,3001,2.813,3002,3.203,3003,3.203,3004,1.939,3005,1.939,3006,1.702,3007,1.939,3008,1.939,3009,3.595,3010,1.939,3011,1.337,3012,3.203,3013,1.702,3014,2.824,3015,1.136,3016,4.2,3017,4.094,3018,1.702,3019,1.547,3020,1.939,3021,1.939,3022,1.547,3023,1.939,3024,4.754,3025,1.337,3026,3.203,3027,1.939,3028,1.939,3029,4.094,3030,4.183,3031,4.978,3032,4.754,3033,1.939,3034,1.939,3035,1.547,3036,1.939,3037,1.939,3038,1.939,3039,3.203,3040,1.547,3041,1.939,3042,1.939,3043,3.203,3044,1.939,3045,1.939,3046,1.939,3047,1.939,3048,1.939,3049,1.939,3050,1.939,3051,1.939,3052,4.094,3053,3.203,3054,3.28,3055,1.43,3056,1.702,3057,5.999,3058,1.939,3059,1.43,3060,1.939,3061,1.939,3062,3.595,3063,1.547,3064,1.939,3065,1.939,3066,1.547,3067,1.939,3068,3.203,3069,1.939,3070,1.939,3071,1.939,3072,3.595,3073,1.939,3074,1.547,3075,1.939,3076,1.702,3077,1.43,3078,1.939,3079,1.939,3080,1.939,3081,1.939,3082,1.702,3083,1.547,3084,1.939,3085,3.203,3086,4.094,3087,1.939,3088,1.939,3089,1.939,3090,1.939,3091,1.939,3092,1.939,3093,1.939,3094,1.939,3095,4.094,3096,1.939,3097,1.939,3098,1.939,3099,1.939,3100,1.939,3101,1.939,3102,1.939,3103,1.939,3104,1.939,3105,1.939,3106,2.363,3107,3.203,3108,3.203,3109,1.939,3110,1.939,3111,7.372,3112,5.669,3113,3.203,3114,4.094,3115,3.203,3116,5.264,3117,1.939,3118,1.939,3119,1.939,3120,3.203,3121,4.094,3122,1.939,3123,1.939,3124,1.939,3125,4.175,3126,5.264,3127,1.939,3128,2.556,3129,5.999,3130,1.702,3131,1.337,3132,1.702,3133,4.754,3134,1.939,3135,1.939,3136,5.264,3137,1.939,3138,1.939,3139,1.939,3140,1.939,3141,1.939,3142,1.939,3143,1.939,3144,1.939,3145,3.203,3146,1.939,3147,1.939,3148,1.939,3149,3.203,3150,3.203,3151,4.094,3152,1.939,3153,3.203,3154,1.939,3155,1.939,3156,1.939,3157,1.939,3158,3.203,3159,3.203,3160,1.939,3161,1.939,3162,1.939,3163,1.939,3164,1.939,3165,1.939,3166,1.939,3167,1.939,3168,4.754,3169,1.939,3170,3.203,3171,1.939,3172,1.702,3173,1.547,3174,1.939,3175,3.203,3176,1.939,3177,1.939,3178,4.754,3179,1.939,3180,1.939,3181,6.504,3182,1.939,3183,1.702,3184,2.813,3185,3.203,3186,1.939,3187,1.939,3188,4.094,3189,1.939,3190,5.264,3191,4.094,3192,4.094,3193,5.264,3194,1.939,3195,1.939,3196,1.939,3197,1.43,3198,1.939,3199,1.939,3200,1.43,3201,1.939,3202,1.939,3203,1.939,3204,3.203,3205,4.754,3206,4.754,3207,1.939,3208,5.669,3209,1.702,3210,1.43,3211,1.702,3212,1.939,3213,1.939,3214,3.203,3215,1.939,3216,3.203,3217,1.939,3218,1.939,3219,1.939,3220,3.203,3221,2.813,3222,1.939,3223,1.939,3224,1.939,3225,1.939,3226,1.939,3227,1.939,3228,1.939,3229,1.939,3230,1.939,3231,4.754,3232,1.939,3233,1.43,3234,1.939,3235,4.754,3236,3.203,3237,4.094,3238,4.754,3239,1.939,3240,1.939,3241,1.939,3242,1.939,3243,1.939,3244,1.939,3245,1.939,3246,1.939,3247,1.939,3248,1.939,3249,3.203,3250,4.094,3251,3.203,3252,1.939,3253,3.203,3254,1.939,3255,1.939,3256,1.939,3257,1.939,3258,1.939,3259,1.939,3260,4.094,3261,1.702,3262,1.939,3263,1.939,3264,1.939,3265,1.939,3266,1.26,3267,4.754,3268,1.939,3269,1.939,3270,3.203,3271,1.702,3272,1.939,3273,1.939,3274,1.939,3275,1.939,3276,1.939,3277,1.939,3278,1.939,3279,1.939,3280,1.939,3281,1.939,3282,1.939,3283,1.939,3284,1.939,3285,1.939,3286,1.939,3287,1.939,3288,1.939,3289,3.203,3290,1.939,3291,1.939,3292,1.939,3293,3.203,3294,3.203,3295,4.754,3296,5.264,3297,1.702,3298,1.43,3299,1.939,3300,1.702,3301,1.702,3302,2.813,3303,1.939,3304,1.939,3305,1.939,3306,1.939,3307,1.939,3308,1.939,3309,1.939,3310,1.939,3311,1.939,3312,1.939,3313,4.094,3314,3.203,3315,1.939,3316,1.939,3317,1.939,3318,1.939,3319,3.203,3320,1.939,3321,1.939,3322,1.939,3323,4.754,3324,1.939,3325,1.939,3326,1.939,3327,3.203,3328,1.939,3329,1.939,3330,1.939,3331,1.939,3332,1.939,3333,1.939,3334,1.939,3335,1.939,3336,1.547,3337,1.939,3338,1.939,3339,1.939,3340,1.939,3341,3.203,3342,1.939,3343,1.939,3344,1.939,3345,1.939,3346,1.939,3347,1.939,3348,1.939,3349,1.939,3350,1.939,3351,1.939,3352,3.203,3353,3.203,3354,3.203,3355,1.939,3356,1.939,3357,3.203,3358,1.939,3359,1.939,3360,1.939,3361,1.939,3362,1.939,3363,1.939,3364,1.939,3365,1.939,3366,1.43,3367,1.939,3368,1.939,3369,1.939,3370,1.939,3371,1.939,3372,1.939,3373,1.939,3374,1.939,3375,1.939,3376,1.939,3377,1.939,3378,1.939,3379,1.939,3380,1.939,3381,3.203,3382,3.203,3383,1.939,3384,1.939,3385,1.702,3386,1.939,3387,1.939]],["title/components/FormActionBarComponent.html",[182,0.264,718,1.141]],["body/components/FormActionBarComponent.html",[0,0.014,3,0.118,4,0.141,5,0.105,9,0.152,13,0.703,15,4.444,16,2.765,19,0.757,22,0.681,24,0.646,25,0.011,26,0.588,27,0.287,28,0.382,29,1.148,32,1.37,33,1.099,35,1.012,36,0.95,37,1.005,42,1.04,44,1.431,45,2.275,46,2.765,48,1.333,49,0.615,57,0.954,58,0.627,60,0.327,71,0.225,74,3.53,75,3.207,76,0.118,80,0.005,81,0.007,82,0.005,87,2.579,99,2.153,105,0.339,106,0.834,108,1.292,110,0.473,116,0.68,117,1.493,124,1.57,144,1.162,172,1.097,174,1.255,182,0.396,187,1.511,218,0.685,241,0.665,366,1.664,380,1.712,418,1.61,419,2.249,437,1.478,448,1.012,471,1.04,497,1.099,573,1.012,577,2.476,612,1.448,654,1.069,655,1.069,656,1.13,657,1.195,660,0.932,661,1.486,663,1.409,665,1.162,677,1.099,678,1.488,679,2.07,680,1.195,681,1.195,682,0.984,683,1.195,684,1.069,685,0.882,686,1.195,687,1.04,688,1.195,689,1.04,690,1.195,691,1.069,692,1.195,693,1.069,694,1.195,695,1.069,696,1.195,697,1.069,698,1.13,699,1.195,700,1.04,701,1.664,702,1.069,703,1.13,704,1.195,705,1.069,706,1.195,707,1.069,708,1.195,709,1.04,710,1.195,711,1.195,712,1.04,713,1.195,714,1.069,715,1.195,716,1.04,717,1.195,718,1.852,719,1.915,720,1.069,721,1.012,722,1.012,723,1.664,724,1.069,725,1.162,726,1.195,727,1.04,728,1.195,729,1.069,730,1.195,731,1.069,732,1.195,733,1.012,734,1.195,735,1.069,736,1.195,737,1.099,738,1.162,739,1.195,740,1.04,741,0.984,742,1.195,743,1.069,744,1.195,745,1.012,746,1.195,747,1.04,748,1.13,749,1.069,750,1.195,751,1.099,752,1.195,753,1.069,754,1.195,755,1.04,756,1.195,757,1.069,758,1.13,759,1.04,760,1.04,761,1.162,762,0.906,763,1.04,764,1.195,765,1.04,766,1.195,767,1.04,768,1.195,769,1.04,770,1.195,771,1.04,772,1.195,773,1.04,774,1.195,775,1.04,776,1.195,777,1.04,778,1.13,779,1.195,783,1.98,784,1.98,791,1.448,792,1.904,794,2.755,795,2.755,819,2.567,930,1.559,1158,1.511,1257,4.916,1259,2.171,1260,5.139,1269,4.916,1274,3.53,1543,1.719,1544,2.394,1545,1.719,1546,2.394,1547,2.394,1548,2.394,1549,1.719,1550,1.719,1551,2.394,1552,2.394,1553,1.719,1554,1.719,1555,1.719,1556,1.719,1557,1.719,1558,2.394,1559,2.316,1560,1.719,1561,2.394,1562,2.394,1563,1.719,1564,2.394,1565,1.719,1566,1.719,1567,1.719,1568,1.719,1569,2.979,1570,1.719,1571,1.719,1572,1.719,1573,1.719,1574,1.719,1575,1.719,1576,1.719,1577,1.719,1578,1.719,1579,1.719,1580,1.719,1581,1.719,1582,1.719,1583,1.719,1584,1.719,1585,1.719,1586,2.394,1587,1.719,1588,1.719,1589,1.719,1590,1.719,1591,1.719,1592,1.719,1593,1.719,1594,1.719,1595,1.719,1596,1.719,1597,1.719,1598,1.719,1599,1.719,1600,2.394,1601,1.719,1602,1.719,1603,1.719,1604,1.719,1605,1.719,1606,1.422,1607,1.719,1608,1.719,1609,1.719,1610,1.719,1611,1.719,1612,1.719,1613,1.719,1614,1.719,1880,4.444,1882,5.053,1929,4.444,1934,3.207,2670,3.207,3054,2.774,3209,3.53,3233,2.966,3388,6.511,3389,6.022,3390,2.966,3391,4.466,3392,4.466,3393,6.442,3394,4.916,3395,4.02,3396,4.02,3397,4.02,3398,4.02,3399,3.53,3400,3.53,3401,3.53,3402,3.207,3403,4.02,3404,4.02,3405,4.02,3406,3.207,3407,4.02,3408,4.02,3409,3.53,3410,4.02,3411,4.02]],["title/components/FormSubmitBarComponent.html",[182,0.264,720,1.141]],["body/components/FormSubmitBarComponent.html",[0,0.014,2,2.199,3,0.115,4,0.137,5,0.103,9,0.148,13,0.69,15,4.379,16,2.713,19,0.746,22,0.666,25,0.011,26,0.536,27,0.298,29,1.123,32,1.345,35,1.002,36,0.94,37,1.074,44,1.516,45,1.012,46,2.713,48,1.308,49,0.429,57,1.28,58,0.61,60,0.321,71,0.192,76,0.115,80,0.005,81,0.007,82,0.005,87,2.541,105,0.33,106,0.812,108,1.172,116,0.667,117,1.471,124,1.552,144,1.14,159,0.858,172,0.935,174,1.244,178,1.942,182,0.446,218,0.666,241,0.647,277,2.064,302,1.679,341,2.272,366,1.632,373,2.612,380,1.679,437,1.476,448,0.984,471,2.261,497,1.069,499,3.57,506,4.749,573,0.984,578,3.073,612,1.421,654,1.04,655,1.04,656,1.099,657,1.163,660,0.906,661,1.484,663,1.382,665,1.14,677,1.069,678,1.46,679,2.046,680,1.163,681,1.163,682,0.958,683,1.163,684,1.04,685,0.858,686,1.163,687,1.012,688,1.163,689,1.012,690,1.163,691,1.04,692,1.163,693,1.04,694,1.163,695,1.04,696,1.163,697,1.04,698,1.099,699,1.163,700,1.012,701,1.632,702,1.04,703,1.099,704,1.163,705,1.04,706,1.163,707,1.04,708,1.163,709,1.012,710,1.163,711,1.163,712,1.012,713,1.163,714,1.04,715,1.163,716,1.012,717,1.163,718,1.04,719,1.887,720,1.83,721,0.984,722,1.597,723,1.632,724,1.04,725,1.13,726,1.163,727,1.012,728,1.163,729,1.04,730,1.163,731,1.04,732,1.163,733,0.984,734,1.163,735,1.04,736,1.163,737,1.069,738,1.13,739,1.163,740,1.012,741,0.958,742,1.163,743,1.04,744,1.163,745,0.984,746,1.163,747,1.012,748,1.099,749,1.04,750,1.163,751,1.069,752,1.163,753,1.04,754,1.163,755,1.012,756,1.163,757,1.04,758,1.099,759,1.012,760,1.012,761,1.13,762,0.882,763,1.012,764,1.163,765,1.012,766,1.163,767,1.012,768,1.163,769,1.012,770,1.163,771,1.012,772,1.163,773,1.012,774,1.163,775,1.012,776,1.163,777,1.012,778,1.099,779,1.163,783,1.942,784,1.942,791,1.421,792,1.881,794,2.715,795,2.715,819,2.518,880,2.822,890,2.431,930,2.13,1004,3.383,1118,4.382,1259,2.13,1260,5.064,1543,1.673,1544,2.349,1545,1.673,1546,2.349,1547,2.349,1548,2.349,1549,1.673,1550,1.673,1551,2.349,1552,2.349,1553,1.673,1554,1.673,1555,1.673,1556,1.673,1557,1.673,1558,2.349,1559,2.272,1560,1.673,1561,2.349,1562,2.349,1563,1.673,1564,2.349,1565,1.673,1566,1.673,1567,1.673,1568,1.673,1569,2.944,1570,1.673,1571,1.673,1572,1.673,1573,1.673,1574,1.673,1575,1.673,1576,1.673,1577,1.673,1578,1.673,1579,1.673,1580,1.673,1581,1.673,1582,1.673,1583,1.673,1584,1.673,1585,1.673,1586,2.349,1587,1.673,1588,1.673,1589,1.673,1590,1.673,1591,1.673,1592,1.673,1593,1.673,1594,1.673,1595,1.673,1596,1.673,1597,1.673,1598,1.673,1599,1.673,1600,2.349,1601,1.673,1602,1.673,1603,1.673,1604,1.673,1605,1.673,1606,1.383,1607,1.673,1608,1.673,1609,1.673,1610,1.673,1611,1.673,1612,1.673,1613,1.673,1614,1.673,1880,4.379,1882,5.002,1929,4.379,1985,3.789,2609,3.219,2842,3.57,3030,4.052,3388,6.39,3389,5.91,3390,2.886,3391,4.382,3392,4.382,3394,3.435,3399,3.435,3412,6.883,3413,4.382,3414,5.493,3415,5.493,3416,5.493,3417,4.823,3418,6.348,3419,5.493,3420,3.912,3421,3.912,3422,4.823,3423,5.491,3424,6.883,3425,5.493,3426,5.493,3427,4.382,3428,5.493,3429,3.912,3430,3.912]],["title/components/FullNameComponent.html",[182,0.264,721,1.08]],["body/components/FullNameComponent.html",[0,0.012,3,0.098,4,0.116,5,0.092,7,1.437,9,0.125,10,0.535,11,2.108,13,0.612,19,0.68,22,0.72,24,0.929,25,0.011,26,0.7,27,0.317,28,0.549,29,0.909,32,1.193,33,1.332,35,1.096,36,1.068,37,0.76,42,1.95,44,0.879,45,0.857,48,1.161,49,0.7,57,0.83,58,1.176,60,0.497,71,0.238,76,0.17,80,0.004,81,0.006,82,0.004,84,1.069,87,1.326,93,1.208,104,1.519,105,0.28,106,0.688,108,0.83,116,0.592,117,1.34,118,2.173,120,2.045,121,2.108,122,1.353,123,1.89,124,1.437,125,2.157,126,2.157,130,1.693,132,1.89,138,1.104,139,1.37,140,1.245,141,1.137,142,1.208,143,1.326,144,1.2,146,1.832,148,2.125,149,1.832,159,0.727,166,2.157,172,0.564,174,1.216,180,1.519,182,0.418,189,1.466,191,1.172,193,2.333,208,2.822,218,0.564,241,0.548,301,3.596,302,1.49,304,1.625,322,1.774,366,1.449,376,1.724,378,1.332,379,1.533,380,1.49,437,1.461,448,1.455,471,0.857,497,0.906,532,3.15,572,2.408,573,0.834,612,1.261,654,0.881,655,0.881,656,0.931,657,0.985,660,0.768,661,1.471,663,1.226,665,1.012,677,0.906,678,1.296,679,1.895,680,0.985,681,0.985,682,0.811,683,0.985,684,0.881,685,0.727,686,0.985,687,0.857,688,0.985,689,0.857,690,0.985,691,0.881,692,0.985,693,0.881,694,0.985,695,0.881,696,0.985,697,0.881,698,0.931,699,0.985,700,0.857,701,1.449,702,0.881,703,0.931,704,0.985,705,0.881,706,0.985,707,0.881,708,0.985,709,0.857,710,0.985,711,0.985,712,0.857,713,0.985,714,0.881,715,0.985,716,0.857,717,0.985,718,0.881,719,1.719,720,0.881,721,1.897,722,1.849,723,1.449,724,0.881,725,0.957,726,0.985,727,0.857,728,0.985,729,0.881,730,0.985,731,0.881,732,0.985,733,0.834,734,0.985,735,0.881,736,0.985,737,0.906,738,0.957,739,0.985,740,0.857,741,0.811,742,0.985,743,0.881,744,0.985,745,0.834,746,0.985,747,0.857,748,0.931,749,0.881,750,0.985,751,0.906,752,0.985,753,0.881,754,0.985,755,0.857,756,0.985,757,0.881,758,0.931,759,0.857,760,0.857,761,0.957,762,0.747,763,0.857,764,0.985,765,0.857,766,0.985,767,0.857,768,0.985,769,0.857,770,0.985,771,0.857,772,0.985,773,0.857,774,0.985,775,0.857,776,0.985,777,0.857,778,0.931,779,0.985,780,0.403,791,1.261,792,1.581,794,2.473,795,1.417,796,2.971,797,1.245,869,0.957,890,2.157,1027,2.856,1089,2.154,1093,2.444,1259,1.89,1283,2.235,1290,3.989,1368,3.363,1441,3.363,1530,2.856,1875,2.444,2842,3.168,2907,4.377,3014,3.363,3431,6.802,3432,6.291,3433,2.643,3434,4.705,3435,5.087,3436,3.889,3437,3.889,3438,3.889,3439,3.989,3440,4.613,3441,4.613,3442,4.613,3443,5.078,3444,5.014,3445,4.266,3446,6.451,3447,6.451,3448,6.451,3449,5.078,3450,4.874,3451,3.313,3452,3.313,3453,3.313,3454,3.313,3455,3.313,3456,3.313,3457,3.313,3458,3.313,3459,3.313,3460,3.313,3461,3.313,3462,3.313,3463,4.266,3464,3.313,3465,3.313,3466,3.313,3467,3.313,3468,3.737,3469,3.596,3470,3.313,3471,3.889,3472,3.363,3473,4.28,3474,4.28,3475,4.28,3476,4.28,3477,3.596,3478,3.313,3479,3.313,3480,2.909,3481,4.28,3482,2.643,3483,5.078,3484,2.643,3485,5.078,3486,2.643,3487,5.078,3488,2.444,3489,2.444,3490,2.909,3491,2.909,3492,2.909,3493,2.909,3494,2.909,3495,2.909,3496,5.078,3497,5.078,3498,2.909,3499,2.909,3500,6.24,3501,7.107]],["title/interfaces/FullNameErrorMsg.html",[780,0.521,3463,3.166]],["body/interfaces/FullNameErrorMsg.html",[0,0.018,3,0.146,4,0.174,5,0.093,7,1.455,9,0.188,10,0.709,11,1.81,19,0.584,25,0.011,26,0.665,27,0.244,28,0.721,29,0.92,33,1.357,35,0.686,36,0.985,37,0.775,42,2.153,58,1.184,60,0.51,71,0.275,76,0.211,80,0.006,81,0.008,82,0.006,84,1.089,87,1.988,104,2.277,105,0.419,106,1.031,108,0.846,116,0.604,117,1.496,118,2.426,120,1.756,121,1.81,122,1.256,124,1.12,130,1.537,146,1.867,148,2.151,149,1.867,166,2.198,174,1.359,180,2.277,182,0.441,189,2.198,191,1.756,193,2.701,208,2.857,241,0.822,301,3.664,302,1.518,304,1.655,322,2.66,366,1.476,376,1.756,378,1.357,379,1.562,380,1.518,437,0.822,448,1.25,532,3.188,572,2.453,661,0.822,663,1.25,665,1.031,721,1.804,722,1.804,780,0.604,782,1.608,791,1.669,792,1.764,794,2.761,795,2.124,796,3.317,797,1.867,869,1.435,890,2.198,1027,2.91,1089,3.228,1093,3.664,1283,2.277,1290,3.426,1368,3.426,1441,3.426,1530,2.91,1875,3.664,2842,3.228,2907,4.416,3014,3.426,3431,3.962,3432,3.664,3433,3.962,3434,4.762,3435,5.149,3436,3.962,3437,3.962,3438,3.962,3439,3.426,3440,3.962,3441,3.962,3442,3.962,3443,4.361,3444,5.951,3445,3.664,3446,4.361,3447,4.361,3448,4.361,3449,4.361,3463,5.291,3468,3.782,3469,3.664,3471,3.962,3472,3.426,3473,4.361,3474,4.361,3475,4.361,3476,4.361,3477,3.664,3480,4.361,3481,5.668,3482,3.962,3483,6.297,3484,3.962,3485,6.297,3486,3.962,3487,6.297,3488,3.664,3489,3.664,3490,4.361,3491,4.361,3492,4.361,3493,4.361,3494,4.361,3495,4.361,3496,6.297,3497,6.297,3498,4.361,3499,4.361]],["title/interfaces/GeoAddressResult.html",[780,0.521,798,2.298]],["body/interfaces/GeoAddressResult.html",[0,0.019,3,0.154,4,0.183,5,0.099,9,0.198,10,0.734,14,1.747,17,2.447,25,0.011,27,0.302,60,0.517,62,3.071,71,0.286,76,0.197,77,3.071,80,0.006,81,0.008,82,0.006,84,1.149,105,0.442,108,0.892,110,0.941,172,1.319,203,1.416,217,1.969,241,1.105,243,3.738,245,3.204,247,2.931,248,2.241,249,3.406,259,3.915,261,5.075,268,4.93,278,3.433,279,3.227,280,4.343,284,3.406,303,1.425,318,2.931,319,2.167,322,2.806,327,3.227,359,2.102,373,2.492,572,3.3,575,4.158,576,4.004,577,3.227,578,2.931,597,2.167,685,1.149,780,0.637,782,1.696,789,4.402,798,3.94,802,3.78,820,2.806,841,4.552,913,3.227,930,2.032,1092,3.615,1096,3.071,1105,3.94,1134,3.406,1203,2.692,1205,4.18,1209,4.18,1210,5.868,1211,5.33,1212,4.18,1213,2.931,1214,4.18,1215,3.227,1216,4.18,1218,4.18,1431,2.692,1432,2.692,1678,2.492,1741,3.866,1756,4.18,3054,3.615,3502,4.18,3503,7.027,3504,4.18,3505,3.227,3506,4.601,3507,4.601,3508,4.601,3509,4.601,3510,4.601,3511,4.601,3512,4.601,3513,4.601,3514,4.601,3515,4.601,3516,4.601,3517,4.601,3518,4.601,3519,4.601,3520,4.601,3521,4.601,3522,4.601,3523,4.601,3524,4.601,3525,4.601,3526,4.601,3527,5.867,3528,4.601,3529,4.601,3530,4.601,3531,4.601,3532,4.601,3533,4.601,3534,4.601]],["title/components/GeocoderInputComponent.html",[182,0.264,724,1.141]],["body/components/GeocoderInputComponent.html",[0,0.01,3,0.082,4,0.097,5,0.08,7,1.313,9,0.105,10,0.467,12,2.936,13,0.534,19,0.325,22,0.719,24,1.222,25,0.011,26,0.667,27,0.315,28,0.733,29,1.126,32,1.042,35,1.066,36,1.025,37,1.186,43,2.279,44,0.768,45,0.716,48,1.014,49,0.835,52,2.175,56,1.704,57,0.725,58,1.264,60,0.474,71,0.262,76,0.082,80,0.006,81,0.005,82,0.009,84,0.933,88,1.183,93,1.008,105,0.234,106,0.574,108,0.725,110,0.61,116,0.517,117,1.202,118,1.949,120,1.834,121,1.89,122,1.385,123,1.65,124,1.313,125,2.295,126,2.295,130,1.7,132,2.011,134,1.868,138,0.922,139,1.144,140,1.04,141,0.95,142,1.008,143,1.108,144,1.076,146,1.04,148,2.212,149,1.04,152,2.688,155,2.024,156,1.82,160,1.339,166,1.225,172,0.992,174,1.181,182,0.358,187,1.04,189,1.884,191,0.978,192,1.704,193,1.461,203,0.992,218,0.471,220,1.422,241,1.181,245,2.746,247,1.548,271,3.586,278,3.23,288,1.225,302,0.846,303,0.59,304,1.419,315,1.704,319,1.144,320,2.207,321,2.429,322,1.482,332,1.269,336,2.378,338,2.766,345,0.896,354,2.378,357,3.371,373,1.316,378,1.418,401,1.548,413,1.378,437,1.443,441,1.101,448,0.696,471,0.716,497,0.756,510,2.494,533,1.884,560,2.936,571,3.105,573,0.696,575,1.367,576,1.316,580,1.909,587,3.194,593,1.548,601,2.621,602,2.207,606,2.936,612,1.101,654,0.736,655,0.736,656,0.778,657,0.822,660,0.641,661,1.456,663,1.071,665,0.883,677,0.756,678,1.132,679,1.731,680,0.822,681,0.822,682,0.677,683,0.822,684,0.736,685,1.733,686,0.822,687,0.716,688,0.822,689,0.716,690,0.822,691,0.736,692,0.822,693,0.736,694,0.822,695,0.736,696,0.822,697,0.736,698,0.778,699,0.822,700,0.716,701,1.265,702,0.736,703,0.778,704,0.822,705,0.736,706,0.822,707,0.736,708,0.822,709,0.716,710,0.822,711,0.822,712,0.716,713,0.822,714,0.736,715,0.822,716,0.716,717,0.822,718,0.736,719,1.542,720,0.736,721,0.696,722,0.696,723,1.265,724,1.548,725,2.283,726,0.822,727,0.716,728,0.822,729,0.736,730,0.822,731,0.736,732,0.822,733,0.696,734,0.822,735,0.736,736,0.822,737,0.756,738,0.8,739,0.822,740,0.716,741,0.677,742,0.822,743,0.736,744,0.822,745,0.696,746,0.822,747,0.716,748,0.778,749,0.736,750,0.822,751,0.756,752,0.822,753,0.736,754,0.822,755,0.716,756,0.822,757,0.736,758,0.778,759,1.341,760,0.716,761,0.8,762,0.624,763,0.716,764,0.822,765,0.716,766,0.822,767,0.716,768,0.822,769,0.716,770,0.822,771,0.716,772,0.822,773,0.716,774,0.822,775,0.716,776,0.822,777,0.716,778,0.778,779,0.822,791,1.506,792,1.89,793,1.482,797,1.04,798,2.279,799,2.041,800,1.909,802,2.665,804,1.909,806,2.766,808,2.041,815,1.316,835,2.681,837,3.578,841,1.482,849,1.798,869,0.8,894,1.621,930,1.65,935,1.621,959,3.194,962,2.769,973,2.102,974,2.936,979,2.041,1063,3.039,1084,2.429,1085,3.737,1089,3.785,1090,1.909,1091,5.015,1093,2.041,1094,3.737,1095,2.429,1097,5.113,1098,1.422,1099,2.207,1103,2.429,1104,2.429,1105,1.482,1110,3.517,1111,3.14,1112,3.395,1113,2.381,1114,4.554,1115,2.381,1116,4.554,1117,4.554,1118,4.138,1119,3.737,1120,3.737,1121,4.554,1122,4.646,1123,5.52,1124,3.395,1125,3.737,1126,4.554,1127,2.429,1128,2.989,1129,3.578,1130,1.316,1131,2.429,1132,2.429,1133,2.429,1134,2.766,1135,2.429,1137,2.429,1138,2.429,1139,3.737,1140,3.737,1141,2.429,1142,2.429,1143,2.429,1144,2.207,1145,3.737,1146,4.554,1147,2.429,1148,2.429,1149,4.554,1150,2.207,1151,3.737,1153,2.429,1154,2.429,1155,2.429,1156,3.737,1157,4.554,1158,2.189,1159,2.429,1160,1.909,1161,2.207,1162,1.621,1163,2.429,1164,3.737,1166,2.429,1168,2.429,1169,2.429,1170,2.429,1173,2.207,1174,1.909,1175,3.737,1176,2.429,1180,2.429,1181,2.429,1182,3.737,1183,3.827,1184,2.766,1185,2.429,1186,2.207,1187,2.429,1188,2.041,1189,2.207,1190,2.429,1191,2.429,1192,2.207,1193,3.737,1194,1.909,1195,1.548,1196,2.041,1197,2.207,1198,2.429,1199,2.766,1200,2.429,1201,3.737,1202,2.429,1203,1.422,1204,2.429,1259,1.65,1462,1.548,1490,1.548,1507,2.494,2555,1.798,2880,2.429,3505,4.395,3535,7.471,3536,6.788,3537,2.429,3538,4.256,3539,4.256,3540,4.256,3541,4.256,3542,4.256,3543,4.256,3544,2.767,3545,2.767,3546,2.767,3547,2.767,3548,2.767,3549,2.767,3550,2.767,3551,2.767,3552,2.767,3553,2.767,3554,2.767,3555,2.767,3556,2.767,3557,2.767,3558,2.767,3559,2.767,3560,2.767,3561,2.767,3562,2.767,3563,2.767,3564,2.767,3565,2.767,3566,2.767,3567,2.767,3568,2.767,3569,2.767,3570,2.767,3571,2.767,3572,2.767,3573,5.823,3574,4.256]],["title/injectables/GeocoderService.html",[359,1.35,3505,2.643]],["body/injectables/GeocoderService.html",[0,0.015,3,0.123,4,0.146,5,0.078,9,0.158,10,0.63,13,0.824,14,2.473,17,2.712,19,0.49,22,0.72,24,1.345,25,0.011,26,0.686,27,0.321,28,0.772,29,0.594,35,0.977,36,0.917,37,0.65,49,0.892,60,0.489,61,3.96,62,2.442,69,3.07,70,1.982,71,0.268,76,0.169,77,2.442,80,0.005,81,0.007,82,0.005,84,1.259,93,2.918,105,0.352,108,0.71,110,0.872,159,1.44,172,1.384,203,1.338,217,1.566,223,3.075,234,2.709,241,1.086,243,4.645,245,2.926,247,3.673,248,1.782,249,4.823,250,5.04,251,5.238,252,5.219,253,4.529,254,5.04,255,4.579,258,3.659,259,4.145,261,5.29,263,4.235,264,3.325,265,3.659,267,3.659,268,5.219,270,4.043,271,3.535,272,4.579,273,1.668,274,2.709,275,3.659,276,3.325,277,1.566,278,4.174,279,4.043,280,4.985,282,3.325,283,3.659,284,4.268,285,2.709,286,3.659,287,3.075,288,1.844,289,3.659,290,3.659,291,3.659,292,4.235,294,3.659,296,3.659,297,5.765,298,3.364,300,3.659,301,3.075,302,1.274,303,1.509,304,1.389,305,3.659,306,2.54,307,5.04,308,1.858,309,3.659,310,3.659,311,2.875,312,3.325,318,2.331,319,1.724,322,2.232,327,2.567,359,1.806,361,2.141,373,1.982,572,2.058,575,3.494,576,3.364,577,2.567,578,3.211,587,3.535,597,2.374,685,1.259,780,0.506,789,3.94,798,3.516,802,3.374,820,3.074,841,3.973,913,2.567,930,2.226,1092,2.875,1096,2.442,1105,3.973,1134,2.709,1203,2.141,1205,4.579,1209,4.579,1210,6.268,1211,5.238,1212,4.579,1213,3.211,1214,4.579,1215,3.535,1216,4.579,1218,3.325,1431,2.141,1432,2.141,1678,1.982,1741,3.075,1756,3.325,3054,2.875,3502,3.325,3503,5.04,3504,3.325,3505,3.535,3506,5.765,3507,5.04,3508,5.04,3509,3.659,3510,3.659,3511,3.659,3512,3.659,3513,3.659,3514,3.659,3515,3.659,3516,3.659,3517,3.659,3518,3.659,3519,3.659,3520,3.659,3521,3.659,3522,3.659,3523,3.659,3524,3.659,3525,3.659,3526,3.659,3527,5.04,3528,3.659,3529,3.659,3530,3.659,3531,3.659,3532,3.659,3533,3.659,3534,3.659,3575,5.74,3576,5.74,3577,4.168,3578,4.168,3579,4.168,3580,4.168,3581,4.168,3582,4.168,3583,4.168,3584,4.168,3585,4.168,3586,4.168,3587,4.168,3588,4.168,3589,4.168]],["title/components/HeaderComponent.html",[182,0.264,727,1.11]],["body/components/HeaderComponent.html",[0,0.015,3,0.121,4,0.144,5,0.107,9,0.155,10,0.624,13,0.714,19,0.483,20,2.298,21,3.771,22,0.705,24,0.913,25,0.011,26,0.623,27,0.302,28,0.54,29,1.002,32,1.391,35,1.055,36,0.99,37,0.887,44,1.025,45,1.063,48,1.354,49,0.772,57,0.968,58,0.887,60,0.495,68,3.18,69,1.645,71,0.228,72,1.757,76,0.121,80,0.005,81,0.007,82,0.005,105,0.347,110,0.766,116,0.691,117,1.51,122,1.078,124,1.585,130,1.818,144,1.179,159,0.901,172,0.7,174,1.263,182,0.401,218,0.7,306,1.818,308,1.84,322,2.2,341,1.699,437,1.48,448,1.034,471,1.063,480,4.099,482,5.188,483,4.991,484,4.991,497,1.123,530,2.671,556,3.33,573,1.034,612,1.975,654,1.092,655,1.092,656,1.155,657,1.221,660,0.952,661,1.487,663,1.43,665,1.179,677,1.123,678,1.511,679,2.09,680,1.221,681,1.221,682,1.006,683,1.221,684,1.092,685,0.901,686,1.221,687,1.063,688,1.221,689,1.063,690,1.221,691,1.092,692,1.221,693,1.092,694,1.221,695,1.092,696,1.221,697,1.092,698,1.155,699,1.221,700,1.063,701,1.689,702,1.092,703,1.155,704,1.221,705,1.092,706,1.221,707,1.092,708,1.221,709,1.063,710,1.221,711,1.221,712,1.063,713,1.221,714,1.092,715,1.221,716,1.063,717,1.221,718,1.092,719,1.937,720,1.092,721,1.034,722,1.034,723,1.689,724,1.092,725,1.187,726,1.221,727,1.975,728,1.221,729,1.092,730,1.221,731,1.092,732,1.221,733,1.034,734,1.221,735,1.092,736,1.221,737,1.123,738,1.187,739,1.221,740,1.063,741,1.006,742,1.221,743,1.092,744,1.221,745,1.034,746,1.221,747,1.063,748,1.155,749,1.092,750,1.221,751,1.123,752,1.221,753,1.092,754,1.221,755,1.063,756,1.221,757,1.092,758,1.155,759,1.063,760,1.063,761,1.187,762,0.926,763,1.063,764,1.221,765,1.063,766,1.221,767,1.063,768,1.221,769,1.063,770,1.221,771,1.063,772,1.221,773,1.063,774,1.221,775,1.063,776,1.221,777,1.063,778,1.155,779,1.221,863,1.884,1184,2.671,1196,4.193,1239,2.807,1242,3.921,1250,2.408,1339,2.671,1396,1.41,1467,2.671,1780,4.534,1804,2.834,2581,4.534,2617,4.534,2669,2.671,3590,3.608,3591,5.684,3592,5.684,3593,6.174,3594,4.193,3595,4.534,3596,3.921,3597,7.031,3598,7.031,3599,5.684,3600,5.684,3601,5.684,3602,5.684,3603,5.684,3604,6.516,3605,6.516,3606,7.031,3607,5.684,3608,7.031,3609,6.516,3610,6.516,3611,7.382,3612,6.516,3613,6.516,3614,5.684,3615,5.684,3616,4.109,3617,5.684,3618,4.109,3619,4.109,3620,4.109,3621,4.109,3622,4.109,3623,4.109,3624,5.684,3625,4.109,3626,4.109,3627,4.109,3628,4.991,3629,3.608,3630,3.608,3631,3.608,3632,4.109,3633,4.109,3634,4.109,3635,4.109,3636,4.109,3637,4.109,3638,4.109,3639,5.684,3640,4.109,3641,4.109,3642,4.109,3643,4.109,3644,4.109,3645,4.109,3646,4.109]],["title/interfaces/IRadioItems.html",[780,0.521,3647,3.166]],["body/interfaces/IRadioItems.html",[0,0.018,3,0.152,4,0.181,5,0.097,9,0.195,10,0.726,19,0.607,25,0.011,27,0.291,28,0.628,33,1.411,35,0.914,36,1.132,37,0.805,42,1.711,44,1.317,58,1.139,60,0.465,70,2.454,71,0.27,76,0.215,80,0.006,81,0.008,82,0.006,84,1.132,105,0.436,106,1.071,108,0.879,110,0.607,114,3.147,116,0.627,117,1.533,119,2.764,122,0.854,124,1.163,133,2.83,134,2.557,146,1.94,148,2.205,149,1.94,152,2.83,156,2.83,159,1.132,166,2.284,173,2.652,174,1.348,178,2.34,182,0.407,191,1.825,193,2.271,195,1.671,199,4.31,241,0.854,277,1.94,303,1.101,378,1.411,418,3.189,437,0.854,441,1.711,523,1.967,655,1.372,661,0.854,663,1.299,665,1.071,745,1.838,780,0.627,782,1.671,791,1.711,792,1.996,835,2.832,861,3.147,869,1.491,935,3.877,1100,2.887,1101,3.4,1102,2.764,1128,3.147,1130,2.454,1236,4.565,1241,4.882,1284,5.827,1310,4.117,1500,3.024,1511,2.887,1728,4.565,2817,3.355,2951,4.117,3594,4.882,3647,5.876,3648,4.117,3649,6.863,3650,5.81,3651,5.279,3652,5.81,3653,6.413,3654,5.279,3655,5.81,3656,6.764,3657,5.81,3658,6.764,3659,5.81,3660,5.81,3661,6.413,3662,4.117,3663,4.532,3664,4.532,3665,4.532,3666,6.764,3667,4.117,3668,4.532,3669,4.532]],["title/interfaces/ISpaEnvResponse.html",[780,0.521,3670,3.423]],["body/interfaces/ISpaEnvResponse.html",[0,0.017,3,0.168,4,0.113,5,0.061,9,0.122,10,0.526,16,2.819,17,1.466,25,0.011,27,0.305,29,0.899,33,1.56,35,0.447,37,1.1,43,1.735,44,1.029,47,2.39,52,1.508,58,0.984,60,0.519,66,1.735,69,1.297,71,0.262,76,0.168,77,1.898,80,0.004,81,0.006,82,0.004,84,0.71,87,1.919,104,1.485,105,0.274,106,0.672,108,1.325,110,0.671,116,0.583,117,1.111,118,1.802,120,1.146,121,1.181,122,1.166,124,1.081,130,1.142,142,1.747,146,1.218,148,1.598,149,1.218,158,1.485,159,0.71,166,1.434,172,1.325,174,1.287,178,2.381,182,0.388,184,2.567,189,1.434,191,1.146,193,1.646,203,0.552,223,3.537,237,1.6,241,1.166,243,2.682,245,2.609,247,1.812,248,1.385,249,2.106,259,2.809,261,4.351,271,1.995,273,2.525,277,1.218,278,2.932,279,1.995,280,3.116,285,4.1,287,2.39,292,4.653,303,1.023,308,2.425,318,1.812,319,1.34,341,1.34,345,1.552,347,1.995,348,2.584,366,1.425,374,5.894,376,1.695,378,1.56,379,1.019,380,1.466,413,1.049,418,1.297,424,3.824,429,2.584,437,0.944,449,2.844,471,1.631,474,2.682,475,1.735,478,1.898,480,1.664,489,2.235,492,5.032,493,5.011,497,2.047,498,5.167,499,2.106,506,2.235,547,1.812,548,1.995,588,1.812,600,1.812,606,3.307,611,2.809,612,0.838,636,1.434,661,0.536,663,0.815,665,0.672,669,1.995,700,1.631,780,0.394,782,1.049,791,1.631,792,1.84,794,2.441,795,2.05,796,2.463,811,2.235,819,1.485,827,3.537,845,2.809,854,3.884,863,3.232,924,1.385,930,1.859,973,3.115,1040,3.937,1092,2.235,1096,2.809,1098,1.664,1105,3.606,1115,2.682,1134,2.106,1158,1.218,1162,2.809,1283,1.485,1334,2.39,1381,2.106,1411,3.307,1441,2.235,1626,1.898,1660,2.106,1678,1.54,1731,3.537,1741,2.39,1748,2.39,1749,2.809,1757,2.844,1794,3.344,1795,1.995,1796,4.209,1800,2.844,1803,4.209,1804,2.235,1805,2.844,1806,2.584,1807,2.844,1809,2.844,1810,4.209,1811,2.844,1813,2.844,1874,3.824,1905,5.032,1911,2.39,2095,4.209,2555,3.116,2585,3.378,2607,2.584,2669,3.116,2885,2.844,2927,2.584,2928,2.844,2957,2.844,2998,2.844,3006,2.844,3016,2.584,3018,4.209,3076,4.209,3077,3.537,3125,2.844,3184,2.844,3266,4.1,3366,3.537,3439,2.235,3596,3.307,3670,4.553,3671,2.844,3672,2.584,3673,2.39,3674,7.049,3675,6.19,3676,4.794,3677,5.912,3678,6.307,3679,6.307,3680,6.307,3681,6.307,3682,6.307,3683,6.307,3684,6.307,3685,6.307,3686,6.307,3687,6.307,3688,6.307,3689,6.307,3690,6.307,3691,3.537,3692,2.235,3693,3.239,3694,3.239,3695,3.239,3696,2.844,3697,3.239,3698,3.239,3699,3.239,3700,3.239,3701,3.239,3702,2.844,3703,3.239,3704,4.794,3705,4.794,3706,4.209,3707,6.307,3708,6.307,3709,4.794,3710,3.824,3711,4.794,3712,4.794,3713,5.912,3714,5.032,3715,4.794,3716,4.794,3717,4.209,3718,4.209,3719,3.537,3720,4.209,3721,4.794,3722,4.794,3723,4.794,3724,7.049,3725,4.794,3726,4.794,3727,4.794,3728,4.794,3729,4.794,3730,4.794,3731,4.794,3732,4.794,3733,4.794,3734,4.794,3735,4.794,3736,4.794,3737,4.794,3738,4.794,3739,4.209,3740,3.239,3741,3.239,3742,2.844,3743,3.239,3744,2.844,3745,2.584,3746,3.239,3747,2.584,3748,3.239,3749,4.794,3750,2.584,3751,3.239,3752,3.239,3753,3.239,3754,3.239,3755,3.239,3756,4.794,3757,3.239,3758,2.844,3759,2.844,3760,3.239,3761,3.239,3762,2.844,3763,3.239,3764,4.209,3765,2.844,3766,3.239,3767,3.239,3768,4.794,3769,4.794,3770,3.239,3771,3.239,3772,3.239,3773,5.707,3774,3.239,3775,3.239,3776,2.844,3777,3.239,3778,2.844,3779,3.239,3780,3.239,3781,3.239,3782,3.239,3783,2.584,3784,3.239,3785,3.239,3786,2.844,3787,3.239,3788,3.239,3789,3.239,3790,3.239,3791,3.239,3792,3.239,3793,3.239,3794,4.794,3795,3.239,3796,3.239,3797,3.239,3798,3.239,3799,3.239,3800,3.239,3801,3.239,3802,2.39,3803,3.239,3804,3.239,3805,3.239,3806,3.239,3807,3.239,3808,3.239,3809,3.239,3810,3.239,3811,3.239,3812,3.239,3813,3.239,3814,3.239,3815,6.307,3816,6.307,3817,3.239,3818,3.239,3819,3.239,3820,3.239,3821,3.239,3822,3.239,3823,3.239,3824,3.239,3825,3.239,3826,3.239,3827,3.239,3828,3.239,3829,3.239]],["title/guards/LoadPageGuardService.html",[363,2.4,377,2.96]],["body/guards/LoadPageGuardService.html",[0,0.016,3,0.132,4,0.157,5,0.084,9,0.169,13,0.915,14,2.27,16,3.598,19,0.526,20,2.502,21,3.869,22,0.615,24,1.171,25,0.011,26,0.615,27,0.275,28,0.692,29,1.116,44,1.314,49,0.748,52,1.895,57,1.459,60,0.398,65,2.917,71,0.255,72,1.913,76,0.132,80,0.005,81,0.007,82,0.005,105,0.378,108,0.762,110,0.856,116,0.544,124,1.358,130,1.735,158,2.051,159,0.981,181,2.864,184,2.395,185,3.915,188,4.805,198,4.194,203,1.026,248,3.526,277,2.264,278,3.907,308,2.205,319,1.85,341,2.491,359,1.895,360,5.842,362,3.086,364,4.195,365,3.095,366,1.79,370,4.155,377,5.749,378,1.646,379,2.464,380,2.227,390,4.805,441,1.884,475,4.195,476,3.225,538,5.812,541,3.086,597,2.491,860,2.912,861,3.238,862,4.59,880,3.095,1040,4.155,1239,2.975,1339,2.907,1387,4.155,1388,3.915,1396,1.535,1403,4.155,1411,4.155,1431,2.298,1432,2.298,1439,4.698,1447,5.026,1793,4.805,1794,3.529,1861,3.529,2749,4.443,2765,3.927,3011,4.698,3015,3.99,3131,5.842,3298,4.443,3830,6.677,3831,5.288,3832,5.288,3833,5.288,3834,6.877,3835,7.24,3836,7.24,3837,5.288,3838,4.805,3839,5.288,3840,5.288,3841,3.529,3842,5.288,3843,6.023,3844,6.023,3845,5.288,3846,3.927,3847,5.288,3848,4.473,3849,3.927,3850,3.927,3851,7.028,3852,7.028,3853,4.473,3854,5.979,3855,3.927,3856,4.473,3857,5.288,3858,3.927,3859,4.473]],["title/interfaces/Maxlengths.html",[780,0.521,809,2.789]],["body/interfaces/Maxlengths.html",[0,0.011,3,0.09,4,0.107,5,0.057,7,1.034,9,0.115,10,0.503,11,1.112,19,0.359,25,0.011,26,0.258,27,0.248,28,0.728,29,1.157,33,1.253,35,0.633,36,1.035,37,1.256,39,1.507,52,0.96,58,0.859,60,0.512,65,1.222,71,0.25,76,0.18,80,0.004,81,0.006,82,0.004,84,0.669,87,2.205,105,0.258,106,0.633,108,1.043,110,0.915,111,1.788,116,0.371,117,1.063,118,1.723,120,1.079,121,1.112,124,0.688,130,1.753,132,1.184,141,1.048,146,1.147,148,1.528,149,1.147,160,0.96,161,1.507,163,1.399,174,1.354,182,0.377,183,3.163,184,2.456,189,2.029,191,1.079,193,1.048,194,3.163,196,3.58,199,1.707,201,1.634,203,1.174,208,1.351,211,2.628,217,1.723,232,1.984,236,1.634,237,1.507,241,0.505,273,1.222,277,1.147,302,1.684,303,1.471,304,1.017,332,1.399,336,1.399,341,2.278,345,1.783,354,1.399,365,1.568,366,1.363,379,0.96,380,1.402,413,2.316,418,2.205,437,0.505,441,0.789,461,1.984,475,1.634,510,2.687,523,1.363,533,1.351,566,1.507,571,1.507,575,4.115,576,3.794,587,3.392,588,1.707,593,1.707,597,1.262,661,0.505,665,0.633,682,1.122,685,1.836,722,0.768,741,1.122,780,0.669,781,3.8,782,0.988,783,1.622,784,1.622,785,2.252,786,3.383,787,3.658,788,3.658,789,3.94,790,4.636,791,1.186,792,1.506,793,2.456,794,2.356,795,1.961,796,2.356,797,1.147,798,2.456,799,2.252,800,2.105,801,3.58,802,3.147,803,3.163,804,2.105,805,3.981,806,3.58,807,3.163,808,2.252,809,4.267,810,4.529,811,2.105,812,2.252,813,2.435,814,2.435,815,1.451,816,1.788,817,1.88,818,1.634,819,1.399,820,2.456,821,3.658,822,2.565,823,2.105,824,2.435,825,2.435,826,2.252,827,2.252,828,2.252,829,2.435,830,2.435,831,2.435,832,2.105,833,2.435,834,2.435,835,2.546,836,5.706,837,2.105,838,2.105,839,2.252,840,2.252,841,2.456,842,2.435,843,2.252,844,2.435,845,4.041,846,2.252,847,2.435,848,2.252,849,1.984,850,3.658,851,2.435,852,2.435,853,3.658,854,2.824,855,2.435,856,2.435,857,2.435,858,2.435,859,2.435,860,2.356,861,2.619,862,1.788,863,3.01,864,2.435,865,2.435,866,2.435,867,4.225,868,1.88,869,0.882,870,3.383,871,2.435,872,2.435,873,3.658,874,6.117,875,3.658,876,2.565,877,3.658,878,6.117,879,4.394,880,1.568,881,2.252,882,1.984,883,2.435,884,2.435,885,2.435,886,2.435,887,2.435,888,2.435,889,4.886,890,1.351,891,2.435,892,2.435,893,3.658,894,2.687,895,1.788,896,4.394,897,5.501,898,5.706,899,5.501,900,2.435,901,2.435,902,4.394,903,2.435,904,4.394,905,2.687,906,2.435,907,2.252,908,2.435,909,2.435,910,1.788,911,2.435,912,2.435,913,3.392,914,2.435,915,2.435,916,2.435,917,3.383,918,2.981,919,3.658,920,3.658,921,3.658,922,3.658,923,2.435,924,1.305,925,2.435,926,2.435,927,3.8,928,2.105,929,2.435,930,1.184,931,2.435,932,2.435,933,2.435,934,2.105,935,1.788,936,2.435,937,2.435,938,2.435,939,2.105,940,2.435,941,4.886,942,2.435,943,2.435,944,2.435,945,2.435,946,2.435,947,4.064,948,2.105,949,2.435,950,4.518,951,3.658,952,3.383,953,3.658,954,4.394,955,2.252,956,2.435,957,2.435,958,2.252,959,1.88,960,1.788,961,1.788,962,1.451,963,2.435,964,2.435,965,2.435,966,3.383,967,2.435,968,2.435,969,2.252,970,2.435,971,2.435,972,2.435,973,1.507,974,2.105,975,2.435,976,1.88,977,2.435,978,2.435,979,2.252,980,2.252,981,2.252,982,2.435,983,3.658,984,3.658,985,3.658,986,2.435,987,2.435,988,2.435,989,2.435,990,2.435,991,2.435,992,2.435,993,2.435,994,2.435,995,2.435,996,2.435,997,2.435,998,2.435,999,3.658,1000,2.435,1001,2.435]],["title/classes/MoHCommonLibraryError.html",[0,0.015,175,2.96]],["body/classes/MoHCommonLibraryError.html",[0,0.024,2,2.666,3,0.196,4,0.233,5,0.125,19,0.783,22,0.562,24,1.07,25,0.011,26,0.562,27,0.252,28,0.632,60,0.478,70,3.167,76,0.196,80,0.008,81,0.009,82,0.008,84,1.696,172,1.392,175,5.334,1749,3.902,1795,4.101,3860,6.789,3861,5.847,3862,7.732,3863,6.659,3864,6.659,3865,6.659,3866,7.732,3867,7.732,3868,6.659,3869,6.659,3870,6.659]],["title/components/NameComponent.html",[182,0.264,448,1.08]],["body/components/NameComponent.html",[0,0.011,3,0.092,4,0.109,5,0.087,7,0.701,9,0.118,10,0.51,11,2.412,13,0.584,14,2.06,17,1.89,19,0.547,22,0.736,24,1.238,25,0.011,26,0.702,27,0.323,28,0.752,29,0.943,32,1.138,33,1.271,35,1.08,36,1.114,37,0.869,42,1.796,44,1.005,45,0.804,48,1.107,49,0.887,57,0.792,58,1.249,60,0.472,71,0.216,76,0.092,80,0.004,81,0.006,82,0.004,84,1.02,88,1.33,93,2.971,105,0.263,106,0.645,108,0.792,109,1.536,110,0.778,114,3.929,116,0.565,117,1.291,118,2.093,119,3.544,120,1.644,121,1.695,122,1.224,123,1.803,124,1.622,125,2.058,126,2.058,127,2.725,128,2.725,129,3.116,130,1.576,131,3.43,132,2.566,133,3.078,134,2.139,138,1.036,139,1.286,140,1.169,141,1.067,142,1.133,143,1.245,144,1.156,146,1.169,148,2.06,149,1.169,151,1.915,152,3.165,153,3.268,155,1.479,156,2.644,157,2.725,158,1.426,159,1.02,160,0.978,161,1.536,163,1.426,166,2.058,172,0.53,173,1.598,174,1.149,182,0.343,191,1.1,193,1.067,195,1.007,203,0.949,218,0.53,219,4.56,239,2.465,241,0.769,256,2.389,302,1.422,303,0.663,306,2.058,376,1.644,413,2.142,426,3.022,434,2.864,437,1.455,441,1.203,448,1.555,471,0.804,497,0.85,523,0.924,556,2.725,573,0.782,592,3.264,612,1.203,654,0.827,655,0.827,656,0.874,657,0.924,660,0.72,661,1.466,663,1.17,665,0.965,677,0.85,678,1.236,679,1.837,680,0.924,681,0.924,682,0.761,683,0.924,684,0.827,685,0.682,686,0.924,687,0.804,688,0.924,689,0.804,690,0.924,691,0.827,692,0.924,693,0.827,694,0.924,695,0.827,696,0.924,697,0.827,698,0.874,699,0.924,700,0.804,701,1.382,702,0.827,703,0.874,704,0.924,705,0.827,706,0.924,707,0.827,708,0.924,709,0.804,710,0.924,711,0.924,712,0.804,713,0.924,714,0.827,715,0.924,716,0.804,717,0.924,718,0.827,719,1.655,720,0.827,721,0.782,722,0.782,723,1.382,724,0.827,725,0.898,726,0.924,727,0.804,728,0.924,729,0.827,730,0.924,731,0.827,732,0.924,733,0.782,734,0.924,735,0.827,736,0.924,737,0.85,738,0.898,739,0.924,740,0.804,741,0.761,742,0.924,743,0.827,744,0.924,745,0.782,746,0.924,747,0.804,748,0.874,749,0.827,750,0.924,751,0.85,752,0.924,753,0.827,754,0.924,755,0.804,756,0.924,757,0.827,758,0.874,759,0.804,760,0.804,761,0.898,762,0.701,763,0.804,764,0.924,765,0.804,766,0.924,767,0.804,768,0.924,769,0.804,770,0.924,771,0.804,772,0.924,773,0.804,774,0.924,775,0.804,776,0.924,777,0.804,778,0.874,779,0.924,791,1.441,792,1.967,835,2.397,869,0.898,890,2.058,1027,2.725,1100,1.739,1101,3.698,1102,1.665,1110,3.702,1111,3.431,1113,2.601,1128,3.147,1130,1.479,1158,2.093,1199,2.021,1203,2.389,1259,1.803,1396,1.912,1462,1.739,1466,3.431,1470,2.021,1471,2.021,1472,2.021,1479,2.021,1480,2.021,1481,2.021,1482,2.021,1483,2.021,1484,2.021,1485,2.021,1486,2.021,1490,1.739,1493,2.021,1494,2.021,1495,2.021,1500,1.822,1504,3.022,1507,3.264,1508,3.43,1510,3.62,1511,3.116,1515,2.601,1525,2.145,1528,2.983,1530,2.725,1532,3.208,1533,3.034,1534,3.431,1535,3.431,1536,3.431,1540,2.021,1542,2.021,1615,1.915,1616,2.145,1617,4.083,1779,3.709,2554,2.725,2817,3.022,2820,3.431,2821,4.083,2840,3.053,2855,2.48,2856,2.48,2857,2.48,2858,2.73,3437,3.709,3438,3.709,3468,3.264,3469,2.294,3471,3.709,3472,4.264,3871,2.73,3872,4.891,3873,5.57,3874,3.109,3875,3.109,3876,3.109,3877,4.65,3878,3.109,3879,3.109,3880,4.65,3881,3.109,3882,3.109,3883,3.109,3884,3.109,3885,3.109,3886,3.109,3887,3.109,3888,5.57,3889,3.109,3890,3.109,3891,3.109,3892,3.109,3893,3.109,3894,3.109,3895,7.197,3896,4.65,3897,4.65,3898,1.739,3899,1.915,3900,3.109,3901,4.083]],["title/components/PageFrameworkComponent.html",[182,0.264,729,1.141]],["body/components/PageFrameworkComponent.html",[0,0.015,3,0.129,4,0.153,5,0.111,9,0.165,13,0.744,22,0.501,25,0.011,26,0.568,27,0.165,32,1.451,35,1.042,36,0.567,44,1.069,45,1.13,48,1.412,49,0.48,57,1.437,58,0.681,71,0.153,76,0.175,80,0.005,81,0.007,82,0.005,105,0.369,116,0.72,117,1.559,124,1.626,144,1.23,159,0.958,172,1.01,174,0.981,178,2.551,182,0.414,218,0.744,304,1.976,378,1.62,428,3.316,437,1.485,448,1.099,471,1.13,497,1.194,506,4.089,548,4.443,573,1.099,612,1.866,654,1.161,655,1.789,656,1.228,657,1.298,660,1.012,661,1.491,663,1.491,665,1.23,677,1.194,678,1.576,679,2.144,680,1.298,681,1.298,682,1.069,683,1.298,684,1.161,685,0.958,686,1.298,687,1.13,688,1.298,689,1.13,690,1.298,691,1.161,692,1.298,693,1.161,694,1.298,695,1.161,696,1.298,697,1.161,698,1.228,699,1.298,700,1.13,701,1.762,702,1.161,703,1.228,704,1.298,705,1.161,706,1.298,707,1.161,708,1.298,709,1.13,710,1.298,711,1.298,712,1.13,713,1.298,714,1.161,715,1.298,716,1.13,717,1.298,718,1.161,719,2,720,1.161,721,1.099,722,1.099,723,1.762,724,1.161,725,1.262,726,1.298,727,1.13,728,1.298,729,1.918,730,1.298,731,1.161,732,1.298,733,1.099,734,1.298,735,1.161,736,1.298,737,1.194,738,1.262,739,1.298,740,1.13,741,1.069,742,1.298,743,1.161,744,1.298,745,1.099,746,1.298,747,1.13,748,1.228,749,1.161,750,1.298,751,1.194,752,1.298,753,1.161,754,1.298,755,1.13,756,1.298,757,1.161,758,1.228,759,1.13,760,1.13,761,1.262,762,0.985,763,1.13,764,1.298,765,1.13,766,1.298,767,1.13,768,1.298,769,1.13,770,1.298,771,1.13,772,1.298,773,1.13,774,1.298,775,1.13,776,1.298,777,1.13,778,1.228,779,1.298,783,2.096,784,2.096,890,2.623,1278,5.205,1400,3.473,1543,1.868,1544,2.535,1545,1.868,1546,2.535,1547,2.535,1548,2.535,1549,1.868,1550,1.868,1551,2.535,1552,2.535,1553,1.868,1554,1.868,1555,1.868,1556,1.868,1557,1.868,1558,2.535,1559,2.452,1560,1.868,1561,2.535,1562,2.535,1563,1.868,1564,2.535,1565,1.868,1566,1.868,1567,1.868,1568,1.868,1569,3.086,1570,1.868,1571,1.868,1572,1.868,1573,1.868,1574,1.868,1575,1.868,1576,1.868,1577,1.868,1578,1.868,1579,1.868,1580,1.868,1581,1.868,1582,1.868,1583,1.868,1584,1.868,1585,1.868,1586,2.535,1587,1.868,1588,1.868,1589,1.868,1590,1.868,1591,1.868,1592,1.868,1593,1.868,1594,1.868,1595,1.868,1596,1.868,1597,1.868,1598,1.868,1599,1.868,1600,2.535,1601,1.868,1602,1.868,1603,1.868,1604,1.868,1605,1.868,1606,1.545,1607,1.868,1608,1.868,1609,1.868,1610,1.868,1611,1.868,1612,1.868,1613,1.868,1614,1.868,1781,4.729,1797,4.729,1806,4.729,2888,3.223,2932,4.373,2933,4.373,3423,6.017,3427,5.756,3434,4.373,3594,4.373,3718,5.205,3902,5.367,3903,5.367,3904,3.836,3905,5.205,3906,5.205,3907,5.927,3908,5.927,3909,5.927,3910,5.205,3911,4.373,3912,7.215,3913,5.205,3914,5.927,3915,5.927,3916,4.729,3917,4.368,3918,4.368]],["title/interfaces/PageList.html",[780,0.521,3919,3.166]],["body/interfaces/PageList.html",[0,0.018,3,0.147,4,0.175,5,0.094,9,0.321,10,0.712,17,1.529,19,0.588,21,3.554,22,0.422,25,0.011,27,0.272,29,1.085,36,0.649,37,1.187,49,0.549,57,0.852,60,0.497,65,2.596,69,3.048,71,0.227,72,2.139,76,0.191,80,0.006,81,0.008,82,0.006,105,0.422,108,0.852,110,0.967,130,1.191,148,2.398,203,1.343,211,3.235,303,1.067,358,2.692,359,2.04,413,2.465,415,3.689,474,2.798,523,2.344,636,3.184,780,0.608,782,1.619,835,2.514,876,2.798,961,2.93,962,3.083,1011,5.441,1096,2.93,1115,2.798,1215,5.135,1249,3.45,1388,3.25,1396,2.226,1400,2.93,1431,2.569,1432,2.569,1436,5.819,1438,4.784,1452,4.784,1719,3.689,1861,2.93,2775,3.989,3841,4.886,3919,5.962,3920,5.172,3921,3.989,3922,5.001,3923,4.391,3924,4.391,3925,5.693,3926,6.926,3927,6.318,3928,4.391,3929,4.391,3930,4.391,3931,6.684,3932,4.391,3933,4.391,3934,4.391,3935,4.391,3936,4.391,3937,4.391,3938,4.391,3939,4.391,3940,4.391,3941,4.391,3942,4.391,3943,5.693,3944,5.693,3945,4.391,3946,4.391,3947,4.391,3948,4.391,3949,4.391,3950,6.318,3951,4.391,3952,4.391,3953,4.391,3954,4.391,3955,4.391,3956,4.391,3957,4.391]],["title/interfaces/PageListInterface.html",[780,0.521,1416,3.166]],["body/interfaces/PageListInterface.html",[0,0.025,3,0.142,4,0.169,5,0.091,9,0.284,10,0.695,14,1.606,17,2.16,19,0.566,21,3.49,22,0.407,25,0.011,27,0.239,29,1.192,33,1.317,36,0.625,37,1.102,49,0.529,57,1.327,58,0.987,60,0.494,65,3.203,69,3.203,71,0.247,72,2.06,76,0.187,80,0.006,81,0.008,82,0.006,105,0.407,108,1.278,110,0.972,116,0.586,122,1.369,130,1.507,159,1.057,178,2.238,198,2.967,203,1.278,211,2.534,248,2.06,302,1.473,303,1.35,308,1.56,358,2.499,359,1.991,363,3.54,364,2.58,376,2.238,382,3.324,387,4.113,388,3.324,392,3.897,393,3.844,394,3.555,395,3.844,441,1.246,474,3.953,475,2.58,509,3.24,523,1.432,556,3.708,600,2.695,636,2.801,780,0.859,782,1.56,905,3.708,930,1.868,961,4.141,962,3.009,1004,2.967,1011,5.519,1213,3.54,1239,2.38,1376,3.555,1377,5.048,1378,3.844,1379,4.231,1380,3.555,1381,3.132,1382,4.231,1383,3.844,1384,4.231,1385,4.231,1386,4.231,1387,3.324,1388,3.132,1389,3.844,1390,3.844,1396,2.172,1397,3.132,1399,4.231,1400,3.708,1402,4.231,1403,3.324,1404,5.214,1407,4.231,1409,4.231,1410,4.231,1411,3.324,1413,4.231,1414,4.231,1416,5.214,1422,4.669,1423,3.844,1424,4.231,1425,4.231,1426,3.555,1427,4.231,1428,3.844,1429,5.557,1430,5.557,1431,2.476,1432,2.476,1433,5.557,1434,5.557,1435,6.205,1436,5.75,1437,6.205,1438,4.669,1439,4.366,1440,5.048,1441,4.366,1442,5.048,1443,4.231,1444,4.231,1445,4.231,1446,4.231,1447,3.324,1448,4.231,1449,4.231,1450,4.231,1451,4.231,1452,3.555,1453,4.231,1454,4.231,1455,3.844,1456,4.231,1457,4.231,1719,3.555,3958,4.818]],["title/components/PageSectionComponent.html",[182,0.264,731,1.141]],["body/components/PageSectionComponent.html",[0,0.016,3,0.132,4,0.157,5,0.114,9,0.17,13,0.759,19,0.802,22,0.576,25,0.011,26,0.576,27,0.17,32,1.479,35,0.621,36,0.583,44,1.09,45,1.162,48,1.439,49,0.493,57,1.406,58,0.701,71,0.157,76,0.132,80,0.005,81,0.007,82,0.005,91,3.315,105,0.379,116,0.734,117,1.582,124,1.645,144,1.254,172,1.029,174,1.129,182,0.42,218,0.765,302,1.374,303,0.959,341,1.859,418,1.799,437,1.487,448,1.131,471,1.162,480,2.309,497,1.228,511,2.767,532,2.219,573,1.131,612,1.563,654,1.195,655,1.195,656,1.263,657,1.336,660,1.041,661,1.493,663,1.52,665,1.254,677,1.228,678,1.815,679,2.169,680,1.336,681,1.336,682,1.1,683,1.336,684,1.195,685,0.985,686,1.336,687,1.162,688,1.336,689,1.162,690,1.336,691,1.195,692,1.336,693,1.195,694,1.336,695,1.195,696,1.336,697,1.195,698,1.263,699,1.336,700,1.162,701,1.796,702,1.195,703,1.263,704,1.336,705,1.195,706,1.336,707,1.195,708,1.336,709,1.162,710,1.336,711,1.336,712,1.162,713,1.336,714,1.195,715,1.336,716,1.162,717,1.336,718,1.195,719,2.029,720,1.195,721,1.131,722,1.131,723,1.796,724,1.195,725,1.299,726,1.336,727,1.162,728,1.336,729,1.195,730,1.336,731,1.941,732,1.336,733,1.131,734,1.336,735,1.195,736,1.336,737,1.228,738,1.299,739,1.336,740,1.162,741,1.1,742,1.336,743,1.195,744,1.336,745,1.131,746,1.336,747,1.162,748,1.263,749,1.195,750,1.336,751,1.228,752,1.336,753,1.195,754,1.336,755,1.162,756,1.336,757,1.195,758,1.263,759,1.162,760,1.162,761,1.299,762,1.013,763,1.162,764,1.336,765,1.162,766,1.336,767,1.162,768,1.336,769,1.162,770,1.336,771,1.162,772,1.336,773,1.162,774,1.336,775,1.162,776,1.336,777,1.162,778,1.263,779,1.336,783,2.137,784,2.137,838,3.1,1113,2.514,1236,3.1,1381,2.921,1543,1.922,1544,2.584,1545,1.922,1546,2.584,1547,2.584,1548,2.584,1549,1.922,1550,1.922,1551,2.584,1552,2.584,1553,1.922,1554,1.922,1555,1.922,1556,1.922,1557,1.922,1558,2.584,1559,2.499,1560,1.922,1561,2.584,1562,2.584,1563,1.922,1564,2.584,1565,1.922,1566,1.922,1567,1.922,1568,1.922,1569,3.121,1570,1.922,1571,1.922,1572,1.922,1573,1.922,1574,1.922,1575,1.922,1576,1.922,1577,1.922,1578,1.922,1579,1.922,1580,1.922,1581,1.922,1582,1.922,1583,1.922,1584,1.922,1585,1.922,1586,2.584,1587,1.922,1588,1.922,1589,1.922,1590,1.922,1591,1.922,1592,1.922,1593,1.922,1594,1.922,1595,1.922,1596,1.922,1597,1.922,1598,1.922,1599,1.922,1600,2.584,1601,1.922,1602,1.922,1603,1.922,1604,1.922,1605,1.922,1606,1.589,1607,1.922,1608,1.922,1609,1.922,1610,1.922,1611,1.922,1612,1.922,1613,1.922,1614,1.922,2888,3.315,2932,4.457,2933,4.457,3300,3.946,3423,5.823,3596,4.709,3702,3.946,3902,5.823,3913,6.409,3916,4.82,3959,5.823,3960,3.946,3961,6.042,3962,6.042,3963,6.042,3964,6.042,3965,4.493,3966,4.493,3967,7.616,3968,4.493,3969,4.493,3970,4.493,3971,4.493,3972,3.946,3973,4.493,3974,4.493,3975,4.493,3976,4.493]],["title/injectables/PageStateService.html",[359,1.35,1861,2.514]],["body/injectables/PageStateService.html",[0,0.015,3,0.128,4,0.152,5,0.082,9,0.3,10,0.647,13,0.741,17,1.326,19,0.693,20,2.426,21,3.833,22,0.712,24,1.316,25,0.011,26,0.692,27,0.313,28,0.778,29,1.025,35,1.039,36,1.006,37,1.122,49,0.918,57,0.738,58,1.174,60,0.509,65,2.88,69,3.107,70,2.062,71,0.206,72,1.854,76,0.174,80,0.005,81,0.007,82,0.005,105,0.366,108,0.738,110,0.933,130,1.596,148,2.508,160,1.364,203,1.281,211,3.179,303,0.925,358,2.544,359,1.855,361,2.228,413,2.652,415,3.199,474,2.426,523,2.307,636,2.61,780,0.527,835,2.287,876,2.426,961,2.541,962,2.805,1011,4.068,1096,2.541,1115,2.426,1215,4.976,1249,2.991,1387,4.068,1388,4.356,1396,2.024,1400,2.541,1431,2.228,1432,2.228,1436,5.726,1438,4.351,1452,4.351,1861,3.456,2775,3.459,3841,4.801,3919,6.112,3920,6.767,3921,3.459,3923,5.885,3924,5.178,3925,6.316,3926,6.606,3927,5.885,3928,3.807,3929,3.807,3930,3.807,3931,6.316,3932,3.807,3933,3.807,3934,3.807,3935,3.807,3936,3.807,3937,3.807,3938,3.807,3939,3.807,3940,3.807,3941,3.807,3942,5.885,3943,5.178,3944,5.178,3945,5.885,3946,3.807,3947,3.807,3948,3.807,3949,6.316,3950,5.885,3951,3.807,3952,5.885,3953,3.807,3954,5.885,3955,3.807,3956,3.807,3957,3.807,3977,5.178,3978,6.702,3979,5.897,3980,4.336,3981,4.336,3982,4.336,3983,4.336,3984,4.336,3985,4.336,3986,4.336,3987,4.336,3988,4.336,3989,4.336,3990,4.336,3991,4.336,3992,4.336,3993,4.336,3994,4.336,3995,4.336,3996,4.336,3997,4.336]],["title/components/PasswordComponent.html",[182,0.264,733,1.08]],["body/components/PasswordComponent.html",[0,0.01,3,0.081,4,0.096,5,0.079,7,1.306,9,0.104,10,0.464,13,0.53,19,0.606,22,0.718,24,0.931,25,0.011,26,0.582,27,0.315,28,0.55,29,0.942,32,1.262,33,0.749,35,1.118,36,1.057,37,0.976,39,2.086,40,1.781,42,1.71,44,0.93,45,0.708,46,2.086,48,1.006,49,0.687,52,0.862,57,0.719,58,0.904,60,0.499,71,0.203,76,0.152,80,0.003,81,0.005,82,0.003,84,0.926,87,2.505,93,0.998,105,0.231,106,0.568,108,0.987,110,0.496,111,1.605,116,0.513,117,1.194,122,1.305,123,2.427,124,1.306,130,1.896,134,1.86,138,0.913,139,1.133,140,1.03,141,1.45,142,0.998,143,1.097,144,1.07,159,0.926,163,2.363,172,0.878,174,1.29,180,2.363,182,0.438,195,0.887,203,0.719,205,3.803,214,1.89,217,1.03,218,0.719,237,1.353,239,1.869,240,1.89,241,0.699,273,1.097,303,0.584,304,1.408,308,1.367,324,1.408,336,1.256,345,0.887,347,3.567,354,3.347,358,2.048,366,1.255,378,1.409,380,1.291,437,1.442,441,0.708,448,0.689,471,0.708,478,1.605,497,0.749,509,2.363,510,1.605,523,1.86,533,1.212,547,2.363,566,1.353,572,2.086,573,0.689,597,1.133,600,1.532,612,1.092,628,4.621,654,0.728,655,0.728,656,0.77,657,0.814,660,0.635,661,1.455,663,1.063,665,0.876,677,0.749,678,1.123,679,1.722,680,0.814,681,0.814,682,0.671,683,0.814,684,0.728,685,0.601,686,0.814,687,0.708,688,0.814,689,0.708,690,0.814,691,0.728,692,0.814,693,0.728,694,0.814,695,0.728,696,0.814,697,0.728,698,0.77,699,0.814,700,0.708,701,1.255,702,0.728,703,0.77,704,0.814,705,0.728,706,0.814,707,0.728,708,0.814,709,0.708,710,0.814,711,0.814,712,0.708,713,0.814,714,0.728,715,0.814,716,0.708,717,0.814,718,0.728,719,1.532,720,0.728,721,0.689,722,0.689,723,1.255,724,0.728,725,0.792,726,0.814,727,0.708,728,0.814,729,0.728,730,0.814,731,0.728,732,0.814,733,1.664,734,0.814,735,0.728,736,0.814,737,0.749,738,0.792,739,0.814,740,0.708,741,0.671,742,0.814,743,0.728,744,0.814,745,0.689,746,0.814,747,0.708,748,0.77,749,0.728,750,0.814,751,0.749,752,0.814,753,0.728,754,0.814,755,0.708,756,0.814,757,0.728,758,0.77,759,0.708,760,0.708,761,0.792,762,0.618,763,0.708,764,0.814,765,0.708,766,0.814,767,0.708,768,0.814,769,0.708,770,0.814,771,0.708,772,0.814,773,0.708,774,0.814,775,0.708,776,0.814,777,0.708,778,0.77,779,0.814,780,0.513,783,1.494,784,1.494,791,1.498,792,1.807,793,2.76,794,2.204,795,2.204,797,1.03,815,1.303,816,1.605,817,1.687,818,1.467,819,1.936,823,3.556,861,2.755,869,0.792,910,2.475,924,1.172,1158,2.485,1162,3.394,1250,1.605,1259,1.638,1280,3.369,1396,0.94,1507,1.605,1515,2.363,1517,1.781,1533,2.869,1543,1.172,1544,1.806,1545,1.172,1546,1.806,1547,1.806,1548,1.806,1549,1.172,1550,1.172,1551,1.806,1552,1.806,1553,1.172,1554,1.172,1555,1.172,1556,1.172,1557,1.172,1558,1.806,1559,1.747,1560,1.172,1561,1.806,1562,1.806,1563,1.172,1564,1.806,1565,1.172,1566,1.172,1567,1.172,1568,1.172,1569,2.477,1570,1.172,1571,1.172,1572,1.172,1573,1.172,1574,1.172,1575,1.172,1576,1.172,1577,1.172,1578,1.172,1579,1.172,1580,1.172,1581,1.172,1582,1.172,1583,1.172,1584,1.172,1585,1.172,1586,1.806,1587,1.172,1588,1.172,1589,1.172,1590,1.172,1591,1.172,1592,1.172,1593,1.172,1594,1.172,1595,1.172,1596,1.172,1597,1.172,1598,1.172,1599,1.172,1600,1.806,1601,1.172,1602,1.172,1603,1.172,1604,1.172,1605,1.172,1606,0.969,1607,1.172,1608,1.172,1609,1.172,1610,1.172,1611,1.172,1612,1.172,1613,1.172,1614,1.172,1644,5.234,1749,1.605,1818,1.781,1847,4.621,1854,3.116,2554,3.02,2556,3.803,2559,2.021,2571,3.765,2597,1.687,2637,2.021,2691,3.709,2693,2.405,2696,3.369,2713,3.369,2840,2.086,2962,2.185,3011,3.996,3015,1.605,3025,2.914,3077,3.116,3197,2.021,3336,3.369,3439,3.556,3445,3.803,3488,2.021,3489,2.021,3500,3.709,3710,4.621,3719,3.116,3802,2.021,3898,3.241,3998,2.185,3999,5.805,4000,3.709,4001,3.369,4002,3.369,4003,3.709,4004,3.709,4005,3.709,4006,3.709,4007,5.495,4008,3.709,4009,3.709,4010,4.526,4011,4.526,4012,4.526,4013,4.526,4014,6.05,4015,4.526,4016,4.526,4017,4.223,4018,4.526,4019,4.526,4020,4.526,4021,4.526,4022,4.526,4023,4.223,4024,4.617,4025,2.739,4026,2.739,4027,2.739,4028,2.739,4029,3.116,4030,2.739,4031,2.739,4032,3.709,4033,2.739,4034,2.739,4035,2.739,4036,2.739,4037,2.739,4038,2.739,4039,2.739,4040,2.739,4041,2.739,4042,2.739,4043,3.709,4044,3.709,4045,3.709,4046,3.709,4047,3.709,4048,2.739,4049,2.739,4050,3.709,4051,2.739,4052,2.739,4053,2.739,4054,3.369,4055,2.739,4056,2.739,4057,2.739,4058,2.739,4059,2.739,4060,2.739,4061,2.739,4062,3.709,4063,4.112,4064,2.405,4065,1.89,4066,2.405,4067,2.405,4068,2.405,4069,2.405,4070,2.185,4071,4.526,4072,4.526,4073,3.709,4074,2.405,4075,2.405,4076,2.405,4077,2.405,4078,2.405,4079,2.405,4080,3.709,4081,2.405,4082,3.709,4083,2.405,4084,3.709,4085,2.405,4086,2.405,4087,3.709,4088,3.709,4089,2.405,4090,2.405,4091,2.405,4092,2.405,4093,2.405,4094,2.405,4095,2.185,4096,2.405,4097,2.405,4098,6.611,4099,4.223,4100,2.739,4101,4.223,4102,4.223,4103,5.086,4104,4.223,4105,4.223,4106,4.223,4107,4.223,4108,2.739]],["title/interfaces/PasswordErrorMsg.html",[780,0.521,4024,3.166]],["body/interfaces/PasswordErrorMsg.html",[0,0.014,3,0.118,4,0.14,5,0.075,7,1.256,9,0.151,10,0.612,19,0.469,25,0.011,27,0.243,28,0.719,29,0.914,32,0.977,33,1.523,35,0.887,36,0.723,37,1.001,39,2.752,40,2.595,42,2.049,44,1.005,46,1.972,52,1.256,60,0.507,71,0.243,76,0.189,80,0.005,81,0.007,82,0.005,84,0.876,87,2.925,105,0.337,106,0.829,108,0.949,110,0.655,111,2.34,116,0.485,117,1.291,122,1.149,123,1.548,124,0.9,130,1.74,134,1.187,141,1.37,159,0.876,163,1.831,172,0.949,174,1.375,180,2.943,182,0.466,195,1.804,203,0.949,205,4.735,214,2.754,217,1.501,218,0.68,237,1.972,239,1.767,240,2.754,241,0.922,273,1.598,303,0.852,304,1.331,308,1.293,324,2.052,336,1.831,345,1.293,354,2.555,358,1.97,366,1.187,378,1.523,380,1.221,437,0.661,441,1.033,478,2.34,509,2.555,510,2.34,523,1.656,533,1.767,547,2.234,566,1.972,572,1.972,597,1.651,600,3.117,661,0.661,663,1.005,665,0.829,733,1.402,780,0.677,782,1.293,783,1.97,784,1.97,791,1.796,792,1.898,793,2.984,794,2.383,795,2.383,797,1.501,815,1.899,816,2.34,817,2.459,818,2.138,819,1.831,823,2.754,869,1.154,910,2.34,924,2.383,1158,2.61,1162,3.265,1280,3.185,1396,1.37,1507,2.34,1515,2.234,1517,2.595,1533,2.943,1543,1.707,1544,2.383,1545,1.707,1546,2.383,1547,2.383,1548,2.383,1549,1.707,1550,1.707,1551,2.383,1552,2.383,1553,1.707,1554,1.707,1555,1.707,1556,1.707,1557,1.707,1558,2.383,1559,2.305,1560,1.707,1561,2.383,1562,2.383,1563,1.707,1564,2.383,1565,1.707,1566,1.707,1567,1.707,1568,1.707,1569,2.97,1570,1.707,1571,1.707,1572,1.707,1573,1.707,1574,1.707,1575,1.707,1576,1.707,1577,1.707,1578,1.707,1579,1.707,1580,1.707,1581,1.707,1582,1.707,1583,1.707,1584,1.707,1585,1.707,1586,2.383,1587,1.707,1588,1.707,1589,1.707,1590,1.707,1591,1.707,1592,1.707,1593,1.707,1594,1.707,1595,1.707,1596,1.707,1597,1.707,1598,1.707,1599,1.707,1600,2.383,1601,1.707,1602,1.707,1603,1.707,1604,1.707,1605,1.707,1606,1.412,1607,1.707,1608,1.707,1609,1.707,1610,1.707,1611,1.707,1612,1.707,1613,1.707,1614,1.707,1644,5.271,1749,2.34,1818,2.595,1854,2.946,2554,2.34,2556,2.946,2559,2.946,2571,3.622,2597,3.431,2637,2.946,2696,4.445,2840,1.972,2962,3.185,3015,2.34,3025,2.754,3077,2.946,3197,2.946,3336,3.185,3439,2.754,3445,2.946,3488,2.946,3489,2.946,3710,4.445,3719,2.946,3802,2.946,3898,4.344,3998,3.185,3999,6.098,4000,3.506,4001,3.185,4002,3.185,4003,3.506,4004,3.506,4005,3.506,4006,3.506,4007,4.892,4008,3.506,4009,3.506,4010,3.506,4011,3.506,4012,3.506,4013,3.506,4014,3.506,4015,3.506,4016,3.506,4018,3.506,4019,3.506,4020,3.506,4021,3.506,4022,3.506,4024,5.124,4029,2.946,4032,3.506,4043,3.506,4044,3.506,4045,3.506,4046,3.506,4047,3.506,4050,3.506,4054,3.185,4062,4.892,4063,5.12,4064,3.506,4065,2.754,4066,3.506,4067,3.506,4068,3.506,4069,3.506,4070,3.185,4071,5.635,4072,6.644,4073,4.892,4074,3.506,4075,3.506,4076,3.506,4077,3.506,4078,3.506,4079,3.506,4080,4.892,4081,3.506,4082,4.892,4083,3.506,4084,4.892,4085,3.506,4086,3.506,4087,4.892,4088,4.892,4089,3.506,4090,3.506,4091,3.506,4092,3.506,4093,3.506,4094,3.506,4095,3.185,4096,3.506,4097,3.506]],["title/classes/Person.html",[0,0.015,2907,2.643]],["body/classes/Person.html",[0,0.024,2,1.71,3,0.126,4,0.149,5,0.08,7,1.687,9,0.161,10,0.641,13,0.733,22,0.719,24,0.938,25,0.011,26,0.723,27,0.309,28,0.554,35,1.034,36,0.863,49,0.923,58,0.911,60,0.506,71,0.204,76,0.126,80,0.005,81,0.007,82,0.005,84,1.28,93,1.557,110,0.88,122,1.441,123,2.264,138,1.424,139,1.767,140,1.606,141,1.466,142,1.557,143,1.71,144,0.886,159,0.937,160,1.344,178,2.065,181,2.776,203,0.728,245,2.415,256,3,303,0.911,304,1.946,315,3.595,345,1.89,413,2.314,418,2.862,440,3.421,523,1.735,532,3.816,722,1.799,860,1.827,861,2.032,905,3.421,976,4.402,1003,4.307,1004,3.595,1032,3.751,1230,3.266,1231,3.595,1232,2.884,1233,3.421,1497,2.947,1759,4.865,2612,5.456,2614,5.703,2907,5.136,3210,4.907,3434,5.274,3435,6.164,3440,5.306,3441,5.306,3442,5.306,3482,6.164,3484,6.515,3486,5.971,4109,3.751,4110,6.651,4111,6.651,4112,7.484,4113,7.148,4114,6.651,4115,6.651,4116,6.572,4117,7.148,4118,4.272,4119,4.272,4120,4.272,4121,5.838,4122,4.272,4123,4.272,4124,4.272,4125,4.272,4126,4.272,4127,5.838,4128,5.838,4129,5.838,4130,4.272,4131,4.272,4132,7.484,4133,4.272,4134,4.272,4135,5.838,4136,4.272,4137,4.272,4138,5.838,4139,7.148,4140,4.272,4141,4.272,4142,3.795,4143,5.838,4144,5.126,4145,4.272,4146,4.272,4147,6.651,4148,5.838,4149,5.838,4150,5.838,4151,3.408,4152,3.751,4153,4.272,4154,4.272,4155,7.726,4156,4.272,4157,4.272,4158,8.406,4159,6.651,4160,4.272,4161,4.272,4162,5.838,4163,5.838,4164,4.272,4165,4.272,4166,4.272,4167,4.272,4168,4.272]],["title/components/PostalCodeComponent.html",[182,0.264,740,1.11]],["body/components/PostalCodeComponent.html",[0,0.011,3,0.089,4,0.106,5,0.086,7,1.376,9,0.115,10,0.501,11,1.999,13,0.573,19,0.536,22,0.725,24,1.207,25,0.011,26,0.665,27,0.32,28,0.738,29,1.017,32,1.117,35,1.057,36,1.117,37,0.712,42,1.693,44,0.823,45,0.784,48,1.087,49,0.84,57,0.777,58,1.243,60,0.484,71,0.229,76,0.089,80,0.004,81,0.006,82,0.004,84,1.001,88,1.296,93,1.105,105,0.256,106,0.629,108,0.777,110,0.536,116,0.554,117,1.271,118,2.062,120,1.94,121,1.999,122,1.083,123,1.769,124,1.376,125,2.428,126,2.428,128,2.673,129,3.414,130,1.306,132,2.127,133,3.141,134,2.233,138,1.01,139,1.254,140,1.139,141,1.04,142,1.105,143,1.214,144,1.138,146,1.139,148,2.292,149,1.139,152,2.799,155,2.17,156,1.951,160,0.954,161,2.253,163,2.092,166,1.342,172,0.934,174,1.215,182,0.338,187,1.139,189,2.019,190,2.418,191,1.613,192,1.867,193,1.566,196,1.97,209,2.418,210,2.418,211,1.214,213,2.418,218,0.516,239,2.019,241,0.755,256,2.344,303,0.973,306,2.019,332,1.39,336,2.515,354,1.39,418,1.214,437,1.453,448,0.763,471,0.784,497,0.829,523,1.814,573,0.763,592,3.214,612,1.18,654,0.806,655,0.806,656,0.852,657,0.901,660,0.702,661,1.464,663,1.148,665,0.947,677,0.829,678,1.213,679,1.814,680,0.901,681,0.901,682,0.742,683,0.901,684,0.806,685,0.665,686,0.901,687,0.784,688,0.901,689,0.784,690,0.901,691,0.806,692,0.901,693,0.806,694,0.901,695,0.806,696,0.901,697,0.806,698,0.852,699,0.901,700,0.784,701,1.356,702,0.806,703,0.852,704,0.901,705,0.806,706,0.901,707,0.806,708,0.901,709,0.784,710,0.901,711,0.901,712,0.784,713,0.901,714,0.806,715,0.901,716,0.784,717,0.901,718,0.806,719,1.63,720,0.806,721,0.763,722,0.763,723,1.356,724,0.806,725,0.876,726,0.901,727,0.784,728,0.901,729,0.806,730,0.901,731,0.806,732,0.901,733,0.763,734,0.901,735,0.806,736,0.901,737,0.829,738,0.876,739,0.901,740,1.579,741,1.903,742,0.901,743,0.806,744,0.901,745,0.763,746,0.901,747,0.784,748,0.852,749,0.806,750,0.901,751,0.829,752,0.901,753,0.806,754,0.901,755,0.784,756,0.901,757,0.806,758,0.852,759,0.784,760,0.784,761,0.876,762,0.683,763,0.784,764,0.901,765,0.784,766,0.901,767,0.784,768,0.901,769,0.784,770,0.901,771,0.784,772,0.901,773,0.784,774,0.901,775,0.784,776,0.901,777,0.784,778,0.852,779,0.901,783,1.613,784,1.613,790,3.378,791,1.419,792,1.951,797,1.139,835,2.538,863,3.154,868,2.81,869,0.876,890,2.019,895,3.214,907,3.366,1050,1.97,1128,3.113,1130,1.442,1158,2.294,1259,1.769,1381,2.965,1462,1.696,1490,1.696,1508,3.759,1511,3.069,1515,2.552,1525,2.091,1528,2.443,1529,2.965,1530,3.576,1531,3.366,1533,2.092,1540,1.97,1542,1.97,1543,1.296,1544,1.951,1545,1.296,1546,1.951,1547,1.951,1548,1.951,1549,1.296,1550,1.296,1551,1.951,1552,1.951,1553,1.296,1554,1.296,1555,1.296,1556,1.296,1557,1.296,1558,1.951,1559,1.887,1560,1.296,1561,1.951,1562,1.951,1563,1.296,1564,1.951,1565,1.296,1566,1.296,1567,1.296,1568,1.296,1569,2.61,1570,1.296,1571,1.296,1572,1.296,1573,1.296,1574,1.296,1575,1.296,1576,1.296,1577,1.296,1578,1.296,1579,1.296,1580,1.296,1581,1.296,1582,1.296,1583,1.296,1584,1.296,1585,1.296,1586,1.951,1587,1.296,1588,1.296,1589,1.296,1590,1.296,1591,1.296,1592,1.296,1593,1.296,1594,1.296,1595,1.296,1596,1.296,1597,1.296,1598,1.296,1599,1.296,1600,1.951,1601,1.296,1602,1.296,1603,1.296,1604,1.296,1605,1.296,1606,1.072,1607,1.296,1608,1.296,1609,1.296,1610,1.296,1611,1.296,1612,1.296,1613,1.296,1614,1.296,1615,1.867,2072,3.366,2554,3.214,2556,4.047,2557,4.817,2558,4.817,2559,2.236,2560,2.662,2609,2.673,2612,3.147,2846,4.006,2926,1.97,3444,3.366,3472,4.211,4169,6.338,4170,6.854,4171,2.662,4172,4.562,4173,4.562,4174,4.562,4175,5.486,4176,4.562,4177,3.031,4178,3.031,4179,3.031,4180,3.031,4181,4.562,4182,3.031,4183,3.031,4184,4.562,4185,3.031,4186,3.031,4187,3.031,4188,3.031,4189,3.031,4190,3.031,4191,3.031,4192,3.031,4193,3.031,4194,3.031,4195,4.562,4196,3.031,4197,3.031,4198,3.031,4199,3.031,4200,4.562,4201,4.562,4202,3.639,4203,3.639,4204,3.031,4205,3.031,4206,3.031,4207,3.031,4208,2.662,4209,3.031,4210,7.137,4211,2.662,4212,2.236,4213,3.031,4214,3.031,4215,4.562,4216,4.562,4217,4.562,4218,4.562]],["title/interfaces/ProvinceList.html",[780,0.521,805,2.789]],["body/interfaces/ProvinceList.html",[0,0.015,3,0.128,4,0.152,5,0.082,7,0.978,9,0.164,10,0.648,19,0.51,25,0.011,27,0.253,28,0.56,29,0.841,36,1.075,37,0.677,42,1.734,44,0.783,58,0.677,60,0.503,71,0.272,76,0.222,80,0.005,81,0.007,82,0.005,84,0.952,105,0.366,106,0.9,108,0.739,110,0.694,114,2.806,116,0.527,117,1.367,118,1.631,119,2.324,122,0.718,124,0.978,132,1.683,133,2.523,134,1.29,152,2.523,156,2.523,159,1.896,160,1.365,172,0.739,173,2.229,174,1.356,182,0.363,191,1.534,193,1.489,195,1.405,203,1.142,241,1.109,303,0.926,306,1.92,332,1.989,437,0.718,571,2.143,575,4.27,576,3.422,592,2.543,661,0.718,663,1.092,665,0.9,743,1.154,780,0.527,782,1.405,783,2.087,784,2.087,791,1.734,792,2.057,797,1.631,802,4.406,804,2.993,805,4.891,806,2.82,807,4.071,835,2.79,868,2.672,869,1.254,890,1.92,950,4.353,952,3.201,955,3.201,958,3.201,973,2.914,1065,6.608,1100,2.427,1101,3.445,1102,2.324,1110,2.427,1128,2.806,1130,2.063,1158,2.52,1252,2.672,1500,2.543,1507,2.543,1508,2.672,1509,2.82,1510,2.82,1511,2.427,1515,2.427,1528,2.324,1529,2.82,1530,2.543,1532,2.993,1533,2.705,1534,3.201,1535,3.201,1536,3.201,1543,1.856,1544,2.523,1545,1.856,1546,2.523,1547,2.523,1548,2.523,1549,1.856,1550,1.856,1551,2.523,1552,2.523,1553,1.856,1554,1.856,1555,1.856,1556,1.856,1557,1.856,1558,2.523,1559,2.44,1560,1.856,1561,2.523,1562,2.523,1563,1.856,1564,2.523,1565,1.856,1566,1.856,1567,1.856,1568,1.856,1569,3.077,1570,1.856,1571,1.856,1572,1.856,1573,1.856,1574,1.856,1575,1.856,1576,1.856,1577,1.856,1578,1.856,1579,1.856,1580,1.856,1581,2.523,1582,1.856,1583,1.856,1584,1.856,1585,1.856,1586,2.523,1587,1.856,1588,1.856,1589,1.856,1590,1.856,1591,1.856,1592,1.856,1593,1.856,1594,1.856,1595,1.856,1596,1.856,1597,1.856,1598,1.856,1599,1.856,1600,2.523,1601,1.856,1602,1.856,1603,1.856,1604,1.856,1605,1.856,1606,1.534,1607,1.856,1608,1.856,1609,1.856,1610,1.856,1611,1.856,1612,1.856,1613,1.856,1614,1.856,1615,2.672,1616,2.993,2068,3.81,2072,3.201,2177,3.81,2553,3.81,2555,2.82,3132,3.81,4203,3.461,4219,3.81,4220,8.727,4221,4.339,4222,4.339,4223,4.339,4224,4.339,4225,4.339,4226,4.339,4227,4.339,4228,4.339,4229,4.339,4230,4.339,4231,4.339,4232,4.339,4233,4.339,4234,4.339,4235,4.339,4236,4.339,4237,4.339,4238,4.339,4239,4.339,4240,4.339,4241,4.339,4242,4.339,4243,4.339,4244,4.339,4245,3.81,4246,4.339,4247,4.339,4248,4.339,4249,4.339]],["title/components/RadioComponent.html",[182,0.264,745,1.08]],["body/components/RadioComponent.html",[0,0.012,3,0.098,4,0.116,5,0.092,7,0.749,9,0.126,10,0.536,11,1.781,13,0.614,14,2.129,17,1.953,19,0.574,22,0.737,24,1.275,25,0.011,26,0.691,27,0.326,28,0.77,29,0.826,32,1.196,33,0.909,35,1.082,36,1.119,37,0.904,42,1.652,44,1.227,45,0.86,48,1.164,49,0.898,57,0.832,58,1.294,60,0.43,70,2.324,71,0.223,76,0.171,80,0.004,81,0.006,82,0.004,84,1.072,88,1.422,93,3.005,105,0.281,106,0.69,108,0.832,110,0.391,114,3.97,116,0.594,117,1.343,119,3.644,120,1.728,121,1.781,122,1.126,123,1.895,124,1.658,125,2.827,126,2.827,127,2.864,128,2.864,129,3.241,130,1.164,131,3.568,132,2.477,133,3.145,134,2.432,138,1.108,139,1.375,140,1.25,141,1.141,142,1.212,143,1.331,144,1.202,146,2.178,148,2.515,149,2.178,151,2.048,152,3.227,153,2.414,155,1.581,156,2.732,157,2.864,158,1.524,159,0.729,160,1.046,161,1.642,163,1.524,166,2.564,172,0.566,173,1.708,174,1.177,178,1.176,182,0.357,191,1.176,193,1.677,195,1.076,199,2.734,218,0.566,241,0.55,256,2.511,277,1.25,303,0.709,378,0.909,418,2.724,437,1.462,441,0.86,448,0.837,471,0.86,497,0.909,523,0.988,573,0.837,612,1.264,654,0.884,655,1.299,656,0.934,657,0.988,660,0.77,661,1.472,663,1.23,665,1.014,677,0.909,678,1.299,679,1.898,680,0.988,681,0.988,682,0.814,683,0.988,684,0.884,685,0.729,686,0.988,687,0.86,688,0.988,689,0.86,690,0.988,691,0.884,692,0.988,693,0.884,694,0.988,695,0.884,696,0.988,697,0.884,698,0.934,699,0.988,700,0.86,701,1.452,702,0.884,703,0.934,704,0.988,705,0.884,706,0.988,707,0.884,708,0.988,709,0.86,710,0.988,711,0.988,712,0.86,713,0.988,714,0.884,715,0.988,716,0.86,717,0.988,718,0.884,719,1.722,720,0.884,721,0.837,722,0.837,723,1.452,724,0.884,725,0.961,726,0.988,727,0.86,728,0.988,729,0.884,730,0.988,731,0.884,732,0.988,733,0.837,734,0.988,735,0.884,736,0.988,737,0.909,738,0.961,739,0.988,740,0.86,741,0.814,742,0.988,743,0.884,744,0.988,745,1.712,746,0.988,747,0.86,748,0.934,749,0.884,750,0.988,751,0.909,752,0.988,753,0.884,754,0.988,755,0.86,756,0.988,757,0.884,758,0.934,759,0.86,760,0.86,761,0.961,762,0.749,763,0.86,764,0.988,765,0.86,766,0.988,767,0.86,768,0.988,769,0.86,770,0.988,771,0.86,772,0.988,773,0.86,774,0.988,775,0.86,776,0.988,777,0.86,778,0.934,779,0.988,780,0.404,791,1.264,792,1.746,835,2.639,861,1.581,869,0.961,935,1.948,1100,1.86,1101,2.977,1102,1.781,1128,3.236,1130,1.581,1236,2.294,1241,2.453,1259,1.895,1284,4.622,1310,2.652,1462,1.86,1470,2.161,1471,2.161,1472,2.161,1479,2.161,1480,2.161,1481,2.161,1482,2.161,1483,2.161,1484,2.161,1485,2.161,1486,2.161,1490,1.86,1493,2.161,1494,2.161,1495,2.161,1500,1.948,1504,3.176,1511,3.241,1540,2.161,1542,2.161,1728,2.294,2817,2.161,2951,5.429,3594,2.453,3647,4.712,3648,2.652,3649,5.868,3650,2.919,3651,2.652,3652,2.919,3653,5.088,3654,2.652,3655,2.919,3656,5.975,3657,2.919,3658,5.975,3659,2.919,3660,2.919,3661,5.608,3662,2.652,3663,4.291,3664,4.291,3665,5.088,3666,5.608,3667,3.898,3668,4.291,3669,2.919,4250,4.887,4251,4.887,4252,3.325,4253,3.325,4254,3.325,4255,3.325,4256,4.887,4257,3.325,4258,3.325,4259,3.325,4260,3.325,4261,3.325,4262,3.325,4263,3.325,4264,3.325,4265,3.325,4266,4.887]],["title/interfaces/ReadOnlyFields.html",[780,0.521,810,2.96]],["body/interfaces/ReadOnlyFields.html",[0,0.011,3,0.09,4,0.107,5,0.057,7,1.034,9,0.115,10,0.503,11,1.112,19,0.359,25,0.011,26,0.258,27,0.248,28,0.728,29,1.215,33,1.253,35,0.633,36,1.035,37,1.256,39,1.507,52,0.96,58,0.859,60,0.504,65,1.222,71,0.25,76,0.18,80,0.004,81,0.006,82,0.004,84,0.669,87,2.205,105,0.258,106,0.633,108,1.043,110,0.915,111,1.788,116,0.371,117,1.063,118,1.723,120,1.079,121,1.112,124,0.688,130,1.753,132,1.184,141,1.048,146,1.147,148,1.528,149,1.147,160,0.96,161,1.507,163,1.399,174,1.354,182,0.377,183,3.163,184,2.456,189,2.029,191,1.079,193,1.048,194,3.163,196,3.58,199,1.707,201,1.634,203,1.174,208,1.351,211,2.628,217,1.723,232,1.984,236,1.634,237,1.507,241,0.505,273,1.222,277,1.147,302,1.684,303,1.471,304,1.017,332,1.399,336,1.399,341,2.278,345,1.783,354,1.399,365,1.568,366,1.363,379,0.96,380,1.402,413,2.316,418,2.205,437,0.505,441,0.789,461,1.984,475,1.634,510,2.687,523,1.363,533,1.351,566,1.507,571,1.507,575,4.115,576,3.794,587,3.392,588,1.707,593,1.707,597,1.262,661,0.505,665,0.633,682,1.122,685,1.836,722,0.768,741,1.122,780,0.669,781,3.8,782,0.988,783,1.622,784,1.622,785,2.252,786,3.383,787,3.658,788,3.658,789,3.94,790,4.636,791,1.186,792,1.506,793,2.456,794,2.356,795,1.961,796,2.356,797,1.147,798,2.456,799,2.252,800,2.105,801,3.58,802,3.147,803,3.163,804,2.105,805,3.981,806,3.58,807,3.163,808,2.252,809,3.981,810,4.757,811,2.105,812,2.252,813,2.435,814,2.435,815,1.451,816,1.788,817,1.88,818,1.634,819,1.399,820,2.456,821,3.658,822,2.565,823,2.105,824,2.435,825,2.435,826,2.252,827,2.252,828,2.252,829,2.435,830,2.435,831,2.435,832,2.105,833,2.435,834,2.435,835,2.546,836,5.706,837,2.105,838,2.105,839,2.252,840,2.252,841,2.456,842,2.435,843,2.252,844,2.435,845,4.041,846,2.252,847,2.435,848,2.252,849,1.984,850,3.658,851,2.435,852,2.435,853,3.658,854,2.824,855,2.435,856,2.435,857,2.435,858,2.435,859,2.435,860,2.356,861,2.619,862,1.788,863,3.01,864,2.435,865,2.435,866,2.435,867,4.225,868,1.88,869,0.882,870,3.383,871,2.435,872,2.435,873,3.658,874,6.117,875,3.658,876,2.565,877,3.658,878,6.117,879,4.394,880,1.568,881,2.252,882,1.984,883,2.435,884,2.435,885,2.435,886,2.435,887,2.435,888,2.435,889,4.886,890,1.351,891,2.435,892,2.435,893,3.658,894,2.687,895,1.788,896,4.394,897,5.501,898,5.706,899,5.501,900,2.435,901,2.435,902,4.394,903,2.435,904,4.394,905,2.687,906,2.435,907,2.252,908,2.435,909,2.435,910,1.788,911,2.435,912,2.435,913,3.392,914,2.435,915,2.435,916,2.435,917,3.383,918,2.981,919,3.658,920,3.658,921,3.658,922,3.658,923,2.435,924,1.305,925,2.435,926,2.435,927,3.8,928,2.105,929,2.435,930,1.184,931,2.435,932,2.435,933,2.435,934,2.105,935,1.788,936,2.435,937,2.435,938,2.435,939,2.105,940,2.435,941,4.886,942,2.435,943,2.435,944,2.435,945,2.435,946,2.435,947,4.064,948,2.105,949,2.435,950,4.518,951,3.658,952,3.383,953,3.658,954,4.394,955,2.252,956,2.435,957,2.435,958,2.252,959,1.88,960,1.788,961,1.788,962,1.451,963,2.435,964,2.435,965,2.435,966,3.383,967,2.435,968,2.435,969,2.252,970,2.435,971,2.435,972,2.435,973,1.507,974,2.105,975,2.435,976,1.88,977,2.435,978,2.435,979,2.252,980,2.252,981,2.252,982,2.435,983,3.658,984,3.658,985,3.658,986,2.435,987,2.435,988,2.435,989,2.435,990,2.435,991,2.435,992,2.435,993,2.435,994,2.435,995,2.435,996,2.435,997,2.435,998,2.435,999,3.658,1000,2.435,1001,2.435]],["title/guards/RouteGuardService.html",[363,2.4,392,2.643]],["body/guards/RouteGuardService.html",[0,0.016,3,0.137,4,0.163,5,0.087,9,0.176,13,0.872,14,2.06,16,3.655,19,0.546,20,2.6,21,3.912,22,0.625,24,1.189,25,0.011,26,0.625,27,0.28,28,0.703,29,1.128,37,1.154,44,1.115,49,0.762,52,1.462,57,1.26,60,0.406,65,2.779,71,0.259,72,1.988,76,0.137,80,0.006,81,0.007,82,0.006,105,0.393,108,1.053,110,0.931,116,0.565,124,1.393,130,1.762,181,2.21,185,4.017,188,3.708,198,3.806,203,1.053,248,3.387,277,1.747,278,3.958,308,1.505,319,1.923,341,1.923,359,1.944,362,3.207,364,3.718,365,2.388,366,1.837,378,1.689,379,2.328,380,2.123,387,5.336,388,3.207,390,4.93,391,6.497,392,5.055,401,2.6,441,1.598,475,4.125,476,2.489,538,5.903,597,1.923,860,2.969,861,3.302,862,4.641,880,2.388,1040,4.263,1239,2.296,1339,3.021,1387,3.207,1388,3.021,1396,1.596,1403,4.263,1404,3.429,1411,3.207,1423,3.708,1431,2.388,1432,2.388,1439,4.263,1447,4.263,1793,3.708,1794,2.724,3011,4.79,3015,4.068,3131,5.79,3298,3.429,3831,4.081,3832,4.081,3833,4.081,3834,6.764,3835,7.208,3836,7.208,3837,4.081,3838,3.708,3839,5.426,3840,5.426,3841,3.621,3842,5.426,3845,5.426,3846,4.081,3847,5.426,3849,4.081,3850,4.081,3851,7.097,3852,7.097,3854,6.096,3855,4.081,3857,5.426,3858,4.081,4267,6.764,4268,6.18,4269,6.18,4270,4.648,4271,4.648,4272,4.648,4273,4.648,4274,4.648,4275,4.648,4276,4.648,4277,4.648,4278,4.648]],["title/interfaces/SampleImageInterface.html",[780,0.521,4279,3.166]],["body/interfaces/SampleImageInterface.html",[0,0.022,3,0.184,4,0.218,5,0.117,7,1.677,9,0.236,10,0.817,19,0.733,25,0.011,27,0.301,28,0.707,58,1.16,60,0.514,71,0.278,76,0.219,80,0.008,81,0.009,82,0.008,84,1.368,104,2.86,105,0.527,122,1.315,174,1.315,182,0.458,437,1.032,498,4.303,661,1.032,663,1.569,665,1.294,669,5.181,747,1.613,748,2.234,780,0.758,782,2.019,797,2.344,869,1.802,1098,3.205,1626,3.655,2948,4.601,3673,4.601,3691,5.489,3692,4.303,3745,4.975,3747,4.975,3841,4.825,4279,5.866,4280,4.975,4281,4.601,4282,7.23,4283,5.476,4284,5.476,4285,5.476,4286,5.476,4287,5.476]],["title/components/SampleModalComponent.html",[182,0.264,747,1.11]],["body/components/SampleModalComponent.html",[0,0.016,3,0.137,4,0.163,5,0.116,7,1.67,9,0.176,10,0.68,13,0.777,19,0.817,22,0.683,25,0.011,26,0.587,27,0.28,32,1.515,35,0.855,36,0.803,44,1.116,45,1.205,48,1.474,49,0.68,57,1.054,58,1.155,60,0.463,71,0.243,76,0.182,80,0.006,81,0.007,82,0.006,84,1.357,88,1.993,93,1.698,104,2.136,105,0.393,122,1.4,123,2.4,138,1.553,139,1.927,140,1.751,141,1.599,142,1.698,143,1.865,144,1.442,172,0.794,174,1.15,182,0.428,218,0.794,437,1.489,448,1.172,471,1.205,497,1.274,498,4.27,573,1.172,612,1.601,654,1.239,655,1.239,656,1.309,657,1.385,660,1.08,661,1.495,663,1.557,665,1.284,669,4.881,677,1.274,678,1.646,679,2.201,680,1.385,681,1.385,682,1.141,683,1.385,684,1.239,685,1.022,686,1.385,687,1.205,688,1.385,689,1.205,690,1.385,691,1.239,692,1.385,693,1.239,694,1.385,695,1.239,696,1.385,697,1.239,698,1.309,699,1.385,700,1.205,701,1.84,702,1.239,703,1.309,704,1.385,705,1.239,706,1.385,707,1.239,708,1.385,709,1.205,710,1.385,711,1.385,712,1.205,713,1.385,714,1.239,715,1.385,716,1.205,717,1.385,718,1.239,719,2.066,720,1.239,721,1.172,722,1.172,723,1.84,724,1.239,725,1.346,726,1.385,727,1.205,728,1.385,729,1.239,730,1.385,731,1.239,732,1.385,733,1.172,734,1.385,735,1.239,736,1.385,737,1.274,738,1.346,739,1.385,740,1.205,741,1.141,742,1.385,743,1.239,744,1.385,745,1.172,746,1.385,747,1.915,748,2.273,749,1.239,750,1.385,751,1.274,752,1.385,753,1.239,754,1.385,755,1.205,756,1.385,757,1.239,758,1.309,759,1.205,760,1.205,761,1.346,762,1.05,763,1.205,764,1.385,765,1.205,766,1.385,767,1.205,768,1.385,769,1.205,770,1.385,771,1.205,772,1.385,773,1.205,774,1.385,775,1.205,776,1.385,777,1.205,778,1.309,779,1.385,780,0.566,797,1.751,869,1.346,1098,2.394,1626,3.627,2948,5.128,3673,3.438,3691,5.128,3692,3.214,3713,5.435,3745,5.908,3747,4.938,3841,2.73,4279,5.128,4280,6.452,4281,5.967,4282,4.091,4283,5.435,4284,6.103,4285,4.091,4286,6.503,4287,4.091,4288,6.19,4289,4.659,4290,4.659,4291,4.659,4292,4.659,4293,6.19]],["title/injectables/ServerPayload.html",[359,1.35,1336,3.166]],["body/injectables/ServerPayload.html",[0,0.024,3,0.161,4,0.191,5,0.103,9,0.207,10,0.753,22,0.664,25,0.011,27,0.297,60,0.524,71,0.275,76,0.202,80,0.007,81,0.008,82,0.007,92,5.343,105,0.462,110,0.972,122,1.241,130,1.302,203,0.931,247,4.197,253,5.175,259,4.396,278,4.25,285,3.554,318,3.058,319,2.261,359,2.36,361,2.809,1105,4.214,1115,3.058,1314,3.554,1315,6.466,1316,4.361,1322,6.026,1323,6.587,1325,5.985,1326,6.026,1327,7.032,1329,6.026,1330,7.263,1331,6.909,1333,4.8,1334,4.033,1335,6.587,1336,5.064,1337,5.592,1338,6.587,1339,3.554,1340,6.587,1341,6.587,1342,6.026,1343,4.8,1344,6.026,1345,6.587,4294,5.467,4295,5.467,4296,5.467,4297,5.467]],["title/modules/SharedCoreModule.html",[1346,2.643,4298,2.789]],["body/modules/SharedCoreModule.html",[0,0.011,3,0.089,4,0.105,5,0.056,25,0.011,45,1.172,71,0.311,72,1.285,76,0.089,80,0.004,81,0.005,82,0.004,87,1.814,105,0.254,106,0.623,203,0.512,208,1.33,324,1.544,354,1.378,365,2.329,379,1.426,448,1.952,471,1.172,511,1.85,571,1.484,573,1.952,654,2.063,677,0.821,682,1.899,684,2.063,687,2.007,689,2.007,693,2.063,695,2.063,697,2.063,700,2.007,702,2.063,705,2.063,707,2.063,709,2.007,712,2.007,714,2.063,716,2.007,718,2.063,720,2.063,721,1.952,724,2.063,727,2.007,729,2.063,731,2.063,733,1.952,735,2.063,737,2.121,740,2.007,743,2.063,745,1.952,747,2.007,749,2.063,751,2.121,753,2.063,755,2.007,757,2.063,759,1.172,760,2.007,762,0.677,763,2.007,765,2.007,767,2.007,769,2.007,771,2.007,773,2.007,775,2.007,777,2.007,895,1.761,930,1.165,973,1.484,1082,2.397,1098,3.35,1099,2.397,1232,1.484,1240,1.953,1276,2.397,1346,1.85,1348,1.85,1349,3.764,1350,4.353,1355,3.615,1356,2.217,1362,2.073,1371,3.979,1374,3.979,1375,2.397,1831,2.217,1974,2.397,2577,2.397,2801,2.397,2866,2.397,2884,2.397,3389,3.343,3432,2.217,3504,2.397,3536,2.397,3672,2.397,3692,2.073,3903,2.397,3959,2.397,4170,2.397,4281,2.217,4298,5.905,4299,2.638,4300,2.638,4301,2.638,4302,2.638,4303,2.638,4304,3.005,4305,3.005,4306,4.532,4307,5.456,4308,4.532,4309,3.005,4310,3.005,4311,3.005,4312,2.397,4313,4.532,4314,3.005,4315,3.005,4316,3.005,4317,3.005,4318,4.532,4319,3.005,4320,3.005,4321,3.005,4322,3.005,4323,3.005,4324,3.005,4325,4.532,4326,5.456,4327,3.005,4328,3.005,4329,3.005,4330,4.532,4331,2.638,4332,3.005,4333,3.005,4334,3.005,4335,3.005,4336,3.005,4337,3.005,4338,3.005,4339,3.005,4340,3.005,4341,3.005,4342,4.532,4343,3.005,4344,3.005,4345,2.638,4346,3.005,4347,3.005,4348,3.005,4349,3.005,4350,3.005,4351,3.005,4352,3.005,4353,3.005,4354,3.005,4355,3.005,4356,3.005,4357,3.005,4358,3.343,4359,3.005,4360,3.005,4361,2.397,4362,3.005,4363,3.005,4364,3.005,4365,3.005,4366,3.005,4367,3.005,4368,3.005,4369,3.005,4370,3.005,4371,3.005,4372,2.397,4373,3.005,4374,3.005,4375,3.005,4376,3.005,4377,3.005,4378,3.005,4379,3.005,4380,3.005,4381,3.005,4382,3.005,4383,3.005,4384,3.005,4385,4.791,4386,3.005,4387,3.005,4388,3.005,4389,3.005,4390,3.005]],["title/interfaces/SimpleDate.html",[780,0.521,4391,3.166]],["body/interfaces/SimpleDate.html",[3,0.196,4,0.232,5,0.125,9,0.251,10,0.847,25,0.011,27,0.308,76,0.196,80,0.008,81,0.009,82,0.008,159,1.455,178,2.347,523,2.626,780,0.938,782,2.149,2564,4.578,2623,5.795,2625,6.198,2627,6.198,4391,5.693,4392,5.827,4393,5.827,4394,6.636,4395,6.636,4396,5.827,4397,5.827]],["title/components/SinComponent.html",[182,0.264,749,1.141]],["body/components/SinComponent.html",[0,0.01,3,0.087,4,0.103,5,0.084,7,0.662,9,0.111,10,0.489,11,1.623,13,0.559,14,2.002,17,1.836,19,0.523,22,0.734,24,1.22,25,0.011,26,0.668,27,0.322,28,0.743,29,0.767,32,1.09,35,1.066,36,1.118,37,0.458,42,1.996,44,0.97,45,0.759,48,1.061,49,0.886,56,2.743,57,0.759,58,1.235,60,0.481,71,0.226,76,0.087,80,0.007,81,0.005,82,0.004,84,0.977,88,1.256,93,2.94,105,0.248,106,0.609,108,0.916,110,0.83,114,3.893,116,0.541,117,1.247,119,3.457,120,1.575,121,1.623,122,1.068,123,1.727,124,1.591,125,1.971,126,1.971,127,2.61,128,2.61,129,3.01,130,1.732,131,3.314,132,2.503,133,3.019,134,2.213,138,0.979,139,1.214,140,1.104,141,1.008,142,1.07,143,1.175,144,1.117,146,1.104,148,2.002,149,1.104,151,1.808,152,3.11,153,3.487,155,1.396,156,2.568,157,2.61,158,1.346,159,0.977,160,0.924,161,1.45,163,1.346,166,1.971,172,0.759,173,1.509,174,1.124,178,1.575,180,2.754,181,1.396,182,0.397,191,1.038,193,1.008,195,0.951,203,0.916,208,1.971,218,0.5,219,4.431,239,3.503,241,0.737,256,2.288,273,1.783,303,0.95,336,1.346,341,1.214,358,2.124,413,2.2,418,1.175,419,2.491,427,3.072,434,2.743,437,1.449,448,0.739,471,0.759,497,0.803,523,2.352,530,3.904,566,1.45,573,0.739,592,3.153,612,1.152,654,0.781,655,0.781,656,0.825,657,0.873,660,0.68,661,1.461,663,1.121,665,0.924,677,0.803,678,1.184,679,1.785,680,0.873,681,0.873,682,0.719,683,0.873,684,0.781,685,0.644,686,0.873,687,0.759,688,0.873,689,0.759,690,0.873,691,0.781,692,0.873,693,0.781,694,0.873,695,0.781,696,0.873,697,0.781,698,0.825,699,0.873,700,0.759,701,1.324,702,0.781,703,0.825,704,0.873,705,0.781,706,0.873,707,0.781,708,0.873,709,0.759,710,0.873,711,0.873,712,0.759,713,0.873,714,0.781,715,0.873,716,0.759,717,0.873,718,0.781,719,1.599,720,0.781,721,0.739,722,0.739,723,1.324,724,0.781,725,0.848,726,0.873,727,0.759,728,0.873,729,0.781,730,0.873,731,0.781,732,0.873,733,0.739,734,0.873,735,0.781,736,0.873,737,0.803,738,0.848,739,0.873,740,0.759,741,0.719,742,0.873,743,0.781,744,0.873,745,0.739,746,0.873,747,0.759,748,0.825,749,1.597,750,0.873,751,0.803,752,0.873,753,0.781,754,0.873,755,0.759,756,0.873,757,0.781,758,0.825,759,0.759,760,0.759,761,0.848,762,0.662,763,0.759,764,0.873,765,0.759,766,0.873,767,0.759,768,0.873,769,0.759,770,0.873,771,0.759,772,0.873,773,0.759,774,0.873,775,0.759,776,0.873,777,0.759,778,0.825,779,0.873,780,0.541,791,1.392,792,1.93,835,2.503,860,2.568,869,0.848,895,3.153,924,1.256,1050,1.909,1100,1.643,1101,3.628,1102,1.572,1110,3.01,1128,3.07,1130,1.396,1158,2.257,1162,1.721,1195,3.01,1199,1.909,1203,2.288,1259,1.727,1396,2.216,1462,1.643,1470,1.909,1471,1.909,1472,1.909,1479,1.909,1480,1.909,1481,1.909,1482,1.909,1483,1.909,1484,1.909,1485,1.909,1486,1.909,1490,1.643,1493,1.909,1494,1.909,1495,1.909,1500,1.721,1504,2.895,1507,3.153,1508,3.314,1509,3.497,1510,3.497,1511,3.01,1515,2.491,1525,2.026,1540,1.909,1542,1.909,1615,1.808,1616,2.026,1658,2.385,2563,3.553,2564,3.072,2570,3.072,2571,2.895,2572,3.553,2609,3.153,2855,2.342,2856,2.342,2857,2.342,2926,1.909,3059,3.286,3477,2.166,3739,3.911,3764,2.578,3901,3.911,4208,2.578,4211,2.578,4212,2.166,4398,2.578,4399,6.199,4400,4.454,4401,4.454,4402,6.005,4403,4.454,4404,4.454,4405,2.936,4406,4.454,4407,2.936,4408,2.936,4409,6.795,4410,2.936,4411,4.454,4412,2.936,4413,2.936,4414,2.936,4415,2.936,4416,2.936,4417,2.936,4418,2.936,4419,4.454,4420,4.454,4421,2.936,4422,2.936,4423,2.936,4424,2.936,4425,2.936,4426,7.273,4427,5.38,4428,2.936,4429,2.936,4430,2.578,4431,4.454,4432,2.936,4433,6.455,4434,2.578,4435,2.936,4436,2.936,4437,2.936,4438,2.936,4439,2.936,4440,2.936,4441,2.578,4442,2.936,4443,2.936,4444,2.936,4445,4.454]],["title/components/ThumbnailComponent.html",[182,0.264,753,1.141]],["body/components/ThumbnailComponent.html",[0,0.015,3,0.122,4,0.145,5,0.108,9,0.157,10,0.628,13,0.718,19,0.487,22,0.7,24,0.919,25,0.011,26,0.625,27,0.302,28,0.543,29,0.815,32,1.4,35,0.79,36,0.741,37,0.892,44,1.031,45,1.072,48,1.362,49,0.775,57,0.974,58,1.101,60,0.242,71,0.229,76,0.122,80,0.005,81,0.007,82,0.005,88,1.772,104,1.9,105,0.35,116,0.695,117,1.517,122,1.083,124,1.591,130,1.559,144,1.186,172,0.974,174,1.083,182,0.403,203,0.706,218,0.706,241,0.686,298,3.113,325,3.306,437,1.481,448,1.043,471,1.072,497,1.133,523,1.699,563,2.693,573,1.043,612,1.479,654,1.102,655,1.102,656,1.164,657,1.232,660,0.96,661,1.488,663,1.439,665,1.186,677,1.133,678,1.52,679,2.097,680,1.232,681,1.232,682,1.014,683,1.232,684,1.102,685,0.909,686,1.232,687,1.072,688,1.232,689,1.072,690,1.232,691,1.102,692,1.232,693,1.102,694,1.232,695,1.102,696,1.232,697,1.102,698,1.164,699,1.232,700,1.072,701,1.699,702,1.102,703,1.164,704,1.232,705,1.102,706,1.232,707,1.102,708,1.232,709,1.072,710,1.232,711,1.232,712,1.072,713,1.232,714,1.102,715,1.232,716,1.072,717,1.232,718,1.102,719,1.945,720,1.102,721,1.043,722,1.043,723,1.699,724,1.102,725,1.197,726,1.232,727,1.072,728,1.232,729,1.102,730,1.232,731,1.102,732,1.232,733,1.043,734,1.232,735,1.102,736,1.232,737,1.133,738,1.197,739,1.232,740,1.072,741,1.014,742,1.232,743,1.102,744,1.232,745,1.043,746,1.232,747,1.072,748,1.164,749,1.102,750,1.232,751,1.133,752,1.232,753,1.876,754,1.232,755,1.072,756,1.232,757,1.102,758,1.164,759,1.072,760,1.072,761,1.197,762,0.934,763,1.072,764,1.232,765,1.072,766,1.232,767,1.072,768,1.232,769,1.072,770,1.232,771,1.072,772,1.232,773,1.072,774,1.232,775,1.072,776,1.232,777,1.072,778,1.164,779,1.232,783,2.022,784,2.022,791,1.479,792,1.929,868,4.346,924,2.445,1098,2.129,1203,2.129,1259,2.217,1543,1.772,1544,2.445,1545,1.772,1546,2.445,1547,2.445,1548,2.445,1549,1.772,1550,1.772,1551,2.445,1552,2.445,1553,1.772,1554,1.772,1555,1.772,1556,1.772,1557,1.772,1558,2.445,1559,2.365,1560,1.772,1561,2.445,1562,2.445,1563,1.772,1564,2.445,1565,1.772,1566,1.772,1567,1.772,1568,1.772,1569,3.018,1570,1.772,1571,1.772,1572,1.772,1573,1.772,1574,1.772,1575,1.772,1576,1.772,1577,1.772,1578,1.772,1579,1.772,1580,1.772,1581,1.772,1582,1.772,1583,1.772,1584,1.772,1585,1.772,1586,2.445,1587,1.772,1588,1.772,1589,1.772,1590,1.772,1591,1.772,1592,1.772,1593,1.772,1594,1.772,1595,1.772,1596,1.772,1597,1.772,1598,1.772,1599,1.772,1600,2.445,1601,1.772,1602,1.772,1603,1.772,1604,1.772,1605,1.772,1606,1.465,1607,1.772,1608,1.772,1609,1.772,1610,1.772,1611,1.772,1612,1.772,1613,1.772,1614,1.772,2888,3.057,2932,4.218,2933,4.218,3009,3.638,3030,4.218,3083,4.561,3128,3.306,3261,3.638,3366,4.218,3691,4.829,3692,2.859,3758,5.02,3759,5.748,3786,5.748,4446,3.638,4447,5.717,4448,5.717,4449,6.546,4450,8.294,4451,6.546,4452,6.546,4453,6.546,4454,6.546,4455,5.717,4456,5.717,4457,4.144,4458,4.144,4459,4.144,4460,4.144,4461,4.144,4462,4.144,4463,4.144,4464,4.144,4465,4.144,4466,7.057,4467,4.144,4468,4.144,4469,5.717,4470,4.144,4471,4.144,4472,4.144,4473,5.717,4474,7.057,4475,4.144,4476,5.717,4477,5.717]],["title/components/ToggleComponent.html",[182,0.264,755,1.11]],["body/components/ToggleComponent.html",[0,0.016,3,0.134,4,0.159,5,0.114,7,1.653,9,0.172,10,0.668,13,0.764,19,0.807,22,0.664,25,0.011,26,0.58,27,0.277,29,0.867,32,1.49,35,0.628,36,0.589,44,1.098,45,1.175,48,1.449,49,0.499,57,1.037,58,0.709,60,0.401,71,0.213,76,0.134,80,0.005,81,0.007,82,0.005,84,1.335,93,1.656,105,0.384,116,0.74,117,1.59,122,1.007,123,2.36,124,1.653,134,2.04,138,1.514,139,1.879,140,1.707,141,1.559,142,1.656,143,1.819,144,1.424,172,1.037,174,1.135,182,0.422,218,0.774,241,0.752,345,2.222,437,1.488,448,1.143,471,1.175,497,1.242,573,1.143,612,1.574,654,1.208,655,1.208,656,1.277,657,1.35,660,1.053,661,1.494,663,1.531,665,1.263,677,1.242,678,1.618,679,2.179,680,1.35,681,1.35,682,1.112,683,1.35,684,1.208,685,0.996,686,1.35,687,1.175,688,1.35,689,1.175,690,1.35,691,1.208,692,1.35,693,1.208,694,1.35,695,1.208,696,1.35,697,1.208,698,1.277,699,1.35,700,1.175,701,1.809,702,1.208,703,1.277,704,1.35,705,1.208,706,1.35,707,1.208,708,1.35,709,1.175,710,1.35,711,1.35,712,1.175,713,1.35,714,1.208,715,1.35,716,1.175,717,1.35,718,1.208,719,2.04,720,1.208,721,1.143,722,1.143,723,1.809,724,1.208,725,1.313,726,1.35,727,1.175,728,1.35,729,1.208,730,1.35,731,1.208,732,1.35,733,1.143,734,1.35,735,1.208,736,1.35,737,1.242,738,1.313,739,1.35,740,1.175,741,1.112,742,1.35,743,1.208,744,1.35,745,1.143,746,1.35,747,1.175,748,1.277,749,1.208,750,1.35,751,1.242,752,1.35,753,1.208,754,1.35,755,1.896,756,1.35,757,1.208,758,1.277,759,1.175,760,1.175,761,1.313,762,1.024,763,1.175,764,1.35,765,1.175,766,1.35,767,1.175,768,1.35,769,1.175,770,1.35,771,1.175,772,1.35,773,1.175,774,1.35,775,1.175,776,1.35,777,1.175,778,1.277,779,1.35,783,2.152,784,2.152,791,1.574,792,2.004,797,1.707,869,1.313,1259,2.36,1282,4.855,1291,5.475,1543,1.943,1544,2.603,1545,1.943,1546,2.603,1547,2.603,1548,2.603,1549,1.943,1550,1.943,1551,2.603,1552,2.603,1553,1.943,1554,1.943,1555,1.943,1556,1.943,1557,1.943,1558,2.603,1559,2.517,1560,1.943,1561,2.603,1562,2.603,1563,1.943,1564,2.603,1565,1.943,1566,1.943,1567,1.943,1568,1.943,1569,3.135,1570,1.943,1571,1.943,1572,1.943,1573,1.943,1574,1.943,1575,1.943,1576,1.943,1577,1.943,1578,1.943,1579,1.943,1580,1.943,1581,1.943,1582,1.943,1583,1.943,1584,1.943,1585,1.943,1586,2.603,1587,1.943,1588,1.943,1589,1.943,1590,1.943,1591,1.943,1592,1.943,1593,1.943,1594,1.943,1595,1.943,1596,1.943,1597,1.943,1598,1.943,1599,1.943,1600,2.603,1601,1.943,1602,1.943,1603,1.943,1604,1.943,1605,1.943,1606,1.606,1607,1.943,1608,1.943,1609,1.943,1610,1.943,1611,1.943,1612,1.943,1613,1.943,1614,1.943,4478,3.989,4479,6.086,4480,6.086,4481,6.086,4482,4.543,4483,4.543,4484,4.543]],["title/directives/ValidateBcPostalDirective.html",[218,0.731,767,1.11]],["body/directives/ValidateBcPostalDirective.html",[0,0.021,3,0.173,4,0.205,5,0.11,9,0.222,13,0.901,22,0.496,24,0.943,25,0.011,26,0.496,27,0.271,28,0.558,33,1.605,49,0.645,60,0.343,71,0.251,76,0.211,80,0.007,81,0.009,82,0.007,105,0.496,106,1.218,108,1.319,109,2.9,110,0.91,116,0.872,153,3.543,178,2.076,195,2.612,198,3.616,203,1.222,218,1.319,220,3.98,221,3.284,317,3.44,366,2.132,379,2.256,380,2.193,401,3.284,413,2.679,441,1.518,636,2.598,660,1.36,661,1.187,741,1.437,762,1.323,767,2.087,790,3.616,863,2.692,973,3.826,1025,6.436,1026,6.298,1027,3.44,1028,4.684,1029,4.684,1040,4.05,1283,3.289,1403,4.05,1497,4.05,1533,2.692,2803,4.77,2805,4.727,2808,3.616,2809,5.096,2811,4.417,2816,4.417,2840,2.9,3898,3.284,3899,3.616,4169,5.292,4202,4.684,4358,5.292,4485,5.155,4486,7.084,4487,5.871,4488,5.871,4489,5.155]],["title/directives/ValidateCityDirective.html",[218,0.731,769,1.11]],["body/directives/ValidateCityDirective.html",[0,0.021,3,0.176,4,0.209,5,0.112,9,0.226,13,0.91,22,0.504,24,0.96,25,0.011,26,0.504,27,0.274,28,0.567,49,0.656,60,0.349,71,0.254,76,0.214,80,0.009,81,0.009,82,0.007,105,0.504,106,1.24,108,1.329,109,2.951,110,0.917,116,0.881,153,3.581,195,2.627,203,1.329,218,1.235,220,4.01,317,3.5,366,2.155,379,2.28,380,2.216,413,2.692,636,2.644,660,1.384,661,1.199,762,1.347,769,2.099,789,3.069,1195,3.342,1283,3.324,1528,3.199,1533,2.739,2803,4.806,2805,4.573,2808,3.679,2809,5.12,2811,4.464,2816,4.464,2840,3.581,3210,4.407,3468,4.248,3898,3.342,3899,3.679,4490,6.365,4491,5.245,4492,7.126,4493,5.974,4494,5.245,4495,4.765]],["title/directives/ValidateNameDirective.html",[218,0.731,771,1.11]],["body/directives/ValidateNameDirective.html",[0,0.021,3,0.175,4,0.208,5,0.112,9,0.224,13,0.907,22,0.501,24,0.954,25,0.011,26,0.61,27,0.273,28,0.564,49,0.652,60,0.347,71,0.253,76,0.213,80,0.007,81,0.009,82,0.007,105,0.501,106,1.232,108,1.326,109,2.932,110,0.915,116,0.878,153,3.567,195,2.687,203,1.23,217,2.231,218,1.23,220,3.999,317,3.479,366,2.146,378,1.623,379,2.272,380,2.208,401,4.04,413,2.687,636,2.628,660,1.376,661,1.195,762,1.338,771,2.095,1027,3.479,1283,3.311,1528,3.179,1533,2.722,2803,4.794,2805,4.561,2808,3.656,2809,5.112,2811,4.448,2816,4.448,2840,3.567,3468,4.232,3469,4.38,3898,3.321,3899,3.656,4496,6.341,4497,5.213,4498,7.111,4499,5.937]],["title/directives/ValidatePostalcodeDirective.html",[218,0.731,773,1.11]],["body/directives/ValidatePostalcodeDirective.html",[0,0.019,3,0.154,4,0.183,5,0.099,9,0.198,13,0.839,22,0.621,24,0.842,25,0.011,26,0.442,27,0.293,28,0.498,29,1.221,32,1.636,35,0.923,36,0.866,37,1.042,49,0.575,60,0.43,71,0.234,76,0.197,80,0.006,81,0.008,82,0.006,105,0.442,106,1.087,108,1.416,109,2.588,110,0.977,116,0.812,160,2.314,174,1.217,195,2.591,203,1.253,218,1.138,220,3.78,317,3.071,366,1.986,379,2.102,380,2.043,413,2.591,636,3.256,660,1.214,661,1.105,741,1.283,762,1.181,773,2.004,832,5.737,863,2.403,870,3.866,973,2.588,1025,5.33,1027,3.071,1028,4.18,1029,4.18,1195,3.738,1283,3.064,1528,2.806,1533,2.403,2803,4.53,2805,4.311,2808,3.227,2809,5.039,2811,4.115,2812,3.406,2816,4.771,2840,3.827,3444,3.866,3468,4.689,3898,2.931,3899,3.227,4169,5.716,4202,4.18,4358,5.716,4489,4.601,4495,5.33,4500,4.601,4501,6.459,4502,8.316,4503,5.24,4504,5.24,4505,5.24,4506,5.24,4507,5.24,4508,6.682,4509,6.682,4510,5.24,4511,5.24,4512,4.601,4513,5.24,4514,5.24,4515,5.867,4516,5.24]],["title/directives/ValidateRegionDirective.html",[218,0.731,775,1.11]],["body/directives/ValidateRegionDirective.html",[0,0.021,3,0.176,4,0.209,5,0.112,9,0.226,13,0.91,22,0.504,24,0.959,25,0.011,26,0.504,27,0.274,28,0.567,49,0.655,60,0.349,71,0.253,76,0.214,80,0.009,81,0.009,82,0.007,105,0.504,106,1.238,108,1.329,109,2.947,110,0.917,116,0.88,153,3.578,195,2.627,203,1.329,218,1.234,220,4.008,317,3.497,366,2.153,379,2.279,380,2.215,413,2.691,636,2.641,660,1.383,661,1.199,762,1.345,775,2.098,1027,3.497,1283,3.322,1528,3.196,1533,2.736,2803,4.804,2805,4.571,2808,3.675,2809,5.119,2811,4.462,2816,4.462,2840,3.578,3210,4.403,3468,4.245,3898,3.338,3899,3.675,4372,5.779,4494,5.24,4517,6.361,4518,5.24,4519,7.124,4520,5.967,4521,5.967]],["title/directives/ValidateStreetDirective.html",[218,0.731,777,1.11]],["body/directives/ValidateStreetDirective.html",[0,0.021,3,0.176,4,0.209,5,0.112,9,0.226,13,0.91,22,0.504,24,0.96,25,0.011,26,0.504,27,0.274,28,0.567,49,0.656,60,0.349,71,0.254,76,0.214,80,0.009,81,0.009,82,0.007,105,0.504,106,1.24,108,1.329,109,2.951,110,0.917,116,0.881,153,3.581,195,2.627,203,1.329,218,1.235,220,4.01,317,3.5,366,2.155,379,2.28,380,2.216,413,2.692,636,2.644,660,1.384,661,1.199,762,1.347,777,2.099,778,2.281,841,3.199,1195,3.342,1283,3.324,1528,3.199,1533,2.739,2803,4.806,2805,4.573,2808,3.679,2809,5.12,2811,4.464,2816,4.464,2840,3.581,3468,4.248,3898,3.342,3899,3.679,4495,5.783,4512,5.245,4522,6.365,4523,5.245,4524,5.974]],["title/components/WizardProgressBarComponent.html",[182,0.264,757,1.141]],["body/components/WizardProgressBarComponent.html",[0,0.012,3,0.103,4,0.123,5,0.096,9,0.133,10,0.558,13,0.638,19,0.412,20,1.961,21,3.58,22,0.678,24,0.816,25,0.011,26,0.587,27,0.274,28,0.482,32,1.243,35,0.484,36,0.455,44,0.916,45,0.907,46,3.235,48,1.21,49,0.763,57,0.865,58,0.932,65,2.033,67,3.504,69,1.403,71,0.243,72,1.499,76,0.103,80,0.004,81,0.006,82,0.004,88,2.172,99,3.199,104,1.607,105,0.296,110,0.702,116,0.617,117,1.384,122,0.988,124,1.476,130,1.781,144,1.054,159,0.769,160,1.598,172,1.115,174,0.84,182,0.368,187,1.318,203,1.184,218,0.597,273,1.403,276,2.797,303,0.748,304,1.693,319,2.471,322,1.877,358,1.24,437,1.467,448,0.882,471,0.907,482,2.586,497,0.958,523,2.154,532,1.731,533,1.551,573,0.882,611,2.976,612,1.314,654,0.932,655,0.932,656,0.985,657,1.042,660,0.812,661,1.476,663,1.278,665,1.054,677,0.958,678,1.35,679,1.947,680,1.042,681,1.042,682,0.858,683,1.042,684,0.932,685,0.769,686,1.042,687,0.907,688,1.042,689,0.907,690,1.042,691,0.932,692,1.042,693,0.932,694,1.042,695,0.932,696,1.042,697,0.932,698,0.985,699,1.042,700,0.907,701,1.51,702,0.932,703,0.985,704,1.042,705,0.932,706,1.042,707,0.932,708,1.042,709,0.907,710,1.042,711,1.042,712,0.907,713,1.042,714,0.932,715,1.042,716,0.907,717,1.042,718,0.932,719,1.775,720,0.932,721,0.882,722,0.882,723,1.51,724,0.932,725,1.013,726,1.042,727,0.907,728,1.042,729,0.932,730,1.042,731,0.932,732,1.042,733,0.882,734,1.042,735,0.932,736,1.042,737,0.958,738,1.013,739,1.042,740,0.907,741,0.858,742,1.042,743,0.932,744,1.042,745,0.882,746,1.042,747,0.907,748,0.985,749,0.932,750,1.042,751,0.958,752,1.042,753,0.932,754,1.042,755,0.907,756,1.042,757,1.741,758,2.101,759,2.268,760,0.907,761,1.013,762,0.79,763,0.907,764,1.042,765,0.907,766,1.042,767,0.907,768,1.042,769,0.907,770,1.042,771,0.907,772,1.042,773,0.907,774,1.042,775,0.907,776,1.042,777,0.907,778,0.985,779,1.042,783,1.796,784,1.796,838,2.418,860,2.172,930,1.359,1038,4.46,1057,2.159,1089,4.257,1096,2.054,1098,2.61,1129,4.121,1184,2.279,1230,2.841,1232,2.509,1240,3.302,1250,2.976,1271,4.121,1339,2.279,1396,2.05,1517,3.302,1543,1.499,1544,2.172,1545,1.499,1546,2.172,1547,2.172,1548,2.172,1549,1.499,1550,1.499,1551,2.172,1552,2.172,1553,1.499,1554,1.499,1555,1.499,1556,1.499,1557,1.499,1558,2.172,1559,2.101,1560,1.499,1561,2.172,1562,2.172,1563,1.499,1564,2.172,1565,1.499,1566,1.499,1567,1.499,1568,1.499,1569,2.801,1570,1.499,1571,1.499,1572,1.499,1573,1.499,1574,1.499,1575,1.499,1576,1.499,1577,1.499,1578,1.499,1579,1.499,1580,1.499,1581,1.499,1582,1.499,1583,1.499,1584,1.499,1585,1.499,1586,2.172,1587,1.499,1588,1.499,1589,1.499,1590,1.499,1591,1.499,1592,1.499,1593,1.499,1594,1.499,1595,1.499,1596,1.499,1597,1.499,1598,1.499,1599,1.499,1600,2.172,1601,1.499,1602,1.499,1603,1.499,1604,1.499,1605,1.499,1606,1.24,1607,1.499,1608,1.499,1609,1.499,1610,1.499,1611,1.499,1612,1.499,1613,1.499,1614,1.499,1658,1.877,1794,2.976,1795,2.159,1804,2.418,1815,3.078,1817,3.078,1852,3.128,1859,4.765,1877,5.225,1881,4.765,1890,4.765,1892,3.883,2609,3.838,2669,3.302,2875,3.078,2977,3.078,3000,6.104,3014,2.418,3131,3.504,3390,2.586,3391,4.052,3392,4.052,3400,3.078,3401,3.078,3406,2.797,3409,4.46,3436,4.052,3628,5.245,3629,3.078,3630,3.078,3631,3.078,3750,4.052,4212,2.586,4312,6.474,4396,4.46,4525,7.126,4526,5.973,4527,5.079,4528,5.973,4529,5.973,4530,5.973,4531,6.549,4532,5.079,4533,6.549,4534,5.079,4535,3.505,4536,3.505,4537,5.079,4538,3.505,4539,3.505,4540,3.505,4541,3.505,4542,5.079,4543,4.46,4544,5.079,4545,5.245,4546,4.46,4547,5.079,4548,4.46,4549,5.079,4550,5.973,4551,5.079,4552,3.505,4553,3.505,4554,3.505,4555,3.505,4556,3.505,4557,3.505,4558,3.505,4559,3.505,4560,3.505,4561,3.505,4562,3.505,4563,3.505,4564,5.973,4565,3.505,4566,3.505,4567,3.505,4568,3.505,4569,2.586,4570,3.505,4571,3.505,4572,3.505,4573,6.952,4574,3.505,4575,5.079,4576,3.505,4577,3.505,4578,3.505,4579,3.505,4580,3.505,4581,5.079,4582,3.505,4583,3.505,4584,3.505,4585,3.505,4586,3.505,4587,3.505,4588,3.505,4589,3.505,4590,3.505,4591,3.505,4592,3.505,4593,3.505,4594,3.505,4595,3.505,4596,5.079]],["title/interfaces/WizardProgressItem.html",[780,0.521,1892,2.789]],["body/interfaces/WizardProgressItem.html",[0,0.025,3,0.209,4,0.169,5,0.091,7,1.089,9,0.183,10,0.696,16,2.386,17,2.385,19,0.745,25,0.011,27,0.24,29,0.903,37,0.753,44,1.444,46,3.954,48,1.15,52,1.519,58,0.753,60,0.494,65,3.352,71,0.248,72,2.066,76,0.221,80,0.006,81,0.008,82,0.006,84,1.059,108,0.823,110,0.745,116,0.587,130,1.685,134,2.103,178,1.708,211,2.538,236,2.587,288,2.138,319,1.998,336,3.244,378,1.732,418,1.934,438,5.057,441,1.943,461,4.599,505,3.853,625,5.644,669,4.93,678,1.284,758,1.357,759,1.249,780,0.77,782,1.564,869,1.396,948,3.332,1213,3.546,1400,2.83,1755,5.542,1852,5.098,1853,3.853,1854,3.563,1855,3.853,1856,4.241,1857,4.241,1858,5.057,1859,5.057,1860,5.566,1861,3.714,1862,5.523,1863,4.241,1864,4.241,1865,4.241,1866,4.241,1867,4.241,1868,4.241,1869,3.563,1870,4.241,1871,4.241,1872,4.241,1873,4.241,1874,3.853,1875,3.563,1876,4.241,1877,3.853,1878,4.241,1879,4.241,1880,5.182,1881,3.853,1882,3.332,1883,3.853,1885,4.241,1886,4.241,1887,4.241,1890,5.057,1892,4.599,1894,3.853,1895,4.676,1898,5.644,1900,5.644,1901,4.241,1903,4.241,1904,4.241,1905,5.057,1909,4.241,1911,4.676,1913,4.241,1914,4.241,1915,4.241,1916,4.241,1917,4.241,1918,4.241,1919,4.241,1920,4.241,1921,4.241,1922,4.241,1923,4.241,1924,5.566,1925,4.241,1926,4.241,1927,4.241,1928,4.241,1929,4.881,1930,5.566,1931,4.241,1932,5.566,1933,4.241,1934,5.057,1935,4.241,1936,4.241]],["title/components/XiconButtonComponent.html",[182,0.264,760,1.11]],["body/components/XiconButtonComponent.html",[0,0.016,3,0.135,4,0.161,5,0.115,9,0.174,13,0.77,19,0.811,22,0.667,25,0.011,26,0.583,27,0.261,32,1.501,33,1.255,42,1.188,44,1.106,45,1.188,48,1.88,49,0.673,57,1.044,58,0.956,60,0.358,71,0.215,76,0.135,80,0.006,81,0.007,82,0.006,105,0.388,116,0.745,117,1.599,124,1.66,134,2.464,144,1.272,172,1.175,174,1.014,175,3.169,176,4.033,182,0.425,187,2.304,203,0.782,205,3.389,218,0.782,234,3.985,241,1.142,288,2.033,401,2.569,434,2.829,437,1.489,441,1.586,448,1.156,471,1.188,497,1.255,548,2.829,573,1.156,589,4.523,612,1.586,654,1.221,655,1.221,656,1.291,657,1.365,660,1.064,661,1.494,663,1.543,665,1.272,674,5.08,677,1.255,678,1.63,679,2.189,680,1.365,681,1.365,682,1.124,683,1.365,684,1.221,685,1.007,686,1.365,687,1.188,688,1.365,689,1.188,690,1.365,691,1.221,692,1.365,693,1.221,694,1.365,695,1.221,696,1.365,697,1.221,698,1.291,699,1.365,700,1.188,701,1.822,702,1.221,703,1.291,704,1.365,705,1.221,706,1.365,707,1.221,708,1.365,709,1.188,710,1.365,711,1.365,712,1.188,713,1.365,714,1.221,715,1.365,716,1.188,717,1.365,718,1.221,719,2.051,720,1.221,721,1.156,722,1.156,723,1.822,724,1.221,725,1.327,726,1.365,727,1.188,728,1.365,729,1.221,730,1.365,731,1.221,732,1.365,733,1.156,734,1.365,735,1.221,736,1.365,737,1.255,738,1.327,739,1.365,740,1.188,741,1.124,742,1.365,743,1.221,744,1.365,745,1.156,746,1.365,747,1.188,748,1.291,749,1.221,750,1.365,751,1.255,752,1.365,753,1.221,754,1.365,755,1.188,756,1.365,757,1.221,758,1.291,759,1.188,760,1.905,761,2.396,762,1.035,763,1.188,764,1.365,765,1.188,766,1.365,767,1.188,768,1.365,769,1.188,770,1.365,771,1.188,772,1.365,773,1.188,774,1.365,775,1.188,776,1.365,777,1.188,778,1.291,779,1.365,791,1.785,792,2.203,845,2.691,890,2.033,924,1.964,1057,2.829,1188,4.523,1239,2.269,1256,5.383,1259,2.378,1788,3.664,3783,4.891,4361,6.429,4597,7.076,4598,3.664,4599,6.131,4600,7.364,4601,5.506,4602,6.131,4603,4.593,4604,6.466,4605,4.593,4606,4.593,4607,4.593,4608,4.593,4609,4.593,4610,4.593,4611,6.131,4612,4.593,4613,4.593,4614,4.593,4615,4.593,4616,4.593,4617,4.593,4618,4.593]],["title/changelog.html",[4619,2.1,4620,2.1,4621,3.147]],["body/changelog.html",[0,0.017,2,0.548,3,0.07,5,0.11,7,0.538,13,0.3,14,2.079,18,2.334,19,0.161,22,0.116,24,0.383,25,0.008,26,0.495,27,0.12,28,0.227,32,0.335,33,1.036,34,1.011,35,0.904,36,0.491,37,0.214,39,1.178,40,0.89,42,1.311,43,1.277,44,1.203,46,1.178,48,0.568,49,0.15,52,0.431,56,0.844,57,1.09,60,0.276,64,1.011,65,1.517,66,0.734,68,1.334,69,1.268,71,0.083,73,1.903,75,1.903,76,0.112,80,0.002,81,0.004,82,0.004,92,3.122,99,1.277,109,0.677,110,0.445,114,0.651,118,0.896,120,0.843,122,0.395,127,0.803,134,2.017,142,1.155,144,1.169,152,0.586,156,1.837,157,1.856,158,2.324,160,0.431,172,1.174,174,1.082,177,2.782,178,1.899,180,1.452,181,1.134,182,0.487,183,2.963,185,0.89,187,2.117,192,2.645,194,2.185,195,2.02,198,1.951,199,0.766,201,0.734,202,1.203,208,2.243,211,0.548,214,2.614,217,0.515,218,0.406,220,1.226,221,4.55,234,0.89,236,0.734,239,1.677,240,2.185,241,0.889,243,0.766,245,1.567,248,2.506,251,1.093,255,1.093,273,1.268,274,0.89,277,0.896,282,1.093,298,1.134,303,1.293,306,1.402,308,0.443,323,0.734,327,0.844,332,1.452,338,2.059,341,3.276,342,2.527,343,1.093,345,1.026,347,0.844,349,1.903,351,1.203,354,1.452,357,2.059,363,1.772,373,1.507,376,0.484,378,0.652,392,0.844,394,1.76,401,1.334,403,1.093,413,1.227,418,1.268,419,2.12,426,2.059,427,4.043,428,1.772,429,1.093,432,1.011,434,3.122,437,1.46,439,2.094,440,4.15,441,1.457,442,5.164,443,5.159,446,1.011,476,0.734,478,0.803,480,1.226,482,1.011,487,1.203,489,3.886,497,0.866,498,3.253,509,2.933,511,1.951,517,2.337,523,1.126,524,3.023,530,0.89,532,2.329,533,3.004,534,1.093,535,0.945,541,0.945,544,1.093,546,1.203,556,0.803,559,1.203,563,0.89,566,0.677,571,1.565,572,1.565,573,0.345,575,1.872,576,2.043,578,1.334,580,4.756,581,1.203,582,1.76,583,1.093,588,1.772,589,1.76,593,1.334,597,0.987,600,2.12,601,0.844,609,1.093,611,0.803,612,0.354,655,0.842,674,2.185,678,0.364,682,1.315,685,1.604,687,0.617,689,0.98,691,0.364,698,0.385,700,1.111,707,1.254,712,0.354,716,0.354,721,0.345,722,0.6,725,1.241,727,0.98,733,0.6,735,0.364,738,1.751,740,0.354,741,1.315,745,1.275,748,0.67,755,0.819,760,0.354,780,0.166,782,0.443,783,0.843,784,0.843,786,1.011,789,1.628,790,1.469,796,1.628,798,0.734,802,0.704,809,0.89,815,1.134,818,1.697,820,1.697,822,0.766,826,1.011,828,2.337,832,0.945,835,0.531,839,1.011,840,1.011,841,2.525,843,1.011,845,2.221,848,1.011,854,0.844,860,1.355,861,0.651,862,2.763,863,3.285,867,3.705,876,0.766,882,0.89,890,0.606,894,2.221,895,0.803,905,0.803,913,2.334,917,1.76,918,2.059,924,2.797,927,0.945,930,0.531,934,0.945,935,1.398,947,1.011,960,2.763,962,1.134,973,1.178,1005,2.094,1017,2.782,1044,2.094,1050,0.89,1057,2.904,1059,1.203,1063,2.221,1080,1.011,1105,1.277,1112,1.093,1115,0.766,1122,1.093,1158,1.191,1162,1.398,1174,0.945,1184,0.89,1186,1.093,1194,2.963,1195,0.766,1196,2.337,1197,1.093,1203,3.932,1213,0.766,1230,2.836,1231,0.844,1236,0.945,1239,3.454,1241,1.76,1242,1.645,1249,0.945,1250,3.3,1253,1.203,1254,1.093,1281,2.094,1282,2.527,1283,0.628,1337,3.253,1346,1.469,1347,1.55,1362,0.945,1364,2.094,1368,2.185,1396,1.087,1397,0.89,1400,2.221,1422,1.011,1426,1.011,1428,1.903,1440,1.093,1442,1.093,1447,0.945,1466,1.011,1497,3.705,1509,3.491,1510,2.059,1531,1.011,1533,1.452,1625,1.398,1643,0.844,1652,0.89,1654,0.844,1663,1.55,1669,0.766,1678,1.134,1679,0.89,1724,1.093,1728,0.945,1731,2.796,1732,1.203,1748,1.011,1749,3.147,1753,2.782,1759,4.753,1778,1.203,1788,1.093,1794,2.97,1816,1.203,1848,1.093,1852,2.334,1855,1.093,1869,1.011,1892,0.89,1894,1.093,1955,2.094,1976,3.963,1985,1.645,1986,1.203,2554,0.803,2570,2.614,2579,3.427,2585,0.734,2593,2.527,2597,0.844,2600,1.76,2609,0.803,2612,2.185,2623,2.963,2625,1.011,2627,1.011,2657,1.093,2672,1.903,2682,1.093,2713,1.093,2774,2.527,2784,2.094,2805,0.803,2812,0.89,2817,2.792,2820,1.76,2822,4.451,2840,0.677,2842,2.792,2891,1.011,2893,1.203,2926,4.335,2927,1.093,2929,2.527,2948,2.337,2952,1.203,2961,1.903,2967,1.903,2989,1.203,3013,2.094,3014,1.645,3015,0.803,3030,2.796,3031,2.094,3035,4.977,3040,5.218,3055,1.011,3059,2.796,3063,4.285,3066,4.044,3074,1.903,3082,3.772,3083,1.093,3106,2.337,3128,1.903,3130,3.328,3172,1.203,3173,1.093,3183,1.203,3197,6.376,3200,1.011,3211,1.203,3221,1.203,3233,1.76,3266,1.55,3271,1.203,3298,2.337,3301,2.094,3302,1.203,3385,1.203,3402,1.903,3406,1.093,3413,4.285,3417,1.203,3427,1.093,3477,1.011,3505,2.334,3593,3.772,3595,1.903,3596,0.945,3649,5.578,3651,1.093,3654,1.903,3662,1.093,3675,1.203,3677,2.094,3714,1.093,3717,1.203,3719,1.011,3742,5.322,3744,4.716,3750,1.093,3765,2.094,3776,1.203,3778,2.094,3783,1.093,3802,2.337,3838,1.093,3841,0.803,3872,1.203,3905,1.203,3910,1.203,3972,1.203,3977,2.094,4001,1.903,4029,1.76,4054,1.903,4065,4.512,4070,1.093,4103,2.094,4116,2.094,4142,0.89,4144,5.743,4151,1.093,4212,2.796,4391,1.76,4399,4.945,4430,1.203,4434,1.203,4441,2.094,4543,2.094,4548,2.094,4569,2.337,4601,1.093,4604,4.14,4619,0.803,4620,1.856,4621,4.451,4622,1.37,4623,6.992,4624,6.239,4625,1.37,4626,8.615,4627,1.37,4628,1.37,4629,4.296,4630,3.772,4631,1.37,4632,6.398,4633,3.168,4634,4.296,4635,1.37,4636,1.37,4637,4.824,4638,1.37,4639,1.37,4640,1.37,4641,8.389,4642,1.37,4643,1.37,4644,1.37,4645,1.37,4646,1.37,4647,1.37,4648,1.37,4649,5.632,4650,1.37,4651,1.203,4652,1.37,4653,2.385,4654,1.37,4655,1.37,4656,6.421,4657,6.398,4658,2.385,4659,1.37,4660,4.715,4661,1.37,4662,3.772,4663,1.37,4664,1.37,4665,1.37,4666,4.715,4667,3.328,4668,1.37,4669,1.37,4670,4.296,4671,1.37,4672,1.37,4673,1.37,4674,1.37,4675,1.37,4676,1.37,4677,1.37,4678,1.37,4679,1.37,4680,6.67,4681,4.451,4682,3.168,4683,1.37,4684,1.37,4685,1.37,4686,1.37,4687,1.37,4688,1.37,4689,1.37,4690,1.37,4691,1.37,4692,1.37,4693,2.385,4694,1.37,4695,1.37,4696,1.37,4697,1.37,4698,1.37,4699,4.14,4700,1.37,4701,1.37,4702,1.37,4703,1.37,4704,2.385,4705,2.385,4706,1.37,4707,1.37,4708,1.37,4709,1.37,4710,1.37,4711,1.37,4712,1.37,4713,1.37,4714,1.37,4715,1.37,4716,2.385,4717,1.203,4718,1.37,4719,1.37,4720,1.37,4721,1.37,4722,2.385,4723,1.37,4724,1.37,4725,1.37,4726,1.37,4727,3.772,4728,1.37,4729,1.37,4730,1.37,4731,2.782,4732,1.37,4733,6.831,4734,1.37,4735,1.37,4736,1.37,4737,1.37,4738,1.37,4739,3.168,4740,1.37,4741,1.37,4742,1.37,4743,1.37,4744,1.37,4745,1.37,4746,1.37,4747,1.37,4748,1.37,4749,1.37,4750,1.37,4751,1.37,4752,1.37,4753,1.37,4754,1.37,4755,1.37,4756,1.37,4757,7.667,4758,1.903,4759,1.37,4760,1.37,4761,1.37,4762,1.37,4763,1.37,4764,1.37,4765,1.37,4766,1.37,4767,1.37,4768,1.37,4769,1.37,4770,1.37,4771,1.37,4772,1.37,4773,1.37,4774,1.37,4775,1.37,4776,1.37,4777,1.37,4778,1.37,4779,1.37,4780,1.37,4781,1.37,4782,1.37,4783,1.37,4784,1.37,4785,1.37,4786,6.992,4787,1.37,4788,3.79,4789,1.37,4790,1.37,4791,1.37,4792,1.37,4793,1.37,4794,1.37,4795,1.37,4796,1.37,4797,3.168,4798,1.37,4799,1.37,4800,1.37,4801,1.37,4802,1.37,4803,1.37,4804,1.37,4805,1.37,4806,1.37,4807,1.37,4808,1.37,4809,1.37,4810,1.37,4811,1.37,4812,1.37,4813,2.385,4814,2.385,4815,1.37,4816,1.37,4817,1.37,4818,2.385,4819,1.37,4820,1.37,4821,2.385,4822,2.385,4823,2.385,4824,1.37,4825,1.37,4826,1.37,4827,1.37,4828,1.37,4829,2.385,4830,1.37,4831,1.37,4832,1.37,4833,1.37,4834,1.37,4835,1.37,4836,1.37,4837,1.37,4838,1.37,4839,1.37,4840,1.37,4841,1.37,4842,1.37,4843,1.37,4844,1.37,4845,1.37,4846,2.385,4847,1.37,4848,1.37,4849,1.37,4850,1.37,4851,1.37,4852,1.37,4853,1.37,4854,1.37,4855,1.37,4856,1.37,4857,1.37,4858,1.37,4859,1.37,4860,1.37,4861,1.37,4862,1.37,4863,1.37,4864,1.37,4865,3.168,4866,2.385,4867,1.37,4868,1.37,4869,3.328,4870,3.168,4871,1.37,4872,1.37,4873,1.37,4874,1.37,4875,1.37,4876,1.37,4877,1.37,4878,1.37,4879,1.37,4880,1.37,4881,1.37,4882,1.37,4883,1.37,4884,1.37,4885,1.37,4886,1.37,4887,1.37,4888,1.37,4889,1.37,4890,3.168,4891,4.715,4892,1.37,4893,1.37,4894,1.37,4895,1.37,4896,1.37,4897,2.385,4898,1.37,4899,1.37,4900,2.385,4901,3.168,4902,1.37,4903,1.37,4904,1.37,4905,1.37,4906,1.37,4907,1.37,4908,1.37,4909,1.37,4910,1.37,4911,2.385,4912,1.37,4913,1.37,4914,3.427,4915,1.37,4916,1.37,4917,3.168,4918,1.37,4919,1.37,4920,1.903,4921,2.385,4922,1.37,4923,1.37,4924,1.37,4925,1.37,4926,1.37,4927,1.37,4928,1.37,4929,1.37,4930,1.37,4931,1.37,4932,1.37,4933,1.37,4934,1.37,4935,1.37,4936,1.37,4937,1.37,4938,1.37,4939,1.37,4940,1.37,4941,1.37,4942,1.37,4943,1.37,4944,1.37,4945,1.37,4946,2.527,4947,1.37,4948,1.203,4949,1.37,4950,1.37,4951,1.37,4952,1.37,4953,1.203,4954,1.37,4955,2.385,4956,1.37,4957,1.37,4958,1.37,4959,1.37,4960,1.37,4961,1.37,4962,1.37,4963,1.37,4964,1.37,4965,1.37,4966,1.37,4967,1.37,4968,1.37,4969,1.37,4970,1.37,4971,1.203,4972,1.37,4973,1.37,4974,1.37,4975,2.385,4976,1.37,4977,1.37,4978,1.37,4979,1.37,4980,1.37,4981,1.37,4982,1.37,4983,1.37,4984,1.37,4985,1.37,4986,1.37,4987,1.37,4988,1.37,4989,1.37,4990,1.37,4991,1.37,4992,1.37,4993,1.37,4994,3.168,4995,1.203,4996,1.37,4997,1.37,4998,2.094,4999,1.37,5000,2.385,5001,1.37,5002,1.37,5003,1.37,5004,1.37,5005,1.37,5006,1.37,5007,1.37,5008,1.37,5009,1.37,5010,1.37,5011,1.37,5012,1.37,5013,1.37,5014,1.37,5015,1.37,5016,2.385,5017,1.37,5018,1.37,5019,1.37,5020,1.37,5021,1.37,5022,1.37,5023,1.37,5024,1.37,5025,1.37,5026,1.093,5027,1.37,5028,1.37,5029,1.37,5030,1.37,5031,1.37,5032,1.37,5033,1.37,5034,1.37,5035,1.37,5036,1.37,5037,1.37,5038,1.37,5039,1.37,5040,1.37,5041,1.37,5042,1.37,5043,1.37,5044,1.37,5045,1.37,5046,1.37,5047,1.37,5048,1.37,5049,1.37,5050,2.385,5051,1.37,5052,1.37,5053,1.37,5054,1.37,5055,1.37,5056,2.385,5057,1.37,5058,1.37,5059,1.37,5060,1.203,5061,6.67,5062,1.37,5063,1.37,5064,1.37,5065,1.37,5066,1.37,5067,1.37,5068,1.37,5069,1.37,5070,1.37,5071,1.37,5072,0.945,5073,1.37,5074,1.37,5075,3.79,5076,1.37,5077,1.37,5078,1.37,5079,1.37,5080,2.385,5081,1.37,5082,1.37,5083,1.37,5084,1.37,5085,1.37,5086,1.37,5087,1.37,5088,1.37,5089,1.37,5090,1.37,5091,1.37,5092,1.37,5093,1.37,5094,1.37,5095,1.37,5096,1.37,5097,1.37,5098,1.37,5099,1.37,5100,2.385,5101,1.37,5102,1.37,5103,1.37,5104,2.385,5105,1.37,5106,1.37,5107,1.37,5108,1.37,5109,1.37,5110,1.37,5111,1.37,5112,3.79,5113,1.37,5114,1.37,5115,1.37,5116,1.37,5117,1.37,5118,1.37,5119,1.37,5120,1.37,5121,6.398,5122,1.37,5123,1.37,5124,1.37,5125,1.37,5126,3.79,5127,1.37,5128,1.37,5129,3.168,5130,1.37,5131,1.37,5132,1.37,5133,1.203,5134,1.37,5135,3.79,5136,1.37,5137,1.37,5138,1.37,5139,1.37,5140,1.37,5141,1.37,5142,1.37,5143,1.37,5144,1.37,5145,1.37,5146,1.37,5147,1.37,5148,1.37,5149,1.37,5150,1.37,5151,1.37,5152,1.093,5153,1.37,5154,4.296,5155,1.203,5156,1.37,5157,1.37,5158,1.37,5159,1.37,5160,1.37,5161,1.37,5162,1.37,5163,1.37,5164,1.37,5165,1.37,5166,1.37,5167,1.37,5168,3.168,5169,1.37,5170,1.37,5171,1.37,5172,1.37,5173,1.37,5174,1.37,5175,1.37,5176,1.37,5177,1.37,5178,1.37,5179,1.37,5180,1.37,5181,1.37,5182,1.37,5183,1.37,5184,1.37,5185,1.37,5186,1.203,5187,1.37,5188,1.37,5189,2.385,5190,1.37,5191,1.37,5192,1.37,5193,2.385,5194,1.37,5195,1.203,5196,1.37,5197,1.37,5198,1.37,5199,1.37,5200,1.37,5201,3.023,5202,1.37,5203,1.37,5204,1.37,5205,3.328,5206,1.37,5207,1.37,5208,1.37,5209,1.37,5210,1.37,5211,1.37,5212,1.37,5213,1.37,5214,1.37,5215,1.37,5216,1.37,5217,1.37,5218,1.203,5219,1.203,5220,1.203,5221,1.37,5222,1.37,5223,1.37,5224,1.37,5225,2.782,5226,1.37,5227,1.37,5228,1.37,5229,1.37,5230,1.37,5231,2.782,5232,1.903,5233,1.37,5234,1.37,5235,1.37,5236,1.37,5237,1.37,5238,1.37,5239,1.37,5240,1.37,5241,1.37,5242,1.37,5243,1.37,5244,1.37,5245,1.37,5246,1.37,5247,1.37,5248,1.37,5249,1.37,5250,1.37,5251,1.37,5252,1.37,5253,1.37,5254,1.37,5255,1.37,5256,1.37,5257,1.37,5258,1.37,5259,1.37,5260,1.37,5261,1.37,5262,1.37,5263,1.37,5264,1.37,5265,1.37,5266,1.37,5267,1.37,5268,1.37,5269,1.37,5270,1.203,5271,1.37,5272,1.37,5273,1.37,5274,1.37,5275,1.37,5276,1.37,5277,1.37,5278,1.37,5279,1.37,5280,1.37,5281,1.37,5282,1.37,5283,1.37,5284,1.37,5285,1.203,5286,1.37,5287,1.37,5288,1.203,5289,1.37,5290,1.37,5291,1.203,5292,1.37,5293,1.37,5294,1.203,5295,1.37,5296,1.37,5297,3.79,5298,1.37,5299,2.094,5300,1.37,5301,1.37,5302,1.093,5303,1.37,5304,1.37,5305,1.37,5306,1.37,5307,1.37,5308,1.37,5309,1.203,5310,1.203,5311,1.37,5312,2.385,5313,1.37,5314,1.37,5315,1.37,5316,1.203,5317,1.37,5318,1.37,5319,1.203,5320,1.011,5321,1.37,5322,1.37,5323,1.37,5324,1.37,5325,1.37,5326,1.37,5327,1.37,5328,1.37,5329,1.37,5330,1.37,5331,1.37,5332,1.37,5333,1.37,5334,1.37,5335,1.37,5336,0.945,5337,1.203,5338,1.37,5339,1.203,5340,1.37,5341,1.37,5342,1.37,5343,2.385,5344,1.37,5345,1.37,5346,1.37,5347,1.37,5348,1.37,5349,2.094,5350,1.37,5351,1.37,5352,1.37,5353,1.37,5354,1.37,5355,1.37,5356,1.37,5357,1.37,5358,1.37,5359,1.37,5360,1.37,5361,1.37,5362,1.37,5363,1.37,5364,1.37,5365,1.37,5366,1.37,5367,1.37,5368,1.37,5369,1.37]],["title/coverage.html",[5370,5.142]],["body/coverage.html",[0,0.028,1,1.948,5,0.053,6,4.06,7,0.974,8,3.875,25,0.011,27,0.107,44,0.509,45,1.118,57,1.08,73,2.252,80,0.003,81,0.005,82,0.003,83,2.252,114,1.343,115,2.479,133,1.207,140,1.061,160,2.728,171,2.252,175,1.948,182,0.536,208,1.25,218,1.223,241,0.467,243,1.579,244,3.875,245,1.168,246,2.479,298,1.343,347,1.739,358,3.184,359,2.364,360,1.948,362,4.616,363,2.418,377,1.948,387,1.835,388,1.948,389,2.479,392,1.739,402,2.252,403,2.252,432,2.083,433,2.479,434,1.739,435,2.479,448,0.71,471,1.118,474,2.418,523,0.839,573,0.71,654,0.751,658,2.479,682,0.691,684,0.751,685,0.619,687,0.73,689,0.73,691,0.751,693,0.751,695,0.751,697,0.751,700,0.73,702,0.751,705,0.751,707,0.751,709,0.73,712,0.73,714,0.751,716,0.73,718,0.751,720,0.751,721,0.71,724,0.751,727,0.73,729,0.751,731,0.751,733,0.71,735,0.751,737,0.772,740,0.73,743,0.751,745,0.71,747,0.73,749,0.751,751,0.772,753,0.751,755,0.73,757,0.751,759,1.118,760,0.73,763,0.73,765,0.73,767,0.73,769,0.73,771,0.73,773,0.73,775,0.73,777,0.73,778,0.793,780,1.016,781,1.948,785,4.342,798,1.512,801,1.835,802,1.451,803,1.948,805,1.835,806,1.835,807,1.948,809,1.835,810,1.948,861,1.343,867,4.06,927,6.048,973,2.135,1002,2.479,1080,2.083,1081,3.796,1082,3.448,1083,3.796,1101,1.451,1194,2.982,1195,2.418,1203,1.451,1228,2.479,1233,2.533,1235,2.479,1275,2.479,1276,2.252,1277,2.479,1314,1.835,1315,3.448,1316,3.448,1336,2.083,1376,2.083,1377,3.448,1378,3.448,1416,2.083,1458,2.479,1505,2.479,1517,5.248,1618,1.739,1619,3.907,1627,3.907,1637,1.654,1682,1.654,1686,1.579,1717,2.252,1718,4.19,1731,2.083,1749,1.654,1830,2.252,1831,2.083,1832,2.252,1852,1.739,1853,3.448,1861,1.654,1862,1.948,1892,1.835,1895,2.083,1937,3.796,1973,2.479,1974,2.252,1975,2.479,1995,5.876,1998,2.479,2548,2.479,2561,2.083,2562,3.875,2609,1.654,2623,1.948,2687,2.479,2688,2.479,2749,2.083,2750,4.612,2766,2.479,2767,2.479,2778,2.479,2800,4.612,2801,4.19,2802,4.612,2804,2.479,2813,2.479,2819,2.479,2865,2.479,2866,2.252,2867,2.479,2872,5.168,2873,5.168,2878,2.479,2882,2.252,2883,5.57,2884,5.061,2890,2.252,2907,1.739,2912,2.479,2914,2.252,3015,3.449,3019,3.448,3022,4.19,3025,3.623,3035,2.252,3040,4.19,3054,3.623,3055,3.189,3059,2.083,3063,5.061,3066,2.252,3074,2.252,3388,3.448,3389,3.189,3390,3.875,3402,2.252,3431,3.448,3432,3.189,3433,3.448,3463,2.083,3472,1.948,3502,3.448,3505,1.739,3535,2.479,3536,2.252,3537,2.479,3590,2.479,3647,2.083,3648,3.448,3667,2.252,3670,2.252,3671,3.796,3672,3.448,3673,4.342,3830,2.479,3860,2.479,3861,2.479,3871,2.479,3902,3.448,3903,2.252,3904,2.479,3919,2.083,3920,3.448,3921,3.448,3959,2.252,3960,2.479,3998,4.19,4024,2.083,4029,2.083,4063,2.252,4109,2.479,4169,4.937,4170,2.252,4171,2.479,4219,5.57,4245,2.479,4267,2.479,4279,2.083,4280,3.448,4281,3.189,4302,2.479,4303,2.479,4312,2.252,4345,2.479,4358,4.68,4361,2.252,4372,3.448,4385,2.479,4391,2.083,4392,2.479,4393,2.479,4398,2.479,4446,2.479,4478,2.479,4485,3.796,4486,2.479,4490,3.796,4491,3.796,4492,2.479,4496,3.796,4497,3.796,4498,2.479,4500,4.612,4501,2.479,4515,2.479,4517,3.796,4518,3.796,4519,2.479,4522,3.796,4523,3.796,4525,2.479,4597,2.479,4598,2.252,4630,2.479,4637,1.948,4667,2.479,4681,2.479,4699,2.479,4727,3.796,4914,2.252,4998,2.479,5370,2.479,5371,2.823,5372,5.885,5373,2.479,5374,2.823,5375,2.823,5376,2.823,5377,7.184,5378,4.323,5379,7.754,5380,8.902,5381,8.074,5382,7.515,5383,2.823,5384,2.823,5385,2.823,5386,2.823,5387,2.823,5388,2.823,5389,2.823,5390,2.823,5391,2.823,5392,2.823,5393,5.252,5394,2.823,5395,2.823,5396,2.823,5397,2.823,5398,4.323,5399,2.823,5400,2.823,5401,4.323,5402,4.323,5403,5.252,5404,2.823,5405,2.823,5406,6.692,5407,6.692,5408,2.823,5409,6.344,5410,5.885,5411,2.823,5412,2.823,5413,2.823,5414,2.823,5415,2.823,5416,4.323,5417,2.823,5418,2.823,5419,2.823,5420,2.823,5421,2.823,5422,2.823,5423,2.823,5424,2.823,5425,2.823,5426,6.964,5427,2.823,5428,4.323,5429,2.823,5430,2.823,5431,2.823,5432,2.823,5433,2.823,5434,2.823,5435,2.823,5436,2.823,5437,4.323,5438,2.823,5439,2.823,5440,2.823,5441,2.823,5442,2.823,5443,2.823,5444,2.823,5445,2.823,5446,2.823,5447,2.823,5448,2.823,5449,2.823,5450,2.823,5451,2.823,5452,2.823,5453,2.823,5454,5.252,5455,4.323,5456,2.823,5457,2.823,5458,2.823,5459,2.823,5460,2.823,5461,2.823,5462,2.479,5463,2.823,5464,2.823,5465,2.823,5466,2.823,5467,5.252,5468,5.252,5469,2.823,5470,2.252,5471,4.323,5472,2.823,5473,4.323,5474,8.134,5475,2.823,5476,2.823,5477,4.323,5478,2.823,5479,2.823,5480,2.823,5481,2.823,5482,2.823,5483,2.823,5484,2.823,5485,2.823,5486,2.823,5487,2.823,5488,2.823,5489,2.823,5490,6.692,5491,2.823,5492,2.823,5493,2.823,5494,2.823,5495,2.823,5496,2.823,5497,5.252,5498,5.252,5499,2.823,5500,2.823,5501,7.515,5502,6.344,5503,2.823,5504,2.823,5505,2.823,5506,6.344,5507,2.823,5508,2.823,5509,2.823,5510,2.823,5511,2.823,5512,2.823,5513,2.823,5514,2.823]],["title/dependencies.html",[1231,2.207,1232,2.549]],["body/dependencies.html",[25,0.011,72,2.741,80,0.008,81,0.009,82,0.008,105,0.541,106,1.33,319,2.651,324,3.293,354,2.939,370,4.421,511,3.947,571,3.166,611,4.43,703,1.801,895,3.756,1098,3.293,1232,3.166,1233,3.756,1240,4.915,1334,4.728,1370,6.639,1375,5.113,1625,3.756,1759,4.166,2890,5.113,2891,5.578,2914,5.113,2917,5.628,4151,5.113,4331,5.628,4953,5.628,4971,5.628,5060,5.628,5195,5.628,5515,6.409,5516,8.789,5517,6.409,5518,6.409,5519,6.409,5520,6.409,5521,6.409,5522,6.409,5523,6.409,5524,5.628,5525,6.409,5526,6.409,5527,6.409,5528,6.409,5529,6.409,5530,6.409]],["title/miscellaneous/enumerations.html",[5531,3.147,5532,4.531]],["body/miscellaneous/enumerations.html",[3,0.219,9,0.235,25,0.011,35,1.025,36,1.16,80,0.008,81,0.009,82,0.008,172,1.431,347,3.824,358,2.196,476,3.326,542,5.453,545,4.954,860,3.173,861,2.953,862,3.639,1396,2.547,1619,3.824,1628,4.348,1629,4.037,1630,4.037,1631,4.037,1632,4.037,1633,3.824,1634,4.037,1635,4.037,1636,4.037,1718,4.954,1723,6.516,1724,5.92,1725,5.92,1726,6.516,1733,5.453,1830,4.954,1831,4.582,1832,5.92,1839,6.516,1847,4.954,2316,5.453,2562,4.582,2589,5.92,2605,5.92,3011,4.284,3015,3.639,3019,4.954,3022,4.954,5373,5.453,5531,5.453,5532,5.453,5533,6.21,5534,7.421,5535,6.21,5536,6.21,5537,7.421,5538,6.21,5539,6.21,5540,6.21,5541,6.21,5542,6.21,5543,6.21,5544,6.21,5545,6.21,5546,6.21]],["title/index.html",[9,0.135,4619,2.1,4620,2.1]],["body/index.html",[25,0.011,71,0.223,80,0.008,81,0.009,82,0.008,144,1.565,273,2.555,284,4.148,364,3.417,365,3.279,373,3.034,379,2.007,437,1.372,442,4.704,443,3.739,471,1.65,582,4.708,876,3.57,1113,3.57,1173,5.09,1230,4.219,1237,4.708,1349,4.402,1362,4.402,1976,5.564,2555,4.148,2585,4.039,2907,3.93,3016,5.09,3200,4.708,3706,6.622,4002,5.09,4095,5.09,4298,4.902,4546,5.603,4619,3.739,4620,3.739,4637,5.723,4948,6.622,5133,6.622,5270,5.603,5320,4.708,5547,6.381,5548,6.381,5549,6.381,5550,7.541,5551,6.381,5552,6.381,5553,6.381,5554,6.381,5555,7.541,5556,6.381,5557,6.381,5558,6.381,5559,6.381,5560,6.381,5561,6.381,5562,6.381,5563,6.381,5564,6.381]],["title/license.html",[4619,2.1,4620,2.1,5470,2.859]],["body/license.html",[5,0.125,25,0.01,42,1.716,80,0.008,81,0.009,82,0.008,184,3.554,376,2.347,428,3.712,441,1.716,576,3.156,802,3.41,976,4.087,1188,4.896,1779,5.294,2072,4.896,3266,5.304,4203,5.294,5470,6.966,5565,6.636,5566,6.636,5567,6.636,5568,6.636,5569,6.636,5570,6.636,5571,6.636,5572,6.636,5573,6.636,5574,6.636,5575,6.636,5576,6.636,5577,5.827,5578,6.636,5579,7.717,5580,6.636,5581,6.636,5582,6.636,5583,6.636,5584,6.636,5585,6.636,5586,6.636,5587,6.636,5588,6.636,5589,6.636]],["title/modules.html",[1348,3.606]],["body/modules.html",[25,0.01,80,0.008,81,0.01,82,0.008,611,4.642,1347,4.515,1348,4.278,3001,6.956,4298,4.515,4995,6.956,5590,7.922]],["title/overview.html",[5591,5.142]],["body/overview.html",[2,1.623,25,0.011,80,0.005,81,0.007,82,0.005,144,0.841,361,2.083,379,1.275,448,1.962,573,1.962,654,2.073,677,1.108,682,1.909,684,2.073,687,2.017,689,2.017,691,2.073,693,2.073,695,2.073,697,2.073,700,2.017,702,2.073,705,2.073,707,2.073,709,2.017,712,2.017,714,2.073,716,2.017,718,2.073,720,2.073,721,1.962,724,2.073,727,2.017,729,2.073,731,2.073,733,1.962,735,2.073,737,2.131,740,2.017,743,2.073,745,1.962,747,2.017,749,2.073,751,2.131,753,2.073,755,2.017,757,2.073,760,2.017,762,0.914,763,2.017,765,2.017,767,2.017,769,2.017,771,2.017,773,2.017,775,2.017,777,2.017,782,1.313,860,2.408,930,1.572,1203,2.083,1232,2.002,1240,2.635,1314,4.206,1346,2.497,1347,5.069,1348,2.497,1349,2.797,1350,3.234,1351,3.56,1352,3.56,1353,3.56,1354,3.56,1355,4.492,1356,2.991,1439,2.797,3025,2.797,3055,2.991,4298,5.937,4299,3.56,4300,3.56,4301,3.56,4914,3.234,5462,3.56,5591,3.56]],["title/todo.html",[33,0.979,4619,2.1,4620,2.1]],["body/todo.html",[25,0.011,29,1.169,33,2.294,35,0.853,37,0.964,42,1.598,44,1.114,80,0.007,81,0.009,82,0.007,99,3.308,122,1.224,144,1.282,152,2.642,174,1.31,187,3.237,195,2,214,4.261,277,2.78,302,2.262,370,4.261,373,2.938,428,3.456,437,1.022,441,1.913,442,3.62,443,3.62,532,3.051,582,4.557,600,3.456,674,4.261,761,1.785,791,1.598,924,3.713,959,3.804,1007,5.424,1008,5.424,1057,5.304,1110,4.138,1160,4.261,1250,3.62,1254,5.901,1290,5.463,1781,4.928,1798,4.557,1848,4.928,2554,3.62,2578,4.928,2926,4.015,3366,4.557,3413,4.928,4397,5.424,4598,4.928,4601,4.928,4731,5.424,4733,5.424,5592,6.177,5593,6.177,5594,6.177,5595,6.177,5596,6.177,5597,6.177,5598,6.177,5599,6.177,5600,6.177,5601,6.177,5602,6.177,5603,6.177,5604,6.177,5605,6.177,5606,6.177,5607,6.177,5608,6.177,5609,6.177,5610,6.177]],["title/additional-documentation/getting-started.html",[57,0.524,4619,1.803,4620,1.803,5072,2.122]],["body/additional-documentation/getting-started.html",[0,0.018,2,3.366,5,0.098,13,0.653,14,2.217,25,0.011,66,2.786,71,0.303,76,0.216,80,0.006,81,0.008,82,0.006,84,1.141,90,4.588,99,2.786,144,1.657,155,2.474,174,0.861,181,3.163,184,3.562,203,0.886,241,0.861,243,4.101,245,2.751,248,3.304,249,3.382,252,3.838,271,3.204,273,2.083,277,1.955,288,2.303,298,2.474,302,1.591,304,1.734,306,2.303,308,1.684,359,1.637,361,3.417,364,3.562,365,3.417,366,1.977,375,5.306,378,1.422,379,2.092,437,1.459,441,1.346,442,5.153,443,4.528,476,2.786,499,3.382,509,2.385,548,3.204,558,4.568,566,2.57,572,2.57,574,4.568,577,3.204,588,2.91,685,1.608,703,1.462,782,2.153,798,2.786,818,2.786,849,3.382,863,2.385,876,2.91,880,2.673,1043,4.15,1113,2.91,1239,3.285,1252,3.204,1263,4.15,1279,4.568,1337,5.058,1346,4.096,1347,4.323,1349,4.588,1361,4.568,1362,5.33,1381,3.382,1559,2.152,1628,3.049,1658,2.786,1686,2.91,1783,3.838,1798,3.838,1869,4.907,1985,3.589,2585,2.786,2616,4.907,2668,4.15,2842,3.382,2929,4.15,2967,4.15,3266,4.323,3505,4.096,3596,4.588,3696,4.568,3906,4.568,3911,3.838,3916,4.15,4142,3.382,4298,5.022,4545,4.568,4619,3.049,4620,3.049,4637,3.589,4869,6.437,5155,4.568,5186,4.568,5218,6.784,5219,4.568,5220,4.568,5232,4.15,5291,6.784,5310,5.84,5611,5.202,5612,4.568,5613,4.568,5614,7.985,5615,5.202,5616,5.202,5617,5.202,5618,5.202,5619,5.202,5620,5.202,5621,5.202,5622,5.202,5623,5.202,5624,5.202,5625,5.202,5626,5.202,5627,5.202,5628,5.202,5629,5.202,5630,5.202,5631,5.202,5632,5.202,5633,4.15,5634,5.202,5635,5.202,5636,4.568,5637,5.202,5638,6.651,5639,5.202,5640,5.202]],["title/additional-documentation/local-development.html",[57,0.524,2812,2,4142,2,5072,2.122]],["body/additional-documentation/local-development.html",[25,0.01,80,0.008,81,0.01,82,0.008,144,1.452,2812,4.548,4142,4.548,5336,5.488]],["title/additional-documentation/local-development/schematics.html",[57,0.61,5072,2.472,5336,2.472]],["body/additional-documentation/local-development/schematics.html",[5,0.095,25,0.011,26,0.611,42,1.31,57,0.863,62,2.969,68,2.834,80,0.006,81,0.008,82,0.006,87,2.028,98,3.738,99,3.502,108,0.863,144,1.357,181,2.409,182,0.312,187,1.904,237,3.23,241,1.31,277,2.875,288,3.204,302,1.999,306,2.242,341,2.995,349,4.042,364,3.502,378,1.385,419,2.834,428,3.658,437,1.365,441,1.872,442,5.027,443,2.969,446,3.738,476,2.713,478,2.969,511,4.027,517,5.644,532,3.23,533,3.386,577,3.12,579,4.042,597,2.095,601,3.12,669,3.12,795,2.167,815,3.109,819,2.323,863,2.998,880,3.72,890,2.242,928,3.495,1003,5.341,1113,2.834,1129,4.511,1230,4.766,1232,2.502,1239,2.502,1248,4.448,1249,3.495,1250,4.483,1348,4.027,1366,4.448,1426,3.738,1653,3.293,1678,3.109,1728,3.495,1794,2.969,1820,4.448,1976,3.738,1985,3.495,2585,2.713,2597,3.12,2660,3.738,2669,3.293,2774,6.318,2820,3.738,2879,5.741,2926,3.293,3056,4.448,3062,4.448,3072,4.448,3106,5.341,3173,4.042,3200,3.738,3233,3.738,3297,4.448,3422,4.448,3720,4.448,3762,4.448,3841,2.969,3911,4.824,4065,5.278,4569,6.169,4651,4.448,4656,4.448,4662,4.448,4757,4.448,4758,4.042,4920,5.776,4946,5.216,5026,4.042,5152,4.042,5201,4.042,5225,4.448,5231,5.741,5299,4.448,5302,6.103,5309,4.448,5319,6.357,5320,4.824,5336,6.066,5337,6.717,5339,4.448,5524,5.741,5577,4.448,5613,4.448,5633,6.796,5636,4.448,5641,4.448,5642,4.448,5643,5.066,5644,6.538,5645,4.448,5646,5.066,5647,5.066,5648,5.066,5649,7.65,5650,6.538,5651,5.066,5652,5.066,5653,5.066,5654,5.066,5655,5.066,5656,5.066,5657,5.066,5658,5.066,5659,5.066,5660,4.448,5661,5.741,5662,5.066,5663,5.066,5664,5.066,5665,6.538,5666,5.066,5667,5.066,5668,5.066,5669,5.066,5670,5.066,5671,5.066,5672,5.066,5673,5.066,5674,5.066,5675,5.066,5676,5.066,5677,5.066,5678,5.066,5679,5.066,5680,5.066,5681,5.066,5682,5.066,5683,5.066,5684,5.066,5685,5.066,5686,5.066,5687,5.066,5688,5.066,5689,5.066,5690,5.066,5691,5.066,5692,5.066,5693,5.066,5694,5.066,5695,5.066,5696,5.066,5697,5.066,5698,5.066,5699,5.066,5700,5.066,5701,5.066,5702,4.448]],["title/additional-documentation/local-development/components.html",[57,0.61,144,0.744,5072,2.472]],["body/additional-documentation/local-development/components.html",[5,0.096,18,4.05,22,0.432,25,0.01,26,0.555,39,2.524,42,1.322,68,2.859,71,0.23,80,0.006,81,0.008,82,0.006,98,3.771,99,4.253,108,0.87,144,1.365,178,2.325,181,3.127,182,0.315,236,2.737,241,0.846,273,2.046,277,2.985,288,2.91,303,1.09,306,2.262,308,2.571,364,3.893,367,4.077,373,2.43,374,3.771,376,2.325,378,1.397,437,1.452,441,1.322,442,5.062,443,4.908,476,2.737,478,2.995,492,4.077,511,4.05,512,4.488,517,5.663,532,2.524,534,5.246,535,4.536,541,3.526,552,4.488,566,3.248,572,2.524,580,4.536,591,4.488,597,2.114,791,1.701,815,2.43,845,2.995,860,2.812,863,2.343,880,4.08,918,3.322,1003,6.18,1046,4.488,1063,2.995,1150,5.246,1230,4.734,1231,3.147,1232,2.524,1237,3.771,1239,2.524,1242,3.526,1348,3.147,1397,3.322,1780,4.077,1783,3.771,2564,4.536,2585,4.685,2600,4.851,2812,4.989,2891,3.771,2961,4.077,3106,3.771,3131,3.526,3266,3.322,3595,5.246,3714,4.077,3911,3.771,4065,5.704,4142,4.726,4152,4.488,4569,5.364,4637,3.526,4717,5.774,4758,4.077,4920,5.246,4946,4.077,5026,5.246,5152,4.077,5201,4.077,5205,4.488,5232,4.077,5285,4.488,5288,5.774,5294,4.488,5302,6.123,5316,4.488,5320,4.851,5336,5.886,5349,4.488,5612,4.488,5633,6.806,5641,4.488,5642,5.774,5645,4.488,5660,5.774,5661,5.774,5702,4.488,5703,5.111,5704,5.111,5705,5.111,5706,5.111,5707,6.576,5708,6.576,5709,5.111,5710,5.111,5711,5.111,5712,5.111,5713,6.576,5714,5.111,5715,5.111,5716,5.111,5717,5.111,5718,5.111,5719,6.576,5720,7.27,5721,5.111,5722,5.111,5723,7.27,5724,5.111,5725,5.111,5726,5.111,5727,5.111,5728,5.111,5729,5.111,5730,5.111,5731,5.111,5732,5.111,5733,5.111,5734,5.111,5735,5.111,5736,5.111,5737,5.111,5738,5.111,5739,5.111,5740,5.111,5741,5.111]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":358,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.17",{"_index":5328,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":5326,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":5322,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":5308,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":5296,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":5293,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":5290,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":5287,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":5282,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":5279,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":5276,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":5274,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":5272,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":5268,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":5258,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":5244,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":5228,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":5224,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":5521,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3281,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":5530,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":3164,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":5380,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5420,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5436,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5465,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5377,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5409,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5426,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5372,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5398,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5453,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5397,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["000000000",{"_index":4442,"title":{},"body":{"components/SinComponent.html":{}}}],["009d779",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["015602c",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":5355,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":5364,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["02cb2c5",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4662,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":5196,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":5121,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4656,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["0699178",{"_index":5040,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":5061,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["0803cae",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["0881790",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":5143,"title":{},"body":{"changelog.html":{}}}],["09c1a1b",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":5233,"title":{},"body":{"changelog.html":{}}}],["0ac8cb8",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["0b0ffca",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":5160,"title":{},"body":{"changelog.html":{}}}],["0ed3875",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["0ff54eb",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":5178,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1396,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["1.0.0",{"_index":5217,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":5211,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":5209,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":5197,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":5195,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":5192,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":5185,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":5183,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":5177,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":5167,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":5164,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":5161,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":5148,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":5140,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":5381,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":5424,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5405,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":5399,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5417,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":5464,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":5408,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5407,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5403,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5466,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5393,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5437,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5416,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5400,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1203,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["10.256s",{"_index":5213,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":5415,"title":{},"body":{"coverage.html":{}}}],["10/38",{"_index":5419,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1517,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["102",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":3251,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":3268,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["108e46b",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["10^10",{"_index":4046,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["11",{"_index":3035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["111",{"_index":4409,"title":{},"body":{"components/SinComponent.html":{}}}],["12",{"_index":3040,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1251212",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["126d876",{"_index":5095,"title":{},"body":{"changelog.html":{}}}],["127d980",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1194,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["1303722",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":3055,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1467689",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["1486527",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["14bce6e",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":3059,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["150",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["151f173",{"_index":5221,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":5171,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":3063,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["16020e0",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["1650a23",{"_index":5051,"title":{},"body":{"changelog.html":{}}}],["16be24b",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["16da113",{"_index":5044,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3066,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["18",{"_index":3074,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["180",{"_index":4470,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":5236,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2648,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":5261,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3082,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["19/23",{"_index":5376,"title":{},"body":{"coverage.html":{}}}],["1901",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["197",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["1].iscomplete",{"_index":1449,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":4201,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":5362,"title":{},"body":{"changelog.html":{}}}],["1c51f01",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":5246,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":5271,"title":{},"body":{"changelog.html":{}}}],["1f1a0f9",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":860,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":5569,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3910,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.1",{"_index":5120,"title":{},"body":{"changelog.html":{}}}],["2.0.550",{"_index":5527,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":5573,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":5104,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":5099,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":5093,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":5086,"title":{},"body":{"changelog.html":{}}}],["2.1.4",{"_index":5083,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":5078,"title":{},"body":{"changelog.html":{}}}],["2.10.0",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["2.11.0",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["2.12.0",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["2.13.0",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["2.14.0",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["2.15.0",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["2.16.0",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["2.16.2",{"_index":5519,"title":{},"body":{"dependencies.html":{}}}],["2.17.0",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["2.17.1",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["2.18.0",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["2.18.1",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["2.19.0",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":5071,"title":{},"body":{"changelog.html":{}}}],["2.20.0",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["2.20.1",{"_index":4971,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.21.0",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["2.22.0",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["2.23.0",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["2.24.0",{"_index":4953,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.26.0",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["2.27.0",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["2.27.1",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["2.27.2",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["2.28.0",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":5068,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":5067,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":5065,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":5060,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5.2",{"_index":5059,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":5525,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["2.7.0",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["2.7.1",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["2.8.0",{"_index":5037,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":5034,"title":{},"body":{"changelog.html":{}}}],["2.9.0",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["2/12",{"_index":5438,"title":{},"body":{"coverage.html":{}}}],["2/13",{"_index":5441,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":5422,"title":{},"body":{"coverage.html":{}}}],["2/27",{"_index":5432,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5449,"title":{},"body":{"coverage.html":{}}}],["2/31",{"_index":5402,"title":{},"body":{"coverage.html":{}}}],["2/34",{"_index":5428,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5461,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":5395,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":5421,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4727,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":5566,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4757,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2650,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["2020",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["20aa812",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["20fa6ea",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":4630,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["21afb82",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":4914,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2235059",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["224e362",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["22710b7",{"_index":5254,"title":{},"body":{"changelog.html":{}}}],["22c21ef",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["22fd6aa",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["23644b4",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":5262,"title":{},"body":{"changelog.html":{}}}],["23fe745",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4998,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25",{"_index":867,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":868,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":1111,"title":{},"body":{"interfaces/AddressResult.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{}}}],["258d1c3",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":4667,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26(a",{"_index":3725,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":3283,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":5354,"title":{},"body":{"changelog.html":{}}}],["2637a7a",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["265",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["27b488b",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4699,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["28d9585",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["29c5160",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["29e521c",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["2a511e7",{"_index":5141,"title":{},"body":{"changelog.html":{}}}],["2c0b127",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["2c2f322",{"_index":5088,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":5352,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":5247,"title":{},"body":{"changelog.html":{}}}],["2ebd235",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["2f4836b",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":861,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":4733,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["3.0.1",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["3.0.10",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["3.0.11",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["3.0.12",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["3.0.13",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["3.0.14",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["3.0.2",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["3.0.3",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["3.0.5",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["3.0.6",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["3.0.7",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["3.0.8",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["3.0.9",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["3/14",{"_index":5459,"title":{},"body":{"coverage.html":{}}}],["3/32",{"_index":5425,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":5418,"title":{},"body":{"coverage.html":{}}}],["3/34",{"_index":5433,"title":{},"body":{"coverage.html":{}}}],["3/35",{"_index":5431,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3130,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["300",{"_index":4466,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":4681,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["31st",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":4029,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["322d58c",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":5406,"title":{},"body":{"coverage.html":{}}}],["3300",{"_index":3286,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["34f0a40",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":5446,"title":{},"body":{"coverage.html":{}}}],["355945207",{"_index":4069,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":5363,"title":{},"body":{"changelog.html":{}}}],["36476f8",{"_index":5194,"title":{},"body":{"changelog.html":{}}}],["36eeddb",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["3868c50",{"_index":5208,"title":{},"body":{"changelog.html":{}}}],["38c822b",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["39",{"_index":5462,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["3a06f99",{"_index":5159,"title":{},"body":{"changelog.html":{}}}],["3a5677b",{"_index":5064,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":5265,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":5303,"title":{},"body":{"changelog.html":{}}}],["3b207b9",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":5321,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":5295,"title":{},"body":{"changelog.html":{}}}],["3f1149e",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":5170,"title":{},"body":{"changelog.html":{}}}],["3f6a466",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["3ff09e0",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":3011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"components/PasswordComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":5523,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":5456,"title":{},"body":{"coverage.html":{}}}],["4/16",{"_index":5452,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":5401,"title":{},"body":{"coverage.html":{}}}],["4/40",{"_index":5374,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2646,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["40",{"_index":5455,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":286,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["403de87",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["41f5609",{"_index":5223,"title":{},"body":{"changelog.html":{}}}],["4295b03",{"_index":5179,"title":{},"body":{"changelog.html":{}}}],["4766a2b",{"_index":5289,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":5342,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":5146,"title":{},"body":{"changelog.html":{}}}],["483b735",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":5348,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":5340,"title":{},"body":{"changelog.html":{}}}],["48e2120",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["492934b",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["496c252",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":5357,"title":{},"body":{"changelog.html":{}}}],["4bb54c0",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["4d39002",{"_index":5036,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":5237,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":5323,"title":{},"body":{"changelog.html":{}}}],["4e9852b",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["4f3e59f",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["4f8f2e7",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":3015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5.5.0",{"_index":5526,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":5457,"title":{},"body":{"coverage.html":{}}}],["5/14",{"_index":5447,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":5460,"title":{},"body":{"coverage.html":{}}}],["5/39",{"_index":5435,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3054,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["503b449",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["5069fe8",{"_index":5030,"title":{},"body":{"changelog.html":{}}}],["50ms",{"_index":3407,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["510ad9e",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["51bfe3b",{"_index":5200,"title":{},"body":{"changelog.html":{}}}],["51f2ea4",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":5275,"title":{},"body":{"changelog.html":{}}}],["5362c67",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":5242,"title":{},"body":{"changelog.html":{}}}],["5441be2",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["57b73dd",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":5450,"title":{},"body":{"coverage.html":{}}}],["5910979",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["5965aec",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["5a7c37b",{"_index":5101,"title":{},"body":{"changelog.html":{}}}],["5a93887",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["5b18c5f",{"_index":5122,"title":{},"body":{"changelog.html":{}}}],["5b88093",{"_index":5191,"title":{},"body":{"changelog.html":{}}}],["5bb54fc",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["5d8f61d",{"_index":5115,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":3019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["6.4.0",{"_index":5528,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":5551,"title":{},"body":{"index.html":{}}}],["6/7",{"_index":5440,"title":{},"body":{"coverage.html":{}}}],["60befc2",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["61b54fd",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["61c0cdc",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["6242bea",{"_index":5334,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":5132,"title":{},"body":{"changelog.html":{}}}],["636c1d5",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["6427f10",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":5335,"title":{},"body":{"changelog.html":{}}}],["655a0fd",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":5317,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":5448,"title":{},"body":{"coverage.html":{}}}],["6650ef8",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["66e58e7",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["66f9608",{"_index":5230,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":5150,"title":{},"body":{"changelog.html":{}}}],["679ac15",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["67b6f78",{"_index":5047,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":5273,"title":{},"body":{"changelog.html":{}}}],["68eab18",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["6a4319d",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":5137,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":5165,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":5329,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":5366,"title":{},"body":{"changelog.html":{}}}],["6e83c50",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["6eb3ead",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["6f093d2",{"_index":5118,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":3022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":5516,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":5451,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":5458,"title":{},"body":{"coverage.html":{}}}],["7/29",{"_index":5423,"title":{},"body":{"coverage.html":{}}}],["706d0b8",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["716da42",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["71eb531",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["7226b37",{"_index":5252,"title":{},"body":{"changelog.html":{}}}],["730f9c7",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["73247f2",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["7355610",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["7398e93",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["7400a64",{"_index":5111,"title":{},"body":{"changelog.html":{}}}],["7567a75",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["788c3d1",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["7a5b7bc",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["7bf5025",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["7c7ca2f",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["7c99c1e",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["7d274e8",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["7d2e7cd",{"_index":5259,"title":{},"body":{"changelog.html":{}}}],["7d4953b",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["7e270d8",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["7e674de",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":5313,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":5324,"title":{},"body":{"changelog.html":{}}}],["7faf3d5",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":5311,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":5176,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":5187,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":3025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{},"overview.html":{}}}],["8.9.4",{"_index":5549,"title":{},"body":{"index.html":{}}}],["8/40",{"_index":5404,"title":{},"body":{"coverage.html":{}}}],["8/50",{"_index":5396,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":5359,"title":{},"body":{"changelog.html":{}}}],["81",{"_index":5444,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":5375,"title":{},"body":{"coverage.html":{}}}],["8248e61",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["8361a0e",{"_index":5070,"title":{},"body":{"changelog.html":{}}}],["8380850",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["83d31d",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["85",{"_index":5439,"title":{},"body":{"coverage.html":{}}}],["85d3767",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["85eab15",{"_index":5292,"title":{},"body":{"changelog.html":{}}}],["867f969",{"_index":5082,"title":{},"body":{"changelog.html":{}}}],["87013c3",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["88bc3f3",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["8a22405",{"_index":5346,"title":{},"body":{"changelog.html":{}}}],["8aa41ec",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["8cec483",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["8d6ed18",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":5263,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":5142,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":5145,"title":{},"body":{"changelog.html":{}}}],["8f6886f",{"_index":5081,"title":{},"body":{"changelog.html":{}}}],["8fc79af",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1195,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/SinComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["9.0.0",{"_index":5522,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":5443,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":5445,"title":{},"body":{"coverage.html":{}}}],["9/23",{"_index":5463,"title":{},"body":{"coverage.html":{}}}],["9/49",{"_index":5394,"title":{},"body":{"coverage.html":{}}}],["9/51",{"_index":5411,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":5442,"title":{},"body":{"coverage.html":{}}}],["901885e",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["92c2dc4",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["95b1122",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["95e5eab",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["96a58b1",{"_index":5198,"title":{},"body":{"changelog.html":{}}}],["978250b",{"_index":5058,"title":{},"body":{"changelog.html":{}}}],["9855d9c",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["98d3b63",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["996cad7",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["9])[a",{"_index":4512,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["9][a",{"_index":4509,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["9a38474",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["9d93167",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["9dc5375",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["9e5d3aa",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["9f5a04e",{"_index":5253,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":189,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["_applicationheadermap",{"_index":3772,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_asciiprintable",{"_index":2825,"title":{},"body":{"components/EmailComponent.html":{}}}],["_bypassguards",{"_index":1382,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_continue",{"_index":3845,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":3847,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["_defaulterrmsg",{"_index":119,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.duplicate",{"_index":4445,"title":{},"body":{"components/SinComponent.html":{}}}],["_defaulterrmsg.invalid",{"_index":3901,"title":{},"body":{"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.invalidchar",{"_index":1617,"title":{},"body":{"components/CityComponent.html":{},"components/NameComponent.html":{}}}],["_defaulterrmsg.invalidchars",{"_index":2864,"title":{},"body":{"components/EmailComponent.html":{}}}],["_defaulterrmsg.invalidemail",{"_index":2863,"title":{},"body":{"components/EmailComponent.html":{}}}],["_defaulterrmsg.required",{"_index":1504,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_find",{"_index":3954,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["_find(path",{"_index":3980,"title":{},"body":{"injectables/PageStateService.html":{}}}],["_formatcriteria",{"_index":2826,"title":{},"body":{"components/EmailComponent.html":{}}}],["_headers",{"_index":249,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_label",{"_index":204,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["_log(message",{"_index":1762,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_logerror(errormessage",{"_index":1765,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_markallastouched",{"_index":405,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["_markallastouched(fg",{"_index":406,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["_name",{"_index":4158,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":4159,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":614,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":120,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["_only_",{"_index":4556,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":121,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["_sendlog(message",{"_index":1785,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_starturl",{"_index":1383,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["_subscriptions",{"_index":1879,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["_value",{"_index":3665,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["a11y",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["a1a",{"_index":4200,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a1b8211",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["a1bd381",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["a27faa9",{"_index":5109,"title":{},"body":{"changelog.html":{}}}],["a33bb9d",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["a512eb0",{"_index":5119,"title":{},"body":{"changelog.html":{}}}],["a702d6d",{"_index":5184,"title":{},"body":{"changelog.html":{}}}],["a73785f",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["a79007f",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["a7efeee",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":5125,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":5286,"title":{},"body":{"changelog.html":{}}}],["aa",{"_index":5107,"title":{},"body":{"changelog.html":{}}}],["aa2b7f9",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["aad93b5",{"_index":5077,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1581,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ab4688c",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["abad941",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["ability",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["abiltiy",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["abilty",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["abort",{"_index":3038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3911,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":5358,"title":{},"body":{"changelog.html":{}}}],["absractformcontrol",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":14,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractapi",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["abstractbaseform",{"_index":1,"title":{"classes/AbstractBaseForm.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["abstractbaseform:11",{"_index":102,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:13",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:23",{"_index":103,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:7",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:9",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractcontrol",{"_index":2809,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["abstractform",{"_index":83,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstractformcontrol",{"_index":114,"title":{"classes/AbstractFormControl.html":{}},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["abstractformcontrol:11",{"_index":1493,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:14",{"_index":1472,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:16",{"_index":1470,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:19",{"_index":1471,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:23",{"_index":1494,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:24",{"_index":1495,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:27",{"_index":1479,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:32",{"_index":1486,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:35",{"_index":1480,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:40",{"_index":1481,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:45",{"_index":1483,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:49",{"_index":1484,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:68",{"_index":1482,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:88",{"_index":1485,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractguardservice",{"_index":369,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["abstracthttpservice",{"_index":243,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:13",{"_index":3589,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:18",{"_index":3588,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:24",{"_index":3581,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:32",{"_index":3583,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:40",{"_index":3584,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:61",{"_index":3582,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:64",{"_index":3580,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:75",{"_index":3585,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstractpageguardservice",{"_index":360,"title":{"injectables/AbstractPageGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["abstractpgcheckservice",{"_index":387,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":4273,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstractreactform",{"_index":402,"title":{"classes/AbstractReactForm.html":{}},"body":{"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["abstracttestpage",{"_index":432,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":2026,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":5214,"title":{},"body":{"changelog.html":{}}}],["ac9d61c",{"_index":5073,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":5212,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":3296,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":3006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["accepting",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":937,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["accessibility",{"_index":4604,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["accessible",{"_index":2617,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":256,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["accidentally",{"_index":5103,"title":{},"body":{"changelog.html":{}}}],["accordion",{"_index":662,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":681,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":666,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":664,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":654,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":659,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":4348,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":4390,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accusamus",{"_index":1582,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aceb028",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["acl",{"_index":3773,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3731,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":3851,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["active",{"_index":1950,"title":{},"body":{"injectables/ContainerService.html":{}}}],["activeindex",{"_index":4528,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2668,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":779,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":5563,"title":{},"body":{"index.html":{}}}],["adaptive",{"_index":3517,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["add",{"_index":341,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":221,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["adding",{"_index":1985,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["addition",{"_index":1104,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["additional",{"_index":5072,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"changelog.html":{}}}],["additionaldocumentation",{"_index":5151,"title":{},"body":{"changelog.html":{}}}],["addline(line",{"_index":916,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addpackagejsonscript",{"_index":5507,"title":{},"body":{"coverage.html":{}}}],["addpackagetopackagejson",{"_index":5499,"title":{},"body":{"coverage.html":{}}}],["addr",{"_index":849,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/getting-started.html":{}}}],["addr.city",{"_index":1166,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["addr.country",{"_index":1168,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["addr.postal",{"_index":1171,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["addr.province",{"_index":1169,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["addr.street",{"_index":1170,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["address",{"_index":685,"title":{"classes/Address.html":{}},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":683,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":5634,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address(val",{"_index":834,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.addressline2",{"_index":847,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.city",{"_index":984,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.html",{"_index":814,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.model.ts",{"_index":5601,"title":{},"body":{"todo.html":{}}}],["address.postal",{"_index":985,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.province",{"_index":986,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.street",{"_index":983,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address1",{"_index":786,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["address2",{"_index":787,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address3",{"_index":788,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address_url",{"_index":1210,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":837,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addresscomplete",{"_index":1086,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["addresscomponent",{"_index":682,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":974,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline${line",{"_index":932,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline1",{"_index":1005,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["addressline2",{"_index":881,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline3",{"_index":1006,"title":{},"body":{"classes/Address.html":{}}}],["addressmodel",{"_index":5116,"title":{},"body":{"changelog.html":{}}}],["addressresult",{"_index":1080,"title":{"interfaces/AddressResult.html":{}},"body":{"interfaces/AddressResult.html":{},"changelog.html":{},"coverage.html":{}}}],["addresss",{"_index":5057,"title":{},"body":{"changelog.html":{}}}],["addressserviceurl",{"_index":833,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressvalidator",{"_index":1152,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["addressvalidatorcomponent",{"_index":684,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addrlabellist",{"_index":781,"title":{"interfaces/AddrLabelList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["addrlabels",{"_index":855,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addrlookup",{"_index":931,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["adds",{"_index":838,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{}}}],["addtag",{"_index":2781,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2782,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1549,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3735,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":1243,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":5147,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":5347,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":5163,"title":{},"body":{"changelog.html":{}}}],["af91989",{"_index":5074,"title":{},"body":{"changelog.html":{}}}],["afg",{"_index":2000,"title":{},"body":{"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":2001,"title":{},"body":{"interfaces/CountryList.html":{}}}],["africa",{"_index":2454,"title":{},"body":{"interfaces/CountryList.html":{}}}],["african",{"_index":2097,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":1858,"title":{},"body":{"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/WizardProgressItem.html":{}}}],["again",{"_index":3062,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["age",{"_index":4128,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":2013,"title":{},"body":{"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3780,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":5576,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3754,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":491,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":2015,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aka",{"_index":3697,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":2002,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alb",{"_index":2005,"title":{},"body":{"interfaces/CountryList.html":{}}}],["albania",{"_index":2006,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alberta",{"_index":4221,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":2008,"title":{},"body":{"interfaces/CountryList.html":{}}}],["algorithm",{"_index":3065,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1607,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allow",{"_index":185,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["allowed",{"_index":3271,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["allowextralines",{"_index":848,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["allowing",{"_index":1409,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["allowinternational",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["allows",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["allvalidators",{"_index":225,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["allvalidators.push",{"_index":228,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["alone",{"_index":3753,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":265,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1658,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1632,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":327,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["american",{"_index":2010,"title":{},"body":{"interfaces/CountryList.html":{}}}],["amet",{"_index":1547,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["amultiples",{"_index":3241,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":3253,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["and/or",{"_index":2846,"title":{},"body":{"components/EmailComponent.html":{},"components/PostalCodeComponent.html":{}}}],["andorra",{"_index":2012,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angola",{"_index":2014,"title":{},"body":{"interfaces/CountryList.html":{}}}],["anguilla",{"_index":2016,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angular",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1815,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["angular.json",{"_index":5702,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":5515,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1375,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":318,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":5517,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":105,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":106,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1334,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1370,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":72,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":324,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1594,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":56,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["answer",{"_index":1330,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":1313,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":2018,"title":{},"body":{"interfaces/CountryList.html":{}}}],["antigua",{"_index":2020,"title":{},"body":{"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":3349,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1623,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["anywhere",{"_index":5654,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":5568,"title":{},"body":{"license.html":{}}}],["aperiam",{"_index":1570,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":245,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":1325,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apidobformat",{"_index":4110,"title":{},"body":{"classes/Person.html":{}}}],["apiservice",{"_index":5630,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apistatuscodes",{"_index":1839,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"miscellaneous/enumerations.html":{}}}],["apistatuscodes.error",{"_index":1850,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.success",{"_index":1840,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.warning",{"_index":1851,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apostrophe",{"_index":3476,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["apostrophes",{"_index":1536,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{}}}],["app",{"_index":3676,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["appcomponentcss",{"_index":5478,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":5479,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":4717,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":485,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2642,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["applicable",{"_index":5574,"title":{},"body":{"license.html":{}}}],["applicant",{"_index":1410,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":1413,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":308,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":367,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3721,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1735,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["applications",{"_index":1060,"title":{},"body":{"classes/Address.html":{}}}],["appropriate",{"_index":928,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":3240,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["apps",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["arab",{"_index":2479,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arabia",{"_index":2429,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arbitrary",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["architecto",{"_index":1556,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1826,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["arg",{"_index":2022,"title":{},"body":{"interfaces/CountryList.html":{}}}],["argentina",{"_index":2023,"title":{},"body":{"interfaces/CountryList.html":{}}}],["args",{"_index":3323,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":3070,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2693,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":4103,"title":{},"body":{"components/PasswordComponent.html":{},"changelog.html":{}}}],["arm",{"_index":2024,"title":{},"body":{"interfaces/CountryList.html":{}}}],["armenia",{"_index":2025,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aroud",{"_index":3601,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":3436,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["arr",{"_index":3924,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["arr.filter((itm",{"_index":3932,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["array",{"_index":357,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["array(0",{"_index":2949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["array.isarray",{"_index":416,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["artifacts",{"_index":5723,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":2027,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ascension",{"_index":2402,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ascii",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["asciiprintable",{"_index":2862,"title":{},"body":{"components/EmailComponent.html":{}}}],["ask",{"_index":5562,"title":{},"body":{"index.html":{}}}],["asm",{"_index":2009,"title":{},"body":{"interfaces/CountryList.html":{}}}],["assets",{"_index":5698,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3615,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assets/logo_print.png",{"_index":3617,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assignment",{"_index":1867,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["assistance",{"_index":3736,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":5162,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":529,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["association",{"_index":5084,"title":{},"body":{"changelog.html":{}}}],["assuming",{"_index":5731,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":5611,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["ata",{"_index":2017,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atf",{"_index":2175,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atg",{"_index":2019,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atob(attachment.filecontent.split(',')[1",{"_index":356,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["attachment",{"_index":297,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["attachmentdocumenttype",{"_index":1620,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attachmentorder",{"_index":1621,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attachmentuuid",{"_index":1622,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attempted",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["attr",{"_index":5269,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":4101,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":589,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["audit",{"_index":5341,"title":{},"body":{"changelog.html":{}}}],["aus",{"_index":2028,"title":{},"body":{"interfaces/CountryList.html":{}}}],["australia",{"_index":2029,"title":{},"body":{"interfaces/CountryList.html":{}}}],["austria",{"_index":2031,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aut",{"_index":2030,"title":{},"body":{"interfaces/CountryList.html":{}}}],["autem",{"_index":1576,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":818,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":5245,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":5260,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2783,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":66,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":3034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":557,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":625,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["awkward",{"_index":4064,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":2032,"title":{},"body":{"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":2033,"title":{},"body":{"interfaces/CountryList.html":{}}}],["b",{"_index":4396,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b53a126",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["b53f6e2",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["b555787",{"_index":5130,"title":{},"body":{"changelog.html":{}}}],["b61e2b8",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":5240,"title":{},"body":{"changelog.html":{}}}],["b901868",{"_index":5098,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3719,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["backdrop",{"_index":5096,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1810,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3740,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["backup",{"_index":235,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["backward",{"_index":1058,"title":{},"body":{"classes/Address.html":{}}}],["bad",{"_index":5624,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["baee5ad",{"_index":5124,"title":{},"body":{"changelog.html":{}}}],["bahamas",{"_index":2035,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bahrain",{"_index":2037,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":2039,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bar",{"_index":46,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Container.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":719,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":4307,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":3392,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":3391,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":3390,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:13",{"_index":3398,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":3395,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":3397,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:16",{"_index":3396,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":3399,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3420,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3394,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3421,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3429,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":4535,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":3400,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4552,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":3401,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4534,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3419,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4540,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3430,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4539,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4536,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4538,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4541,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":3389,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":4312,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":2041,"title":{},"body":{"interfaces/CountryList.html":{}}}],["barbuda",{"_index":2021,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bars",{"_index":5365,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":2399,"title":{},"body":{"interfaces/CountryList.html":{}}}],["base",{"_index":7,"title":{"classes/Base.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["base.component",{"_index":2903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":1378,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:107",{"_index":1395,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:111",{"_index":1405,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:16",{"_index":3958,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:32",{"_index":1417,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:34",{"_index":1415,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:35",{"_index":1391,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:39",{"_index":1419,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:43",{"_index":1421,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:47",{"_index":1392,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:51",{"_index":1393,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:56",{"_index":1406,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:63",{"_index":1412,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:78",{"_index":1408,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:88",{"_index":1401,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:99",{"_index":1398,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":1653,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":139,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":3506,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":199,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["basic",{"_index":1855,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["basis",{"_index":5580,"title":{},"body":{"license.html":{}}}],["bc",{"_index":973,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bcd3cad",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["bcformat",{"_index":4513,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bcformat.test",{"_index":4514,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bclogobase64",{"_index":5483,"title":{},"body":{"coverage.html":{}}}],["bconly",{"_index":832,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{}}}],["bcp",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["bdi",{"_index":2084,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beatae",{"_index":1600,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["become",{"_index":5610,"title":{},"body":{"todo.html":{}}}],["befc319",{"_index":5166,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1678,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":3471,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3700,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behaviorsubject",{"_index":1962,"title":{},"body":{"injectables/ContainerService.html":{}}}],["behaviour",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":200,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":2044,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belarus",{"_index":2043,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belgium",{"_index":2045,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belize",{"_index":2047,"title":{},"body":{"interfaces/CountryList.html":{}}}],["below",{"_index":3696,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":2048,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beneficial",{"_index":3973,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["benefits",{"_index":3734,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":2049,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bermuda",{"_index":2051,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bes",{"_index":2056,"title":{},"body":{"interfaces/CountryList.html":{}}}],["best",{"_index":3597,"title":{},"body":{"components/HeaderComponent.html":{}}}],["better",{"_index":5090,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4613,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["bf0bcc2",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["bf3cf23",{"_index":5351,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":2081,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bg",{"_index":4098,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":2038,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bgr",{"_index":2079,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhr",{"_index":2036,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhs",{"_index":2034,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhutan",{"_index":2052,"title":{},"body":{"interfaces/CountryList.html":{}}}],["big",{"_index":3308,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":2061,"title":{},"body":{"interfaces/CountryList.html":{}}}],["binary",{"_index":355,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["bind",{"_index":1465,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":846,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["birth",{"_index":4129,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":4121,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":2206,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1585,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":890,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":2397,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blob",{"_index":3057,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":3232,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":3658,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["blr",{"_index":2042,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blue",{"_index":3592,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":1510,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["blurevent",{"_index":2556,"title":{},"body":{"interfaces/CountryList.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["blz",{"_index":2046,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bmu",{"_index":2050,"title":{},"body":{"interfaces/CountryList.html":{}}}],["body",{"_index":292,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1801,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["boilerplate",{"_index":3701,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":2053,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":2529,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivia",{"_index":2054,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bonaire",{"_index":2057,"title":{},"body":{"interfaces/CountryList.html":{}}}],["boolean",{"_index":29,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"interfaces/WizardProgressItem.html":{},"todo.html":{}}}],["bootstrap",{"_index":1240,"title":{},"body":{"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":4349,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bootstrap/modal",{"_index":3692,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{}}}],["bootstrap/progressbar",{"_index":4315,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bootstrap/typeahead",{"_index":1099,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":2062,"title":{},"body":{"interfaces/CountryList.html":{}}}],["both",{"_index":446,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":2065,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bottom",{"_index":564,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":5558,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":2067,"title":{},"body":{"interfaces/CountryList.html":{}}}],["box",{"_index":510,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["bps",{"_index":5190,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":2069,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bracket",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["brackets",{"_index":5029,"title":{},"body":{"changelog.html":{}}}],["brazil",{"_index":2070,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brb",{"_index":2040,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bread",{"_index":1915,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1977,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":704,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":4305,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1992,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1991,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1975,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1993,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1994,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1974,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3717,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":1057,"title":{},"body":{"classes/Address.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["breaks",{"_index":3865,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["british",{"_index":2072,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":806,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["brn",{"_index":2076,"title":{},"body":{"interfaces/CountryList.html":{}}}],["broken",{"_index":5706,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":3369,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":3001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":3097,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":611,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":3021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":635,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":618,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":648,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":561,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":615,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3715,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":1369,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":2077,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brunswick",{"_index":4224,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["btn",{"_index":1273,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":1260,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":3197,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["buiding",{"_index":5203,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":4065,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":5653,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["building",{"_index":5642,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":5026,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":5503,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3595,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":2080,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bullet",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["burkina",{"_index":2082,"title":{},"body":{"interfaces/CountryList.html":{}}}],["burundi",{"_index":2085,"title":{},"body":{"interfaces/CountryList.html":{}}}],["business",{"_index":1872,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["button",{"_index":48,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":688,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":4362,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":1256,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":4599,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4598,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{},"todo.html":{}}}],["button.component.ts:15",{"_index":4603,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4605,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4602,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:24",{"_index":4606,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":4607,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":4361,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":687,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":1287,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":689,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":1241,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["buttontype",{"_index":1258,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":2066,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bwa",{"_index":2064,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bypass",{"_index":1422,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["bypass_guards",{"_index":2767,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"coverage.html":{}}}],["bypassguards",{"_index":1390,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1668,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3726,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":5227,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":5333,"title":{},"body":{"changelog.html":{}}}],["c122a2a",{"_index":5085,"title":{},"body":{"changelog.html":{}}}],["c2fd959",{"_index":5092,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":5267,"title":{},"body":{"changelog.html":{}}}],["c4c9856",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["c574ba0",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":5238,"title":{},"body":{"changelog.html":{}}}],["c6067fd",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["c64c066",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":5306,"title":{},"body":{"changelog.html":{}}}],["c78856a",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["c8107a7",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":5369,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":5204,"title":{},"body":{"changelog.html":{}}}],["c91fef0",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":5298,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":2095,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":2509,"title":{},"body":{"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4531,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":4127,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":2342,"title":{},"body":{"interfaces/CountryList.html":{}}}],["call",{"_index":1794,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":3336,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":3324,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":1911,"title":{},"body":{"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/WizardProgressItem.html":{}}}],["calling",{"_index":547,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3793,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":5695,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":2087,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cameroon",{"_index":2089,"title":{},"body":{"interfaces/CountryList.html":{}}}],["can't",{"_index":2964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":3835,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":3850,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":3836,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":3855,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canada",{"_index":802,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":382,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":3087,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":15,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["canda",{"_index":3572,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["candidates",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["cannavigatetopage",{"_index":3977,"title":{},"body":{"injectables/PageStateService.html":{},"changelog.html":{}}}],["cannavigatetopage(path",{"_index":3982,"title":{},"body":{"injectables/PageStateService.html":{}}}],["cannavigatetourl",{"_index":383,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{}}}],["cannavigatetourl(url",{"_index":385,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{}}}],["cannotopen",{"_index":1634,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1636,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":3345,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":3230,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":2091,"title":{},"body":{"interfaces/CountryList.html":{}}}],["capitalize",{"_index":5035,"title":{},"body":{"changelog.html":{}}}],["captcha",{"_index":1337,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":692,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":1372,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":1344,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":5534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":691,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":1314,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":1347,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":3371,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":3099,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1796,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4547,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":236,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1381,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":2875,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":320,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["catcherror(err",{"_index":1137,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["categories",{"_index":5300,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":3299,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":2094,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":5278,"title":{},"body":{"changelog.html":{}}}],["cbbfaa8",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["cc9910b",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["ccdfcb2",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":2107,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cd",{"_index":1129,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["cd1cc3b",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["cdnformat",{"_index":4507,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["cdnformat.test",{"_index":4511,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["center",{"_index":1982,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":2096,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cf47d9b",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["cf962bc",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["chaange",{"_index":4557,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":2100,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chain",{"_index":3867,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["chance",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["chanfges",{"_index":5739,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":187,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PostalCodeComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2570,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":4526,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4554,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4527,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":1089,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4621,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":5332,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":1250,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.password",{"_index":4086,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":911,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['countrylist'].currentvalue",{"_index":912,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['images",{"_index":2992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue",{"_index":2993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":914,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['provincelist'].currentvalue",{"_index":915,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changing",{"_index":2682,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["character",{"_index":3477,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["characters",{"_index":1533,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["che",{"_index":2475,"title":{},"body":{"interfaces/CountryList.html":{}}}],["check",{"_index":509,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["check.directive",{"_index":4364,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["check.directive.ts",{"_index":2802,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["check.directive.ts:32",{"_index":2807,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.directive.ts:34",{"_index":2810,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.service",{"_index":1423,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":389,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:25",{"_index":396,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":399,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":400,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:28",{"_index":397,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check/duplicate",{"_index":2801,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["checkbox",{"_index":489,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":694,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":1459,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":5603,"title":{},"body":{"todo.html":{}}}],["checkboxcomponent",{"_index":693,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":1376,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkforduplicates",{"_index":2813,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["checkimagedimensions(file",{"_index":3386,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":1429,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":496,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checksum",{"_index":1675,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3702,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{}}}],["chile",{"_index":2102,"title":{},"body":{"interfaces/CountryList.html":{}}}],["china",{"_index":2104,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chl",{"_index":2101,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chn",{"_index":2103,"title":{},"body":{"interfaces/CountryList.html":{}}}],["choice",{"_index":603,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["christmas",{"_index":2106,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ci",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["circle",{"_index":5076,"title":{},"body":{"changelog.html":{}}}],["city",{"_index":789,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateCityDirective.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":696,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":1506,"title":{},"body":{"components/CityComponent.html":{}}}],["city.directive",{"_index":4370,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["city.directive.ts",{"_index":4491,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["city.directive.ts:26",{"_index":4493,"title":{},"body":{"directives/ValidateCityDirective.html":{}}}],["city/country/province",{"_index":5264,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":1514,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":695,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3527,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":2123,"title":{},"body":{"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":503,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":4434,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["cleanup",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":894,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["clearable",{"_index":2784,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2611,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["clearcompletepages",{"_index":3978,"title":{},"body":{"injectables/PageStateService.html":{}}}],["cleardate",{"_index":2680,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2630,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["clearing",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["clears",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":5672,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":674,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["click)=\"showfullsizeview",{"_index":4476,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":501,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":507,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4601,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["clicking",{"_index":473,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":515,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":53,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":287,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":5675,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3713,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SampleModalComponent.html":{}}}],["closemodal",{"_index":4286,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["closes",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":1351,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":1352,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":1353,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":1354,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":4299,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":4300,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":4301,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmr",{"_index":2088,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cnt",{"_index":3931,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["coard",{"_index":5564,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":2108,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cod",{"_index":2116,"title":{},"body":{"interfaces/CountryList.html":{}}}],["code",{"_index":863,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":742,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":4327,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":4173,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":4172,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":4171,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:101",{"_index":4196,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:105",{"_index":4194,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":4180,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":4178,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":4183,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":4182,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":4177,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:20",{"_index":4179,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:23",{"_index":4184,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:29",{"_index":4207,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:34",{"_index":4186,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:35",{"_index":4185,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:37",{"_index":4206,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":4205,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:40",{"_index":4204,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:47",{"_index":4198,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:48",{"_index":4176,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:50",{"_index":4199,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:59",{"_index":4187,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:63",{"_index":4190,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:73",{"_index":4189,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:78",{"_index":4197,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:85",{"_index":4191,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:90",{"_index":4192,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:94",{"_index":4193,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":4170,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":4358,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["codes",{"_index":1849,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["cog",{"_index":2114,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cok",{"_index":2118,"title":{},"body":{"interfaces/CountryList.html":{}}}],["col",{"_index":2110,"title":{},"body":{"interfaces/CountryList.html":{}}}],["collected",{"_index":3722,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":492,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":2111,"title":{},"body":{"interfaces/CountryList.html":{}}}],["color",{"_index":1955,"title":{},"body":{"injectables/ContainerService.html":{},"changelog.html":{}}}],["colour",{"_index":1254,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["colours",{"_index":5250,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":4203,"title":{},"body":{"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3912,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":2112,"title":{},"body":{"interfaces/CountryList.html":{}}}],["come",{"_index":3718,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":5181,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":4920,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":3526,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":5112,"title":{},"body":{"changelog.html":{}}}],["committed",{"_index":5202,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":5288,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commonattachmentjson",{"_index":1618,"title":{"interfaces/CommonAttachmentJson.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{}}}],["commondatefieldformat",{"_index":2689,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":764,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatecheck",{"_index":2804,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["commonduplicatecheck]'},{'name",{"_index":766,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonformactionbar",{"_index":3908,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commongeocoderinput",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["commonimage",{"_index":298,"title":{"classes/CommonImage.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1628,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":3137,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":3142,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":3360,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":3134,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1637,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":3330,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":3186,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":3273,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1682,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1686,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":3110,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogevents",{"_index":1724,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["commonlogevents.error",{"_index":1772,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["commonlogger",{"_index":1731,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1717,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1374,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonphnvalidation",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["commonvalidatebcpostal",{"_index":4486,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":768,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatecity",{"_index":4492,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["commonvalidatecity]'},{'name",{"_index":770,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4498,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":772,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephone",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["commonvalidatepostalcode",{"_index":4501,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["commonvalidatepostalcode]'},{'name",{"_index":774,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateregion",{"_index":4519,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["commonvalidateregion]'},{'name",{"_index":776,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatesin",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["commonvalidatestreet",{"_index":778,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["comoros",{"_index":2113,"title":{},"body":{"interfaces/CountryList.html":{}}}],["compat",{"_index":3302,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["compatibility",{"_index":831,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["compatibilty",{"_index":1059,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["compatible",{"_index":5133,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":5680,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":5231,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":5650,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":5644,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":474,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["completed",{"_index":1404,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":1430,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1979,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":5570,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3638,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":5368,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":182,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3781,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":680,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentlist",{"_index":4385,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":144,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":4350,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address",{"_index":4383,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":4333,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":4337,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":4339,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":4340,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":4335,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/validate",{"_index":4369,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/confirm",{"_index":4377,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":4341,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":4304,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":3504,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":4381,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":4319,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":4320,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":4329,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/duplicate",{"_index":4363,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/email.component",{"_index":4376,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/error",{"_index":4365,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":4322,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":4306,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":4355,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/geocoder",{"_index":4379,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":4357,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":4394,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":4343,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":4351,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":4308,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":4310,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":4354,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":4344,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":4326,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":4334,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":4347,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sample",{"_index":4375,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":4353,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":4336,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/validate",{"_index":4367,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":4324,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":4332,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/validate",{"_index":4371,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":4311,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":4360,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":5694,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3708,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["computers",{"_index":5598,"title":{},"body":{"todo.html":{}}}],["concatenate",{"_index":5063,"title":{},"body":{"changelog.html":{}}}],["concatenated",{"_index":4148,"title":{},"body":{"classes/Person.html":{}}}],["concatenates",{"_index":4138,"title":{},"body":{"classes/Person.html":{}}}],["conditional",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":5582,"title":{},"body":{"license.html":{}}}],["config",{"_index":5367,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":5498,"title":{},"body":{"coverage.html":{}}}],["configurable",{"_index":5692,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1983,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1793,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":1364,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configuring",{"_index":5730,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":698,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["confirmation",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["confirmtemplatecomponent",{"_index":697,"title":{"components/ConfirmTemplateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["congo",{"_index":2115,"title":{},"body":{"interfaces/CountryList.html":{}}}],["connected",{"_index":1154,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["connectivity",{"_index":1769,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["consectetur",{"_index":1548,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":497,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3744,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":700,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":1036,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":1244,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1781,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/PageFrameworkComponent.html":{},"todo.html":{}}}],["console",{"_index":342,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('addressvalidator",{"_index":1226,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["console.error('an",{"_index":1808,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.error('geocoder",{"_index":3533,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3799,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1812,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3800,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1791,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.log",{"_index":336,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"classes/Container.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["console.log(\"error",{"_index":3364,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":3090,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":3145,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":3125,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":3269,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":3105,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3798,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":346,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":3207,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":3315,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":3381,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1802,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.log('opening",{"_index":3161,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('scaled",{"_index":4473,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('start",{"_index":3222,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('this",{"_index":3326,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":3256,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":3218,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":3355,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":3384,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(response",{"_index":3383,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3813,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":3147,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["const",{"_index":203,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":554,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["constructor(@optional",{"_index":1127,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["constructor(containerservice",{"_index":1888,"title":{},"body":{"classes/Container.html":{}}}],["constructor(controldir",{"_index":1462,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["constructor(errorcode",{"_index":1707,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(filecontent",{"_index":1655,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(http",{"_index":258,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":1320,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(message",{"_index":3862,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["constructor(pagestateservice",{"_index":2757,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["constructor(private",{"_index":1339,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":77,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1648,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":20,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":4455,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1687,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":5737,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3738,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":1529,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{}}}],["container",{"_index":1852,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/ErrorContainerComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":715,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["container.component",{"_index":4366,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["container.component.html",{"_index":2869,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.scss",{"_index":2868,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.ts",{"_index":2867,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:10",{"_index":2871,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.length",{"_index":4587,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container/error",{"_index":2866,"title":{},"body":{"components/ErrorContainerComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["container[0].scrollleft",{"_index":4593,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["containers",{"_index":1856,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["containerservice",{"_index":1862,"title":{"injectables/ContainerService.html":{}},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["contains",{"_index":1854,"title":{},"body":{"classes/Container.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/WizardProgressItem.html":{}}}],["containstarturl",{"_index":2771,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["content",{"_index":480,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{}}}],["contentchild",{"_index":2886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3642,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1662,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["continue",{"_index":16,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"interfaces/WizardProgressItem.html":{}}}],["continuebtn",{"_index":1938,"title":{},"body":{"injectables/ContainerService.html":{}}}],["continuebtnsubject",{"_index":1939,"title":{},"body":{"injectables/ContainerService.html":{}}}],["continuebutton",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contrast",{"_index":5108,"title":{},"body":{"changelog.html":{}}}],["contributing",{"_index":5168,"title":{},"body":{"changelog.html":{}}}],["contributing.md",{"_index":5304,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":195,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"todo.html":{}}}],["control.ts",{"_index":115,"title":{},"body":{"classes/AbstractFormControl.html":{},"coverage.html":{}}}],["control.ts:11",{"_index":135,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:14",{"_index":170,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:16",{"_index":168,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:19",{"_index":169,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:23",{"_index":136,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:24",{"_index":137,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:27",{"_index":145,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:32",{"_index":167,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:35",{"_index":147,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:40",{"_index":150,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:45",{"_index":162,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:49",{"_index":164,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:68",{"_index":154,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:88",{"_index":165,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.value",{"_index":2816,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["controlcontainer",{"_index":795,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":1128,"title":{},"body":{"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controldir.valueaccessor",{"_index":1130,"title":{},"body":{"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controls",{"_index":429,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["controlvalueaccessor",{"_index":118,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["conventional",{"_index":5605,"title":{},"body":{"todo.html":{}}}],["convert",{"_index":2597,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2710,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2622,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["converted",{"_index":906,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["convertroutetotitle",{"_index":1884,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1901,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1903,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2711,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2629,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cook",{"_index":2119,"title":{},"body":{"interfaces/CountryList.html":{}}}],["copied",{"_index":581,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copy",{"_index":976,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["copy(object",{"_index":1032,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3741,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":5469,"title":{},"body":{"coverage.html":{}}}],["copyright",{"_index":5565,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":5508,"title":{},"body":{"coverage.html":{}}}],["core",{"_index":703,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":4303,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1980,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":702,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1596,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":1426,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correctly",{"_index":3838,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["correspond",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":549,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":591,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["cost",{"_index":1873,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["costa",{"_index":2121,"title":{},"body":{"interfaces/CountryList.html":{}}}],["could've",{"_index":3071,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["count",{"_index":3938,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["counter",{"_index":5173,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":520,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1996,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country",{"_index":575,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["country'},{'name",{"_index":706,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":2551,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":804,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["country/prov",{"_index":5069,"title":{},"body":{"changelog.html":{}}}],["country/province",{"_index":5041,"title":{},"body":{"changelog.html":{}}}],["country/province/region",{"_index":4521,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["country_",{"_index":2552,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country_list",{"_index":803,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["country_list.find",{"_index":2549,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycode",{"_index":1997,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycomponent",{"_index":705,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":801,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["countryobj",{"_index":966,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.countrycode",{"_index":970,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.description",{"_index":2550,"title":{},"body":{"interfaces/CountryList.html":{}}}],["counts",{"_index":522,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":5370,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":2090,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cr18890",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["cr18975",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1239,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["create_facility_pages.home.fullpath",{"_index":2756,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["created",{"_index":2961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":5491,"title":{},"body":{"coverage.html":{}}}],["creates",{"_index":5665,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["createtestingmodule",{"_index":5383,"title":{},"body":{"coverage.html":{}}}],["creating",{"_index":1379,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":2120,"title":{},"body":{"interfaces/CountryList.html":{}}}],["criteria",{"_index":3898,"title":{},"body":{"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test",{"_index":3899,"title":{},"body":{"components/NameComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteriamsg",{"_index":4010,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":2127,"title":{},"body":{"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1916,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":5193,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":3344,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":2128,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cuba",{"_index":2129,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cunha",{"_index":2405,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1604,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":2131,"title":{},"body":{"interfaces/CountryList.html":{}}}],["curr",{"_index":3295,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currently",{"_index":499,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":3341,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["custom",{"_index":600,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["customize",{"_index":5255,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3760,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":2130,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cxr",{"_index":2105,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cycles",{"_index":2671,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cym",{"_index":2093,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyp",{"_index":2132,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyprus",{"_index":2133,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cze",{"_index":2134,"title":{},"body":{"interfaces/CountryList.html":{}}}],["czech",{"_index":2135,"title":{},"body":{"interfaces/CountryList.html":{}}}],["côte",{"_index":2124,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d",{"_index":3270,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["d.ts",{"_index":5656,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d302941",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["d4f0e3b",{"_index":5127,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":5301,"title":{},"body":{"changelog.html":{}}}],["d5dd02f",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":5314,"title":{},"body":{"changelog.html":{}}}],["d63ff2d",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":1028,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["d\\'ivoire",{"_index":2125,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2705,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":2404,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dae52b0",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["danger",{"_index":628,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["danging",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["darken",{"_index":5106,"title":{},"body":{"changelog.html":{}}}],["darussalam",{"_index":2078,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1987,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":345,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.city",{"_index":979,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.country",{"_index":981,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.locality",{"_index":1167,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["data.postalcode",{"_index":1172,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["data.province",{"_index":980,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.service",{"_index":1373,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":1316,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":4294,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":4297,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":4295,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":1321,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":1328,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":1332,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":1324,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":4296,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":978,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["datachange",{"_index":1291,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":3024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1759,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["date'},{'name",{"_index":708,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2632,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.component.ts",{"_index":4397,"title":{},"body":{"interfaces/SimpleDate.html":{},"todo.html":{}}}],["date.day",{"_index":2634,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2628,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2624,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2626,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.interface.ts",{"_index":4393,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2633,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2631,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datechange",{"_index":2591,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":707,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":2561,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":763,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2613,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1758,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["dateofbirth",{"_index":4111,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":4114,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2579,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":710,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2586,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2587,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":709,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2621,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2589,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2590,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2644,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dates",{"_index":2593,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datetime",{"_index":2615,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["day",{"_index":2627,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["dayoutofrange",{"_index":2565,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dbb94e1",{"_index":5325,"title":{},"body":{"changelog.html":{}}}],["dc606f1",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["dd29a60",{"_index":5241,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":5693,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":1093,"title":{},"body":{"interfaces/AddressResult.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["debouncetime(500",{"_index":1133,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["debug",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":309,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["declarations",{"_index":1349,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":5621,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":35,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["defaultcolor",{"_index":1929,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["defaultcountry",{"_index":824,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulted",{"_index":853,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulterrmsg",{"_index":2557,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidbcpostal",{"_index":4217,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidchar",{"_index":4218,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.pattern",{"_index":4216,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.required",{"_index":4215,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrormessage",{"_index":1460,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["defaultpageguardservice",{"_index":2749,"title":{"injectables/DefaultPageGuardService.html":{}},"body":{"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["defaultprovince",{"_index":825,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaults",{"_index":913,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["defaultsubmitlabel",{"_index":1895,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2663,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["delay",{"_index":2896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":3366,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"todo.html":{}}}],["delete(evt",{"_index":4460,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleted",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["deleteimage",{"_index":4454,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":3375,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delivery",{"_index":859,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["deliveryaddresslines",{"_index":1087,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["demcl",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["democratic",{"_index":2117,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denmark",{"_index":2137,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denominator",{"_index":4573,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":1232,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":1820,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"additional-documentation/local-development/schematics.html":{}}}],["depending",{"_index":925,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["deployed",{"_index":1365,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3639,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecate",{"_index":5123,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":401,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["depreciated",{"_index":1428,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["deprecriated",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4282,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["description",{"_index":159,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["descriptions",{"_index":5056,"title":{},"body":{"changelog.html":{}}}],["deserunt",{"_index":1612,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":783,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3698,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":5139,"title":{},"body":{"changelog.html":{}}}],["destroydate",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":5617,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["detect",{"_index":2989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["detection",{"_index":2670,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{}}}],["detector",{"_index":2988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["determine",{"_index":1040,"title":{},"body":{"classes/Address.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["determines",{"_index":47,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":2184,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dev",{"_index":1441,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["developer",{"_index":3511,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["developers",{"_index":186,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["development",{"_index":4142,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3707,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/build",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["devkit/schematics",{"_index":5674,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df20e61",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["df26aa1",{"_index":5307,"title":{},"body":{"changelog.html":{}}}],["df5bd4d",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":5257,"title":{},"body":{"changelog.html":{}}}],["df6babe",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":3159,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["differ",{"_index":5733,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["differenceinyears",{"_index":4150,"title":{},"body":{"classes/Person.html":{}}}],["different",{"_index":5713,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["directive",{"_index":218,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive's",{"_index":3782,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directives",{"_index":762,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["directly",{"_index":1046,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disable",{"_index":194,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disableaddressvalidator",{"_index":829,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["disablebefore",{"_index":2601,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disablecontinue",{"_index":3765,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["disabled",{"_index":11,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["disablegeocoder",{"_index":826,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disables",{"_index":31,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["disablesince",{"_index":2598,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2594,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3695,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":1190,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["display",{"_index":418,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["display=\"table",{"_index":3652,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["display='inline",{"_index":3657,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["displayed",{"_index":500,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["displayerror",{"_index":2870,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["displayicon",{"_index":1835,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["displaying",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":4175,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/build/pdf",{"_index":2922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/build/pdf.worker.entry",{"_index":2924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/common",{"_index":5729,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distantfuture",{"_index":5412,"title":{},"body":{"coverage.html":{}}}],["distantpast",{"_index":5413,"title":{},"body":{"coverage.html":{}}}],["distinctio",{"_index":1575,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":1094,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["distributed",{"_index":5579,"title":{},"body":{"license.html":{}}}],["divisible",{"_index":4444,"title":{},"body":{"components/SinComponent.html":{}}}],["divs",{"_index":3970,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["dji",{"_index":2138,"title":{},"body":{"interfaces/CountryList.html":{}}}],["djibouti",{"_index":2139,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dma",{"_index":2140,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dnk",{"_index":2136,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dob",{"_index":4132,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":4112,"title":{},"body":{"classes/Person.html":{}}}],["doc",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["docinitparams",{"_index":3346,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3742,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["document",{"_index":2820,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":619,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":3342,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":3317,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4586,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":4022,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":4039,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4637,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["documenttype",{"_index":1661,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["doesn't",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":1280,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1545,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":656,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":2141,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dominican",{"_index":2142,"title":{},"body":{"interfaces/CountryList.html":{}}}],["don't",{"_index":1467,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{}}}],["don'ts",{"_index":5619,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":3072,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3711,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":5618,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3916,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":563,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":3002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":3086,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":3084,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":3088,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":3009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":524,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":711,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2780,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2779,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":573,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":3004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":3092,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":3094,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1599,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1818,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["duing",{"_index":1498,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["dummy",{"_index":4143,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":530,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["duplicatecheckdirective",{"_index":765,"title":{"directives/DuplicateCheckDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duplist",{"_index":2806,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.find",{"_index":2815,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.length",{"_index":2814,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["dutch",{"_index":2443,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dynamic",{"_index":5518,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":926,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["dza",{"_index":2007,"title":{},"body":{"interfaces/CountryList.html":{}}}],["e",{"_index":3727,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":288,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e0bd207",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["e2271b7",{"_index":5210,"title":{},"body":{"changelog.html":{}}}],["e29adc8",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":5134,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":5153,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":5182,"title":{},"body":{"changelog.html":{}}}],["e56ffdf",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["e5b3cfa",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["e6db87e",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":5327,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":5216,"title":{},"body":{"changelog.html":{}}}],["e89e6f3",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":3079,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":181,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":3073,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":1251,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{}}}],["easily",{"_index":3060,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":3428,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ebb6998",{"_index":5066,"title":{},"body":{"changelog.html":{}}}],["ecu",{"_index":2143,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ecuador",{"_index":2144,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ed615a6",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["edf0b2e",{"_index":5113,"title":{},"body":{"changelog.html":{}}}],["edge",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["edward",{"_index":4234,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["eea4886",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["egy",{"_index":2145,"title":{},"body":{"interfaces/CountryList.html":{}}}],["egypt",{"_index":2146,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eib",{"_index":3246,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":2148,"title":{},"body":{"interfaces/CountryList.html":{}}}],["element",{"_index":612,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["element's",{"_index":3028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":470,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":479,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":645,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":643,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":642,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":637,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":634,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":629,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":632,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":639,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":651,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":623,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":649,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":621,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":1271,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageSectionComponent.html":{}}}],["elementsgit",{"_index":5032,"title":{},"body":{"changelog.html":{}}}],["eligibility",{"_index":3732,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1550,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["email",{"_index":2822,"title":{},"body":{"components/EmailComponent.html":{},"changelog.html":{}}}],["email'},{'name",{"_index":713,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["email.component.html",{"_index":2824,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":2823,"title":{},"body":{"components/EmailComponent.html":{}}}],["email_",{"_index":2829,"title":{},"body":{"components/EmailComponent.html":{}}}],["emailcomponent",{"_index":712,"title":{"components/EmailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["emaill",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["embedded",{"_index":5138,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":2516,"title":{},"body":{"interfaces/CountryList.html":{}}}],["emit",{"_index":1174,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["emits",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":1063,"title":{},"body":{"classes/Address.html":{},"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["enabled",{"_index":5097,"title":{},"body":{"changelog.html":{}}}],["enables",{"_index":842,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["encapsulation",{"_index":2932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["enclose",{"_index":3416,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":5700,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":3307,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":550,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":1331,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":5719,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["endswith",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["enrolservice",{"_index":381,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["ensure",{"_index":1797,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":606,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["entered",{"_index":3710,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":1187,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["entries",{"_index":2975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":5219,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1624,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":5532,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":5639,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3675,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["environment",{"_index":1442,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["environment.bypassguards",{"_index":2755,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["equation",{"_index":3163,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":2151,"title":{},"body":{"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2599,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["eri",{"_index":2153,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eritrea",{"_index":2154,"title":{},"body":{"interfaces/CountryList.html":{}}}],["erorr",{"_index":3804,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":3552,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["errmsg",{"_index":3439,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":4107,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":4106,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":3501,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":3500,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":172,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('common",{"_index":4610,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["error('this",{"_index":3329,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1803,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1809,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":3133,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":3144,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":3136,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":3139,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1773,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.name",{"_index":1775,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.rawimagefile",{"_index":3138,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":3140,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1813,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1777,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.ts",{"_index":3861,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["error.ts:1",{"_index":3863,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["error_fetch_img",{"_index":5543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":5546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1649,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{}}}],["errorcontainercomponent",{"_index":714,"title":{"components/ErrorContainerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordescription",{"_index":1650,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1640,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1805,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":133,"title":{"interfaces/ErrorMessage.html":{}},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["errormessagerequired",{"_index":1289,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["errormessages",{"_index":2571,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{}}}],["errormessages.dayoutofrange",{"_index":2743,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2748,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2747,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2746,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2742,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2745,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2744,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1774,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["errorreason",{"_index":3338,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":419,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":3293,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":3306,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":3305,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":2539,"title":{},"body":{"interfaces/CountryList.html":{}}}],["esp",{"_index":2459,"title":{},"body":{"interfaces/CountryList.html":{}}}],["especially",{"_index":3705,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1568,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":2155,"title":{},"body":{"interfaces/CountryList.html":{}}}],["estonia",{"_index":2156,"title":{},"body":{"interfaces/CountryList.html":{}}}],["et",{"_index":1587,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":577,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":2157,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":2158,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eum",{"_index":1579,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":2059,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ev",{"_index":3631,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4562,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2660,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4578,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":1158,"title":{},"body":{"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["event.datatransfer.files",{"_index":3096,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":1159,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["event.jsdate",{"_index":2677,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":1193,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["event.preventdefault",{"_index":3095,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":3411,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2700,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":2858,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["event.target['files",{"_index":3102,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":792,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2697,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":1186,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":827,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["everything",{"_index":1756,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":3261,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":3155,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":3091,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":3263,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ex",{"_index":2572,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{}}}],["exactly",{"_index":3117,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":378,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"directives/ValidateNameDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":3842,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":5734,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":5158,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":5677,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":3043,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1779,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3907,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":5540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4592,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exendable",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["exercitationem",{"_index":1592,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1397,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["existing",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["exists",{"_index":2606,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":675,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":667,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":5637,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":5280,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":1338,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["explicitly",{"_index":1177,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["export",{"_index":76,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":177,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["exports",{"_index":1350,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":5584,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1004,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extending",{"_index":2753,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["extends",{"_index":84,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":1017,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["extract",{"_index":3045,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":4076,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f01339b",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["f0202f2",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["f103e7c",{"_index":5144,"title":{},"body":{"changelog.html":{}}}],["f18457b",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["f21d329",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["f27b941",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["f2ccfe6",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":5207,"title":{},"body":{"changelog.html":{}}}],["f541d81",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["f5e3e0d",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":5281,"title":{},"body":{"changelog.html":{}}}],["f6e614f",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":4075,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["fabd0cf",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["facere",{"_index":1563,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":5714,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facility",{"_index":1871,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["facing",{"_index":3803,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":283,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":2160,"title":{},"body":{"interfaces/CountryList.html":{}}}],["false",{"_index":37,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"todo.html":{}}}],["falsy",{"_index":233,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["falsy/undefined",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["family",{"_index":4419,"title":{},"body":{"components/SinComponent.html":{}}}],["faroe",{"_index":2163,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faso",{"_index":2083,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faster",{"_index":5597,"title":{},"body":{"todo.html":{}}}],["favicon_base64",{"_index":5481,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4558,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":5188,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":5156,"title":{},"body":{"changelog.html":{}}}],["fd32157",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["fd57808",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["fda6abf",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["fda99be",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":1219,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["feature.properties",{"_index":3522,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["federated",{"_index":2315,"title":{},"body":{"interfaces/CountryList.html":{}}}],["federation",{"_index":2394,"title":{},"body":{"interfaces/CountryList.html":{}}}],["feedback",{"_index":4095,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":1317,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":1322,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":1318,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":1326,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":5541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fg",{"_index":408,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["fg.controls[control].markastouched",{"_index":431,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["fg.foreach",{"_index":420,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["field",{"_index":208,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["fieldmaxlenghts",{"_index":866,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fields",{"_index":820,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["fieldset",{"_index":5087,"title":{},"body":{"changelog.html":{}}}],["figure",{"_index":3403,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["fiji",{"_index":2165,"title":{},"body":{"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":3023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":3387,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":3176,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1652,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["filecontrol",{"_index":2968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":3170,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":3108,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":3017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileobservable",{"_index":3202,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":3206,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":3106,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":3107,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":3093,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":3103,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":3236,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":3237,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileupload",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["fileuploadbrowse",{"_index":2970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4869,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":716,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":3113,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2882,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":1035,"title":{},"body":{"classes/Address.html":{}}}],["filter",{"_index":1184,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["filter((mspimage",{"_index":3120,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3630,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":3104,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":948,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":2166,"title":{},"body":{"interfaces/CountryList.html":{}}}],["final",{"_index":3067,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finally",{"_index":3075,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":876,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["findcountrycode",{"_index":965,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["findindex",{"_index":3942,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["findindex(url",{"_index":3985,"title":{},"body":{"injectables/PageStateService.html":{}}}],["findprovincedescription(prov",{"_index":957,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fine",{"_index":1761,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["finish",{"_index":3712,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":3027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":2167,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fire",{"_index":1148,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["firefox",{"_index":5079,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":532,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":5222,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":3440,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":3446,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":3304,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fji",{"_index":2164,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flag",{"_index":3802,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["flags",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":5595,"title":{},"body":{"todo.html":{}}}],["flatmap",{"_index":2894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":3967,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["flk",{"_index":2159,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flow",{"_index":3832,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["fluid",{"_index":5175,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":148,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["fn.bind(this",{"_index":226,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["fns",{"_index":4151,"title":{},"body":{"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["focus",{"_index":1050,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["focusable",{"_index":5080,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":5633,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":5316,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["followed",{"_index":3473,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":2564,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["follows",{"_index":5604,"title":{},"body":{"todo.html":{}}}],["fonts",{"_index":5251,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":644,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":1189,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["forcerender",{"_index":2990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1799,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["form",{"_index":44,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{}}}],["form.ts",{"_index":8,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["form.ts:11",{"_index":50,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:13",{"_index":23,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:20",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:22",{"_index":409,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["form.ts:23",{"_index":63,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:26",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:29",{"_index":412,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["form.ts:47",{"_index":407,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["form.ts:7",{"_index":30,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:8",{"_index":86,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:9",{"_index":38,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractReactForm.html":{}}}],["formactionbar",{"_index":3413,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["formactionbarcomponent",{"_index":718,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2612,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["format.directive",{"_index":4382,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2688,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2695,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2692,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatcriteria",{"_index":2860,"title":{},"body":{"components/EmailComponent.html":{}}}],["formatdateofbirth",{"_index":4115,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":1209,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formatted",{"_index":2843,"title":{},"body":{"components/EmailComponent.html":{}}}],["formatting",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["formcontrol",{"_index":1160,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"todo.html":{}}}],["former",{"_index":2287,"title":{},"body":{"interfaces/CountryList.html":{}}}],["formerrors",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["formgroup",{"_index":404,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["forms",{"_index":426,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["formsmodule",{"_index":1371,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmibar",{"_index":5593,"title":{},"body":{"todo.html":{}}}],["formsubmitbar",{"_index":3412,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":720,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":1358,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":794,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["found",{"_index":375,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":5629,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":5225,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3905,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":2168,"title":{},"body":{"interfaces/CountryList.html":{}}}],["framework",{"_index":3427,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":730,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":4309,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3915,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3914,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3904,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3917,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3918,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3903,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":2169,"title":{},"body":{"interfaces/CountryList.html":{}}}],["free",{"_index":1238,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3728,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":2171,"title":{},"body":{"interfaces/CountryList.html":{}}}],["friendly",{"_index":3058,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":2162,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":3098,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":3100,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":3085,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":3150,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":3152,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":3153,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":2313,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1571,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":722,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":3503,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":4116,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":4160,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":721,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":3463,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3759,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":160,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["functionality",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":4213,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["functions",{"_index":4548,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["futuna",{"_index":2538,"title":{},"body":{"interfaces/CountryList.html":{}}}],["future",{"_index":1249,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":2879,"title":{},"body":{"interfaces/ErrorMessage.html":{},"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":2178,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gabon",{"_index":2179,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gambia",{"_index":2181,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gbr",{"_index":2517,"title":{},"body":{"interfaces/CountryList.html":{}}}],["general",{"_index":858,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["generally",{"_index":54,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["generate",{"_index":5349,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generateskiptocontentlink",{"_index":3606,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generateuuid",{"_index":251,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["generating",{"_index":350,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["generation",{"_index":5299,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["generic",{"_index":3662,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["geo",{"_index":2182,"title":{},"body":{"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":798,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":725,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["geocoderinput",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["geocoderinputcomponent",{"_index":724,"title":{"components/GeocoderInputComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geocoderservice",{"_index":3505,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoverinputcomponent",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["georgia",{"_index":2183,"title":{},"body":{"interfaces/CountryList.html":{}}}],["germany",{"_index":2185,"title":{},"body":{"interfaces/CountryList.html":{}}}],["get(url",{"_index":267,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4532,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4537,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":4113,"title":{},"body":{"classes/Person.html":{}}}],["getcontinuebutton",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getcountrydescription",{"_index":2548,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["getdateofbirthshort",{"_index":4130,"title":{},"body":{"classes/Person.html":{}}}],["getdebugelement",{"_index":5384,"title":{},"body":{"coverage.html":{}}}],["getdebuginlineerror",{"_index":5385,"title":{},"body":{"coverage.html":{}}}],["getdebuglabel",{"_index":5386,"title":{},"body":{"coverage.html":{}}}],["getdebuglegend",{"_index":5387,"title":{},"body":{"coverage.html":{}}}],["geterrorcode",{"_index":1843,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getformatdateofbirth",{"_index":4133,"title":{},"body":{"classes/Person.html":{}}}],["getfullname",{"_index":4145,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":313,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["getinputdebugelement",{"_index":5388,"title":{},"body":{"coverage.html":{}}}],["getisbconly",{"_index":1055,"title":{},"body":{"classes/Address.html":{}}}],["getmaxlenasnumber",{"_index":3893,"title":{},"body":{"components/NameComponent.html":{}}}],["getname",{"_index":4136,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":527,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":539,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getpackageversionfrompackagejson",{"_index":5500,"title":{},"body":{"coverage.html":{}}}],["getpageatindex",{"_index":3945,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["getpageatindex(idx",{"_index":3987,"title":{},"body":{"injectables/PageStateService.html":{}}}],["getpasswordstrength",{"_index":4016,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":4041,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getprovincedescription",{"_index":4245,"title":{},"body":{"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["gets",{"_index":1125,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["getselectdebugelement",{"_index":5389,"title":{},"body":{"coverage.html":{}}}],["getstarturl",{"_index":393,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getstreet",{"_index":1051,"title":{},"body":{"classes/Address.html":{}}}],["getsuccesscode",{"_index":1841,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getting",{"_index":4619,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":1385,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":1394,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1540,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["getwarningcode",{"_index":1845,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["ggy",{"_index":2202,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gha",{"_index":2186,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ghana",{"_index":2187,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gib",{"_index":2188,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":2189,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gif",{"_index":3008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":3127,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":2204,"title":{},"body":{"interfaces/CountryList.html":{}}}],["git",{"_index":5305,"title":{},"body":{"changelog.html":{}}}],["gitcommit",{"_index":5504,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":5318,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":582,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["give",{"_index":3209,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{}}}],["given",{"_index":542,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{}}}],["gives",{"_index":1641,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":2196,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gmb",{"_index":2180,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnb",{"_index":2205,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnq",{"_index":2150,"title":{},"body":{"interfaces/CountryList.html":{}}}],["go",{"_index":548,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":5732,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":3311,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3906,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":5249,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":5587,"title":{},"body":{"license.html":{}}}],["grab",{"_index":531,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":2190,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grd",{"_index":2194,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greece",{"_index":2191,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greenland",{"_index":2193,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenada",{"_index":2195,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenadines",{"_index":2418,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grl",{"_index":2192,"title":{},"body":{"interfaces/CountryList.html":{}}}],["group",{"_index":1284,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":690,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":4338,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":1286,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":1285,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":1277,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":1293,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":1297,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":1298,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":1294,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":1295,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":1296,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":1299,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":1308,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":1306,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":1292,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":1304,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":1300,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":1301,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":1302,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":1305,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":1276,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":5559,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":2200,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":2197,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guam",{"_index":2199,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guard",{"_index":363,"title":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{}}}],["guard.service",{"_index":2765,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{}}}],["guard.service.ts",{"_index":362,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:24",{"_index":384,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["guard.service.ts:25",{"_index":386,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["guard.service.ts:29",{"_index":2762,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:30",{"_index":2759,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:34",{"_index":2760,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:42",{"_index":2761,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:53",{"_index":3846,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":3853,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:59",{"_index":4271,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":3856,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:67",{"_index":4272,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":3848,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:74",{"_index":4270,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":1439,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"overview.html":{}}}],["guatemala",{"_index":2201,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guernsey",{"_index":2203,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guessable",{"_index":4043,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":4045,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":2170,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guiana",{"_index":2172,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guide",{"_index":5554,"title":{},"body":{"index.html":{}}}],["guide.md",{"_index":3512,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["guidelines",{"_index":784,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":2152,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gum",{"_index":2198,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guy",{"_index":2207,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guyana",{"_index":2208,"title":{},"body":{"interfaces/CountryList.html":{}}}],["haiti",{"_index":2210,"title":{},"body":{"interfaces/CountryList.html":{}}}],["half",{"_index":4579,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4581,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4591,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":3014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["handleerror",{"_index":252,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":279,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":5277,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":282,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["handling",{"_index":328,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":51,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":551,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1610,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["haserror",{"_index":1117,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["hash",{"_index":3064,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasmask",{"_index":4502,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["hasn't",{"_index":942,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["hasnoresults",{"_index":1116,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["hasvalue",{"_index":1007,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["having",{"_index":3972,"title":{},"body":{"components/PageSectionComponent.html":{},"changelog.html":{}}}],["header",{"_index":3593,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":728,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3603,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3602,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":727,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3808,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":263,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["headerservice",{"_index":1860,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["health",{"_index":3724,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["heard",{"_index":2212,"title":{},"body":{"interfaces/CountryList.html":{}}}],["height",{"_index":3031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1684,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":2401,"title":{},"body":{"interfaces/CountryList.html":{}}}],["help",{"_index":5641,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":349,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["helpers",{"_index":75,"title":{},"body":{"classes/AbstractBaseForm.html":{},"components/FormActionBarComponent.html":{},"changelog.html":{}}}],["helpers.ts",{"_index":5379,"title":{},"body":{"coverage.html":{}}}],["helpers/library",{"_index":176,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/XiconButtonComponent.html":{}}}],["helpers/scroll",{"_index":74,"title":{},"body":{"classes/AbstractBaseForm.html":{},"components/FormActionBarComponent.html":{}}}],["here",{"_index":1795,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":2063,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1688,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":3020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":40,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["hidefullsizeview",{"_index":4451,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":4011,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":5678,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":311,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{}}}],["hkg",{"_index":2219,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hmd",{"_index":2211,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hnd",{"_index":2217,"title":{},"body":{"interfaces/CountryList.html":{}}}],["holy",{"_index":2215,"title":{},"body":{"interfaces/CountryList.html":{}}}],["homepage",{"_index":5206,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":2218,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hong",{"_index":2220,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hood",{"_index":5215,"title":{},"body":{"changelog.html":{}}}],["hooks",{"_index":5297,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":3655,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["horizontally",{"_index":4544,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["hostlistener",{"_index":2696,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2698,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2691,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":2126,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hti",{"_index":2209,"title":{},"body":{"interfaces/CountryList.html":{}}}],["html",{"_index":678,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["html5",{"_index":3012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":3227,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":3190,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2701,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":247,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["http://full",{"_index":3640,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":5572,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1740,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["httpclient",{"_index":259,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":812,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["httperrorresponse",{"_index":280,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":261,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":257,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{}}}],["httpopts",{"_index":329,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":331,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":268,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":1333,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":5547,"title":{},"body":{"index.html":{}}}],["https://developer.mozilla.org/en",{"_index":1666,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":3507,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":3491,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/bcgov/api",{"_index":3509,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":4047,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":4067,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2582,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["human",{"_index":504,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":2222,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hungary",{"_index":2223,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hyphen",{"_index":3474,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["hyphens",{"_index":1534,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{}}}],["iceland",{"_index":2225,"title":{},"body":{"interfaces/CountryList.html":{}}}],["icon",{"_index":840,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["id",{"_index":1606,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3599,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":585,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":3118,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":140,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":2228,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ids",{"_index":1229,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":1436,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["ie",{"_index":4212,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ie10",{"_index":4609,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["ignored",{"_index":3196,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1625,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":3193,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":3178,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":3217,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":3215,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":3224,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.title",{"_index":4293,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["image/jpeg",{"_index":3220,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":3112,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":3191,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":3194,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":4452,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4477,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":3149,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":3185,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":3331,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["images.length",{"_index":3174,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":3177,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":3121,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":3272,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":3275,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":3274,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":3188,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":3316,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":3325,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":3322,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":3318,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":3343,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":3367,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":2237,"title":{},"body":{"interfaces/CountryList.html":{}}}],["implement",{"_index":3298,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":2584,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["implemented",{"_index":34,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"changelog.html":{}}}],["implementing",{"_index":188,"title":{},"body":{"classes/AbstractFormControl.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["implements",{"_index":116,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["implied",{"_index":5585,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["import('pdfjs",{"_index":2921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["importable",{"_index":5703,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":5658,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["importantly",{"_index":3968,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imported",{"_index":534,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":5614,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":1362,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":3010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":3211,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["improvement",{"_index":3966,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imydate",{"_index":2575,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1609,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":306,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":572,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":3080,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":1399,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages",{"_index":1450,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":1453,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletevalue",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["incorrect",{"_index":558,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":3418,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":5345,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":2226,"title":{},"body":{"interfaces/CountryList.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["index.ts",{"_index":5647,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1719,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":2227,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indian",{"_index":2073,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indicate",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["indicates",{"_index":1402,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["indices",{"_index":3939,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["individual",{"_index":301,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{}}}],["indonesia",{"_index":2229,"title":{},"body":{"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":494,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":374,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2574,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["inheiritance",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":4430,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["initialization",{"_index":222,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["initialize",{"_index":4153,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3783,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["initials",{"_index":3888,"title":{},"body":{"components/NameComponent.html":{}}}],["inject",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":359,"title":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":361,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injected",{"_index":2752,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["injectiontoken",{"_index":2763,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["injector",{"_index":2758,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["inline",{"_index":3656,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3807,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":174,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["input'},{'name",{"_index":726,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["input(event",{"_index":2694,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.component",{"_index":4380,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["input.component.html",{"_index":3539,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.scss",{"_index":3538,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts",{"_index":3537,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:109",{"_index":3556,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:130",{"_index":3553,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:143",{"_index":3550,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:149",{"_index":3560,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:156",{"_index":3557,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:161",{"_index":3558,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:165",{"_index":3559,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:41",{"_index":3545,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:42",{"_index":3544,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:43",{"_index":3547,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:44",{"_index":3548,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:46",{"_index":3546,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:49",{"_index":3566,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:51",{"_index":3565,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:53",{"_index":3564,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:54",{"_index":3563,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:57",{"_index":3568,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:59",{"_index":3569,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:61",{"_index":3567,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:63",{"_index":3561,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:64",{"_index":3543,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:66",{"_index":3562,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:73",{"_index":3549,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:84",{"_index":3551,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:91",{"_index":3554,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:97",{"_index":3555,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.getattribute",{"_index":2702,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2706,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2704,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input//output",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["input/geocoder",{"_index":3536,"title":{},"body":{"components/GeocoderInputComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["input[type='file",{"_index":2963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":32,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["inside",{"_index":506,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":5320,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":5552,"title":{},"body":{"index.html":{}}}],["installed",{"_index":5613,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":5492,"title":{},"body":{"coverage.html":{}}}],["instanceof",{"_index":1804,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instances",{"_index":5600,"title":{},"body":{"todo.html":{}}}],["instead",{"_index":601,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":3041,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":5157,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["insurance",{"_index":3739,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":5636,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["intentional",{"_index":4612,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["interface",{"_index":780,"title":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonAttachmentJson.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["interfaces",{"_index":782,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonAttachmentJson.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1778,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["internally",{"_index":179,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["internet",{"_index":290,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["introduced",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":239,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":4202,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["invalidchar",{"_index":1528,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["invalidchars",{"_index":2845,"title":{},"body":{"components/EmailComponent.html":{}}}],["invalidemail",{"_index":2841,"title":{},"body":{"components/EmailComponent.html":{}}}],["invalidimagehanlder",{"_index":3312,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":3332,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2569,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invisible",{"_index":2608,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invocation",{"_index":938,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iot",{"_index":2071,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1553,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1544,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iradioitems",{"_index":3647,"title":{"interfaces/IRadioItems.html":{}},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["iran",{"_index":2231,"title":{},"body":{"interfaces/CountryList.html":{}}}],["iraq",{"_index":2234,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ireland",{"_index":2236,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irl",{"_index":2235,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irn",{"_index":2230,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irq",{"_index":2233,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":1212,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1989,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":1013,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":5199,"title":{},"body":{"changelog.html":{}}}],["iscanada",{"_index":909,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["isclear",{"_index":3950,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["iscomplete",{"_index":1011,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["iscontinuedisabled",{"_index":3827,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isdate",{"_index":2712,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2635,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":163,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["isl",{"_index":2224,"title":{},"body":{"interfaces/CountryList.html":{}}}],["islamic",{"_index":2232,"title":{},"body":{"interfaces/CountryList.html":{}}}],["island",{"_index":2068,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":2004,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isle",{"_index":2238,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isloading",{"_index":1880,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["isloadingsubject",{"_index":1940,"title":{},"body":{"injectables/ContainerService.html":{}}}],["isn't",{"_index":2966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isopen",{"_index":668,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3670,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":394,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["ispagecomplete(url",{"_index":398,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":1386,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":3204,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":395,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":2240,"title":{},"body":{"interfaces/CountryList.html":{}}}],["israel",{"_index":2241,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isrequired",{"_index":823,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["issue",{"_index":3200,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":1368,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1564,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["istypeaheadloading",{"_index":1114,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["isundermaintenance",{"_index":3749,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":1008,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["it'll",{"_index":2665,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["it's",{"_index":237,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":2242,"title":{},"body":{"interfaces/CountryList.html":{}}}],["italy",{"_index":2243,"title":{},"body":{"interfaces/CountryList.html":{}}}],["item",{"_index":961,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{}}}],["item.iscomplete",{"_index":1445,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":1213,"title":{},"body":{"interfaces/AddressResult.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["iterate",{"_index":1143,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["itm.path",{"_index":3937,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["itm.redirectto",{"_index":3933,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["itself",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["jam",{"_index":2244,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jamaica",{"_index":2245,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jan",{"_index":2469,"title":{},"body":{"interfaces/CountryList.html":{}}}],["japan",{"_index":2247,"title":{},"body":{"interfaces/CountryList.html":{}}}],["javascript",{"_index":1039,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{}}}],["jersey",{"_index":2249,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jey",{"_index":2248,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jor",{"_index":2250,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jordan",{"_index":2251,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jpeg",{"_index":3052,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":3007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":2246,"title":{},"body":{"interfaces/CountryList.html":{}}}],["js",{"_index":5524,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":5502,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":5506,"title":{},"body":{"coverage.html":{}}}],["jsdate",{"_index":2661,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":5350,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1676,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["json.stringify(error",{"_index":3184,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["kaz",{"_index":2252,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":2253,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keeling",{"_index":2109,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keep",{"_index":142,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":2254,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kenya",{"_index":2255,"title":{},"body":{"interfaces/CountryList.html":{}}}],["key",{"_index":636,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["keyboard",{"_index":1185,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["keyboardevent",{"_index":1183,"title":{},"body":{"interfaces/AddressResult.html":{},"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["keys",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["keyup",{"_index":3151,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":2264,"title":{},"body":{"interfaces/CountryList.html":{}}}],["khm",{"_index":2086,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kib",{"_index":3242,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":5583,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":2518,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kir",{"_index":2256,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kiribati",{"_index":2257,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kitts",{"_index":2407,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kna",{"_index":2406,"title":{},"body":{"interfaces/CountryList.html":{}}}],["know",{"_index":1279,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":1367,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":2221,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kor",{"_index":2261,"title":{},"body":{"interfaces/CountryList.html":{}}}],["korea",{"_index":2259,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kuwait",{"_index":2263,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kwt",{"_index":2262,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":2265,"title":{},"body":{"interfaces/CountryList.html":{}}}],["label",{"_index":134,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":624,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":592,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["labelid",{"_index":590,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":647,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":536,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":622,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelreplacementtag",{"_index":1101,"title":{},"body":{"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["labels",{"_index":183,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["labeltext",{"_index":2592,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["labeltype",{"_index":231,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["labrador",{"_index":4227,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["land",{"_index":2003,"title":{},"body":{"interfaces/CountryList.html":{}}}],["landing",{"_index":1427,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["language",{"_index":5586,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":2463,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lao",{"_index":2266,"title":{},"body":{"interfaces/CountryList.html":{}}}],["largely",{"_index":2580,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["last",{"_index":3435,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastname",{"_index":3441,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":3447,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":3018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":2268,"title":{},"body":{"interfaces/CountryList.html":{}}}],["law",{"_index":5575,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3423,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":2269,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lbr",{"_index":2273,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lby",{"_index":2275,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lca",{"_index":2409,"title":{},"body":{"interfaces/CountryList.html":{}}}],["leads",{"_index":555,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":3752,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["leaving",{"_index":830,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["lebanon",{"_index":2270,"title":{},"body":{"interfaces/CountryList.html":{}}}],["left",{"_index":1981,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":5172,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":677,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":1162,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["lengths",{"_index":865,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["leone",{"_index":2438,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lesotho",{"_index":2272,"title":{},"body":{"interfaces/CountryList.html":{}}}],["less",{"_index":1246,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":2491,"title":{},"body":{"interfaces/CountryList.html":{}}}],["letter",{"_index":3472,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":1530,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{}}}],["letters.test",{"_index":3900,"title":{},"body":{"components/NameComponent.html":{}}}],["level",{"_index":1783,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":5655,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib'if",{"_index":5738,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":1361,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":5266,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":5638,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":5640,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":5310,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":5291,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":5628,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":5625,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":2274,"title":{},"body":{"interfaces/CountryList.html":{}}}],["libif",{"_index":5718,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2585,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":4068,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libray",{"_index":425,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["libsetup",{"_index":5553,"title":{},"body":{"index.html":{}}}],["libya",{"_index":2276,"title":{},"body":{"interfaces/CountryList.html":{}}}],["license",{"_index":5470,"title":{"license.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["license/index.ts",{"_index":5468,"title":{},"body":{"coverage.html":{}}}],["licensed",{"_index":5567,"title":{},"body":{"license.html":{}}}],["lie",{"_index":2277,"title":{},"body":{"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":2278,"title":{},"body":{"interfaces/CountryList.html":{}}}],["likes",{"_index":5623,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitation",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["limitations",{"_index":5589,"title":{},"body":{"license.html":{}}}],["line",{"_index":845,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3771,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lines",{"_index":917,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["link",{"_index":517,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":5661,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":5728,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":552,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":962,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["listed",{"_index":5620,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":317,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["literals",{"_index":1729,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["lithuania",{"_index":2280,"title":{},"body":{"interfaces/CountryList.html":{}}}],["live",{"_index":5710,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":2461,"title":{},"body":{"interfaces/CountryList.html":{}}}],["load",{"_index":370,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"dependencies.html":{},"todo.html":{}}}],["loaded",{"_index":943,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["loadimage",{"_index":2912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":12,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["loadpageguardservice",{"_index":377,"title":{"guards/LoadPageGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["local",{"_index":2812,"title":{"additional-documentation/local-development.html":{}},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality",{"_index":1088,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["locally",{"_index":3720,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":3081,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":5312,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":5681,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1748,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["logentry",{"_index":2904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1751,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["logged",{"_index":1721,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["logger",{"_index":1732,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["logging",{"_index":343,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["logging/log",{"_index":2905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror(error",{"_index":1771,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["loghttprequeststoconsole",{"_index":250,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":198,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["logo",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3609,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1753,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["logservice",{"_index":2957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1738,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["long",{"_index":372,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["longer",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":5717,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":3525,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lookup",{"_index":587,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["lookup(address",{"_index":1205,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1543,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1768,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["lost",{"_index":289,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["lower",{"_index":1904,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":2271,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ltu",{"_index":2279,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lucia",{"_index":2410,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lux",{"_index":2281,"title":{},"body":{"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":2282,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lva",{"_index":2267,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maarten",{"_index":2442,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mac",{"_index":2283,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macao",{"_index":2284,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macbooks",{"_index":5596,"title":{},"body":{"todo.html":{}}}],["macedonia",{"_index":2286,"title":{},"body":{"interfaces/CountryList.html":{}}}],["machine",{"_index":5673,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":2290,"title":{},"body":{"interfaces/CountryList.html":{}}}],["made",{"_index":5294,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":2411,"title":{},"body":{"interfaces/CountryList.html":{}}}],["magnam",{"_index":1552,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":1242,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3677,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["maintenanceflag",{"_index":3756,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3767,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":5226,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":277,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":223,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":1248,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":2292,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malaysia",{"_index":2294,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maldives",{"_index":2296,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malformed",{"_index":3292,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":2298,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malta",{"_index":2300,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malvinas",{"_index":2161,"title":{},"body":{"interfaces/CountryList.html":{}}}],["man",{"_index":2239,"title":{},"body":{"interfaces/CountryList.html":{}}}],["manage",{"_index":3061,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":4222,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2669,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":3659,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["map",{"_index":1096,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4561,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":3157,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map((itm",{"_index":3934,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["map(prov",{"_index":945,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["map(x",{"_index":1919,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":5657,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2596,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["mar",{"_index":2327,"title":{},"body":{"interfaces/CountryList.html":{}}}],["margins",{"_index":3425,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":2357,"title":{},"body":{"interfaces/CountryList.html":{}}}],["marino",{"_index":2422,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mark",{"_index":417,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["markallinputstouched",{"_index":85,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["markallinputstouched(fg",{"_index":411,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["markastouched",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["markdown",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["markdownlint",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["marked",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":1247,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":2302,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martin",{"_index":2412,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martinique",{"_index":2304,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mask",{"_index":895,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["match",{"_index":1663,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":1214,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4594,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil(math.random()*100",{"_index":3212,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4582,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":2306,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mauritius",{"_index":2308,"title":{},"body":{"interfaces/CountryList.html":{}}}],["max",{"_index":1161,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["max_year_range",{"_index":5414,"title":{},"body":{"coverage.html":{}}}],["maxheight",{"_index":3285,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":3044,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":2554,"title":{},"body":{"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{},"todo.html":{}}}],["maxlenasnumber",{"_index":3873,"title":{},"body":{"components/NameComponent.html":{}}}],["maxlength",{"_index":1110,"title":{},"body":{"interfaces/AddressResult.html":{},"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"todo.html":{}}}],["maxlengths",{"_index":809,"title":{"interfaces/Maxlengths.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["maxretry",{"_index":3290,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1639,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":3267,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":3282,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maybe",{"_index":4488,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["mayen",{"_index":2470,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mayotte",{"_index":2310,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mb",{"_index":3132,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":2213,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mco",{"_index":2319,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mda",{"_index":2317,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdash",{"_index":3573,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["mdg",{"_index":2289,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdv",{"_index":2295,"title":{},"body":{"interfaces/CountryList.html":{}}}],["means",{"_index":490,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":3414,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["medical",{"_index":1868,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["meet",{"_index":4074,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":4420,"title":{},"body":{"components/SinComponent.html":{}}}],["menu",{"_index":5627,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":3101,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1749,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["message.interface",{"_index":173,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["message.interface.ts",{"_index":2873,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["message.interface.ts:13",{"_index":2874,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["messages",{"_index":180,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["meta",{"_index":1754,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":660,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["method",{"_index":158,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":2311,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mexico",{"_index":2312,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mhl",{"_index":2301,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mib",{"_index":3243,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":2314,"title":{},"body":{"interfaces/CountryList.html":{}}}],["middle",{"_index":3434,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":3442,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":3448,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":1664,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["mini",{"_index":2605,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2673,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["minimum",{"_index":4000,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3723,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":4019,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":4072,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":4012,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":4013,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":583,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"changelog.html":{}}}],["miquelon",{"_index":2415,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mirror",{"_index":586,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":5531,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["missing",{"_index":5284,"title":{},"body":{"changelog.html":{}}}],["mistakes",{"_index":5555,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":2285,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mli",{"_index":2297,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mlt",{"_index":2299,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mmr",{"_index":2331,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mne",{"_index":2323,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mng",{"_index":2321,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mnp",{"_index":2355,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mobile",{"_index":4543,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["mockups",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":498,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":646,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":701,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":4342,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1626,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.scss",{"_index":3747,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.ts",{"_index":3673,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:18",{"_index":4290,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:19",{"_index":4289,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:21",{"_index":4288,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:27",{"_index":4292,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:31",{"_index":4291,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal/consent",{"_index":3672,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modal/sample",{"_index":4281,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":3691,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":4316,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":4388,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2616,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":5218,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/abstract",{"_index":1100,"title":{},"body":{"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/address.model",{"_index":800,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["models/base",{"_index":797,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4555,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/error",{"_index":1102,"title":{},"body":{"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/images.model",{"_index":325,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.constants",{"_index":4208,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":3480,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["modified",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["modifyjson",{"_index":5472,"title":{},"body":{"coverage.html":{}}}],["module",{"_index":1346,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":1348,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":1360,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohcommmonlibraryerror",{"_index":4608,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror",{"_index":175,"title":{"classes/MoHCommonLibraryError.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/MoHCommonLibraryError.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["mohcommonlibraryerror(msg",{"_index":4616,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror(typemsg",{"_index":242,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["mohstart",{"_index":5493,"title":{},"body":{"coverage.html":{}}}],["moldova",{"_index":2318,"title":{},"body":{"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1608,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1567,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1565,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":1233,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().toisostring",{"_index":1823,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["moment_",{"_index":1722,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["momentjs",{"_index":5701,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":2320,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mongolia",{"_index":2322,"title":{},"body":{"interfaces/CountryList.html":{}}}],["montenegro",{"_index":2324,"title":{},"body":{"interfaces/CountryList.html":{}}}],["month",{"_index":2625,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["montserrat",{"_index":2326,"title":{},"body":{"interfaces/CountryList.html":{}}}],["more",{"_index":373,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":2328,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mouse",{"_index":5091,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":5309,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moved",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["moz",{"_index":2329,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mozambique",{"_index":2330,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mrt",{"_index":2305,"title":{},"body":{"interfaces/CountryList.html":{}}}],["msg",{"_index":1788,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["msp",{"_index":854,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["msp/api/env",{"_index":3757,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":3363,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":3362,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":3111,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":3213,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":3219,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":3359,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":3262,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":3264,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":3208,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":3216,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":3214,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":3231,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":3258,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":3255,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":3378,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":3361,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":3167,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":2325,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mtq",{"_index":2303,"title":{},"body":{"interfaces/CountryList.html":{}}}],["multi",{"_index":1283,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["multiple",{"_index":1728,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":3239,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mus",{"_index":2307,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mutually",{"_index":5539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":2291,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myanmar",{"_index":2332,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2577,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":5476,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":2293,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myt",{"_index":2309,"title":{},"body":{"interfaces/CountryList.html":{}}}],["n",{"_index":3003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":2333,"title":{},"body":{"interfaces/CountryList.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":723,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":4356,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":3438,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":3437,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":3433,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":3459,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":3460,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":3461,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":3455,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":3457,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":3456,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":3452,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":3454,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":3453,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":3451,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":3465,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":3467,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":3466,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":3470,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":3464,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":3479,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":3478,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":3462,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":3450,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":3458,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":4352,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4497,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:32",{"_index":4499,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":3432,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":641,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":5676,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name@domain.com",{"_index":2844,"title":{},"body":{"components/EmailComponent.html":{}}}],["name^=\"${refnameval",{"_index":653,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":650,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":638,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3877,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":448,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":3443,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":3210,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["names.length",{"_index":4162,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":4161,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":4163,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":4164,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3872,"title":{},"body":{"components/NameComponent.html":{},"changelog.html":{}}}],["namibia",{"_index":2334,"title":{},"body":{"interfaces/CountryList.html":{}}}],["naming",{"_index":5606,"title":{},"body":{"todo.html":{}}}],["napprox",{"_index":3250,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":3254,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":3252,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":1038,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":3029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1672,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1673,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1555,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":2336,"title":{},"body":{"interfaces/CountryList.html":{}}}],["navigate",{"_index":18,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"injectables/DefaultPageGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":59,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["navigatebyurl",{"_index":3952,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["navigatebyurl(path",{"_index":3989,"title":{},"body":{"injectables/PageStateService.html":{}}}],["navigates",{"_index":64,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"changelog.html":{}}}],["navigateto",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":55,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["navigation",{"_index":1725,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["navigationend",{"_index":3628,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":4223,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":3235,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":2341,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nec",{"_index":2821,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["necessary",{"_index":478,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":302,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["needed",{"_index":1665,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["negative",{"_index":3424,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1577,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":2338,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ner",{"_index":2347,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1614,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":3422,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1760,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["netherlands",{"_index":2340,"title":{},"body":{"interfaces/CountryList.html":{}}}],["network",{"_index":1134,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["never",{"_index":1798,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":2408,"title":{},"body":{"interfaces/CountryList.html":{}}}],["new",{"_index":241,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["new.target.prototype",{"_index":3869,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["newfoundland",{"_index":4226,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1747,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["next",{"_index":475,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":3192,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":2353,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ng",{"_index":511,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2803,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["ng_value_accessor",{"_index":796,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["nga",{"_index":2349,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":3148,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":1875,"title":{},"body":{"classes/Container.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/WizardProgressItem.html":{}}}],["ngchanges",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["ngcontent",{"_index":3761,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ngcontrol",{"_index":152,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{}}}],["ngcontrol.control.setvalidators(allvalidators",{"_index":229,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.updatevalueandvalidity",{"_index":230,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.validator",{"_index":227,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngform",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":5688,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1466,"title":{},"body":{"components/CheckboxComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["ngmodelchange",{"_index":2690,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":365,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":3837,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2713,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"changelog.html":{}}}],["ngonchanges(changes",{"_index":910,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ngondestroy",{"_index":1877,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["ngoninit",{"_index":124,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["ngselect",{"_index":598,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":4330,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":3415,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":1098,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2619,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2576,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":4321,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":4387,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":2345,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":2346,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niger",{"_index":2348,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nigeria",{"_index":2350,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nisi",{"_index":1562,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":2351,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niue",{"_index":2352,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nl",{"_index":4225,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["nld",{"_index":2339,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":3249,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1591,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":5548,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":5708,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":5684,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2568,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["noidimage",{"_index":2934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1559,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":1327,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2607,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nonvdi",{"_index":5599,"title":{},"body":{"todo.html":{}}}],["nopastdatesallowed",{"_index":2573,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["norfolk",{"_index":2354,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northern",{"_index":2356,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northwest",{"_index":4240,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["norway",{"_index":2358,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1601,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":304,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["notes",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1142,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["notice",{"_index":493,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":3039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3964,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":4229,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["now",{"_index":580,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":2337,"title":{},"body":{"interfaces/CountryList.html":{}}}],["npm",{"_index":1230,"title":{},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":1025,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["nru",{"_index":2335,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ns",{"_index":4228,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["nt",{"_index":4239,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["nu",{"_index":4241,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["null",{"_index":413,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["null/undefined",{"_index":929,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["nulls",{"_index":4154,"title":{},"body":{"classes/Person.html":{}}}],["number",{"_index":523,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":739,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number.component",{"_index":4346,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.ts",{"_index":5430,"title":{},"body":{"coverage.html":{}}}],["number.parseint",{"_index":3896,"title":{},"body":{"components/NameComponent.html":{}}}],["number/phone",{"_index":4345,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["numbers",{"_index":1531,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["numerator",{"_index":4575,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numpages",{"_index":3350,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1602,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":4242,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":2343,"title":{},"body":{"interfaces/CountryList.html":{}}}],["o",{"_index":3126,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1597,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":1215,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["obj.address.map(feature",{"_index":1217,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["obj.features.map(feature",{"_index":3521,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["obj.index",{"_index":3944,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["obj.iscomplete",{"_index":3947,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object",{"_index":315,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"classes/Person.html":{}}}],["object.addressline1",{"_index":1071,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":1073,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":1075,"title":{},"body":{"classes/Address.html":{}}}],["object.assign",{"_index":3941,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object.city",{"_index":1076,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":1077,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth",{"_index":4168,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":4165,"title":{},"body":{"classes/Person.html":{}}}],["object.keys",{"_index":3929,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object.keys(fg.controls",{"_index":430,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["object.keys(this._defaulterrmsg).map",{"_index":216,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["object.keys(this.disabled).map",{"_index":1000,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.errormessage).map",{"_index":210,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["object.keys(this.fieldmaxlenghts).map",{"_index":994,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":112,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.keys(this.labels).map",{"_index":989,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.readonlyfields).map",{"_index":998,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.lastname",{"_index":4167,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":4166,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":1078,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":1079,"title":{},"body":{"classes/Address.html":{}}}],["object.setprototypeof(this",{"_index":3868,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["objectid",{"_index":123,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":5704,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":278,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":339,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":344,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observables",{"_index":1898,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/WizardProgressItem.html":{}}}],["observe",{"_index":1341,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":326,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":3198,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":3187,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":3276,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":3279,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":5571,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":2367,"title":{},"body":{"interfaces/CountryList.html":{}}}],["occurances",{"_index":2876,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["occured",{"_index":1807,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":2074,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ocurrence",{"_index":610,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1605,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3806,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":3166,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":5726,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":5550,"title":{},"body":{"index.html":{}}}],["oman",{"_index":2360,"title":{},"body":{"interfaces/CountryList.html":{}}}],["omit",{"_index":1047,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":2359,"title":{},"body":{"interfaces/CountryList.html":{}}}],["onblur",{"_index":1507,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onblur(event",{"_index":1199,"title":{},"body":{"interfaces/AddressResult.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["onblurevent",{"_index":2558,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["onblurevent(event",{"_index":4188,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["onbtnclick",{"_index":4600,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":3056,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["onchanges",{"_index":793,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["onclick",{"_index":1257,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":1269,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2684,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2676,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":1859,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["one",{"_index":476,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":1149,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["onerror(err",{"_index":1139,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["ongoing",{"_index":3078,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":117,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["oninput",{"_index":2699,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":4017,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":4050,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":3540,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onkeyup(event",{"_index":1182,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["onload",{"_index":3320,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onloading",{"_index":1146,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["onloading(val",{"_index":1145,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["onlyfuturedates",{"_index":2603,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["onnoresults",{"_index":3541,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onnoresults(val",{"_index":1151,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["onpaste",{"_index":4094,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":1157,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["onselect(event",{"_index":1156,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["onstatuschange",{"_index":5234,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":4231,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["onvaluechange",{"_index":1508,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onvaluechange(value",{"_index":1525,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["open",{"_index":3013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":3327,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openfiledialog",{"_index":3160,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3745,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["opens",{"_index":631,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["openshift",{"_index":1366,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":5711,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":3047,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opt",{"_index":5100,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":4559,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1569,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":593,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["optional()@self",{"_index":1490,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["optionally",{"_index":340,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":274,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["optiontext",{"_index":568,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":633,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":918,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":5239,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":3046,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":3288,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":574,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":930,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"overview.html":{}}}],["outlying",{"_index":2520,"title":{},"body":{"interfaces/CountryList.html":{}}}],["output",{"_index":791,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":1259,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":3409,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":1144,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["override",{"_index":544,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overrided",{"_index":410,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["overridesscss",{"_index":5485,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":5591,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":477,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{}}}],["overwritefile",{"_index":5494,"title":{},"body":{"coverage.html":{}}}],["overwritten",{"_index":487,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3776,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["package",{"_index":1231,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":5302,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":5666,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":5343,"title":{},"body":{"changelog.html":{}}}],["pacutoff",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":5129,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":57,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"injectables/AbstractPageGuardService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1924,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":596,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":605,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":502,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":472,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":508,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":488,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":514,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":495,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":565,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":608,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":516,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":481,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":521,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":543,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":519,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":526,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":562,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":518,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":528,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":540,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":525,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":569,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":1384,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":5135,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":729,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelist",{"_index":3919,"title":{"interfaces/PageList.html":{}},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["pagelistinterface",{"_index":1416,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagelistisclear",{"_index":3949,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["pagenumber",{"_index":3181,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1909,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1923,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":1400,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["pagesection",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["pagesectioncomponent",{"_index":731,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagestateservice",{"_index":1861,"title":{"injectables/PageStateService.html":{}},"body":{"classes/Container.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["pageurl",{"_index":3849,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["pains",{"_index":5560,"title":{},"body":{"index.html":{}}}],["pak",{"_index":2361,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pakistan",{"_index":2362,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palau",{"_index":2364,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palestinian",{"_index":2366,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pan",{"_index":2368,"title":{},"body":{"interfaces/CountryList.html":{}}}],["panama",{"_index":2369,"title":{},"body":{"interfaces/CountryList.html":{}}}],["papua",{"_index":2371,"title":{},"body":{"interfaces/CountryList.html":{}}}],["paraguay",{"_index":2373,"title":{},"body":{"interfaces/CountryList.html":{}}}],["param",{"_index":217,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateNameDirective.html":{},"changelog.html":{}}}],["parameter",{"_index":415,"title":{},"body":{"classes/AbstractReactForm.html":{},"injectables/ContainerService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["params",{"_index":62,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":3520,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":816,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parents",{"_index":141,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1593,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parseint(scaledwidthstring",{"_index":4475,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parseint(this.maxlength",{"_index":1202,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["parsing",{"_index":1816,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["part",{"_index":1900,"title":{},"body":{"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/WizardProgressItem.html":{}}}],["parts",{"_index":4152,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":560,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["passed",{"_index":43,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"injectables/ContainerService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["passes",{"_index":4054,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":4070,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["password",{"_index":1644,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password'},{'name",{"_index":734,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":4009,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":4008,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":4032,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":4007,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":733,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":4024,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["past/future",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["pasting",{"_index":4093,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["patch",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":3841,"title":{},"body":{"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["path.endswith(x.path",{"_index":3957,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["path.includes(x.path",{"_index":3956,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["paths",{"_index":5232,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":3444,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["payload",{"_index":1335,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":1343,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcn",{"_index":2377,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pdf",{"_index":1643,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pdf.good",{"_index":1645,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":3351,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":3337,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":3179,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":3340,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":3339,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":3348,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.workersrc=pdfjsworker",{"_index":2925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsworker",{"_index":2923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1635,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":3335,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":4232,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":2260,"title":{},"body":{"interfaces/CountryList.html":{}}}],["per",{"_index":352,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CountryList.html":{}}}],["performance",{"_index":939,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["period",{"_index":3475,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["periods",{"_index":1535,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{}}}],["permissions",{"_index":5588,"title":{},"body":{"license.html":{}}}],["persisted",{"_index":883,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["person",{"_index":2907,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":4147,"title":{},"body":{"classes/Person.html":{}}}],["person.model",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["person.model.ts",{"_index":4395,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1905,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":3449,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["pertains",{"_index":3769,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["peru",{"_index":2374,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pg",{"_index":388,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":1049,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":2376,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phl",{"_index":2375,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phn",{"_index":5126,"title":{},"body":{"changelog.html":{}}}],["phn'},{'name",{"_index":736,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phncomponent",{"_index":735,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":738,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["phone/radio",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["phonenumber",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["phonenumbercomponent",{"_index":737,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pib",{"_index":3245,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":2414,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pipe",{"_index":3156,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(filter((evt",{"_index":3154,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(map(this.processresponse",{"_index":1208,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":3201,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":2378,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pixel",{"_index":3049,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["place",{"_index":368,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":1509,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["placeholders",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":5609,"title":{},"body":{"todo.html":{}}}],["plan",{"_index":1870,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["please",{"_index":2555,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":2055,"title":{},"body":{"interfaces/CountryList.html":{}}}],["plus",{"_index":839,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["plw",{"_index":2363,"title":{},"body":{"interfaces/CountryList.html":{}}}],["png",{"_index":2370,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["po",{"_index":857,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["point",{"_index":545,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":5220,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":2379,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poland",{"_index":2380,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":5690,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":2174,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poor",{"_index":2583,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["populateaddressonselect",{"_index":1109,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["populated",{"_index":3321,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":3347,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":2382,"title":{},"body":{"interfaces/CountryList.html":{}}}],["position",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":2578,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"todo.html":{}}}],["post",{"_index":253,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":291,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":741,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":4359,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4485,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:27",{"_index":4487,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":790,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["postalcode.directive",{"_index":4374,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postalcode.directive.ts",{"_index":4500,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["postalcode.directive.ts:48",{"_index":4504,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:49",{"_index":4503,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:51",{"_index":4505,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode_",{"_index":4181,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":1010,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":740,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":3199,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":5659,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":3165,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":5356,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":5243,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3598,"title":{},"body":{"components/HeaderComponent.html":{}}}],["practitioner_registration_pages",{"_index":1865,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pre",{"_index":4274,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["preceding",{"_index":3119,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["prefixes",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["premium",{"_index":1874,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/WizardProgressItem.html":{}}}],["prerequisites",{"_index":1407,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":4005,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preservesymlinks",{"_index":5152,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":4092,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":5691,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":1447,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["previously",{"_index":3221,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pri",{"_index":2383,"title":{},"body":{"interfaces/CountryList.html":{}}}],["primarily",{"_index":4542,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":1262,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":535,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":4233,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["principe",{"_index":2426,"title":{},"body":{"interfaces/CountryList.html":{}}}],["print",{"_index":1044,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["printable",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1041,"title":{},"body":{"classes/Address.html":{}}}],["printlogosrc",{"_index":3610,"title":{},"body":{"components/HeaderComponent.html":{}}}],["prior",{"_index":5660,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":5679,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3730,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":130,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["prk",{"_index":2258,"title":{},"body":{"interfaces/CountryList.html":{}}}],["probably",{"_index":3328,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["problem",{"_index":3975,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["proceed",{"_index":1411,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["processing",{"_index":2999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3748,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3575,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":1216,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1733,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1744,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["progress",{"_index":759,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":4314,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":4386,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":3314,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":3313,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1881,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":1003,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":5736,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":4758,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":5535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../confirm",{"_index":5533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datepicker.component.ts",{"_index":5538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../images.model.ts",{"_index":5536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../logger.service.ts",{"_index":5537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha",{"_index":1315,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":5373,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":1357,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":1359,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/helpers/library",{"_index":3860,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["projects/common/helpers/scroll",{"_index":5378,"title":{},"body":{"coverage.html":{}}}],["projects/common/helpers/test",{"_index":5382,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":658,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:20",{"_index":672,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":671,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:23",{"_index":676,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":673,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":670,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address",{"_index":1081,"title":{},"body":{"interfaces/AddressResult.html":{},"coverage.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":785,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":1275,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":1235,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:35",{"_index":1264,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":1265,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":1266,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":1267,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":1261,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:43",{"_index":1268,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:46",{"_index":1270,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":1458,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:26",{"_index":1492,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:31",{"_index":1464,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:32",{"_index":1468,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:33",{"_index":1469,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:34",{"_index":1473,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:35",{"_index":1489,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:37",{"_index":1487,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:39",{"_index":1463,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:41",{"_index":1491,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:48",{"_index":1475,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:52",{"_index":1477,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:59",{"_index":1474,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:63",{"_index":1478,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":1505,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:13",{"_index":1513,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":1518,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":1516,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":1519,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:19",{"_index":1520,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:24",{"_index":1541,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:28",{"_index":1522,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:29",{"_index":1521,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:31",{"_index":1538,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:33",{"_index":1537,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:37",{"_index":1512,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:39",{"_index":1539,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:46",{"_index":1523,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:50",{"_index":1526,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:56",{"_index":1524,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:61",{"_index":1527,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/validate",{"_index":4490,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/confirm",{"_index":1830,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/consent",{"_index":3671,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1973,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1995,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date",{"_index":2687,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":5410,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2562,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2740,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:106",{"_index":2739,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:108",{"_index":2741,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2738,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:113",{"_index":2737,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:114",{"_index":2714,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:120",{"_index":2728,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:128",{"_index":2729,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:136",{"_index":2730,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:141",{"_index":2732,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:192",{"_index":2731,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2733,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:211",{"_index":2727,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:219",{"_index":2734,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:223",{"_index":2735,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:227",{"_index":2736,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:61",{"_index":2725,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:62",{"_index":2716,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:63",{"_index":2726,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:64",{"_index":2718,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:65",{"_index":2722,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2724,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:71",{"_index":2720,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2719,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:77",{"_index":2723,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:92",{"_index":2715,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:97",{"_index":2717,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:99",{"_index":2721,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2778,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:11",{"_index":2799,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:13",{"_index":2790,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:14",{"_index":2791,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:15",{"_index":2792,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:16",{"_index":2788,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:17",{"_index":2786,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2787,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:19",{"_index":2793,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2789,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2797,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2785,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2798,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:32",{"_index":2796,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:36",{"_index":2794,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:40",{"_index":2795,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/duplicate",{"_index":2800,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts",{"_index":2819,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts:23",{"_index":2828,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:24",{"_index":2831,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:25",{"_index":2830,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:28",{"_index":2832,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:33",{"_index":2853,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:37",{"_index":2834,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:38",{"_index":2833,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:40",{"_index":2852,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:42",{"_index":2848,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:48",{"_index":2850,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:49",{"_index":2827,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:51",{"_index":2851,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:58",{"_index":2835,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:64",{"_index":2837,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:70",{"_index":2836,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:75",{"_index":2839,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:81",{"_index":2838,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/error",{"_index":2865,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/file",{"_index":2883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":3388,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":3431,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/geocoder",{"_index":3535,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3590,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3619,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3621,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3616,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:23",{"_index":3620,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3618,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:26",{"_index":3627,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:27",{"_index":3614,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:32",{"_index":3623,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:41",{"_index":3625,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:45",{"_index":3626,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:53",{"_index":3622,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3871,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3875,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3876,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:25",{"_index":3879,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:26",{"_index":3878,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:29",{"_index":3880,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:34",{"_index":3892,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:38",{"_index":3882,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3881,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3891,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:43",{"_index":3889,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:48",{"_index":3874,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3890,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:58",{"_index":3883,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:64",{"_index":3885,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:70",{"_index":3884,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:75",{"_index":3887,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3894,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:85",{"_index":3886,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4496,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3902,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3998,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":4048,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":4053,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":4051,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":4040,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":4042,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":4028,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":4027,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":4026,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":4034,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":4035,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":4031,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":4030,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":4025,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":4036,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":4033,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":4038,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":4037,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":4056,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":4059,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":4061,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":4055,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":4060,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":4057,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":4058,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":4023,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":4049,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":5427,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/phone",{"_index":5429,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":4169,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":4219,"title":{},"body":{"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":3648,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:48",{"_index":4263,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:49",{"_index":4262,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:53",{"_index":4255,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:58",{"_index":4254,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:60",{"_index":4256,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:63",{"_index":4265,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:67",{"_index":4252,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:68",{"_index":4253,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:70",{"_index":4251,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:72",{"_index":4264,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:79",{"_index":4257,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:83",{"_index":4260,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:91",{"_index":4258,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:95",{"_index":4259,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:99",{"_index":4261,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sample",{"_index":4280,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":4398,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:24",{"_index":4421,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:30",{"_index":4424,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:31",{"_index":4423,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:33",{"_index":4405,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":4408,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:35",{"_index":4410,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:36",{"_index":4407,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:39",{"_index":4411,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:45",{"_index":4425,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:49",{"_index":4412,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:50",{"_index":4403,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:52",{"_index":4422,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:62",{"_index":4413,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:68",{"_index":4415,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:77",{"_index":4414,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:82",{"_index":4418,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:88",{"_index":4416,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:97",{"_index":4417,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":5434,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/street/validate",{"_index":4522,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":4446,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":4457,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":4458,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4459,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:16",{"_index":4465,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:18",{"_index":4456,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4467,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:24",{"_index":4463,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:42",{"_index":4461,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:48",{"_index":4464,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:53",{"_index":4462,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4478,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4482,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4483,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4481,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4484,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/validate",{"_index":4517,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/wizard",{"_index":4525,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4597,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":1002,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:11",{"_index":1015,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":1018,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:14",{"_index":1023,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":1020,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:16",{"_index":1031,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":1019,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":1021,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":1022,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:23",{"_index":1052,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:27",{"_index":1054,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:36",{"_index":1037,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:44",{"_index":1034,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:50",{"_index":1056,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:61",{"_index":1033,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":1030,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:9",{"_index":1014,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":1228,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":1234,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1853,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:103",{"_index":1910,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:133",{"_index":1912,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:60",{"_index":1893,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:63",{"_index":1897,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:64",{"_index":1896,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:65",{"_index":1891,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:67",{"_index":1889,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:75",{"_index":1899,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:83",{"_index":1902,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:87",{"_index":1908,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/error",{"_index":2872,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1619,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:105",{"_index":1716,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1709,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1711,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1708,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1710,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:30",{"_index":1693,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:47",{"_index":1698,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1696,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:54",{"_index":1695,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1703,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:57",{"_index":1705,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:58",{"_index":1704,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:59",{"_index":1701,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1702,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1700,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:64",{"_index":1699,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:66",{"_index":1697,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:67",{"_index":1694,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:73",{"_index":1706,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:93",{"_index":1713,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:97",{"_index":1715,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:98",{"_index":1714,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.constants.ts",{"_index":5454,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":4109,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:13",{"_index":4122,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":4124,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":4123,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:18",{"_index":4120,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":4118,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":4119,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":4131,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:30",{"_index":4134,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":4137,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":4141,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:67",{"_index":4146,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:86",{"_index":4126,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":4125,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":4392,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":244,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":1377,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/container.service.ts",{"_index":1937,"title":{},"body":{"injectables/ContainerService.html":{},"coverage.html":{}}}],["projects/common/lib/services/container.service.ts:11",{"_index":1963,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:12",{"_index":1966,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:13",{"_index":1968,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:14",{"_index":1959,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:17",{"_index":1961,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:18",{"_index":1965,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:19",{"_index":1958,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:20",{"_index":1947,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:25",{"_index":1952,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:30",{"_index":1954,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:35",{"_index":1949,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:39",{"_index":1956,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/default",{"_index":2750,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":3502,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3586,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:25",{"_index":3587,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:26",{"_index":3576,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:33",{"_index":3578,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:52",{"_index":3579,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:73",{"_index":3577,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/load",{"_index":3830,"title":{},"body":{"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1718,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:21",{"_index":1720,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/page",{"_index":3920,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["projects/common/lib/services/route",{"_index":4267,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":4302,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":5715,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":5649,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":5716,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":5467,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":5471,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/moh",{"_index":5474,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/version",{"_index":5501,"title":{},"body":{"coverage.html":{}}}],["projects/common/src/public_api.ts",{"_index":5741,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":5512,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":5505,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":538,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["promise.resolve().then",{"_index":224,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["proper",{"_index":1642,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":2842,"title":{},"body":{"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1730,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["property",{"_index":1654,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["props",{"_index":1218,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.addresscomplete",{"_index":1221,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["props.country",{"_index":1224,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["props.deliveryaddresslines",{"_index":1222,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["props.fulladdress.indexof",{"_index":3528,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.replace",{"_index":3531,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3529,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.locality",{"_index":1220,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["props.localityname",{"_index":3523,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.postalcode",{"_index":1225,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["props.province",{"_index":1223,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["props.provincecode",{"_index":3530,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3729,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prototype",{"_index":3866,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["protractor",{"_index":613,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":947,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["prov.country",{"_index":946,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provide",{"_index":366,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":240,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":1431,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1560,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":379,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":576,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":744,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":4247,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":4248,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":1048,"title":{},"body":{"classes/Address.html":{}}}],["province/province.component",{"_index":808,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["province_",{"_index":4249,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":807,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["province_list.find",{"_index":4246,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["provincecode",{"_index":4220,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["provincecomponent",{"_index":743,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":805,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["provincial",{"_index":3733,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1988,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":850,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj",{"_index":950,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.description",{"_index":958,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.provincecode",{"_index":956,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["prt",{"_index":2381,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pry",{"_index":2372,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pse",{"_index":2365,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":4096,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":4097,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":4014,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":122,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["public_api",{"_index":4209,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["publish",{"_index":5724,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4946,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":2384,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pull",{"_index":5556,"title":{},"body":{"index.html":{}}}],["pulled",{"_index":3768,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["pure",{"_index":5635,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":4135,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":5136,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3600,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":4020,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":2173,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qat",{"_index":2386,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qatar",{"_index":2387,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qc",{"_index":4235,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["quality",{"_index":3053,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1586,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1554,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":4236,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["query",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":4550,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":61,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":3417,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["questions",{"_index":3737,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1561,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1603,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1583,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1574,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quite",{"_index":1425,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["radio",{"_index":3649,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":3660,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":746,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":3663,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":3664,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.ts",{"_index":5602,"title":{},"body":{"todo.html":{}}}],["radio/checkbox",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["radiocomponent",{"_index":745,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":3661,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radios",{"_index":3650,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["ran",{"_index":5705,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":3385,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rapid",{"_index":3794,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3797,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":3050,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1598,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1638,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["rc.0",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["rc.15",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["rc.16",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["rc.17",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["rc.18",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["rc.19",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["rc.21",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["rc.22",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["rc.23",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["rc.24",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["rc.25",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["rc.26",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["rc.27",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["rc.28",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["rc.29",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["rc.30",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["rc.31",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":815,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":3309,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["react",{"_index":403,"title":{},"body":{"classes/AbstractReactForm.html":{},"changelog.html":{},"coverage.html":{}}}],["reactive",{"_index":2817,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["reactiveforms",{"_index":1103,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["reactiveformsmodule",{"_index":4313,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["read",{"_index":3016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":505,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":3205,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":3260,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":3280,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":3333,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":3319,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":484,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":5205,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readonlyfields",{"_index":810,"title":{"interfaces/ReadOnlyFields.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["readpdf(pdffile",{"_index":3334,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ready",{"_index":1677,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["reason",{"_index":1192,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["receiving",{"_index":1770,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["recieve",{"_index":1085,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["recommend",{"_index":4006,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":537,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["redirect",{"_index":2775,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["reduce",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["reduced",{"_index":2588,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ref",{"_index":3225,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2672,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["refactored",{"_index":828,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["refactoring",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":5285,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":512,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":513,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regenerate",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["regex",{"_index":1068,"title":{},"body":{"classes/Address.html":{}}}],["regex.test(this.postal",{"_index":1070,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":2840,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4489,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":1069,"title":{},"body":{"classes/Address.html":{}}}],["regexplabel",{"_index":2878,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["region.directive",{"_index":4373,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["region.directive.ts",{"_index":4518,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["region.directive.ts:26",{"_index":4520,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["region/validate",{"_index":4372,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["register",{"_index":155,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registered",{"_index":813,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["registeronchange",{"_index":125,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registeronchange(fn",{"_index":146,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registerontouched",{"_index":126,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registerontouched(fn",{"_index":149,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registervalidation",{"_index":127,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["registervalidation(ngcontrol",{"_index":151,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registration",{"_index":3839,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":390,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["registrationcontainercomponent",{"_index":1857,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["registrationservice",{"_index":391,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["related",{"_index":5155,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":5707,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["relativeurl",{"_index":310,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["release",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":5643,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remove",{"_index":924,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["removed",{"_index":1497,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["removeline(line",{"_index":923,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["removing",{"_index":3301,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rename",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["renamt",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":1660,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reorder",{"_index":5038,"title":{},"body":{"changelog.html":{}}}],["reorganize",{"_index":5114,"title":{},"body":{"changelog.html":{}}}],["repellat",{"_index":1573,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":214,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["replace(/\\s/g",{"_index":4438,"title":{},"body":{"components/SinComponent.html":{}}}],["replace(/_/g",{"_index":4436,"title":{},"body":{"components/SinComponent.html":{}}}],["replacelabeltag",{"_index":171,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["replacement",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["reports",{"_index":2563,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{}}}],["reprehenderit",{"_index":1589,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":2098,"title":{},"body":{"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1595,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1827,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["request",{"_index":271,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1737,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["requests",{"_index":284,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":5513,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":42,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":3445,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requiredvalidator",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["requirements",{"_index":4002,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":811,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["requisite",{"_index":4275,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1557,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":1356,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":3368,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":3203,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":3042,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":3069,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":4651,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["resolved",{"_index":1153,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["respective",{"_index":275,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1819,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["response",{"_index":1105,"title":{},"body":{"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["responsetype",{"_index":353,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{}}}],["rest",{"_index":3382,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restore",{"_index":3870,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["restrictdate",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":80,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":82,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":3048,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrieve",{"_index":5055,"title":{},"body":{"changelog.html":{}}}],["retry",{"_index":3289,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":3291,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":110,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["returned",{"_index":1115,"title":{},"body":{"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["reu",{"_index":2388,"title":{},"body":{"interfaces/CountryList.html":{}}}],["reverts",{"_index":5102,"title":{},"body":{"changelog.html":{}}}],["reviewmode",{"_index":4453,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["revise",{"_index":1424,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["rica",{"_index":2122,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rico",{"_index":2385,"title":{},"body":{"interfaces/CountryList.html":{}}}],["right",{"_index":579,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":5315,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":4044,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["role=\"progressbar",{"_index":4099,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":627,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["rollover",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["romania",{"_index":2391,"title":{},"body":{"interfaces/CountryList.html":{}}}],["root",{"_index":1432,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":3033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":2390,"title":{},"body":{"interfaces/CountryList.html":{}}}],["route",{"_index":65,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeconst",{"_index":3928,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routeconst.find",{"_index":3935,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routeguard",{"_index":5154,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":392,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3607,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3624,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routelistconst",{"_index":3925,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routelistconst[x",{"_index":3930,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routepath",{"_index":1906,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1918,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":21,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4529,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":4318,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":3852,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routes",{"_index":3834,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":3840,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":5668,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":3653,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["rules",{"_index":5229,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":4569,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":5319,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":5283,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":856,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["rus",{"_index":2392,"title":{},"body":{"interfaces/CountryList.html":{}}}],["russian",{"_index":2393,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwa",{"_index":2395,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwanda",{"_index":2396,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rxjs",{"_index":319,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":322,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":2389,"title":{},"body":{"interfaces/CountryList.html":{}}}],["s",{"_index":3234,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["s*\\(.*?\\)\\s*/g",{"_index":207,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["s+)@(\\s+)\\.(\\s",{"_index":2849,"title":{},"body":{"components/EmailComponent.html":{}}}],["saba",{"_index":2060,"title":{},"body":{"interfaces/CountryList.html":{}}}],["safe",{"_index":4589,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":2541,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saint",{"_index":2398,"title":{},"body":{"interfaces/CountryList.html":{}}}],["salvador",{"_index":2149,"title":{},"body":{"interfaces/CountryList.html":{}}}],["same",{"_index":597,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":2011,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sample",{"_index":748,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["sampleimageinterface",{"_index":4279,"title":{"interfaces/SampleImageInterface.html":{}},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["samplemodal",{"_index":4284,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["samplemodalcomponent",{"_index":747,"title":{"components/SampleModalComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["san",{"_index":2421,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sandwich",{"_index":2456,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sao",{"_index":2424,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1551,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":4238,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2666,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["satisifed",{"_index":3763,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sau",{"_index":2427,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saudi",{"_index":2428,"title":{},"body":{"interfaces/CountryList.html":{}}}],["save",{"_index":1173,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"index.html":{}}}],["saved",{"_index":3076,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":3303,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sb",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1692,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":3257,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":3223,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1712,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1685,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":4449,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4469,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":3168,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":3287,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":3169,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":3284,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":3129,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":3294,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4568,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schematic",{"_index":5337,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":5671,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":5336,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":5670,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":5648,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3709,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scotia",{"_index":4230,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["screen",{"_index":483,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["screenreader",{"_index":5094,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":5361,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":5201,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":3406,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["scrolldown",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolling",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["scrolls",{"_index":67,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4533,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrollto",{"_index":73,"title":{},"body":{"classes/AbstractBaseForm.html":{},"changelog.html":{},"coverage.html":{}}}],["scrolltoerror",{"_index":3402,"title":{},"body":{"components/FormActionBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["scrolltoerrorsonsubmit",{"_index":3393,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["scrollup",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":5697,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":2464,"title":{},"body":{"interfaces/CountryList.html":{}}}],["search",{"_index":959,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{}}}],["searching",{"_index":1120,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["searchtext",{"_index":1126,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["second",{"_index":844,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["secondary",{"_index":1263,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3596,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":732,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":4328,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3962,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3961,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3960,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:17",{"_index":3963,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:21",{"_index":3965,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3959,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":5331,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3704,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":4731,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["see",{"_index":376,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":571,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":4331,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":630,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":652,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selected",{"_index":3574,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectedaddress",{"_index":1121,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["selectfilelabelref",{"_index":2945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":602,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["selection",{"_index":1197,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["selections",{"_index":2595,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":567,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":661,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["selects",{"_index":570,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectsuggestedaddress(address",{"_index":982,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["self",{"_index":156,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["self.dataservice.getmspuuid",{"_index":3175,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":3228,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":3277,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":3229,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["semantic",{"_index":5608,"title":{},"body":{"todo.html":{}}}],["sen",{"_index":2430,"title":{},"body":{"interfaces/CountryList.html":{}}}],["send",{"_index":264,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{}}}],["sending",{"_index":821,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sends",{"_index":599,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3795,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":2431,"title":{},"body":{"interfaces/CountryList.html":{}}}],["separately",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["sequence",{"_index":1414,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":3833,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1613,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":2433,"title":{},"body":{"interfaces/CountryList.html":{}}}],["server",{"_index":285,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":1336,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":248,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":246,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:13",{"_index":260,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:18",{"_index":262,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:24",{"_index":269,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:32",{"_index":293,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:40",{"_index":295,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:54",{"_index":314,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:61",{"_index":281,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:64",{"_index":266,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:75",{"_index":299,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3611,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":1869,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3694,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/container.service",{"_index":1914,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["services/geocoder.service",{"_index":799,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["services/logger.service",{"_index":3693,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["serviceurl",{"_index":1108,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["sessionid",{"_index":1736,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["set",{"_index":303,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["set('address",{"_index":1206,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["set('addressstring",{"_index":3518,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":3515,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('interpolation",{"_index":3516,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":3514,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":3513,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setaddress(data",{"_index":977,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setbuttongrpval",{"_index":1288,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":1303,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":1420,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setcheckboxval",{"_index":1461,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcheckboxval(event",{"_index":1476,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcity(value",{"_index":903,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setcountry(value",{"_index":891,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultcountryasoption",{"_index":963,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultprovinceasoption(country",{"_index":949,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdisabledstate",{"_index":128,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":161,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["seterrormsg",{"_index":129,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setfirstname(value",{"_index":3495,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setfullyear",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["setinput",{"_index":5390,"title":{},"body":{"coverage.html":{}}}],["setisloading",{"_index":1943,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setisloading(isloading",{"_index":1948,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setlabels",{"_index":987,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setlastname(value",{"_index":3499,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmaxlengths",{"_index":992,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setmiddlename(value",{"_index":3498,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setname(fullname",{"_index":4140,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":1387,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["setpagecomplete(path",{"_index":3992,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpageincomplete",{"_index":1388,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete(url",{"_index":3994,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpages",{"_index":3923,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["setpages(arr",{"_index":3996,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpassword",{"_index":4018,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":4052,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setpostalcode(value",{"_index":908,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setprogresssteps",{"_index":1885,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1907,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":900,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setreadonlyfields",{"_index":997,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sets",{"_index":905,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/ContainerService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["setselect",{"_index":5391,"title":{},"body":{"coverage.html":{}}}],["setseverity(severity",{"_index":1824,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setstarturl(url",{"_index":1418,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":4250,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(val",{"_index":3668,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["setstreet(val",{"_index":1053,"title":{},"body":{"classes/Address.html":{}}}],["setstreetaddress(value",{"_index":901,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setsubmitlabel",{"_index":1944,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setsubmitlabel(label",{"_index":1951,"title":{},"body":{"injectables/ContainerService.html":{}}}],["settags(message",{"_index":1828,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setter",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["settimeout(scrolltoerror",{"_index":3410,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["settimestamp",{"_index":1821,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setting",{"_index":2600,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["setup",{"_index":364,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":5360,"title":{},"body":{"changelog.html":{}}}],["setuprequest",{"_index":254,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":294,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1790,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["seturl(newurl",{"_index":1745,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setusedefaultcolor",{"_index":1945,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setusedefaultcolor(defaultcolor",{"_index":1953,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setvalue(val",{"_index":1542,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["severity",{"_index":1782,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["severitylevels",{"_index":1723,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":2435,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgp",{"_index":2439,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgs",{"_index":2455,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sha1",{"_index":2914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":3265,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3706,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":4298,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":553,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":2400,"title":{},"body":{"interfaces/CountryList.html":{}}}],["shorten",{"_index":1163,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["shouldn't",{"_index":3805,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["shouldshowprintlogo",{"_index":3612,"title":{},"body":{"components/HeaderComponent.html":{}}}],["show",{"_index":39,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":1290,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"todo.html":{}}}],["showfullsizeview",{"_index":3786,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["showline${line",{"_index":921,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline2",{"_index":851,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline3",{"_index":852,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["shown",{"_index":3699,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":4021,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":3654,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1806,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":2437,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sign",{"_index":5062,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":1118,"title":{},"body":{"interfaces/AddressResult.html":{},"components/FormSubmitBarComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["simple",{"_index":1380,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{}}}],["simplechanges",{"_index":1090,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["simpledate",{"_index":4391,"title":{"interfaces/SimpleDate.html":{}},"body":{"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":5696,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":1245,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":3300,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{}}}],["simulates",{"_index":1141,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["sin",{"_index":4399,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":750,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":4401,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":4400,"title":{},"body":{"components/SinComponent.html":{}}}],["sin_",{"_index":4406,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":749,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":2440,"title":{},"body":{"interfaces/CountryList.html":{}}}],["single",{"_index":3594,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sint",{"_index":2058,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sit",{"_index":1546,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1990,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["sitereg",{"_index":3971,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["size",{"_index":1669,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["sizetxt",{"_index":1671,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1670,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":2467,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sk",{"_index":4237,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["skip",{"_index":482,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3604,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":5685,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":5338,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3605,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":2448,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sle",{"_index":2436,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slightly",{"_index":3637,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1984,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1978,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":2445,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slovenia",{"_index":2447,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slv",{"_index":2147,"title":{},"body":{"interfaces/CountryList.html":{}}}],["small",{"_index":3068,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smr",{"_index":2420,"title":{},"body":{"interfaces/CountryList.html":{}}}],["social",{"_index":4404,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":5578,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":2449,"title":{},"body":{"interfaces/CountryList.html":{}}}],["solve",{"_index":3162,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":2450,"title":{},"body":{"interfaces/CountryList.html":{}}}],["somalia",{"_index":2451,"title":{},"body":{"interfaces/CountryList.html":{}}}],["something",{"_index":1045,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":5473,"title":{},"body":{"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["south",{"_index":2453,"title":{},"body":{"interfaces/CountryList.html":{}}}],["southern",{"_index":2176,"title":{},"body":{"interfaces/CountryList.html":{}}}],["soutput",{"_index":3238,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3674,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3678,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag\":\"\",\"spa_env_acl_maintenance_message",{"_index":3774,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3679,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3680,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3775,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3681,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3796,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3682,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3683,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_flag",{"_index":3684,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_message",{"_index":3685,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3686,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now\":\"\",\"spa_env_pacutoff_maintenance_flag\":\"\",\"spa_env_pacutoff_maintenance_message",{"_index":3777,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_end",{"_index":3687,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_flag",{"_index":3688,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_message",{"_index":3689,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_start",{"_index":3690,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_start\":\"\",\"spa_env_suppben_maintenance_end\":\"\",\"spa_env_now\":\"\",\"spa_env_suppben_maintenance_flag\":\"\",\"spa_env_suppben_maintenance_message\":\"\",\"spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end",{"_index":3779,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2609,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":5720,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":4439,"title":{},"body":{"components/SinComponent.html":{}}}],["spacing",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["spaenvres",{"_index":3766,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":2460,"title":{},"body":{"interfaces/CountryList.html":{}}}],["specfic",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":1532,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{}}}],["specific",{"_index":184,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":5740,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["specified",{"_index":272,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/GeocoderService.html":{}}}],["specs/blob/master/geocoder/geocoder",{"_index":3510,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["spelling",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":41,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/ContainerService.html":{}}}],["split",{"_index":3173,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splunk",{"_index":1646,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["spm",{"_index":2413,"title":{},"body":{"interfaces/CountryList.html":{}}}],["srb",{"_index":2432,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sri",{"_index":2462,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ssd",{"_index":2457,"title":{},"body":{"interfaces/CountryList.html":{}}}],["stable",{"_index":3524,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["stablization",{"_index":1499,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["stack",{"_index":4614,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["standard",{"_index":1042,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":2774,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4580,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":5477,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":5480,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":5482,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":5475,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":5484,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":5486,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":5488,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":5490,"title":{},"body":{"coverage.html":{}}}],["start/package",{"_index":5497,"title":{},"body":{"coverage.html":{}}}],["start_page_url",{"_index":2766,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"coverage.html":{}}}],["started",{"_index":4620,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":5615,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["startoftoday",{"_index":4149,"title":{},"body":{"classes/Person.html":{}}}],["startpageurl",{"_index":2751,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["starts",{"_index":3182,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["starturl",{"_index":1389,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":862,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["state.service",{"_index":2764,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["state.service.ts",{"_index":3921,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["state.service.ts:102",{"_index":3984,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:109",{"_index":3991,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:119",{"_index":3990,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:124",{"_index":3981,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:16",{"_index":3979,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:20",{"_index":3997,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:52",{"_index":3986,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:63",{"_index":3988,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:7",{"_index":3922,"title":{},"body":{"interfaces/PageList.html":{}}}],["state.service.ts:71",{"_index":3995,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:84",{"_index":3993,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:91",{"_index":3983,"title":{},"body":{"injectables/PageStateService.html":{}}}],["statements",{"_index":5371,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2316,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":1009,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["status",{"_index":1848,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"changelog.html":{},"todo.html":{}}}],["statuschange",{"_index":5235,"title":{},"body":{"changelog.html":{}}}],["statustext",{"_index":1776,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["step",{"_index":3131,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4596,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4530,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1894,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["stepper/wizard",{"_index":5105,"title":{},"body":{"changelog.html":{}}}],["stepper/wizardprogress",{"_index":5128,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":3000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["sticky",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":1113,"title":{},"body":{"interfaces/AddressResult.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PageSectionComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":1016,"title":{},"body":{"classes/Address.html":{}}}],["stored",{"_index":936,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stp",{"_index":2423,"title":{},"body":{"interfaces/CountryList.html":{}}}],["str",{"_index":2880,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{}}}],["str.replace",{"_index":2881,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["str.slice(0",{"_index":1204,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["street",{"_index":841,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":752,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.ts",{"_index":5607,"title":{},"body":{"todo.html":{}}}],["street.directive",{"_index":4368,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["street.directive.ts",{"_index":4523,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["street.directive.ts:25",{"_index":4524,"title":{},"body":{"directives/ValidateStreetDirective.html":{}}}],["street.replace",{"_index":3532,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["streetcomponent",{"_index":751,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3999,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":4015,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":60,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["stringable",{"_index":1659,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["strip",{"_index":202,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["stripped",{"_index":1164,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["stripstringtomaxlength",{"_index":3542,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["stripstringtomaxlength(str",{"_index":1201,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["structure",{"_index":822,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["stuff",{"_index":4432,"title":{},"body":{"components/SinComponent.html":{}}}],["style",{"_index":1236,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageSectionComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["style.width]='strengthpercentage",{"_index":4100,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":4108,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":5667,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styled",{"_index":5089,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1976,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":5727,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":5722,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":5721,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":5664,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styles/projects/commonif",{"_index":5735,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["stylesscss",{"_index":5487,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":663,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":5248,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":1255,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3591,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subclasses",{"_index":1727,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["subfolder",{"_index":5353,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1091,"title":{},"body":{"interfaces/AddressResult.html":{},"injectables/ContainerService.html":{},"components/GeocoderInputComponent.html":{}}}],["submission",{"_index":1726,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["submit",{"_index":471,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3909,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitbuttonclicked",{"_index":1946,"title":{},"body":{"injectables/ContainerService.html":{}}}],["submitlabel",{"_index":1882,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["submitlabelsubject",{"_index":1941,"title":{},"body":{"injectables/ContainerService.html":{}}}],["submitted",{"_index":201,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["subscribe",{"_index":1755,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/WizardProgressItem.html":{}}}],["subscribe(evt",{"_index":3089,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3811,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3632,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4563,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscribeformbar",{"_index":1886,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["subscription",{"_index":1890,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["success",{"_index":347,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["success_fetch_img",{"_index":5542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":5545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successcode",{"_index":1836,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["successfully",{"_index":3172,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":1252,"title":{},"body":{"components/ButtonComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":2458,"title":{},"body":{"interfaces/CountryList.html":{}}}],["suggestion",{"_index":3974,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["sum",{"_index":4433,"title":{},"body":{"components/SinComponent.html":{}}}],["sunhighlight",{"_index":2641,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["super",{"_index":869,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["super(http",{"_index":1741,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["super(message",{"_index":3864,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["super(router",{"_index":107,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["super.ngoninit",{"_index":1500,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["suppben",{"_index":3778,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["supply",{"_index":4611,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["support",{"_index":4995,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sur",{"_index":2465,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sure",{"_index":880,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":2466,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svalbard",{"_index":2468,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svg",{"_index":5590,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":2444,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svn",{"_index":2446,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swaziland",{"_index":2472,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swe",{"_index":2473,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sweden",{"_index":2474,"title":{},"body":{"interfaces/CountryList.html":{}}}],["switch",{"_index":5180,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4577,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":1095,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["switchmap(searchphrase",{"_index":1135,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["switzerland",{"_index":2476,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swz",{"_index":2471,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sxm",{"_index":2441,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syc",{"_index":2434,"title":{},"body":{"interfaces/CountryList.html":{}}}],["symbols(e.g",{"_index":2847,"title":{},"body":{"components/EmailComponent.html":{}}}],["symlink",{"_index":5669,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":2477,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syrian",{"_index":2478,"title":{},"body":{"interfaces/CountryList.html":{}}}],["system",{"_index":2998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":270,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":1196,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["tabbed",{"_index":486,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["tabbing",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":3667,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5514,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":5256,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2877,"title":{},"body":{"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":5344,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":215,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{}}}],["taiwan",{"_index":2481,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":2483,"title":{},"body":{"interfaces/CountryList.html":{}}}],["take",{"_index":3716,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":316,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":5174,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":2485,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tap",{"_index":321,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["target",{"_index":276,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["tca",{"_index":2507,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tcd",{"_index":2099,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tell",{"_index":5663,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":655,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["template'},{'name",{"_index":699,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["template.component",{"_index":4378,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["template.component.html",{"_index":1834,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.scss",{"_index":1833,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts",{"_index":1832,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["template.component.ts:18",{"_index":1838,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:25",{"_index":1842,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:29",{"_index":1844,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:33",{"_index":1846,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template/confirm",{"_index":1831,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["templateforms",{"_index":1084,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["templates",{"_index":5699,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":665,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":423,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1572,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1578,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":2177,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":2075,"title":{},"body":{"interfaces/CountryList.html":{}}}],["test",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["test(var1",{"_index":3146,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":546,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tests",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{},"changelog.html":{}}}],["text",{"_index":354,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["text)).click",{"_index":640,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":4214,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":4325,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":2492,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tha",{"_index":2487,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thailand",{"_index":2488,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thanks",{"_index":5270,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1780,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["there's",{"_index":2667,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["therefore",{"_index":975,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["theyt",{"_index":3310,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":4003,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.$continuebtnsubject.asobservable",{"_index":1957,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$continuebtnsubject.next",{"_index":1972,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$isloadingsubject.asobservable",{"_index":1960,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$isloadingsubject.next",{"_index":1971,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$submitlabelsubject.asobservable",{"_index":1964,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$submitlabelsubject.next",{"_index":1969,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$usedefaultcolorsubject.asobservable",{"_index":1967,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$usedefaultcolorsubject.next",{"_index":1970,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3809,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._asciiprintable.test",{"_index":2861,"title":{},"body":{"components/EmailComponent.html":{}}}],["this._bypassguards",{"_index":1434,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":3857,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["this._defaulterrmsg[x",{"_index":212,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this._find(url",{"_index":3943,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this._formatcriteria.test",{"_index":2859,"title":{},"body":{"components/EmailComponent.html":{}}}],["this._headers",{"_index":348,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1743,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set",{"_index":1742,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('severity",{"_index":1825,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('tags",{"_index":1829,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('timestamp",{"_index":1822,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._log",{"_index":1750,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._logerror",{"_index":1752,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._markallastouched",{"_index":421,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["this._onchange",{"_index":191,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._onchange(event",{"_index":1502,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2679,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this._onchange(null",{"_index":2675,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this._onchange(stripped",{"_index":1181,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this._onchange(this.addr",{"_index":897,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._onchange(this.person",{"_index":3497,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(this.search",{"_index":1200,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this._onchange(true",{"_index":3792,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":1310,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this._onchange(values",{"_index":3494,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":193,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._ontouched(this.addr",{"_index":899,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._sendlog(errormessage",{"_index":1767,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._sendlog(message",{"_index":1764,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._starturl",{"_index":1433,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._subscriptions",{"_index":1927,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this._subscriptions.foreach",{"_index":1935,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this._value",{"_index":3666,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.accept.emit(fn",{"_index":3826,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3789,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4564,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addline(2",{"_index":886,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addline(3",{"_index":888,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr",{"_index":836,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline1",{"_index":902,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline2",{"_index":885,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline3",{"_index":887,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.city",{"_index":904,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.country",{"_index":874,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.postal",{"_index":896,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.province",{"_index":878,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.address",{"_index":1119,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.address[addrlookup",{"_index":933,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.addr",{"_index":898,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addressline1",{"_index":1061,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":1072,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":1074,"title":{},"body":{"classes/Address.html":{}}}],["this.addrlabels[x",{"_index":990,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.agreecheck",{"_index":3828,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.allowextralines",{"_index":884,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.apidobformat",{"_index":4156,"title":{},"body":{"classes/Person.html":{}}}],["this.application",{"_index":2959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.attachmentorder",{"_index":1680,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.base_url}/addresses.json",{"_index":3508,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.bconly",{"_index":870,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["this.blur.emit",{"_index":1616,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.blurevent.emit",{"_index":2559,"title":{},"body":{"interfaces/CountryList.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":3370,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":3158,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":3373,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":1274,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":1311,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.bypassguards",{"_index":2769,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.cancontinue",{"_index":3404,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":3372,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":3374,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4571,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":4566,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":1503,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":3122,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":1062,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2674,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4618,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4617,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3791,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.componentlabel",{"_index":4071,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3746,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.containerservice",{"_index":1926,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.containerservice.$isloading",{"_index":1933,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.containerservice.$submitlabel",{"_index":1931,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.containerservice.$usedefaultcolor",{"_index":1928,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.containerservice.submitbuttonclicked",{"_index":1917,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.continuebutton",{"_index":617,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":616,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.controldir",{"_index":2856,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2653,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2658,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1925,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":1064,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{}}}],["this.countrylist",{"_index":967,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.countrylist.find",{"_index":968,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.criteriamsg",{"_index":4079,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3825,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":1312,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":1501,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":1309,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":3354,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2659,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2678,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2640,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":4155,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2639,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2652,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2655,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2647,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2649,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.defaultcountry",{"_index":964,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.defaulterrmsg[x",{"_index":2560,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.defaultprovince",{"_index":953,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablecontinue",{"_index":3829,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.disabled",{"_index":196,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disabled[x",{"_index":1001,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablegeocoder",{"_index":972,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.dobformat",{"_index":4157,"title":{},"body":{"classes/Person.html":{}}}],["this.documenttype",{"_index":1681,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.duplist",{"_index":2818,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["this.email",{"_index":2854,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.errmsg",{"_index":3488,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":4085,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":4083,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":4081,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":3365,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessage",{"_index":209,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessage[x",{"_index":213,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessages",{"_index":2637,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":4084,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":4082,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":4080,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.fieldmaxlenghts[x",{"_index":996,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.filecontent",{"_index":1657,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.findcountrycode",{"_index":877,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.firstname",{"_index":3482,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":817,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.form.get(x).markastouched",{"_index":113,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":111,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":3492,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.formgroup",{"_index":422,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["this.formgroup.valid",{"_index":414,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3787,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3790,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3788,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3636,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":3570,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.get",{"_index":5631,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":3519,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4570,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4565,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":626,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getpasswordstrength",{"_index":4089,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":1437,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":3115,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":3141,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":3143,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":3135,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":3123,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":3124,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.haserror",{"_index":1140,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.hasmask",{"_index":4516,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["this.hasnoresults",{"_index":1155,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.headerservice.settitle('practitioner",{"_index":1866,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.heightfactor",{"_index":1691,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(this.serviceurl",{"_index":1207,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["this.http.get(url",{"_index":333,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":1345,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":337,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":1340,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":330,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4472,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4471,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":3114,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":3376,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":3380,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":3356,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":3357,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.injector.get",{"_index":2768,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.inmaintenance",{"_index":3785,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.iscanada",{"_index":893,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.isdate(this.disablesince",{"_index":2651,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2654,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isloading",{"_index":1934,"title":{},"body":{"classes/Container.html":{},"components/FormActionBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.ispagelistempty",{"_index":1435,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.istypeaheadloading",{"_index":1147,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.isundermaintenance",{"_index":3784,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":205,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/XiconButtonComponent.html":{}}}],["this.label.replace",{"_index":206,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this.labels",{"_index":988,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labels[x",{"_index":991,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labeltext",{"_index":2638,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":3484,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":335,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":3352,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1757,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3801,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":3171,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.lookup(searchphrase",{"_index":1136,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["this.maintenanceflag",{"_index":3815,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3816,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":4211,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlength",{"_index":3897,"title":{},"body":{"components/NameComponent.html":{}}}],["this.maxlengths",{"_index":993,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.maxlengths[x",{"_index":995,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.middlename",{"_index":3486,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":4073,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":4077,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":4078,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2664,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.namestr",{"_index":3895,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2709,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2681,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2685,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":1515,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":3109,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":3496,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(values",{"_index":3493,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":1138,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.onlyfuturedates",{"_index":2656,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":1443,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":1451,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":1454,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":1457,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":1444,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":1448,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":1446,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagelist",{"_index":3926,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.every",{"_index":3951,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.find",{"_index":3955,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.length",{"_index":3927,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.map",{"_index":3948,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist[index",{"_index":3946,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pageservice.setpagecomplete",{"_index":3844,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.pageservice.setpageincomplete",{"_index":3843,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.pagestateservice.cannavigatetopage",{"_index":2777,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.pagestateservice.navigatebyurl",{"_index":2776,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.pagestateservice.pagelistisclear",{"_index":2772,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.pagestateservice.setpages",{"_index":1864,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.password",{"_index":4087,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":4091,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":3490,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person",{"_index":3481,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":3483,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":3485,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":3487,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.populateaddressonselect",{"_index":1179,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["this.post()these",{"_index":5632,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1800,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":1066,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":1067,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":4210,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1922,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4583,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4574,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":1065,"title":{},"body":{"classes/Address.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist",{"_index":941,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provincelist.find",{"_index":951,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provlist",{"_index":944,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.pswdstrength",{"_index":4088,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":3189,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.readonlyfields[x",{"_index":999,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.registervalidation",{"_index":2855,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["this.required",{"_index":3379,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":3489,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":3116,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":3180,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":3195,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":78,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["this.router.events.pipe",{"_index":3629,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":4277,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":79,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["this.router.navigatebyurl",{"_index":3953,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.router.url",{"_index":1438,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["this.router.url.includes(url",{"_index":3634,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3646,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4560,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4572,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.samplemodal.hide",{"_index":4287,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.samplemodal.show",{"_index":4285,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.scaledwidth",{"_index":4474,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4567,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.scrolltoerrorsonsubmit",{"_index":3405,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.search",{"_index":1180,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":1198,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.pipe",{"_index":1132,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.select.emit(addr",{"_index":1176,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.selectedaddress",{"_index":1175,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.sendspaenvserver(headername",{"_index":3810,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":3858,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["this.service.cannavigatetourl(pageurl",{"_index":3859,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":4278,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":4276,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setdefaultcountryasoption",{"_index":875,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption",{"_index":892,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption(this.addr.country",{"_index":879,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.seterrormsg",{"_index":190,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.setlabels",{"_index":871,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setmaxlengths",{"_index":872,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setpagecomplete",{"_index":4269,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":4268,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setprogresssteps(pages",{"_index":1863,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.setreadonlyfields",{"_index":873,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1766,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1763,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.settags(message.event",{"_index":1787,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.settimestamp",{"_index":1786,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.setuprequest(observable",{"_index":334,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":3358,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.showline2",{"_index":919,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.showline3",{"_index":920,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.sin",{"_index":4426,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.length",{"_index":4440,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim",{"_index":4435,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim().length",{"_index":4429,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2643,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3635,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":620,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3812,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3814,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3817,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3818,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3819,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_flag",{"_index":3820,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_message",{"_index":3821,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3824,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_suppben_maintenance_flag",{"_index":3822,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_suppben_maintenance_message",{"_index":3823,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.startpageurl",{"_index":2770,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4585,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.strengthpercentage",{"_index":4090,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.stripstringtomaxlength(data.deliveryaddresslines",{"_index":1165,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["this.stripstringtomaxlength(data.street",{"_index":3571,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.submitlabel",{"_index":1932,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.subscribeformbar",{"_index":1876,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.typeaheadlist",{"_index":1131,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["this.unsubscribeformbar",{"_index":1878,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.updateprovlist",{"_index":889,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.updateskipcontentlink",{"_index":3633,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1746,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.usedefaultcolor",{"_index":1930,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.uuid",{"_index":1656,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.validatelabel",{"_index":197,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this.validateself",{"_index":2857,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["this.validatesin",{"_index":4428,"title":{},"body":{"components/SinComponent.html":{}}}],["this.valuechange.emit",{"_index":1615,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.valuechange.emit(val",{"_index":3669,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.viewcontainerref",{"_index":4468,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1689,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this[lookup",{"_index":922,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["those",{"_index":5616,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":3226,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3764,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["throw",{"_index":234,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["throwerror",{"_index":1092,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('addressvalidator",{"_index":1227,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["throwerror('geocoder",{"_index":3534,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1814,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["throwerror(msg",{"_index":1792,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["throws",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["thumbnail",{"_index":3083,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["thumbnail'},{'name",{"_index":754,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":4448,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":4447,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":753,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":3244,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tick",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["tickanddetectchanges",{"_index":5392,"title":{},"body":{"coverage.html":{}}}],["tiff",{"_index":3037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":3426,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":3233,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":3408,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["times",{"_index":3128,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["timor",{"_index":2490,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tip",{"_index":1363,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3913,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":669,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":2482,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkl",{"_index":2494,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkm",{"_index":2505,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tls",{"_index":2489,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobago",{"_index":2500,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobe",{"_index":1496,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["today",{"_index":2657,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["todo",{"_index":33,"title":{"todo.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["together",{"_index":4139,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":1282,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":756,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4480,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4479,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":755,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":2493,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tohse",{"_index":5725,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tojson",{"_index":1679,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["tokelau",{"_index":2495,"title":{},"body":{"interfaces/CountryList.html":{}}}],["told",{"_index":3005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":2425,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2602,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ton",{"_index":2496,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tonga",{"_index":2497,"title":{},"body":{"interfaces/CountryList.html":{}}}],["toobig",{"_index":1631,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":4066,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1630,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":68,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":1012,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1784,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["touched",{"_index":192,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddressResult.html":{},"interfaces/CountryList.html":{},"components/GeocoderInputComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["trace",{"_index":4615,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["track",{"_index":143,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1647,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3703,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":3259,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["translation",{"_index":1323,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["tree",{"_index":657,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["trigger",{"_index":338,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddressResult.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["triggers",{"_index":1124,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["trimmed",{"_index":2703,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2707,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2708,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":1211,"title":{},"body":{"interfaces/AddressResult.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":2499,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tristan",{"_index":2403,"title":{},"body":{"interfaces/CountryList.html":{}}}],["true",{"_index":108,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":5330,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3750,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["try/catch",{"_index":4590,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["trying",{"_index":2773,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["ts",{"_index":5646,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":5339,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsdoc",{"_index":5117,"title":{},"body":{"changelog.html":{}}}],["tslint",{"_index":2927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3770,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":2498,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tun",{"_index":2501,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tunisia",{"_index":2502,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tur",{"_index":2503,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkey",{"_index":2504,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":2506,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turks",{"_index":2508,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turn",{"_index":3051,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":1440,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":2510,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":2511,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tweak",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["tweaks",{"_index":584,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":2480,"title":{},"body":{"interfaces/CountryList.html":{}}}],["two",{"_index":5712,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["typeahead",{"_index":1122,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":1123,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["typeaheadmatch",{"_index":1097,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["typeaheadmodule",{"_index":4317,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":4389,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typed",{"_index":1112,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["typemsg",{"_index":238,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["typeof",{"_index":232,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["typeoption",{"_index":466,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":595,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":5683,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":609,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["types/pdfjs",{"_index":5520,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":5186,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["typetext",{"_index":467,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":604,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":468,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":607,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":3831,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["typo",{"_index":559,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":2484,"title":{},"body":{"interfaces/CountryList.html":{}}}],["u.s",{"_index":2535,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uga",{"_index":2512,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uganda",{"_index":2513,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ui",{"_index":1191,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{}}}],["ukr",{"_index":2514,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ukraine",{"_index":2515,"title":{},"body":{"interfaces/CountryList.html":{}}}],["umi",{"_index":2519,"title":{},"body":{"interfaces/CountryList.html":{}}}],["unable",{"_index":1789,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["unchecked",{"_index":5149,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":5689,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1558,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":332,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["under",{"_index":3266,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlines",{"_index":4437,"title":{},"body":{"components/SinComponent.html":{}}}],["underlying",{"_index":5561,"title":{},"body":{"index.html":{}}}],["understand",{"_index":3755,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1674,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":351,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{}}}],["unit",{"_index":4144,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["united",{"_index":2486,"title":{},"body":{"interfaces/CountryList.html":{}}}],["united_states",{"_index":1998,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["units",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":1633,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":1278,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unnecessary",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["unreleased",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":1913,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["unsubscribeformbar",{"_index":1887,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["unsuccessful",{"_index":1811,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":3297,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":424,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unused",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":566,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":5687,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":533,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":5495,"title":{},"body":{"coverage.html":{}}}],["updateappcomponentts",{"_index":5509,"title":{},"body":{"coverage.html":{}}}],["updated",{"_index":427,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":5510,"title":{},"body":{"coverage.html":{}}}],["updateprovlist",{"_index":940,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updates",{"_index":934,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["updateskipcontentlink",{"_index":3608,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":5496,"title":{},"body":{"coverage.html":{}}}],["updating",{"_index":1253,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":312,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["uploadattachment",{"_index":255,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["uploadattachment(relativeurl",{"_index":296,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["uploaded",{"_index":1651,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":717,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":4323,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1627,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":3278,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":3353,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploads",{"_index":300,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["upon",{"_index":1178,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["upper",{"_index":907,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["uppercasepipe",{"_index":4174,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":4195,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["url",{"_index":69,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["url.com/fpcare/example#content",{"_index":3641,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.endswith(x.route",{"_index":4584,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["url.includes",{"_index":1455,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["urlbasename",{"_index":3613,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urls",{"_index":305,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["urltree",{"_index":3854,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":2522,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ury",{"_index":2521,"title":{},"body":{"interfaces/CountryList.html":{}}}],["us/docs/web/http/basics_of_http/mime_types",{"_index":1667,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["usa",{"_index":1999,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usable",{"_index":5626,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1986,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{}}}],["use",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["useaddressvalidator",{"_index":971,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["used",{"_index":178,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedefaultcolor",{"_index":1883,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/WizardProgressItem.html":{}}}],["usedefaultcolorsubject",{"_index":1942,"title":{},"body":{"injectables/ContainerService.html":{}}}],["usedropdownlist",{"_index":2553,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":380,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["useful",{"_index":2610,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["user",{"_index":52,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["user's",{"_index":3077,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":4004,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["users",{"_index":843,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["uses",{"_index":960,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/ContainerService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["usevalue",{"_index":2754,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["using",{"_index":273,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1588,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":323,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":138,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["uuids",{"_index":307,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["uzb",{"_index":2523,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":2524,"title":{},"body":{"interfaces/CountryList.html":{}}}],["v3",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":835,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["val.country",{"_index":955,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.countrycode",{"_index":969,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.description",{"_index":954,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.label",{"_index":4266,"title":{},"body":{"components/RadioComponent.html":{}}}],["val.path",{"_index":3940,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["val.provincecode",{"_index":952,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["valid",{"_index":109,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/NameComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate",{"_index":2805,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate(control",{"_index":2808,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validatebcpostaldirective",{"_index":767,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatecitydirective",{"_index":769,"title":{"directives/ValidateCityDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateCityDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatelabel",{"_index":131,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["validatenamedirective",{"_index":771,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepc",{"_index":4515,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["validatepc(control",{"_index":4506,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["validatepostalcodedirective",{"_index":773,"title":{"directives/ValidatePostalcodeDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateregiondirective",{"_index":775,"title":{"directives/ValidateRegionDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateRegionDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateresult",{"_index":4427,"title":{},"body":{"components/SinComponent.html":{}}}],["validates",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["validateself",{"_index":219,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["validatesin",{"_index":4402,"title":{},"body":{"components/SinComponent.html":{}}}],["validatestreetdirective",{"_index":777,"title":{"directives/ValidateStreetDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatiion",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":157,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["validation",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CaptchaDataService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validationerrors",{"_index":153,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validations",{"_index":4001,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["validator",{"_index":220,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddressResult.html":{},"directives/DuplicateCheckDirective.html":{},"components/GeocoderInputComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validator'},{'name",{"_index":686,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["validator.component",{"_index":4384,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validator.component.html",{"_index":1106,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["validator.component.scss",{"_index":1107,"title":{},"body":{"interfaces/AddressResult.html":{}}}],["validator.component.ts",{"_index":1083,"title":{},"body":{"interfaces/AddressResult.html":{},"coverage.html":{}}}],["validator/address",{"_index":1082,"title":{},"body":{"interfaces/AddressResult.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["validatorfn",{"_index":2811,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validators",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["validing",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":36,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["valuechange",{"_index":1511,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["valuemax=\"100",{"_index":4105,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":4104,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":4102,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":935,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vanuatu",{"_index":2526,"title":{},"body":{"interfaces/CountryList.html":{}}}],["var",{"_index":679,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":927,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["variablescss",{"_index":5489,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":2214,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vatican",{"_index":2216,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vct",{"_index":2416,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ven",{"_index":2527,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vendor",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["venezuela",{"_index":2528,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verde",{"_index":2092,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":1342,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":1319,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":1329,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":5544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":428,"title":{},"body":{"classes/AbstractReactForm.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["versionjs",{"_index":5511,"title":{},"body":{"coverage.html":{}}}],["versions",{"_index":4948,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":3651,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4546,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":2532,"title":{},"body":{"interfaces/CountryList.html":{}}}],["via",{"_index":588,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":2531,"title":{},"body":{"interfaces/CountryList.html":{}}}],["view",{"_index":4545,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":104,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":1272,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":1307,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":1488,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3743,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dp",{"_index":2618,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3758,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('samplesmodal",{"_index":4283,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4549,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren",{"_index":4553,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4551,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":4450,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":2888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewencapsulation.none",{"_index":2933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewproviders",{"_index":819,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":2417,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vir",{"_index":2534,"title":{},"body":{"interfaces/CountryList.html":{}}}],["virgin",{"_index":2533,"title":{},"body":{"interfaces/CountryList.html":{}}}],["visibility",{"_index":2604,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["visible",{"_index":882,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vitae",{"_index":1590,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":2530,"title":{},"body":{"interfaces/CountryList.html":{}}}],["void",{"_index":58,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/AddressResult.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1566,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1611,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1580,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1584,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":5622,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":2525,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":1024,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":5651,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":3026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["walk",{"_index":4443,"title":{},"body":{"components/SinComponent.html":{}}}],["wallis",{"_index":2537,"title":{},"body":{"interfaces/CountryList.html":{}}}],["want",{"_index":594,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":1847,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"components/PasswordComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warningcode",{"_index":1837,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["warnings",{"_index":5592,"title":{},"body":{"todo.html":{}}}],["warranties",{"_index":5581,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5686,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":5652,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":1043,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"additional-documentation/getting-started.html":{}}}],["waze",{"_index":5110,"title":{},"body":{"changelog.html":{}}}],["we'll",{"_index":2683,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["we're",{"_index":4588,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4576,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3714,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":469,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weights",{"_index":4431,"title":{},"body":{"components/SinComponent.html":{}}}],["well",{"_index":1150,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["western",{"_index":2540,"title":{},"body":{"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1690,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":371,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":1403,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["whole",{"_index":5709,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1734,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["width",{"_index":3030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2645,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1683,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":5189,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":5131,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3751,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1739,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["window.location.href",{"_index":3644,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3643,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3645,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4595,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["winds",{"_index":2662,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wip",{"_index":5169,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":3762,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":541,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":1188,"title":{},"body":{"interfaces/AddressResult.html":{},"components/GeocoderInputComponent.html":{},"components/XiconButtonComponent.html":{},"license.html":{}}}],["wizard",{"_index":758,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":5682,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":757,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1892,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":2536,"title":{},"body":{"interfaces/CountryList.html":{}}}],["won't",{"_index":1817,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["wording",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":556,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["workaround",{"_index":2962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["worker",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":578,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddressResult.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["wrap",{"_index":3976,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wrapped",{"_index":2620,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2581,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper/row",{"_index":3969,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wraps",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":5645,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":132,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/AddressResult.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["writevalue(obj",{"_index":2686,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":166,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["writing",{"_index":5577,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":3036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1629,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":2419,"title":{},"body":{"interfaces/CountryList.html":{}}}],["x",{"_index":211,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2636,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":1452,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["x.path",{"_index":3936,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["x.route",{"_index":1456,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1921,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.unsubscribe",{"_index":1936,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":3377,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1920,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":761,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{}}}],["xiconbutton",{"_index":5075,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":760,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":3032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["year",{"_index":2623,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["yeardistantfuture",{"_index":2567,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yeardistantpast",{"_index":2566,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["years",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["yellow",{"_index":5594,"title":{},"body":{"todo.html":{}}}],["yem",{"_index":2542,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yemen",{"_index":2543,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yes",{"_index":70,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/Container.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"classes/MoHCommonLibraryError.html":{},"injectables/PageStateService.html":{},"components/RadioComponent.html":{}}}],["yes/no",{"_index":1281,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":3248,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":5662,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":1237,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":5612,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":5557,"title":{},"body":{"index.html":{}}}],["yt",{"_index":4243,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":2288,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yukon",{"_index":4244,"title":{},"body":{"interfaces/ProvinceList.html":{}}}],["yyyy/mm/dd",{"_index":2614,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":4117,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":1027,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z0",{"_index":4495,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["z])[a",{"_index":4494,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z][0",{"_index":4508,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["z][a",{"_index":3469,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":1029,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["z]\\s?[0",{"_index":4510,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["za",{"_index":3468,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["zabceghj",{"_index":1026,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":2452,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zambia",{"_index":2545,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zealand",{"_index":2344,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zero",{"_index":3183,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["zeros",{"_index":4441,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["zib",{"_index":3247,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":2547,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zip",{"_index":864,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["zmb",{"_index":2544,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zone",{"_index":2958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":5529,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1355,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":2546,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":4063,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":4062,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractBaseForm.html":{"url":"classes/AbstractBaseForm.html","title":"class - AbstractBaseForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractBaseForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-base-form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-base-form.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-base-form.ts:7\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-base-form.ts:9\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:13\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:11\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:23\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Router, Params } from '@angular/router';\nimport { scrollTo } from '../../helpers/scroll-helpers';\n\nexport abstract class AbstractBaseForm {\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n  /** Determines if the Continue button is disabled on the form action bar */\n  abstract canContinue(): boolean;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string, queryParams?: Params ) {\n\n    this.router.navigate([url], { queryParams: queryParams })\n      .then(() => {\n        scrollTo();\n      });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseForm\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:8\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:7\n\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:9\n\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:20\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:26\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:13\n\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:11\n\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:23\n\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AbstractBaseForm } from './abstract-base-form';\n\nexport abstract class AbstractForm extends AbstractBaseForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    super(router);\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractFormControl.html":{"url":"classes/AbstractFormControl.html","title":"class - AbstractFormControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractFormControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form-control.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            ControlValueAccessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:68\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ErrorMessage, replaceLabelTag } from './error-message.interface';\nimport { Input, OnInit } from '@angular/core';\nimport { Base } from './base';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\nimport { MoHCommonLibraryError } from '../../helpers/library-error';\n\n// Class does not get exported - used internally\nexport abstract class AbstractFormControl extends Base implements OnInit, ControlValueAccessor {\n\n  // Default messages - must be defined in each component\n  abstract _defaultErrMsg: ErrorMessage = {};\n\n  // Must be defined in component as default labels are specific to component\n  @Input() abstract label: string;\n\n  @Input() disabled: boolean = false;\n\n  // Input to allow developers to change default messages\n  @Input() errorMessage: ErrorMessage;\n\n\n  // Required for implementing ControlValueAccessor\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  // Required for implementing ControlValueAccessor\n  abstract writeValue( value: any ): void;\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  // Disable control\n  setDisabledState( isDisabled: boolean ): void {\n    this.disabled = isDisabled;\n  }\n\n  protected setErrorMsg() {\n    this.validateLabel();\n\n    // Some components have logic based off no label being submitted - strip off '(optional)'\n    const _label = this.label ? this.label.replace( /\\s*\\(.*?\\)\\s*/g, '' ) : 'Field';\n\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this._defaultErrMsg[x] = this.errorMessage[x] );\n    }\n\n    // Replace label tags with label\n    Object.keys(this._defaultErrMsg).map( x => this._defaultErrMsg[x] = replaceLabelTag( this._defaultErrMsg[x] , _label ) );\n  }\n\n  /**\n   * Register self validating method\n   * @param control control directive\n   * @param fn function for validating self\n   */\n  protected registerValidation( ngControl: NgControl, fn: ValidationErrors) {\n\n    // Register validateSelf validator so that it will be added on component initialization.\n    // Makes the component a self validating component.\n\n    return Promise.resolve().then(() => {\n\n      if ( ngControl ) {\n\n        const allValidators = [fn.bind(this)];\n        if ( ngControl.control.validator ) {\n          allValidators.push( ngControl.control.validator );\n        }\n        ngControl.control.setValidators(allValidators);\n        ngControl.control.updateValueAndValidity();\n        return ngControl;\n      }\n    });\n  }\n\n  private validateLabel() {\n    const labelType = typeof this.label;\n    // If labelType is falsy, do not throw the error, since we have a backup label in case it's falsy.\n    if (labelType !== 'string' && this.label) {\n      const typeMsg = ` Invalid input provided to [label].  Label must be a string and you provided a ${labelType}`;\n      throw new MoHCommonLibraryError(typeMsg);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                            \n                                    Protected\n                                uploadAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:18\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:61\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadAttachment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAttachment(relativeUrl: string, attachment: CommonImage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:75\n                \n            \n\n\n            \n                \n                    Uploads an individual attachment.  All you need to do is set the url.\nNote: urls often include UUIDs, so this must be an application decision.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    relativeUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL to hit, must include UUIDs of application and CommonImage\n\n                                    \n                                \n                                \n                                    attachment\n                                    \n                                                CommonImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CommonImage to upload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:54\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { UUID } from 'angular2-uuid';\nimport { CommonImage } from '../models/images.model';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n\n  /* Helper function for generating a unique UUID per request for logging. */\n  protected generateUUID() {\n    return UUID.UUID();\n  }\n\n  /**\n   * Uploads an individual attachment.  All you need to do is set the url.\n   * Note: urls often include UUIDs, so this must be an application decision.\n   *\n   * @param relativeUrl URL to hit, must include UUIDs of application and CommonImage\n   * @param attachment CommonImage to upload\n   */\n  protected uploadAttachment(relativeUrl: string, attachment: CommonImage) {\n    const options = {headers: this._headers, responseType: 'text' as 'text'};\n\n    const binary = atob(attachment.fileContent.split(',')[1]);\n    const array = [];\n    for (let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPageGuardService.html":{"url":"injectables/AbstractPageGuardService.html","title":"injectable - AbstractPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-page-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractGuardService.\nYour application's load page guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see LoadPageGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            providers: [\n         ...\n         { provide: AbstractPageGuardService, useExisting: EnrolService },\n         LoadPageGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                canNavigateToUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-page-guard.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canNavigateToUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canNavigateToUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-page-guard.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractGuardService.\n *\n * Your application's load page guard service can do whatever it wants as long as it\n * implements these methods.\n *\n * More information on setup can be found in @see LoadPageGuardService.\n *\n *  @example\n *\n *                providers: [\n *                        ...\n *                        { provide: AbstractPageGuardService, useExisting: EnrolService },\n *                        LoadPageGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPageGuardService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract canNavigateToUrl( url: string ): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @deprecated\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n *\n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractReactForm.html":{"url":"classes/AbstractReactForm.html","title":"class - AbstractReactForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractReactForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-react-form.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseForm\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _markAllAsTouched\n                            \n                            \n                                canContinue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-react-form.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-react-form.ts:9\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:7\n\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:9\n\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _markAllAsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _markAllAsTouched(fg: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-react-form.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fg\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-react-form.ts:22\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\nCan be overrided\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched(fg: FormGroup | FormGroup[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-react-form.ts:29\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fg\n                                    \n                                            FormGroup | FormGroup[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:13\n\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:11\n\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:23\n\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AbstractBaseForm } from './abstract-base-form';\n\n\nexport abstract class AbstractReactForm extends AbstractBaseForm {\n\n  /** Access to the form elements for validation */\n  formGroup: FormGroup;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    super(router);\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   * Can be overrided\n   */\n  canContinue(): boolean {\n\n    // Returns true if form is valid\n    return this.formGroup.valid;\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(fg: FormGroup | FormGroup[] = null): void {\n\n    // Passed in parameter, set each as touched\n    if ( fg ) {\n      if ( Array.isArray( fg ) ) {\n        // For each form mark as touched to display errors\n        return fg.forEach( x => {\n          this._markAllAsTouched( x );\n        });\n      }\n      // Returns true if form is valid\n      this._markAllAsTouched( fg );\n    } else {\n      this._markAllAsTouched( this.formGroup );\n    }\n  }\n\n  // Temporary until libray forms updated to version.\n  private _markAllAsTouched(fg: FormGroup) {\n    const controls: Array = Object.keys(fg.controls);\n\n    for (const control of controls) {\n      fg.controls[control].markAsTouched();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddrLabelList.html":{"url":"interfaces/AddrLabelList.html","title":"interface - AddrLabelList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddrLabelList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address1\n                                \n                                \n                                            Optional\n                                        address2\n                                \n                                \n                                            Optional\n                                        address3\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address3\n                                    \n                                \n                                \n                                    \n                                        address3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false; // This should eventually be refactored to `disableAddressValidator`. Leaving it for compatibility.\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n  @Input() addressServiceUrl: string;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  get useAddressValidator(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  selectSuggestedAddress(address: Address) {\n    if (!address.street && !address.city && !address.postal) {\n      return;\n    }\n    this.addr.addressLine1 = address.street;\n    this.addr.city = address.city;\n    this.addr.postal = address.postal;\n    if (!this.bcOnly) {\n      this.addr.province = address.province;\n    }\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    street\n                                \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:11\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:44\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:36\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:23\n                                \n                            \n\n                \n                    \n                        setstreet(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  public addressLine1: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine2: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n  public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n  // For backward compatibilty with applications that use street.\n  get street() {\n    return this.addressLine1;\n  }\n\n  set street( val: string ) {\n    this.addressLine1 = val;\n  }\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.addressLine1}, ${this.city}`;\n  }\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.addressLine1 && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddressResult.html":{"url":"interfaces/AddressResult.html","title":"interface - AddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address-validator/address-validator.component.ts\n        \n\n            \n                Description\n            \n            \n                For TemplateForms, pass in an Address and recieve an Address\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        AddressComplete\n                                \n                                \n                                        Country\n                                \n                                \n                                        DeliveryAddressLines\n                                \n                                \n                                        Locality\n                                \n                                \n                                        PostalCode\n                                \n                                \n                                        Province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressComplete\n                                    \n                                \n                                \n                                    \n                                        AddressComplete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DeliveryAddressLines\n                                    \n                                \n                                \n                                    \n                                        DeliveryAddressLines:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Locality\n                                    \n                                \n                                \n                                    \n                                        Locality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PostalCode\n                                    \n                                \n                                \n                                    \n                                        PostalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Province\n                                    \n                                \n                                \n                                    \n                                        Province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, SimpleChanges, OnChanges, Optional, Self } from '@angular/core';\nimport { Subject, Observable, of, throwError } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, map, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { Address } from '../../models/address.model';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n\n\n/**\n * For TemplateForms, pass in an Address and recieve an Address\n * @example\n *           \n *           \n *\n * @note\n * For ReactiveForms, pass in a string and recieve a string.  If you need the\n * Address object you can use (select) in addition.\n *\n * @example\n *           \n *          \n */\n\nexport interface AddressResult {\n  /** String from the API that includes street, city, province, and country. */\n  AddressComplete: string;\n  Locality: string;\n  DeliveryAddressLines: string;\n  // Set to defaults in response\n  Country: string;\n  Province: string;\n  PostalCode: string;\n}\n\n@Component({\n  selector: 'common-address-validator',\n  templateUrl: './address-validator.component.html',\n  styleUrls: ['./address-validator.component.scss']\n})\nexport class AddressValidatorComponent extends AbstractFormControl implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Address Lookup';\n  @Input() address: string;\n  @Input() serviceUrl: string;\n  @Input() populateAddressOnSelect: boolean = false;\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  @Output() select: EventEmitter = new EventEmitter();\n  \n  @Input() maxlength: string = '255';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n  };\n  /** The string in the box the user has typed */\n  public search: string;\n  /** Is the request still in progress? */\n  public isTypeaheadLoading: boolean = false;\n  /** has returned and has no results, an empty array. */\n  public hasNoResults: boolean = false;\n  public hasError: boolean = false;\n\n  /** Similar to this.address, but we can null it when user is searching for new addresses */\n  public selectedAddress: boolean = false;\n  /** The list of results, from API, that is passed to the typeahead list */\n  public typeaheadList$: Observable; // Result from address lookup\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n  constructor(@Optional() @Self() public controlDir: NgControl,\n              private cd: ChangeDetectorRef,\n              protected http: HttpClient) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => this.lookup(searchPhrase)),\n      catchError(err => this.onError(err))\n    );\n  }\n\n  onError(err): Observable {\n    this.hasError = true;\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onLoading(val: boolean): void {\n    // console.log( 'onLoading - address-validator' , val );\n    this.isTypeaheadLoading = val;\n    this.hasError = false;\n  }\n\n  // Note - this will fire after an onError as well\n  onNoResults(val: boolean): void {\n\n   //  console.log( 'No results - AddressValidator' , val );\n\n    // If we have results, the error has resolved (e.g. network has re-connected)\n    if (val === false) {\n      this.hasError = false;\n    }\n\n    this.hasNoResults = val;\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n\n    // console.log( 'onSelect: ', event );\n    const data: AddressResult = event.item;\n\n    // Output string to FormControl. If street is more than the max length shorten\n    const stripped = this.stripStringToMaxLength(data.DeliveryAddressLines);\n\n    const addr = new Address();\n    addr.city = data.Locality;\n    addr.country = data.Country;\n    addr.province = data.Province;\n    addr.street = stripped;\n    addr.postal = data.PostalCode;\n    // Save and emit Address for (select)\n    this.selectedAddress = true;\n    this.select.emit(addr);\n\n    // For template forms, must explicitly set `search` value upon selecting an item.\n    if (this.populateAddressOnSelect) {\n      this.search = stripped;\n    }\n    this._onChange(stripped);\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    // Filter out 'enter' and other similar keyboard events that can trigger\n    // when user is selecting a typeahead option instead of entering new text.\n    // Without this filter, we do another HTTP request + force disiplay the UI\n    // for now reason\n    if (event.keyCode === 13 || event.keyCode === 9) {  // enter & tab\n      return;\n    }\n    // Clear out selection\n    this.selectedAddress = false;\n    this.searchText$.next(this.search);\n  }\n\n  onBlur(event): void {\n    this._onTouched();\n    this._onChange(this.search);\n  }\n\n\n  writeValue( value: any ): void {\n    if ( value  !== undefined ) {\n      this.search = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  private stripStringToMaxLength(str: string) {\n    const maxlength = parseInt(this.maxlength, 10);\n    return str.slice(0, maxlength);\n  }\n\n  lookup(address: string): Observable {\n    const params = new HttpParams()\n                    .set('address', address);\n\n    return this.http.get(this.serviceUrl, {\n      params: params\n    }).pipe(map(this.processResponse));\n  }\n\n  /**\n   * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n   *\n   * This works for other requests for the same API too, however it may error\n   * out on some items if matchPrecisionNot is not set.\n   *\n   * @param obj The response from ADDRESS_URL\n   */\n  protected processResponse(obj): AddressResult[] {\n    return obj.Address.map(feature => {\n      const props = feature;\n      const Locality = props.Locality;\n      const AddressComplete = props.AddressComplete;\n      const DeliveryAddressLines = props.DeliveryAddressLines;\n      const Province = props.Province;\n      const Country = props.Country;\n      const PostalCode = props.PostalCode;\n\n      return {\n        AddressComplete,\n        Locality,\n        DeliveryAddressLines,\n        Province,\n        Country,\n        PostalCode\n      };\n    });\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.error('AddressValidator network error', { error });\n    return throwError('AddressValidator error');\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})import { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:107\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:99\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:88\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:56\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:78\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:63\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/* TODO: Revise - does not work quite correct when there is no landing page.\n * @depreciated\n */\n\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setCheckboxVal\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:31\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCheckboxVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetCheckboxVal(event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Optional, Self} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n})\nexport class CheckboxComponent extends AbstractFormControl implements OnInit, ControlValueAccessor {\n  defaultErrorMessage: string = '';\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() required: boolean = false;  // TOBE removed duing MSP stablization - then update MSP to use form control version\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n  };\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setCheckboxVal(event: boolean) {\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  writeValue(value: any): void {\n    if ( value !== undefined || value === null ) {\n      this.data = value;\n    }\n  }\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n  {{_defaultErrMsg.required}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{_defaultErrMsg.required}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:24\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n})\nexport class CityComponent extends AbstractFormControl implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlength: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() placeholder: string = 'City name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  };\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: string ) {\n    this.city = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: string ): void {\n    if ( value !== undefined ) {\n      this.city = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonAttachmentJson.html":{"url":"interfaces/CommonAttachmentJson.html","title":"interface - CommonAttachmentJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonAttachmentJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attachmentDocumentType\n                                \n                                \n                                        attachmentOrder\n                                \n                                \n                                        attachmentUuid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentDocumentType\n                                    \n                                \n                                \n                                    \n                                        attachmentDocumentType:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentOrder\n                                    \n                                \n                                \n                                    \n                                        attachmentOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentUuid\n                                    \n                                \n                                \n                                    \n                                        attachmentUuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                documentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileContent?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fileContent\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                (optional) The base64 of an image. See fileContent property.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:54\n                            \n                        \n\n                \n                    \n                        ContentType should generally match the MIME type, but can be set as needed by application.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:47\n                            \n                        \n\n                \n                    \n                        The base64 content of an image.  Must already be base64 or some other stringable data-type.\nYou should be able to do  to render the image.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:73\n                \n            \n\n\n            \n                \n                    Returns the JSON of an image ready to be submitted to the API.  You may\nhave to set attachmentOrder before calling this.\n\n\n                    \n                        Returns :         CommonAttachmentJson\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:97\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:21\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum CommonLogEvents {\n  navigation = 'navigation',\n  error = 'error',\n  submission = 'submission'\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: CommonLogEvents.error,\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  // TODO: Remove moment dependency\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmTemplateComponent.html":{"url":"components/ConfirmTemplateComponent.html","title":"component - ConfirmTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-confirm-template\n            \n\n            \n                styleUrls\n                ./confirm-template.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-template.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayIcon\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    successCode\n                                \n                                \n                                    errorCode\n                                \n                                \n                                    warningCode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayIcon\n                    \n                \n                \n                    \n                        Type :         ApiStatusCodes\n\n                    \n                \n                \n                    \n                        Default value : ApiStatusCodes.SUCCESS\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        successCode\n                    \n                \n\n                \n                    \n                        getsuccessCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorCode\n                    \n                \n\n                \n                    \n                        geterrorCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        warningCode\n                    \n                \n\n                \n                    \n                        getwarningCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Base } from '../../models/base';\n\n\nexport enum ApiStatusCodes {\n  SUCCESS = '0',\n  ERROR = '1',\n  WARNING = '2'\n}\n\n@Component({\n  selector: 'common-confirm-template',\n  templateUrl: './confirm-template.component.html',\n  styleUrls: ['./confirm-template.component.scss']\n})\nexport class ConfirmTemplateComponent extends Base {\n\n  @Input() displayIcon: ApiStatusCodes = ApiStatusCodes.SUCCESS;\n\n  constructor() {\n    super();\n  }\n\n  // Status codes\n  get successCode() {\n    return ApiStatusCodes.SUCCESS;\n  }\n\n  get errorCode() {\n    return ApiStatusCodes.ERROR;\n  }\n\n  get warningCode() {\n    return ApiStatusCodes.WARNING;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n  \n\n\n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Container class contains the basic functionality for containers.\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            Example of how to use Container\n\nexport class RegistrationContainerComponent extends Container\n      implements AfterViewInit, OnDestroy {\n\nconstructor( private headerService: HeaderService,\n        private pageStateService: PageStateService,\n        protected  containerService: ContainerService) {\nsuper( containerService );\nthis.setProgressSteps(pages);\nthis.pageStateService.setPages( pages, PRACTITIONER_REGISTRATION_PAGES );\nthis.headerService.setTitle('Practitioner Assignment to Medical Services Plan Facility for Business Cost Premium');\n}\n\nngAfterViewInit() {\nthis.subscribeFormBar();\n}\n\nngOnDestroy() {\nthis.unsubscribeFormBar();\n}\n...\n}\n\nhtml would be:\n\n\n\n\n\n\n\n\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                isLoading\n                            \n                            \n                                progressSteps\n                            \n                            \n                                submitLabel\n                            \n                            \n                                useDefaultColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                continue\n                            \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                            \n                                    Protected\n                                subscribeFormBar\n                            \n                            \n                                    Protected\n                                unsubscribeFormBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(containerService?: ContainerService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/container.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containerService\n                                                  \n                                                        \n                                                                        ContainerService\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:60\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : DefaultSubmitLabel\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDefaultColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:63\n                            \n                        \n\n                \n                    \n                        Observables for form bar \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:75\n                \n            \n\n\n            \n                \n                    Use when form bar is part of the container\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:83\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            subscribeFormBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeFormBar()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:103\n                \n            \n\n\n            \n                \n                    Subscribe to form bar observables - Called in the AfterViewInit\nUse when form bar is part of the container\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            unsubscribeFormBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeFormBar()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:133\n                \n            \n\n\n            \n                \n                    Unsubscribe to form bar observables  - Called in the onDestroy()\nUse when form bar is part of the container\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\nimport { ContainerService, DefaultSubmitLabel } from '../services/container.service';\nimport { Subscription } from 'rxjs';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/**\n * Container class contains the basic functionality for containers.\n *\n * @example\n *  Example of how to use Container\n *\n *      export class RegistrationContainerComponent extends Container\n *                   implements AfterViewInit, OnDestroy {\n *\n *        constructor( private headerService: HeaderService,\n *                     private pageStateService: PageStateService,\n *                     protected  containerService: ContainerService) {\n *          super( containerService );\n *          this.setProgressSteps(pages);\n *          this.pageStateService.setPages( pages, PRACTITIONER_REGISTRATION_PAGES );\n *          this.headerService.setTitle('Practitioner Assignment to Medical Services Plan Facility for Business Cost Premium');\n *        }\n *\n *        ngAfterViewInit() {\n *          this.subscribeFormBar();\n *        }\n *\n *        ngOnDestroy() {\n *          this.unsubscribeFormBar();\n *        }\n *        ...\n *      }\n *\n * html would be:\n *\n *    \n *      \n *    \n *    \n *      \n *    \n *    \n *\n * @export\n *\n */\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /** Observables for form bar */\n  useDefaultColor: boolean = true;\n  submitLabel: string = DefaultSubmitLabel;\n  isLoading: boolean = false;\n\n  private _subscriptions: Subscription[];\n\n  constructor( protected containerService?: ContainerService ) {\n  }\n\n  /**\n   * Use when form bar is part of the container\n   */\n  continue() {\n    this.containerService.submitButtonClicked();\n  }\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n    // Interface for wizard progress items\n    this.progressSteps = pageRoutes.map(page => {\n      if (page.path !== '') {\n        return {\n          title: this.convertRouteToTitle(page.path),\n          route: page.path\n        };\n      }\n    }).filter(x => x);\n  }\n\n  /**\n   * Subscribe to form bar observables - Called in the AfterViewInit\n   * Use when form bar is part of the container\n   */\n  protected subscribeFormBar() {\n    if ( this.containerService ) {\n\n      this._subscriptions = [\n        this.containerService.$useDefaultColor\n        .subscribe(\n          (async (defaultColor) => {\n            this.useDefaultColor = await defaultColor;\n            // console.log( 'defaultColor: ', this.useDefaultColor );\n        })),\n        this.containerService.$submitLabel\n        .subscribe(\n          (async (label) => {\n            this.submitLabel = await label;\n            // console.log( 'button label: ', this.submitLabel );\n        })),\n        this.containerService.$isLoading\n        .subscribe(\n          (async (isLoading) => {\n            this.isLoading = await isLoading;\n            // console.log( 'isLoading: ', this.isLoading );\n        }))\n      ];\n    }\n  }\n\n  /**\n   * Unsubscribe to form bar observables  - Called in the onDestroy()\n   * Use when form bar is part of the container\n   */\n  protected unsubscribeFormBar() {\n    this._subscriptions.forEach( x => x.unsubscribe() );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContainerService.html":{"url":"injectables/ContainerService.html","title":"injectable - ContainerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContainerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/container.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $continueBtn\n                            \n                            \n                                $continueBtnSubject\n                            \n                            \n                                $isLoading\n                            \n                            \n                                $isLoadingSubject\n                            \n                            \n                                $submitLabel\n                            \n                            \n                                $submitLabelSubject\n                            \n                            \n                                $useDefaultColor\n                            \n                            \n                                $useDefaultColorSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsLoading\n                            \n                            \n                                setSubmitLabel\n                            \n                            \n                                setUseDefaultColor\n                            \n                            \n                                submitButtonClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/container.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIsLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetIsLoading(isLoading: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/container.service.ts:35\n                \n            \n\n\n            \n                \n                    If no parameter is passed, it sets the spinner active \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    isLoading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubmitLabel\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubmitLabel(label: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/container.service.ts:25\n                \n            \n\n\n            \n                \n                    If no parameter is passed, the default label is 'Continue' \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DefaultSubmitLabel\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUseDefaultColor\n                        \n                        \n                    \n                \n            \n            \n                \nsetUseDefaultColor(defaultColor: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/container.service.ts:30\n                \n            \n\n\n            \n                \n                    If no parameter is passed, it uses the default color \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    defaultColor\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitButtonClicked\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitButtonClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/container.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $continueBtn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.$continueBtnSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $continueBtnSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.$isLoadingSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $isLoadingSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject( false )\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $submitLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.$submitLabelSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $submitLabelSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject( DefaultSubmitLabel )\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $useDefaultColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.$useDefaultColorSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $useDefaultColorSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject( true )\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nexport const DefaultSubmitLabel: string = 'Continue';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContainerService {\n\n  $isLoadingSubject: BehaviorSubject = new BehaviorSubject( false );\n  $submitLabelSubject: BehaviorSubject = new BehaviorSubject( DefaultSubmitLabel );\n  $useDefaultColorSubject: BehaviorSubject = new BehaviorSubject( true );\n  $continueBtnSubject: Subject = new Subject();\n\n  // Observables\n  $isLoading = this.$isLoadingSubject.asObservable();\n  $submitLabel = this.$submitLabelSubject.asObservable();\n  $continueBtn = this.$continueBtnSubject.asObservable();\n  $useDefaultColor = this.$useDefaultColorSubject.asObservable();\n\n  constructor() { }\n\n  /** If no parameter is passed, the default label is 'Continue' */\n  setSubmitLabel( label: string  = DefaultSubmitLabel ) {\n    this.$submitLabelSubject.next( label );\n  }\n\n  /** If no parameter is passed, it uses the default color */\n  setUseDefaultColor( defaultColor: boolean = true ) {\n    this.$useDefaultColorSubject.next( defaultColor );\n  }\n\n  /** If no parameter is passed, it sets the spinner active */\n  setIsLoading( isLoading: boolean = true ) {\n    this.$isLoadingSubject.next( isLoading );\n  }\n\n  submitButtonClicked() {\n    this.$continueBtnSubject.next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../models/error-message.interface';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n})\nexport class CountryComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() errorMessage: ErrorMessage;\n  @Input() placeholder: string = 'Please select a country';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, periods, apostrophes and blank characters.',\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/datepicker/datepicker.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\nThis component reports the following errors.\n    required\n    dayOutOfRange\n    yearDistantPast\n    yearDistantFuture\n    noFutureDatesAllowed\n    invalidValue\n  These messages can be changed by updated messages using the errorMessages interface/\n  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                            Optional\n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:92\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:97\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:71\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:77\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:61\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:63\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultPageGuardService.html":{"url":"injectables/DefaultPageGuardService.html","title":"injectable - DefaultPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/default-page-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Default page guard service, ByPassGuards & StartPageUrl are injected only if not extending service\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            providers: [\n          ...\n         { provide: ByPassGuards, useValue: environment.bypassGuards },\n         { provide: StartPageUrl, useValue: CREATE_FACILITY_PAGES.HOME.fullpath },\n         DefaultPageGuardService\n         { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n         LoadPageGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bypassGuards\n                            \n                            \n                                startPageUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                canNavigateToUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pageStateService: PageStateService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/default-page-guard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageStateService\n                                                  \n                                                        \n                                                                        PageStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/default-page-guard.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canNavigateToUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canNavigateToUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/default-page-guard.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/default-page-guard.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startPageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/default-page-guard.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { PageStateService } from './page-state.service';\nimport { AbstractPageGuardService } from './abstract-page-guard.service';\n\nexport const START_PAGE_URL = new InjectionToken( 'StartPageUrl' );\nexport const BYPASS_GUARDS = new InjectionToken( 'ByPassGuards' );\n\n/**\n * Default page guard service, ByPassGuards & StartPageUrl are injected only if not extending service\n *\n *  @example\n *\n *                providers: [\n *                         ...\n *                        { provide: ByPassGuards, useValue: environment.bypassGuards },\n *                        { provide: StartPageUrl, useValue: CREATE_FACILITY_PAGES.HOME.fullpath },\n *                        DefaultPageGuardService\n *                        { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n *                        LoadPageGuardService\n *                ]\n *\n\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultPageGuardService implements AbstractPageGuardService {\n\n  bypassGuards: boolean = false;\n  startPageUrl: string = '';\n\n  constructor( private pageStateService: PageStateService, private injector: Injector ) {}\n\n  public canBypassGuards(): boolean {\n\n    const bypass = this.injector.get( BYPASS_GUARDS );\n    console.log( 'canBypassGuards: injected value = ', bypass );\n\n    return bypass ? bypass : this.bypassGuards;\n  }\n\n  public canNavigateToUrl( url: string ): boolean {\n\n    const startUrl = this.injector.get( START_PAGE_URL );\n    const _startUrl = startUrl ? startUrl : this.startPageUrl;\n    const containStartUrl: boolean = url.includes( _startUrl );\n\n    console.log( 'canNavigateToUrl: injected value = ', startUrl, url );\n\n    // Empty list allow navigation to first page\n    if ( this.pageStateService.pageListIsClear() ) {\n\n      // Trying to navigate to start page\n      if ( containStartUrl ) {\n        return true;\n      }\n\n      // Redirect to start page\n      this.pageStateService.navigateByUrl( _startUrl );\n      return false;\n    }\n\n    return this.pageStateService.canNavigateToPage( url );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends Base implements ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n\n  {{label}} is required.\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{label}} is required.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DuplicateCheckDirective.html":{"url":"directives/DuplicateCheckDirective.html","title":"directive - DuplicateCheckDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DuplicateCheckDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDuplicateCheck]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dupList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dupList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:32\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// Local function\nfunction checkForDuplicates( control: AbstractControl,\n                             dupList: string[] ): { [key: string]: boolean } | null {\n  // Duplicate check\n  if ( dupList && dupList.length ) {\n\n  const duplicate = dupList.find( x => x === control.value );\n  return (duplicate ? { 'duplicate': true } : null);\n  }\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonDuplicateCheck( dupList: string[] ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return checkForDuplicates( control, dupList );\n  };\n}\n\n@Directive({\n  selector: '[commonDuplicateCheck]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true}\n    ]\n})\nexport class DuplicateCheckDirective implements Validator {\n\n  @Input() dupList: string[];\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n  return checkForDuplicates( control, this.dupList );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/email/email.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-email\n            \n\n            \n                styleUrls\n                ./email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _asciiPrintable\n                            \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Private\n                                _formatCriteria\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                email\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/email/email.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _asciiPrintable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^[ -~]+$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`,\n    invalidChars: `${LabelReplacementTag} must contain letters, numbers and/or symbols(e.g. #, @, !).`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _formatCriteria\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^(\\S+)@(\\S+)\\.(\\S+)$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  OnInit} from '@angular/core';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Email';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'email_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.email = val;\n    }\n  }\n  get value() {\n    return this.email;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  email: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`,\n    invalidChars: `${LabelReplacementTag} must contain letters, numbers and/or symbols(e.g. #, @, !).`\n  };\n\n  private _formatCriteria: RegExp = /^(\\S+)@(\\S+)\\.(\\S+)$/;\n  private _asciiPrintable: RegExp = /^[ -~]+$/;\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n    this.email = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.email = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    if ( this.email ) {\n\n      // console.log( 'email: ', this.email );\n      let result = this._formatCriteria.test( this.email );\n      // console.log( 'formatCriteria: ', result );\n      if ( result ) {\n        result = this._asciiPrintable.test( this.email );\n        // console.log( 'asciiPrintable: ', result );\n        return result ? null : { invalidChars: true };\n      }\n      return { invalidEmail: true };\n    }\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidEmail}}\n  \n  \n    {{_defaultErrMsg.invalidChars}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidEmail}}        {{_defaultErrMsg.invalidChars}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorContainerComponent.html":{"url":"components/ErrorContainerComponent.html","title":"component - ErrorContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/error-container/error-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-error-container\n            \n\n            \n                styleUrls\n                ./error-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'common-error-container',\n  templateUrl: './error-container.component.html',\n  styleUrls: ['./error-container.component.scss']\n})\nexport class ErrorContainerComponent {\n\n  @Input() displayError: boolean = false;\n\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/error-message.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/error-message.interface.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const LabelReplacementTag = '{label}';\nexport interface ErrorMessage {\n  required?: string;\n  [key: string]: string;\n}\n\n// To catch all occurances of the label tag in the message\nconst regExpLabel = new RegExp( LabelReplacementTag, 'g' );\n\n// Function only used with library\nexport function replaceLabelTag( str: string, value: string ) {\n  return str.replace( regExpLabel, value );\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\n// const pdfjs = import('pdfjs-dist/build/pdf');\n// const pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\nimport { pdfJsWorker } from 'pdfjs-dist/build/pdf.worker.entry';\nPDFJS.workerSrc=pdfJsWorker;\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['images'] && (\n            (changes['images'].currentValue && changes['images'].currentValue.length === 0)\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    // console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n\n    /** Opens the file upload dialog from the browser. */\n    openFileDialog() {\n        console.log('opening file dialog');\n        this.browseFileRef.nativeElement.click();\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                scrollToErrorsOnSubmit\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollToErrorsOnSubmit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { scrollToError } from '../../../helpers/scroll-helpers';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  // TODO: Figure out why this is required.\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  @Input() scrollToErrorsOnSubmit: boolean = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n\n      if (this.scrollToErrorsOnSubmit) {\n        // Scroll to error after 50ms, give time for errors to display etc.\n        // This timeout is outside of Angular change detection.\n        setTimeout(scrollToError, 50);\n      }\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'true')\n            .set('interpolation', 'adaptive')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress.replace('--', '-'),\n              city,\n              street: street.replace('--', '-'),\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeocoderInputComponent.html":{"url":"components/GeocoderInputComponent.html","title":"component - GeocoderInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeocoderInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-geocoder-input\n            \n\n            \n                styleUrls\n                ./geocoder-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geocoder-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                hasNoResults\n                            \n                            \n                                    Public\n                                isTypeaheadLoading\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                    Public\n                                selectedAddress\n                            \n                            \n                                    Public\n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onLoading\n                            \n                            \n                                onNoResults\n                            \n                            \n                                onSelect\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                stripStringToMaxLength\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                label\n                            \n                            \n                                maxlength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressChange\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Address Lookup'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoading\n                        \n                        \n                    \n                \n            \n            \n                \nonLoading(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoResults\n                        \n                        \n                    \n                \n            \n            \n                \nonNoResults(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            stripStringToMaxLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stripStringToMaxLength(str: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasNoResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:53\n                            \n                        \n\n                \n                    \n                        Geocoder API has returned and has no results, an empty array. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTypeaheadLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:51\n                            \n                        \n\n                \n                    \n                        Is the Geocoder API request still in progress? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:49\n                            \n                        \n\n                \n                    \n                        The string in the box the user has typed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:61\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:57\n                            \n                        \n\n                \n                    \n                        Similar to this.address, but we can null it when user is searching for new addresses \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:59\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, SimpleChanges, OnChanges, Optional, Self } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, tap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport { Base } from '../../models/base';\nimport { GeocoderService, GeoAddressResult } from '../../services/geocoder.service';\nimport { CANADA } from '../country/country.component';\nimport { BRITISH_COLUMBIA } from '../province/province.component';\nimport { Address } from '../../models/address.model';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\n\n\n/**\n * @deprecated Please use `address-validator` component instead.\n * \n * For TemplateForms, pass in an Address and recieve an Address\n * @example\n *           \n *           \n *\n * @note\n * For ReactiveForms, pass in a string and recieve a string.  If you need the\n * Address object you can use (select) in addition.\n *\n * @example\n *           \n *          \n */\n@Component({\n  selector: 'common-geocoder-input',\n  templateUrl: './geocoder-input.component.html',\n  styleUrls: ['./geocoder-input.component.scss']\n})\nexport class GeocoderInputComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Address Lookup';\n  @Input() address: string;\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  @Output() select: EventEmitter = new EventEmitter();\n\n  @Input() maxlength: string = '255';\n\n  /** The string in the box the user has typed */\n  public search: string;\n  /** Is the Geocoder API request still in progress? */\n  public isTypeaheadLoading: boolean = false;\n  /** Geocoder API has returned and has no results, an empty array. */\n  public hasNoResults: boolean = false;\n  public hasError: boolean = false;\n\n  /** Similar to this.address, but we can null it when user is searching for new addresses */\n  public selectedAddress: boolean = false;\n  /** The list of results, from API, that is passed to the typeahead list */\n  public typeaheadList$: Observable; // Result from GeoCoderService address lookup\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n  constructor(@Optional() @Self() public controlDir: NgControl, private geocoderService: GeocoderService, private cd: ChangeDetectorRef) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => this.geocoderService.lookup(searchPhrase)),\n      catchError(err => this.onError(err))\n    );\n\n  }\n\n  onError(err): Observable {\n\n    this.hasError = true;\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onLoading(val: boolean): void {\n    // console.log( 'onLoading - geocoder' , val );\n    this.isTypeaheadLoading = val;\n  }\n\n  // Note - this will fire after an onError as well\n  onNoResults(val: boolean): void {\n\n   //  console.log( 'No results - geocoder' , val );\n\n    // If we have results, the error has resolved (e.g. network has re-connected)\n    if (val === false) {\n      this.hasError = false;\n    }\n\n    this.hasNoResults = val;\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n\n    // console.log( 'onSelect: ', event );\n    const data: GeoAddressResult = event.item;\n\n    // Output string to FormControl. If street is more than the max length shorten\n    const stripped = this.stripStringToMaxLength(data.street);\n\n    const addr = new Address();\n    addr.city = data.city;\n    // GeoCoder is only for BC, Canada, values can be set.\n    addr.country = CANADA; // Default country is Canda\n    addr.province = BRITISH_COLUMBIA;  // Default province is BC\n    addr.street = stripped;\n    // Save and emit Address for (select)\n    this.selectedAddress = true;\n    this.select.emit(addr);\n\n    this._onChange(stripped);\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    // Filter out 'enter' and other similar keyboard events that can trigger\n    // when user is selecting a typeahead option instead of entering new text.\n    // Without this filter, we do another HTTP request + force disiplay the UI\n    // for now reason\n    if (event.keyCode === 13 || event.keyCode === 9) {  // enter & tab\n      return;\n    }\n    // Clear out selection\n    this.selectedAddress = false;\n    this.searchText$.next(this.search);\n  }\n\n  onBlur(event): void {\n    this._onTouched();\n    this._onChange(this.search);\n  }\n\n\n  writeValue( value: any ): void {\n    if ( value  !== undefined ) {\n      this.search = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  private stripStringToMaxLength(str: string) {\n    const maxlength = parseInt(this.maxlength, 10);\n    return str.slice(0, maxlength);\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n  \n     &mdash; Loading\n      \n    \n  \n\n  \n    \n  \n\n\n        \n\n\n\n     &mdash; Selected\n        \n    \n\n\n\n     &mdash; No Results\n        \n    \n\n\n\n\n     &mdash; Error\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       — Loading                                 — Selected                 — No Results                 — Error            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'GeocoderInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Protected\n                                ADDRESS_URL\n                            \n                            \n                                    Protected\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Protected\n                                processResponse\n                            \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                            \n                                    Protected\n                                uploadAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:52\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:24\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:61\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:40\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadAttachment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAttachment(relativeUrl: string, attachment: CommonImage)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:75\n\n                \n            \n\n\n            \n                \n                    Uploads an individual attachment.  All you need to do is set the url.\nNote: urls often include UUIDs, so this must be an application decision.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    relativeUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL to hit, must include UUIDs of application and CommonImage\n\n                                    \n                                \n                                \n                                    attachment\n                                    \n                                                CommonImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CommonImage to upload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:18\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'true')\n            .set('interpolation', 'adaptive')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress.replace('--', '-'),\n              city,\n              street: street.replace('--', '-'),\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                printLogoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                shouldShowPrintLogo\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        printLogoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/logo_print.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        shouldShowPrintLogo\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n  @Input() shouldShowPrintLogo: boolean = false;\n  @Input() printLogoSrc: string = 'assets/logo_print.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioItems.html":{"url":"interfaces/IRadioItems.html","title":"interface - IRadioItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRadioItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/radio/radio.component.ts\n        \n\n            \n                Description\n            \n            \n                RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value is of type IRadioItems[].\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n  // TODO: Make value generic \n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: any ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                                \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, OnInit} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger } from '../../services/logger.service';\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_SUPPBEN_MAINTENANCE_FLAG: string;\n  SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_SUPPBEN_MAINTENANCE_START: string;\n  SPA_ENV_SUPPBEN_MAINTENANCE_END: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_FLAG: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .\n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    /**\n     * Used in cases where we have custom form controls inside NgContent that we\n     * wish to be satisifed before user can continue through modal.\n     */\n    @Input() disableContinue: boolean = false;\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n\n    // public maintenanceFlag: string ;\n\n    // TODO: This should eventually be pulled out of the common library as it pertains to MSP-specific code.\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([\n      ['ACL', '{\"SPA_ENV_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_ACL_MAINTENANCE_MESSAGE\":\"\"}'],\n      ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'],\n      ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE\":\"\"}'],\n      ['SUPPBEN', '{\"SPA_ENV_SUPPBEN_MAINTENANCE_START\":\"\",\"SPA_ENV_SUPPBEN_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\",\"SPA_ENV_SUPPBEN_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\"}'],\n    ]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    // TODO: This should eventually be pulled out of the common library as it pertains to MSP-specific code.\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_SUPPBEN_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n\n  isContinueDisabled(): boolean {\n    return !this.agreeCheck || this.disableContinue;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoadPageGuardService.html":{"url":"guards/LoadPageGuardService.html","title":"guard - LoadPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoadPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/load-page-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Load Page Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPageGuardService\nSetup AbstractPageGuardService in NgModule providers, to useExisting the service from previous step.\nAdd this LoadPageGuardService to same providers from previous step.\nConfigure routes to use LoadPageGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"PageStateService\")\n\nYou must make sure to setup AbstractPageGuardService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\nLoadPageGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [LoadPageGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.pageService.setPageIncomplete(); }\ncontinue() { this.pageService.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPageGuardService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/load-page-guard.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPageGuardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPageGuardService } from './abstract-page-guard.service';\n\n\n/**\n * Use this service to implement Load Page Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPageGuardService`\n * 2. Setup AbstractPageGuardService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this LoadPageGuardService to same providers from previous step.\n * 4. Configure routes to use LoadPageGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"PageStateService\")\n *\n *\n * You must make sure to setup AbstractPageGuardService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n *                        LoadPageGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [LoadPageGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.pageService.setPageIncomplete(); }\n *                continue() { this.pageService.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadPageGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router, private service: AbstractPageGuardService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Logic within method is specific to application\n     */\n    return this.service.canNavigateToUrl(pageUrl);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Maxlengths.html":{"url":"interfaces/Maxlengths.html","title":"interface - Maxlengths","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Maxlengths\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false; // This should eventually be refactored to `disableAddressValidator`. Leaving it for compatibility.\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n  @Input() addressServiceUrl: string;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  get useAddressValidator(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  selectSuggestedAddress(address: Address) {\n    if (!address.street && !address.city && !address.postal) {\n      return;\n    }\n    this.addr.addressLine1 = address.street;\n    this.addr.city = address.city;\n    this.addr.postal = address.postal;\n    if (!this.bcOnly) {\n      this.addr.province = address.province;\n    }\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoHCommonLibraryError.html":{"url":"classes/MoHCommonLibraryError.html","title":"class - MoHCommonLibraryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoHCommonLibraryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/helpers/library-error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/helpers/library-error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MoHCommonLibraryError extends Error {\n    constructor(message?: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: LabelReplacementTag + ' must begin with a letter and cannot include special ' +\n      'characters except hyphens, periods, apostrophes and blank characters.',\n    invalidChar: `${LabelReplacementTag} must be a letter.` // for Initials when maxlength is 1\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:34\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  OnInit} from '@angular/core';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends AbstractFormControl implements OnInit, ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: LabelReplacementTag + ' must begin with a letter and cannot include special ' +\n      'characters except hyphens, periods, apostrophes and blank characters.',\n    invalidChar: `${LabelReplacementTag} must be a letter.` // for Initials when maxlength is 1\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n    this.nameStr = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlength, 10 );\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const maxlen = Number.parseInt( this.maxlength, 10 );\n    if ( this.nameStr ) {\n      if ( maxlen > 1 ) {\n        // Valid characters for name\n        const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n        return criteria.test( this.nameStr ) ? null : { 'invalid': true };\n      } else {\n\n        // Only letters for initials\n        const letters: RegExp = RegExp( '[a-zA-Z]*$' );\n        return letters.test( this.nameStr ) ? null : { 'invalidChar': true };\n      }\n    }\n    return null;\n   }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalid}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalid}}        {{_defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageList.html":{"url":"interfaces/PageList.html","title":"interface - PageList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/page-state.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        isComplete\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/page-state.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\n\nexport interface PageList {\n  index: number;\n  path: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageStateService {\n\n  pageList: PageList[] = [];\n\n  constructor( protected router: Router ) { }\n\n  setPages( arr: Route[],\n            routeListConst: any,\n            fn?: (x: any) => {[key: string]: any} ): PageList[] {\n\n    if ( this.pageList && !this.pageList.length ) {\n\n      const routeConst = Object.keys( routeListConst ).map( x => routeListConst[x] );\n\n      let cnt = 0;\n      this.pageList = arr.filter((itm: any) => !itm.redirectTo)\n        .map((itm: any) => {\n          const val = routeConst.find( x => x.path === itm.path );\n\n          cnt = cnt + 1; // count for indices\n\n          // Page List to be returned\n          let obj = {\n            index: cnt,\n            path: val.path,\n            isComplete: false,\n          };\n\n          if ( fn ) {\n            obj = Object.assign( obj, fn( val ) );\n          }\n          return obj;\n        });\n    }\n    return this.pageList;\n  }\n\n  // Returns index parameter value\n  findIndex( url: string = null ): number {\n    let idx = 0;\n    if ( this.pageList ) {\n      const obj = this._find(url ? url : this.router.url);\n      if ( obj ) {\n        idx = obj.index;\n      }\n    }\n    return idx;\n  }\n\n  getPageAtIndex( idx: number ): PageList  | null {\n    const index = idx - 1;\n    if ( this.pageList && index >= 0 && this.pageList.length > index ) {\n      return this.pageList[index];\n    }\n    return null;\n  }\n\n  setPageIncomplete( url: string = null ) {\n    const obj = this._find(url ? url : this.router.url);\n    if ( obj ) {\n      obj.isComplete = false;\n      // Set future pages to not complete\n      this.pageList.map( x => {\n        if ( obj.index  {\n        x.isComplete = false;\n    });\n  }\n\n\n  pageListIsClear(): boolean {\n    let isClear = true;\n    if ( this.pageList.length > 0 ) {\n      isClear = this.pageList.every( x  => x.isComplete === false );\n    }\n    return isClear;\n  }\n\n\n  // Redirect\n  navigateByUrl( path: string ) {\n    this.router.navigateByUrl( path );\n  }\n\n  // Find item in list\n  private _find( path: string ) {\n    return this.pageList.find( x => path.includes(x.path) || path.endsWith(x.path));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:16\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/* TODO: Revise - does not work quite correct when there is no landing page.\n * @depreciated\n */\n\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n// IMPROVEMENT: Add a 'flex' @Input(), that adds display flex.  Importantly, it\n// must set flex on the wrapper/row divs in the html.  There are some cases\n// (like SiteReg) where having flex layout is beneficial.  My first suggestion\n// was to simply style the , but the problem is that we\n// need flex on the child elements of page-section (that still wrap ng-content).\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageStateService.html":{"url":"injectables/PageStateService.html","title":"injectable - PageStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/page-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _find\n                            \n                            \n                                canNavigateToPage\n                            \n                            \n                                clearCompletePages\n                            \n                            \n                                findIndex\n                            \n                            \n                                getPageAtIndex\n                            \n                            \n                                navigateByUrl\n                            \n                            \n                                pageListIsClear\n                            \n                            \n                                setPageComplete\n                            \n                            \n                                setPageIncomplete\n                            \n                            \n                                setPages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/page-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _find(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canNavigateToPage\n                        \n                        \n                    \n                \n            \n            \n                \ncanNavigateToPage(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearCompletePages\n                        \n                        \n                    \n                \n            \n            \n                \nclearCompletePages()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findIndex\n                        \n                        \n                    \n                \n            \n            \n                \nfindIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageAtIndex(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageList | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateByUrl\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateByUrl(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pageListIsClear\n                        \n                        \n                    \n                \n            \n            \n                \npageListIsClear()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageComplete(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageIncomplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPages\n                        \n                        \n                    \n                \n            \n            \n                \nsetPages(arr: Route[], routeListConst: any, fn?: (x?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    routeListConst\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageList[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageList[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/page-state.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\n\nexport interface PageList {\n  index: number;\n  path: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageStateService {\n\n  pageList: PageList[] = [];\n\n  constructor( protected router: Router ) { }\n\n  setPages( arr: Route[],\n            routeListConst: any,\n            fn?: (x: any) => {[key: string]: any} ): PageList[] {\n\n    if ( this.pageList && !this.pageList.length ) {\n\n      const routeConst = Object.keys( routeListConst ).map( x => routeListConst[x] );\n\n      let cnt = 0;\n      this.pageList = arr.filter((itm: any) => !itm.redirectTo)\n        .map((itm: any) => {\n          const val = routeConst.find( x => x.path === itm.path );\n\n          cnt = cnt + 1; // count for indices\n\n          // Page List to be returned\n          let obj = {\n            index: cnt,\n            path: val.path,\n            isComplete: false,\n          };\n\n          if ( fn ) {\n            obj = Object.assign( obj, fn( val ) );\n          }\n          return obj;\n        });\n    }\n    return this.pageList;\n  }\n\n  // Returns index parameter value\n  findIndex( url: string = null ): number {\n    let idx = 0;\n    if ( this.pageList ) {\n      const obj = this._find(url ? url : this.router.url);\n      if ( obj ) {\n        idx = obj.index;\n      }\n    }\n    return idx;\n  }\n\n  getPageAtIndex( idx: number ): PageList  | null {\n    const index = idx - 1;\n    if ( this.pageList && index >= 0 && this.pageList.length > index ) {\n      return this.pageList[index];\n    }\n    return null;\n  }\n\n  setPageIncomplete( url: string = null ) {\n    const obj = this._find(url ? url : this.router.url);\n    if ( obj ) {\n      obj.isComplete = false;\n      // Set future pages to not complete\n      this.pageList.map( x => {\n        if ( obj.index  {\n        x.isComplete = false;\n    });\n  }\n\n\n  pageListIsClear(): boolean {\n    let isClear = true;\n    if ( this.pageList.length > 0 ) {\n      isClear = this.pageList.every( x  => x.isComplete === false );\n    }\n    return isClear;\n  }\n\n\n  // Redirect\n  navigateByUrl( path: string ) {\n    this.router.navigateByUrl( path );\n  }\n\n  // Find item in list\n  private _find( path: string ) {\n    return this.pageList.find( x => path.includes(x.path) || path.endsWith(x.path));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiDobFormat\n                            \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                                \n                                    fullname\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiDobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyyMMdd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyy/MM/dd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:18\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:86\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:30\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fullname\n                    \n                \n\n                \n                    \n                        getfullname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:67\n                                \n                            \n                    \n                        \n                                Returns the person's full name - first middle last name concatenated together \n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { format, startOfToday, differenceInYears } from 'date-fns';\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'yyyy/MM/dd';\n  public apiDobFormat = 'yyyyMMdd';\n\n  // Initialize dob to nulls - To be removed\n  public dateOfBirth: Date;\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.apiDobFormat ) : null;\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.dobFormat ) : null;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Returns the person's full name - first middle last name concatenated together */\n  get fullname() {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.middleName ) {\n      _name = _name ? _name.concat( ' ' + this.middleName ) : this.middleName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): number {\n    return differenceInYears( this.dateOfBirth, startOfToday() );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth = object.dateOfBirth;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                mask\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:101\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format A1A 1A1',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:29\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.constants';\nimport { Base } from '../../models/base';\nimport { ErrorMessage } from '../../../public_api';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format A1A 1A1',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n     //console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} {{defaultErrMsg.required}}\n    \n    \n      {{defaultErrMsg.pattern}}\n    \n    \n      {{defaultErrMsg.invalidBCPostal}}\n    \n    \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} {{defaultErrMsg.required}}              {{defaultErrMsg.pattern}}              {{defaultErrMsg.invalidBCPostal}}            {{label}} {{defaultErrMsg.invalidChar}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                _value\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                instructionText\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instructionText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :         IRadioItems[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ]\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:70\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:63\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n  // TODO: Make value generic \n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: any ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  {{instructionText}}\n  \n    \n      \n      \n      {{val.label}}\n      \n    \n  \n\n  \n    {{_defaultErrMsg.required}}\n  \n\n\n\n\n  \n    \n  \n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}  {{instructionText}}                        {{val.label}}                  {{_defaultErrMsg.required}}              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyFields.html":{"url":"interfaces/ReadOnlyFields.html","title":"interface - ReadOnlyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyFields\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false; // This should eventually be refactored to `disableAddressValidator`. Leaving it for compatibility.\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n  @Input() addressServiceUrl: string;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  get useAddressValidator(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  selectSuggestedAddress(address: Address) {\n    if (!address.street && !address.city && !address.postal) {\n      return;\n    }\n    this.addr.addressLine1 = address.street;\n    this.addr.city = address.city;\n    this.addr.postal = address.postal;\n    if (!this.bcOnly) {\n      this.addr.province = address.province;\n    }\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:74\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * @deprecated\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SampleImageInterface.html":{"url":"interfaces/SampleImageInterface.html","title":"interface - SampleImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SampleImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sample-modal/sample-modal.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        desc\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleModalComponent.html":{"url":"components/SampleModalComponent.html","title":"component - SampleModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sample-modal/sample-modal.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sample-modal\n            \n\n            \n                styleUrls\n                ./sample-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sample-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sampleModal\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                    Public\n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :         SampleImageInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sampleModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('samplesModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{title}}\n        \n          \n        \n      \n\n      \n        \n          {{image.title}}\n          \n        \n      \n\n      \n        Close\n      \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                        {{image.title}}                                      Close            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SampleModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nAddressValidatorComponent\n\nAddressValidatorComponent\n\nSharedCoreModule -->\n\nAddressValidatorComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nAddressValidatorComponent \n\nAddressValidatorComponent \n\nAddressValidatorComponent  -->\n\nSharedCoreModule->AddressValidatorComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            AddressValidatorComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            AddressValidatorComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\nimport { DuplicateCheckDirective } from './components/duplicate-check/duplicate-check.directive';\nimport { ErrorContainerComponent } from './components/error-container/error-container.component';\nimport { ValidateStreetDirective } from './components/street/validate-street.directive';\nimport { ValidateCityDirective } from './components/city/validate-city.directive';\nimport { ValidateRegionDirective } from './components/validate-region/validate-region.directive';\nimport { ValidatePostalcodeDirective } from './components/postal-code/validate-postalcode.directive';\nimport { SampleModalComponent } from './components/sample-modal/sample-modal.component';\nimport { EmailComponent } from './components/email/email.component';\nimport { ConfirmTemplateComponent } from './components/confirm-template/confirm-template.component';\nimport { GeocoderInputComponent } from './components/geocoder-input/geocoder-input.component';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\nimport { AddressValidatorComponent } from './components/address-validator/address-validator.component';\n\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  XiconButtonComponent,\n  ErrorContainerComponent,\n  SampleModalComponent,\n  EmailComponent,\n  ConfirmTemplateComponent,\n  GeocoderInputComponent,\n  AddressValidatorComponent,\n\n\n  // Directives\n  ValidateNameDirective,\n  DuplicateCheckDirective,\n  ValidateBcPostalDirective,\n  ValidateStreetDirective,\n  ValidateCityDirective,\n  ValidateRegionDirective,\n  ValidatePostalcodeDirective,\n  DateFieldFormatDirective\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList,\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n    \n        Description\n    \n    \n        This component reports the following errors.\n    required\n    invalid\n    duplicate\n  These messages can be changed by updated messages using the errorMessages interface\n  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                    Private\n                                validateSin\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSin()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:45\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\n\n/**\n * This component reports the following errors.\n *    required\n *    invalid\n *    duplicate\n *\n *  These messages can be changed by updated messages using the errorMessages interface\n *  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n */\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends AbstractFormControl implements OnInit {\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  };\n\n  sin: string = '';\n  mask: any;\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlength: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n    }\n  }\n  get value() {\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this.sin = value;\n      this._onChange( value );\n      this.valueChange.emit( value );\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const validateResult = this.validateSin();\n    if ( validateResult ) {\n      return validateResult;\n    }\n    return null;\n   }\n\n   private validateSin(): ValidationErrors | null {\n\n    if ( this.sin && this.sin.trim().length > 0 ) {\n\n      // Init weights and other stuff\n      const weights: number[] = [1, 2, 1, 2, 1, 2, 1, 2, 1];\n      let sum = 0;\n\n      // Clean up string\n      const value = this.sin.trim();\n      this.sin = value\n                  .replace(/_/g, '') // remove underlines\n                  .replace(/\\s/g, ''); // spaces\n\n      // Test for length\n      if (this.sin.length !== 9) {\n        return { 'invalid': true };\n      }\n\n      // Test for string of zeros\n      if ( this.sin === '000000000') {\n        return { 'invalid': true };\n      }\n\n      // Walk through each character\n      for (let i = 0; i  9) {\n          result = result - 9;\n        }\n\n        // add it to our sum\n        sum += result;\n      }\n\n      // The sum must be divisible by 10\n      if (sum % 10 !== 0) {\n        return { 'invalid': true };\n      }\n\n    }\n\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{_defaultErrMsg.required}}\n    \n    \n      {{_defaultErrMsg.invalid}}\n    \n    \n      {{_defaultErrMsg.duplicate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{_defaultErrMsg.required}}              {{_defaultErrMsg.invalid}}              {{_defaultErrMsg.duplicate}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\n// TODO: determine whether this is used or not.  If not use, maybe it can be removed\n//  @deprecated - logic added to validate-postalcode directive\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateCityDirective.html":{"url":"directives/ValidateCityDirective.html","title":"directive - ValidateCityDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateCityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/city/validate-city.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateCity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/validate-city.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateCity: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for  city names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z0-9\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateCity]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true}\n  ]\n})\nexport class ValidateCityDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateCity( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n/**\n * @deprecated\n * @param control\n */\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n/**\n * @deprecated\n */\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePostalcodeDirective.html":{"url":"directives/ValidatePostalcodeDirective.html","title":"directive - ValidatePostalcodeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePostalcodeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePostalcode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bcOnly\n                            \n                            \n                                hasMask\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bcOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:48\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// local function\nfunction validatePC(control: AbstractControl, hasMask: boolean, bcOnly: boolean): { [key: string]: boolean } | null {\n\n  if ( control.value ) {\n\n    if ( hasMask ) {\n      const cdnFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n      if ( !cdnFormat.test( control.value ) ) {\n        return { 'pattern': true };\n      }\n    } else {\n      const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9 ]*$' );\n\n      if ( !criteria.test( control.value ) ) {\n        return  { 'invalidChar': true };\n      }\n    }\n\n    if ( bcOnly ) {\n      // Valid characters for BC postal code\n      const bcFormat: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Z][ ]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$');\n      if ( !bcFormat.test( control.value ) ) {\n        return { 'invalidBCPostal': true };\n      }\n    }\n  }\n  return null;\n}\n\nexport function commonValidatePostalcode( hasMask: boolean, bcOnly: boolean ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return validatePC( control, hasMask , bcOnly);\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePostalcode]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true}\n  ]\n})\nexport class ValidatePostalcodeDirective implements Validator {\n  @Input() hasMask: boolean = true;\n  @Input() bcOnly: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePC( control, this.hasMask , this.bcOnly );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateRegionDirective.html":{"url":"directives/ValidateRegionDirective.html","title":"directive - ValidateRegionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateRegionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/validate-region/validate-region.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateRegion]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/validate-region/validate-region.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateRegion: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for country/province/region names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateRegion]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true}\n  ]\n})\nexport class ValidateRegionDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateRegion( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateStreetDirective.html":{"url":"directives/ValidateStreetDirective.html","title":"directive - ValidateStreetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateStreetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/street/validate-street.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateStreet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/validate-street.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateStreet: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for street\n  */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9#/&\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateStreet]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true}\n  ]\n})\nexport class ValidateStreetDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateStreet( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.endsWith(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\nimport { ContainerService, DefaultSubmitLabel } from '../services/container.service';\nimport { Subscription } from 'rxjs';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/**\n * Container class contains the basic functionality for containers.\n *\n * @example\n *  Example of how to use Container\n *\n *      export class RegistrationContainerComponent extends Container\n *                   implements AfterViewInit, OnDestroy {\n *\n *        constructor( private headerService: HeaderService,\n *                     private pageStateService: PageStateService,\n *                     protected  containerService: ContainerService) {\n *          super( containerService );\n *          this.setProgressSteps(pages);\n *          this.pageStateService.setPages( pages, PRACTITIONER_REGISTRATION_PAGES );\n *          this.headerService.setTitle('Practitioner Assignment to Medical Services Plan Facility for Business Cost Premium');\n *        }\n *\n *        ngAfterViewInit() {\n *          this.subscribeFormBar();\n *        }\n *\n *        ngOnDestroy() {\n *          this.unsubscribeFormBar();\n *        }\n *        ...\n *      }\n *\n * html would be:\n *\n *    \n *      \n *    \n *    \n *      \n *    \n *    \n *\n * @export\n *\n */\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /** Observables for form bar */\n  useDefaultColor: boolean = true;\n  submitLabel: string = DefaultSubmitLabel;\n  isLoading: boolean = false;\n\n  private _subscriptions: Subscription[];\n\n  constructor( protected containerService?: ContainerService ) {\n  }\n\n  /**\n   * Use when form bar is part of the container\n   */\n  continue() {\n    this.containerService.submitButtonClicked();\n  }\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n    // Interface for wizard progress items\n    this.progressSteps = pageRoutes.map(page => {\n      if (page.path !== '') {\n        return {\n          title: this.convertRouteToTitle(page.path),\n          route: page.path\n        };\n      }\n    }).filter(x => x);\n  }\n\n  /**\n   * Subscribe to form bar observables - Called in the AfterViewInit\n   * Use when form bar is part of the container\n   */\n  protected subscribeFormBar() {\n    if ( this.containerService ) {\n\n      this._subscriptions = [\n        this.containerService.$useDefaultColor\n        .subscribe(\n          (async (defaultColor) => {\n            this.useDefaultColor = await defaultColor;\n            // console.log( 'defaultColor: ', this.useDefaultColor );\n        })),\n        this.containerService.$submitLabel\n        .subscribe(\n          (async (label) => {\n            this.submitLabel = await label;\n            // console.log( 'button label: ', this.submitLabel );\n        })),\n        this.containerService.$isLoading\n        .subscribe(\n          (async (isLoading) => {\n            this.isLoading = await isLoading;\n            // console.log( 'isLoading: ', this.isLoading );\n        }))\n      ];\n    }\n  }\n\n  /**\n   * Unsubscribe to form bar observables  - Called in the onDestroy()\n   * Use when form bar is part of the container\n   */\n  protected unsubscribeFormBar() {\n    this._subscriptions.forEach( x => x.unsubscribe() );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n                \n                    \n                        Label to use for accessibility.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MoHCommonLibraryError } from '../../../helpers/library-error';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent implements OnInit {\n\n  /**\n   * Label to use for accessibility.\n   * @required\n   */\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.label) {\n      // todo - change to MohCommmonLibraryError -> test in IE10\n      // throw Error('common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.');\n      const msg = `common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.\n      e.g. \n`; // Intentional to create a blank line between our error and stack trace.\n      throw new MoHCommonLibraryError(msg);\n    }\n  }\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'AddressValidatorComponent', 'selector': 'common-address-validator'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2020-08-25)\n3.1.0 \"moh-common-lib\" (2020-08-25)\nBug Fixes\n\nradio: fix tabbing when component used with reactive forms (87013c3)\nDEMCL-21: Refactored GeoAddressResult to AddressResult. (1467689)\n\nCode Refactoring\n\nremove unused variables (8d6ed18)\nremove unused variables, update test helpers (7d4953b)\n\nDocumentation\n\nregenerate documents (1486527)\nupdate documentation at top of file (6a4319d)\n\nFeatures\n\nDEMCL-21: Added address-validator component. (6eb3ead)\nDEMCL-21: Added more unit tests (9d93167)\nDEMCL-21: Added unit tests. (258d1c3)\nDEMCL-21: Deprecated GeocoverInputComponent. (0ff54eb)\n\nTests\n\nupdate test helpers and tests (127d980)\n\n3.0.14 \"moh-common-lib\" (2020-05-25)\nBug Fixes\n\nstepper: replace includes with endsWith resolve find route name in url base (6e83c50)\n\nCode Refactoring\n\ncode cleanup - remove unused variables, files (706d0b8)\n\n3.0.13 \"moh-common-lib\" (2020-05-06)\nBug Fixes\n\nFixed error container for phone number component (#102) (22c21ef), closes #102\n\n3.0.12 \"moh-common-lib\" (2020-03-12)\nBug Fixes\n\nHeaderComponent: Removed role attribute from header. (16020e0)\n\n3.0.11 \"moh-common-lib\" (2020-02-26)\nBug Fixes\n\nFixed tab selection for geocoder. (e29adc8)\nGeocoder replace '--' with '-' in street name. (8cec483)\nModified parameters for geocoder api (fda6abf)\n\nFeatures\n\nAdded another unit test for GeocoderService. (c8107a7)\nAdded unit tests for GeocoderService. (ab4688c)\nRun all unit tests. (c574ba0)\nUnit test CI workflow. (7faf3d5)\nunit test for date component. (b61e2b8)\n\n3.0.10 \"moh-common-lib\" (2020-01-31)\nBug Fixes\n\nHeaderComponent: Added print logo flag. (fabd0cf)\n\n3.0.9 \"moh-common-lib\" (2020-01-31)\nBug Fixes\n\nAdded back the setFullYear method usage. (403de87)\nDateComponent: Fixed 31st rollover bug. (95e5eab)\n\n3.0.8 \"moh-common-lib\" (2020-01-31)\nFeatures\n\nadded input to disable placeholder for phone number (b53f6e2)\n\n3.0.7 \"moh-common-lib\" (2020-01-30)\nBug Fixes\n\nBCP-265: fixed scroll when navigate. (b53a126)\nRadioComponent fix height limitation. (5a93887)\n\n3.0.6 \"moh-common-lib\" (2020-01-28)\nBug Fixes\n\nFix to print logo. (df20e61)\n\n3.0.5 \"moh-common-lib\" (2020-01-26)\nBug Fixes\n\nemail validatiion fix (f6e614f)\nemail validation for printable ascii characters (68eab18)\n\n3.0.3 \"moh-common-lib\" (2020-01-26)\nBug Fixes\n\ngeocoder input - return data typed in if no results returned (ccdfcb2)\ngeocoder input , input//output is string, select returns Address structure (df6babe)\nreturn address passed in, rather than null (98d3b63)\ntype in email error message (d63ff2d)\nupdated wording to email invalid character message (eea4886)\n\n3.0.2 \"moh-common-lib\" (2020-01-23)\nBug Fixes\n\nfirst field touched error appear, remove bracket info from labels for error msg (bcd3cad)\nangular-devkit/build-angular updated so unit tests run (23644b4)\n\nFeatures\n\nAble to add instructions under date label (0ac8cb8)\nadded check for printable ascii characters  for emaill, updated unit tests (fda99be)\n\n3.0.1 \"moh-common-lib\" (2020-01-20)\nBug Fixes\n\ndate messages on change, 150 years (4e9852b)\nsecurity updates (20aa812)\n\n3.0.0-rc.31 \"moh-common-lib\" (2020-01-08)\nBug Fixes\n\nConsentModalComponent: Added keys to interface. (95b1122)\nConsentModalComponent: Added required PACUTOFF env variables. (abad941)\nConsentModalComponent: Update SUPPBEN to return maintenance flags. (fd32157)\n\n3.0.0-rc.30 \"moh-common-lib\" (2020-01-06)\nBug Fixes\n\nlogic for accepting past/future dates, set errors, unit tests (2f4836b)\nConsentModalComponent: Added SUPPBEN environment variables case. (f01339b)\n\nFeatures\n\nConsentModalComponent: Added maintenance flags for PA and SB. (e5b3cfa)\n\n3.0.0-rc.29 \"moh-common-lib\" (2020-01-02)\nBug Fixes\n\nDateComponent: Added unit test. (22fd6aa)\nDateComponent: Empty date field trigger validation. (d302941)\nDateComponent: Moved _onChange call into destroyDate method. (dae52b0)\nHeaderComponent: BCP-197 Accessibility. (a79007f)\n\n3.0.0-rc.28 \"moh-common-lib\" (2019-12-16)\nFeatures\n\nexported abstract-form-control so it can be used in projects (73247f2)\n\n3.0.0-rc.27 \"moh-common-lib\" (2019-12-13)\n3.0.0-rc.26 \"moh-common-lib\" (2019-12-13)\nBug Fixes\n\nAbsractFormControl:  Doesn't throw error on falsy/undefined label (df5bd4d)\n\n3.0.0-rc.25 \"moh-common-lib\" (2019-12-12)\nFeatures\n\nadded container service, modified container to use service (716da42)\nexported abstract-form-control so it can be used in projects (20fa6ea)\nFormActionBar: Now can include arbitrary buttons in ng-content. (85d3767)\n\n3.0.0-rc.24 \"moh-common-lib\" (2019-12-11)\nBug Fixes\n\nFormActionBar: Added vendor prefixes for position: sticky (92c2dc4)\n\nCode Refactoring\n\nAbstractFormControl: Throws error when provided invalid label type (7567a75)\n\n3.0.0-rc.23 \"moh-common-lib\" (2019-12-10)\nBug Fixes\n\nDate: Allows clearing of field conditional on RequiredValidator (7a5b7bc)\n\n3.0.0-rc.22 \"moh-common-lib\" (2019-12-09)\nBug Fixes\n\ndefault page guard working  when navigates to start url when list empty or all pages false (57b73dd)\nself validating - set value in nameStr variable before call onchange (7e674de)\n\nCode Refactoring\n\ncheckbox to use abstract control class, date uses registerValidation(), cleanup (0b0ffca)\n\nFeatures\n\ninject start url & bypass values for default page guard service (f5e3e0d)\n\n3.0.0-rc.21 \"moh-common-lib\" (2019-12-03)\nBug Fixes\n\nScrolling compatibilty with IE 11 (fd57808)\n\nCode Refactoring\n\ncommon template & reactive form items in abstract base form, create abstract react form (c4c9856)\nrename files (fixed spelling on library-error file), added scrollTo() for browser compat (23fe745)\nuse scrollTo() rather than Window.scrollTo() (e56ffdf)\n\nFeatures\n\nCommonImage: Make generic, add toJSON() method. Formatting. (2637a7a)\n\n3.0.0-rc.19 \"moh-common-lib\" (2019-12-02)\nBug Fixes\n\nset each field of date separately so year does not default to 1901 when year is 1. (CR18975) (dc606f1)\n\n3.0.0-rc.18 \"moh-common-lib\" (2019-12-02)\nFeatures\n\nAbstractHttpService: Create uploadAttachment method (bf0bcc2)\nCommonImage: Can set fileContent via optional constructor param (cd1cc3b)\n\n3.0.0-rc.17 \"moh-common-lib\" (2019-11-27)\nBug Fixes\n\nadded set to setter in page-state service (09c1a1b)\nfirst page can navigate to (0803cae)\nfirst page can navigate to (503b449)\npage-state service renamt isPageComplete to canNavigateToPage, tests updated (a33bb9d)\npage-state service renamt isPageComplete to canNavigateToPage, tests updated (9e5d3aa)\n\nCode Refactoring\n\ncreated replacement for existing route components, marked as depreciated (0881790)\ncreated replacement for existing route components, marked as depreciated (636c1d5)\n\nFeatures\n\nAdded page state service & unit tests (cf47d9b)\nFormActionBar: Automatically call scrollToError on click. (3ff09e0)\nHelper: Create scrollToError() function. (7bf5025)\n\nStyles\n\nFileUpload: Reduce default size by removing a spacing element. (322d58c)\nPostalCode: Remove placeholder (f27b941)\n\n3.0.0-rc.16 \"moh-common-lib\" (2019-11-20)\nBug Fixes\n\nadded set to setter in page-state service (3b207b9)\nset sin value before call onChange (7e270d8)\nupdated email error message, strip off (optional) from labels (788c3d1)\nupdated phone error message (f0202f2)\n\nFeatures\n\nAdded page state service & unit tests (7c7ca2f)\n\n3.0.0-rc.15 \"moh-common-lib\" (2019-11-15)\nCode Refactoring\n\nemail component uses abstract control class and is self-validing, units tests started (f21d329)\n\n3.0.0-rc.14 \"moh-common-lib\" (2019-11-14)\nBug Fixes\n\nrange dates indicate no future or past dates allowed (see notes at top of file) (a73785f)\n\nCode Refactoring\n\nprovince component uses abstract control class, added ng-select to styles for testing (48e2120)\ncity component uses abstract control class (492934b)\ncommonPhnValidation deprecriated, phnComponent modified to be self-validating (cc9910b)\ncommonValidateSin removed, sin component self validates, reactive tests started for sin (e0bd207)\nstreet component uses abstract control class (36eeddb)\n\nFeatures\n\nAdded CommonLogEvents to commonLogger - common events that apps have when logging (a1b8211)\n\nTests\n\nrefactored tests so that call helper functions (21afb82)\n\n3.0.0-rc.13 \"moh-common-lib\" (2019-11-06)\nBug Fixes\n\nadded logic to abstract-form-control to check for no label submitted. (ed615a6)\ncheck for label not passed in set default value as 'Field' (655a0fd)\n\n3.0.0-rc.12 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nGeocoderInput: Now emits an onChange with null if it has no results. (009d779)\n\n3.0.0-rc.11 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nFileUploader: Fix a11y for danging aria label (3f6a466)\nCR18890 - added check for year (679ac15)\n\nTests\n\nRemove extra unnecessary tick() call. (8248e61)\nUnit tests for phone/radio passing.  Also internal refactoring. (14bce6e)\n\n3.0.0-rc.10 \"moh-common-lib\" (2019-11-01)\nFeatures\n\nPhone: Phone now has an 'incompleteValue' error and text. (a1bd381)\n\n3.0.0-rc.9 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Remove debug label (a7efeee)\n\n3.0.0-rc.8 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Replace (chance) event with (blur) for IE (61b54fd)\n\n3.0.0-rc.7 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nPhoneNumber: IE fix by changing event (71eb531)\n\nFeatures\n\nPhoneNumber: Add allowInternational flag to disable the \"+1\" (108e46b)\nPhoneNumber: Now a self-validating component. (6650ef8)\n\nBREAKING CHANGES\n\nPhoneNumber: Deleted commonValidatePhone directive\n\n3.0.0-rc.6 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nDate: Remove ngOnChanges (015602c)\nadded ngChanges to date to detect label changes, no longer can add question by default (38c822b)\nadded placeholder country & regexp for label (61c0cdc)\n\n3.0.0-rc.5 \"moh-common-lib\" (2019-10-28)\nFeatures\n\nadded fullname to person.model (28d9585)\nAbstractAPI: Has a generateUUID method. (5362c67)\n\n3.0.0-rc.4 \"moh-common-lib\" (2019-10-23)\nBug Fixes\n\nDate format string modified to use format from date-fns module (4bb54c0)\nFixed date component to handle no validators on the control. (5441be2)\n\n3.0.0-rc.3 \"moh-common-lib\" (2019-10-22)\n3.0.0-rc.2 \"moh-common-lib\" (2019-10-22)\nBug Fixes\n\nDate:  Setting restrictDate to \"past\" no longer includes today, matching previous behaviour (8fc79af)\n\n3.0.0-rc.1 \"moh-common-lib\" (2019-10-22)\nBuild\n\nAdd new command to build release candidates for v3 (e89e6f3)\n\nFeatures\n\nDate: DateComponent is NgControl (51f2ea4)\n\n3.0.0-rc.0 \"moh-common-lib\" (2019-10-22)\n2.28.0 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\ncall _onChange to trigger form validations (c91fef0)\n\n2.27.2 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\nFileUploader: Attempted fix at PDF parsing for Edge using worker. (2ebd235)\n\n2.27.1 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nConsentModal: disableContinue works correctly (f18457b)\n\n2.27.0 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nGeocoderService: Change default API filter (34f0a40)\nGeocoderService: Exendable methods via inheiritance (7355610)\n\nFeatures\n\nGeocoderInput: New Component CommonGeocoderInput (224e362)\nGeocoderInput: Now a ControlValueAccessor (730f9c7)\n\n2.26.0 \"moh-common-lib\" (2019-10-15)\nBug Fixes\n\nlogic in validate postal-code directive to handle bcOnly flag (88bc3f3)\n\nDocumentation\n\nPublishing: Make it more clear when to use \"patch\" or \"minor\" versions. (02cb2c5)\n\nFeatures\n\nCAPTCHA: Shows required error on touched (16be24b)\nadded bc only postal code check for address component (e6db87e)\nConsentModal: Add disableContinue @Input(), used with custom controls (8aa41ec)\n\n2.24.0 \"moh-common-lib\" (2019-10-11)\nFeatures\n\nFileUploader: Add a blank \"Add\" thumbnail user can click (1251212)\nAdded confirmation template for response pages (1f1a0f9)\nAdded confirmation template for response pages (aa2b7f9)\n\n2.23.0 \"moh-common-lib\" (2019-10-10)\nFeatures\n\nadded abilty to modify messages in date rather than replace. (2235059)\n\n2.22.0 \"moh-common-lib\" (2019-10-09)\nFeatures\n\ncommonValidatePhone: Phone format validation (510ad9e)\n\n2.21.0 \"moh-common-lib\" (2019-10-09)\nBug Fixes\n\nPhone: Can now use [ngModel] by itself (5910979)\n\nFeatures\n\nemail: Create EmailComponent (based on Name) (27b488b)\n\nStyles\n\nPageSection: Change bullet styles (f541d81)\n\n2.20.1 \"moh-common-lib\" (2019-10-09)\nStyles\n\nHeader: Header text wraps on mobile, no longer breaking mobile (1303722)\n\n2.20.0 \"moh-common-lib\" (2019-10-08)\nFeatures\n\nadded ability to set query parameters on navigate method in abstract form (4f3e59f)\n\n2.19.0 \"moh-common-lib\" (2019-10-01)\nBug Fixes\n\ndate component to check for null, undefined and zero, trigger year validation on month change (0ed3875)\nfile uploader - check to confirm have array to check length in onChange method (c6067fd)\n\n2.18.1 \"moh-common-lib\" (2019-09-27)\nBug Fixes\n\nfixed off by 1 date in year validator (9a38474)\n\n2.18.0 \"moh-common-lib\" (2019-09-26)\nBug Fixes\n\nbug in file uploader - check for null array (cf962bc)\n\nFeatures\n\nadded sample-modal component to display sample doc images (4f8f2e7)\n\n2.17.1 \"moh-common-lib\" (2019-09-25)\nBug Fixes\n\nadded check for errors when component not used as form control (7d274e8)\ncolor-success changed to 83D31D to match color on mockups (c64c066)\nerror in checkbox html check errors exist (29c5160)\n\nDocumentation\n\nTODO: Create TODO file with list of breaking changes for version 3 (9dc5375)\nTODO: Rename todo to a markdown file for GitHub support (496c252)\n\n2.17.0 \"moh-common-lib\" (2019-09-24)\nBug Fixes\n\nadded space in error message (radio) (6427f10)\nbug introduced when try to display errors when field touched (radio/checkbox) (aceb028)\ncheckbox fixed to be custom form control (1c51f01)\nset radio touched on blur, display required message when touched (c78856a)\n\nDocumentation\n\nTweak publishing so it passes markdownlint (901885e)\n\nFeatures\n\nAdded required error message to component (d5dd02f)\n\n2.16.0 \"moh-common-lib\" (2019-09-20)\nBug Fixes\n\nupdate address1 when street updated (29e521c)\n\n2.15.0 \"moh-common-lib\" (2019-09-19)\nBug Fixes\n\nremoved check for US from address component (996cad7)\n\n2.14.0 \"moh-common-lib\" (2019-09-17)\nFeatures\n\nSet label defaults to yes/no in radio component (66e58e7)\n\n2.13.0 \"moh-common-lib\" (2019-09-17)\nBug Fixes\n\nclear province when country changes, placeholders updated (8380850)\n\n2.12.0 \"moh-common-lib\" (2019-09-16)\nBug Fixes\n\nradio buttons working for more than 2 options as custom form control (f2ccfe6)\nRemoved check for undefined (7398e93)\n\nFeatures\n\nAdded ability to disable specfic fields in address component (5965aec)\n\n2.11.0 \"moh-common-lib\" (2019-09-12)\nBug Fixes\n\nPostal code clears when country changes to Canada (2c0b127)\n\nDocumentation\n\nAdd info on publishing new builds (9855d9c)\n\n2.10.0 \"moh-common-lib\" (2019-09-05)\nBug Fixes\n\nPhoneNumber: The first numbers within the brackets must be 2-9 now (5069fe8)\n\n2.9.0 \"moh-common-lib\" (2019-08-30)\nBug Fixes\n\nexport common image elementsgit (483b735)\n\n2.8.1 \"moh-common-lib\" (2019-08-22)\nBug Fixes\n\nDate: Capitalize placeholders (4d39002)\n\n2.8.0 \"moh-common-lib\" (2019-08-20)\nBug Fixes\n\nReorder address fields (cbbfaa8)\n\nFeatures\n\nadded validation for street component (0699178)\nadded validations for postal code, country/province, added abiltiy to update error messages (60befc2)\nvalidation for valid characters in city component (16da113)\n\n2.7.1 \"moh-common-lib\" (2019-08-15)\nBug Fixes\n\nDateComponent: Handles having 00 as day (67b6f78)\nFileUpload: Remove console log on ngchanges (7c99c1e)\n\n2.7.0 \"moh-common-lib\" (2019-08-13)\nBug Fixes\n\nFixed displaying of the error message in name component (1650a23)\nAddress:  Clear out address line data when removing the line (3f1149e)\n\n2.6.0 \"moh-common-lib\" (2019-08-09)\nCode Refactoring\n\nModified address to used MSP label and length defaults (5bb54fc)\n\nFeatures\n\nfunctions to retrieve country, prov descriptions,  maxlengths input for addresss (978250b)\n\n2.5.2 \"moh-common-lib\" (2019-08-02)\n2.5.1 \"moh-common-lib\" (2019-07-31)\nBug Fixes\n\nremoved plus sign used to concatenate string for aria-label (#32) (3a5677b), closes #32\n\n2.5.0 \"moh-common-lib\" (2019-07-31)\nFeatures\n\nAddress: added input to address component to allow users to change default labels on fields. (#31) (ebb6998), closes #31\n\n2.4.0 \"moh-common-lib\" (2019-07-29)\n2.3.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Now has default country/prov behaviour built in (8361a0e)\n\n2.2.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Additional lines must be removed in order (ac9d61c)\nAddress: Now can show 2 extra address lines (previously only one) (af91989)\n\nStyles\n\nXIconButton: Change icon from 'times' to 'times-circle' (aad93b5)\n\n2.1.5 \"moh-common-lib\" (2019-07-18)\nAccessibility\n\nRadio: Hide radio for FireFox but keep tab-focusable. (8f6886f)\nXIconButton: Add label (867f969)\n\n2.1.4 \"moh-common-lib\" (2019-07-16)\nAccessibility\n\nPhone: Fix association of labels for phone component (c122a2a)\n\n2.1.3 \"moh-common-lib\" (2019-07-11)\nAccessibility\n\nRadio: Convert radio to use fieldset. (2c2f322)\nRadio: New focus style for RadioComponent, styled better for mouse (c2fd959)\n\n2.1.2 \"moh-common-lib\" (2019-07-10)\nAccessibility\n\nRadio: Radio is now focusable via tab / screenreader (126d876)\n\nStyles\n\nConsentModal: Backdrop enabled when modal is open. (b901868)\n\n2.1.1 \"moh-common-lib\" (2019-07-09)\nBug Fixes\n\nAddress: Implement allowExtralines to opt-in to new multi-line (5a7c37b)\n\nBREAKING CHANGES\n\nAddress: This reverts an accidentally introduced breaking change in 2.1.0 where all address components would use the new line behaviour.  Now, it is opt-in.\n\n2.1.0 \"moh-common-lib\" (2019-07-09)\nAccessibility\n\nStepper/Wizard: Darken link text by 5% to get AA colour contrast (a27faa9)\n\nBug Fixes\n\nRadio: Fix empty label for RadioComponent for a11y (Waze) (7400a64)\n\nBuild\n\nAdd \"a11y\" type to changelog and commit types (edf0b2e)\n\nCode Refactoring\n\nAddressComponent: Reorganize order of inputs, add AddressLine1 (5d8f61d)\n\nDocumentation\n\nAddressModel: Add TSDOC descriptions on street and addressLine1 (6f093d2)\n\nFeatures\n\nAddressComponent: Add 'disableGeocoder' @Input (a512eb0)\n\n2.0.1 \"moh-common-lib\" (2019-07-04)\nBug Fixes\n\nPhoneNumber: Required @Input works properly (5b18c5f)\n\nCode Refactoring\n\nXIconButton: Add (click) event, @deprecate (clickEvent) (baee5ad)\n\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input() (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                10 %\n                (4/40)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/helpers/library-error.ts\n            \n            class\n            MoHCommonLibraryError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/helpers/scroll-helpers.ts\n            \n            function\n            scrollTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/scroll-helpers.ts\n            \n            function\n            scrollToError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            createTestingModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getDebugElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getDebugInlineError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getDebugLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getDebugLegend\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getInputDebugElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getSelectDebugElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            setInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            setSelect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            tickAndDetectChanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address-validator/address-validator.component.ts\n            \n            component\n            AddressValidatorComponent\n            \n                18 %\n                (9/49)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address-validator/address-validator.component.ts\n            \n            interface\n            AddressResult\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                16 %\n                (8/50)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            AddrLabelList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            Maxlengths\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            ReadOnlyFields\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                6 %\n                (2/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            directive\n            ValidateCityDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            variable\n            commonValidateCity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/confirm-template/confirm-template.component.ts\n            \n            component\n            ConfirmTemplateComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                20 %\n                (8/40)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            function\n            getCountryDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                17 %\n                (9/51)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantFuture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantPast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            MAX_YEAR_RANGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            directive\n            DuplicateCheckDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            checkForDuplicates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            commonDuplicateCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/error-container/error-container.component.ts\n            \n            component\n            ErrorContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                26 %\n                (10/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n            \n            component\n            GeocoderInputComponent\n            \n                24 %\n                (7/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                9 %\n                (3/32)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                8 %\n                (3/35)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                7 %\n                (2/27)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            directive\n            ValidatePostalcodeDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            commonValidatePostalcode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            validatePC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            function\n            getProvinceDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                6 %\n                (2/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            interface\n            IRadioItems\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            component\n            SampleModalComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            interface\n            SampleImageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                8 %\n                (3/34)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                12 %\n                (5/39)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            directive\n            ValidateStreetDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            variable\n            commonValidateStreet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            directive\n            ValidateRegionDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            variable\n            commonValidateRegion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-base-form.ts\n            \n            class\n            AbstractBaseForm\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form-control.ts\n            \n            class\n            AbstractFormControl\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-react-form.ts\n            \n            class\n            AbstractReactForm\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            interface\n            ErrorMessage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            function\n            replaceLabelTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            LabelReplacementTag\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            regExpLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonAttachmentJson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-page-guard.service.ts\n            \n            injectable\n            AbstractPageGuardService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/container.service.ts\n            \n            injectable\n            ContainerService\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/container.service.ts\n            \n            variable\n            DefaultSubmitLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/default-page-guard.service.ts\n            \n            injectable\n            DefaultPageGuardService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/default-page-guard.service.ts\n            \n            variable\n            BYPASS_GUARDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/default-page-guard.service.ts\n            \n            variable\n            START_PAGE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/load-page-guard.service.ts\n            \n            guard\n            LoadPageGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                39 %\n                (9/23)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/page-state.service.ts\n            \n            injectable\n            PageStateService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/common/lib/services/page-state.service.ts\n            \n            interface\n            PageList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            date-fns : ^2.5.1\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^5.5.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiStatusCodes   (projects/.../confirm-template.component.ts)\n                        \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            CommonLogEvents   (projects/.../logger.service.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiStatusCodes\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonLogEvents\n                    \n                \n                        \n                            \n                                 navigation\n                            \n                        \n                        \n                            \n                                Value : navigation\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 submission\n                            \n                        \n                        \n                            \n                                Value : submission\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nAddressValidatorComponent\n\nAddressValidatorComponent\n\nSharedCoreModule -->\n\nAddressValidatorComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nAddressValidatorComponent \n\nAddressValidatorComponent \n\nAddressValidatorComponent  -->\n\nSharedCoreModule->AddressValidatorComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    39 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nMoh-Common-Lib:\n\n Security warnings (GitHub)\n\nBreaking Changes for version 3.0.0:\n\n FormActionBar / FormSubmiBar - make the on load default colour yellow\nThis can fix a \"flash\" of the first colour on macbooks and faster computers (nonVDI)\n\n\n Delete all instances of showError. We never use it as an @Input.\n address.model.ts\n public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n radio.component.ts\n @Input() showError: boolean; // TODO: Remove - breaking change\n // TODO: remove status change - breaking change\n\n\n checkbox.component.ts\n Remove to make custom form control -- possible breaking change\n @Input() required: boolean = false;  // TODO: Remove - breaking change\n Remove the showError\n\n\n xicon-button.component.ts\n Remove clickEvent output. Should be able to just use \"click\", which follows conventional Angular naming.\n\n\n street.component.ts\n Replace \"maxlen\" with \"maxlength\" across this and other components. Maxlength is more semantic / consistent.  Search for this in other places too.\n\n\n date.component.ts - Should become a FormControl (NgControl)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nLocal Development\n\ncomponents\nschematics\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n *High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:* [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/commonIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nimport { example } from 'moh-common-lib'If you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
