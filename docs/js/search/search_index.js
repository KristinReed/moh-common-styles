var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractForm.html",[0,0.026,1,3.445]],["body/classes/AbstractForm.html",[0,0.031,1,5.226,2,2.175,3,0.175,4,0.203,5,0.107,6,7.436,7,4.453,8,0.203,9,0.863,10,2.582,11,1.861,12,6.969,13,0.758,14,6.118,15,3.654,16,5.453,17,3.607,18,7.664,19,4.835,20,0.986,21,3.501,22,5.1,23,0.669,24,6.547,25,0.946,26,0.011,27,0.48,28,0.318,29,0.613,30,1.284,31,5.07,32,6.547,33,1.695,34,2.07,35,5.751,36,2.654,37,1.913,38,6.547,39,5.07,40,4.835,41,5.226,42,4.522,43,0.733,44,0.668,45,1.228,46,5.07,47,3.242,48,4.522,49,6.547,50,1.571,51,4.522,52,1.942,53,4.498,54,5.07,55,5.751,56,1.942,57,0.918,58,5.751,59,2.325,60,5.226,61,6.547,62,6.547,63,4.835,64,1.519,65,1.291,66,5.07,67,4.522,68,3.67,69,6.547,70,6.547,71,0.463,72,5.859,73,5.293,74,5.07,75,6.547,76,3.122,77,3.843,78,5.226,79,4.473,80,2.51,81,2.842,82,0.27,83,2.175,84,0.405,85,0.899,86,2.611,87,0.175,88,3.127,89,5.07,90,0.951,91,2.721,92,0.587,93,2.842,94,5.07,95,5.07,96,5.07,97,1.856,98,5.07,99,5.07,100,5.07,101,5.07,102,0.006,103,0.008,104,0.006]],["title/classes/AbstractHttpService.html",[0,0.026,105,2.419]],["body/classes/AbstractHttpService.html",[0,0.042,2,1.97,3,0.159,4,0.184,5,0.097,8,0.184,9,0.808,13,0.854,15,4.001,17,3.894,20,0.624,23,0.655,25,1.185,26,0.011,27,0.563,28,0.336,29,0.719,30,0.969,43,0.664,44,0.605,45,1.15,57,0.889,68,3.439,72,5.674,73,3.171,80,3.997,81,2.574,82,0.258,87,0.159,88,2.832,92,0.854,102,0.005,103,0.007,104,0.005,105,3.439,106,6.63,107,4.112,108,4.034,109,1.433,110,4.655,111,3.39,112,4.261,113,5.515,114,4.771,115,5.254,116,4.897,117,2.723,118,6.134,119,3.666,120,4.328,121,6.135,122,4.799,123,4.592,124,5.46,125,4.53,126,4.897,127,4.897,128,5.674,129,4.592,130,5.515,131,4.53,132,5.059,133,5.093,134,2.315,135,3.784,136,4.897,137,4.53,138,2.315,139,4.663,140,3.784,141,4.799,142,4.592,143,4.53,144,5.515,145,5.001,146,4.237,147,3.784,148,1.312,149,4.897,150,4.237,151,2.632,152,4.897,153,4.897,154,4.897,155,5.307,156,4.592,157,4.897,158,4.592,159,4.034,160,4.592,161,3.784,162,5.389,163,2.388,164,2.039,165,2.574,166,2.19,167,4.034,168,4.592,169,2.574,170,2.111,171,4.034,172,3.391,173,4.592,174,1.225,175,6.135,176,6.135,177,4.592,178,1.906,179,4.592,180,6.135,181,6.135,182,2.274,183,4.592,184,3.391,185,2.832,186,4.592,187,4.592,188,1.906,189,3.666,190,4.034,191,4.592,192,2.388,193,5.389,194,3.171,195,3.391]],["title/injectables/AbstractPgCheckService.html",[196,1.734,197,2.809]],["body/injectables/AbstractPgCheckService.html",[0,0.046,3,0.194,4,0.225,5,0.119,8,0.225,13,0.92,15,4.223,23,0.635,25,0.81,26,0.011,27,0.411,28,0.225,29,0.525,30,1.318,57,0.92,71,0.522,76,3.792,80,3.456,82,0.209,84,0.448,87,0.194,102,0.007,103,0.008,104,0.007,106,6.529,109,1.31,111,3.834,196,2.804,197,5.428,198,3.291,199,5.649,200,4.925,201,4.904,202,4.667,203,3.912,204,2.015,205,6.985,206,6.979,207,6.979,208,6.979,209,0.835,210,3.594,211,5.571,212,5.571,213,3.209,214,4.904,215,2.337,216,6.13,217,2.086,218,1.817,219,6.13,220,1.51,221,6.348,222,6.348,223,6.066,224,6.348,225,5.607,226,5.607,227,4.925,228,5.607,229,5.607]],["title/classes/AbstractTestPage.html",[0,0.026,230,3.187]],["body/classes/AbstractTestPage.html",[0,0.038,2,1.189,3,0.179,4,0.111,5,0.11,8,0.111,9,0.562,11,0.918,13,0.494,15,2.783,16,4.33,19,3.149,23,0.667,25,1.083,26,0.011,27,0.627,28,0.321,29,0.701,34,2.104,43,0.843,44,1.019,53,3.425,56,1.898,57,0.975,59,1.515,60,5.98,64,1.485,65,1.274,71,0.562,78,4.658,79,2.63,80,2.89,82,0.103,87,0.096,92,0.828,102,0.003,103,0.005,104,0.003,109,1.714,133,2.945,135,2.63,138,1.609,151,1.83,170,3.708,174,0.491,192,2.272,210,2.196,215,1.954,220,1.146,230,4.309,231,7.368,232,5.212,233,2.435,234,3.746,235,1.13,236,3.404,237,5.126,238,4.412,239,1.65,240,2.39,241,2.39,242,6.653,243,5.836,244,2.945,245,4.265,246,1.75,247,4.565,248,5.198,249,5.836,250,5.836,251,4.265,252,4.265,253,5.836,254,4.265,255,5.836,256,4.265,257,5.836,258,5.836,259,4.912,260,6.653,261,5.836,262,5.836,263,4.265,264,4.265,265,4.265,266,4.265,267,6.3,268,4.265,269,1.4,270,2.772,271,4.265,272,2.63,273,2.39,274,2.89,275,2.945,276,3.425,277,4.265,278,3.599,279,2.772,280,3.149,281,3.746,282,3.746,283,4.265,284,4.265,285,3.746,286,2.772,287,2.945,288,3.746,289,4.265,290,3.404,291,3.746,292,5.836,293,2.772,294,3.149,295,1.317,296,4.03,297,3.149,298,3.404,299,4.265,300,3.735,301,2.772,302,4.103,303,4.265,304,6.283,305,5.311,306,5.282,307,4.265,308,2.772,309,1.961,310,3.599,311,4.771,312,6.956,313,0.44,314,7.153,315,2.772,316,4.265,317,2.772,318,3.149,319,2.644,320,3.838,321,2.772,322,2.772,323,4.265,324,2.772,325,4.265,326,1.081,327,4.658,328,2.772,329,2.772,330,4.265,331,2.772,332,4.265,333,2.945,334,4.265,335,3.005,336,2.504,337,2.783,338,4.658,339,4.652,340,5.836,341,4.265,342,5.126,343,4.265,344,2.772,345,3.149,346,4.658,347,2.772,348,3.404,349,3.404,350,3.404,351,3.149,352,2.503,353,4.265,354,1.66,355,4.265,356,4.265,357,3.746,358,4.265,359,5.836,360,1.77,361,3.746,362,2.39,363,4.265,364,2.39,365,3.746,366,3.746,367,3.149,368,2.772,369,2.772,370,2.945,371,4.265,372,2.772,373,1.893,374,4.265,375,5.836,376,2.772,377,5.198,378,3.005,379,1.961,380,0.996,381,3.746,382,2.196,383,2.112,384,2.63,385,1.349,386,3.271,387,3.404,388,3.149,389,3.746,390,3.149,391,3.746,392,4.265,393,3.746,394,4.265,395,2.776,396,3.005,397,3.149,398,5.836,399,5.126,400,3.005,401,4.103,402,4.309,403,4.265,404,2.772,405,1.83,406,4.265,407,0.822,408,4.265,409,2.39,410,2.776,411,3.746,412,4.265,413,4.265,414,2.772,415,5.117,416,1.034,417,4.265,418,2.772,419,3.149,420,4.265,421,2.034,422,1.71,423,0.702,424,4.265,425,2.772,426,2.772,427,2.772,428,2.772,429,2.772,430,2.772,431,2.772,432,2.772,433,2.772,434,2.772,435,2.772,436,2.772,437,2.772,438,2.772,439,2.213,440,4.265,441,4.265,442,4.265,443,2.772,444,2.772,445,2.772,446,2.772,447,2.435,448,1.015,449,4.265,450,2.772,451,2.772,452,4.265,453,2.772,454,2.772,455,2.772,456,2.772,457,2.772,458,2.772,459,2.772,460,2.772,461,2.772,462,2.772,463,2.772,464,2.772,465,2.772]],["title/components/AccordionCommonComponent.html",[313,0.236,466,1.064]],["body/components/AccordionCommonComponent.html",[0,0.029,3,0.166,4,0.193,5,0.134,8,0.193,9,0.834,11,1.362,13,0.732,20,0.961,23,0.623,26,0.011,27,0.518,28,0.284,30,1,33,1.399,43,0.914,44,0.834,45,1.186,52,1.219,56,1.603,57,0.557,64,1.254,65,0.783,71,0.479,82,0.236,83,2.064,84,0.384,87,0.218,102,0.006,103,0.008,104,0.006,109,1.124,148,0.76,209,0.757,215,2.119,220,1.218,235,1.425,246,1.124,269,1.155,295,1.219,313,0.386,380,1.124,407,1.22,416,1.022,423,1.603,466,1.852,467,1.287,468,1.253,469,1.287,470,4.226,471,7.07,472,1.792,473,0.877,474,1.234,475,6.327,476,1.289,477,6.327,478,1.289,479,6.327,480,7.803,481,1.956,482,7.07,483,4.813,484,4.811,485,4.811,486,4.811,487,4.811,488,4.37,489,6.327,490,4.811,491,2.478,492,2.294,493,1.219,494,1.693,495,0.557,496,2.066,497,1.323,498,1.323,499,1.093,500,1.323,501,1.155,502,1.323,503,1.155,504,1.323,505,1.186,506,1.323,507,1.186,508,1.323,509,1.186,510,1.323,511,1.186,512,1.74,513,1.186,514,1.253,515,1.323,516,1.186,517,1.323,518,1.124,519,1.323,520,1.186,521,1.323,522,1.323,523,1.155,524,1.323,525,1.186,526,1.323,527,1.155,528,1.323,529,1.186,530,1.945,531,1.186,532,1.124,533,1.124,534,1.74,535,1.155,536,1.323,537,1.186,538,1.323,539,1.186,540,1.323,541,1.124,542,1.323,543,1.186,544,1.323,545,1.186,546,1.186,547,1.323,548,1.155,549,1.124,550,1.323,551,1.155,552,1.323,553,1.155,554,1.323,555,1.155,556,1.253,557,1.186,558,1.323,559,1.186,560,1.323,561,1.186,562,1.323,563,1.155,564,1.323,565,1.186,566,1.253,567,1.155,568,1.155,569,1.287,570,0.829,571,1.155,572,1.323,573,1.155,574,1.323,575,1.155,576,1.323,577,1.155,578,1.323,579,1.155,580,1.323,581,1.155,582,1.323,583,1.155,584,1.323,585,1.155,586,1.323,587,1.155,588,1.323,589,1.155,590,1.323,591,1.155,592,1.323,593,1.155,594,1.323,595,1.155,596,1.323,597,1.155,598,1.287,599,1.323]],["title/interfaces/AddrLabelList.html",[600,0.702,601,2.981]],["body/interfaces/AddrLabelList.html",[0,0.018,3,0.104,4,0.121,5,0.064,8,0.121,9,0.598,10,0.979,20,0.409,26,0.011,27,0.221,28,0.286,29,0.753,30,1.272,34,1.436,36,2.001,43,0.656,44,1.05,45,1.494,47,1.49,59,1.069,65,0.889,71,0.562,76,1.435,82,0.266,84,0.24,85,0.533,87,0.21,90,1.142,92,0.886,93,1.687,102,0.004,103,0.005,104,0.004,134,1.136,138,1.136,170,2.088,174,1.218,178,1.249,188,2.269,192,2.128,203,1.687,204,1.15,209,0.36,217,0.9,218,1.182,235,0.476,239,0.851,259,2.222,273,1.687,300,1.291,302,1.856,310,2.8,313,0.333,326,1.15,336,1.291,337,1.435,354,1.171,364,1.687,373,1.336,378,1.55,382,4.291,383,3.946,385,1.729,395,3.558,396,1.55,401,1.856,405,1.291,416,1.163,421,1.435,472,1.15,474,0.409,476,0.613,478,0.613,481,0.784,499,1.032,533,0.703,549,1.06,600,0.889,601,4.205,602,1.102,603,1.477,604,1.477,605,2.222,606,4.825,607,5.216,608,5.216,609,4.108,610,5.188,611,1.09,612,1.385,613,2.8,614,2.001,615,1.767,616,1.566,617,2.165,618,1.09,619,0.925,620,2.545,621,2.222,622,4.213,623,2.402,624,3.558,625,3.365,626,2.078,627,3.136,628,2.078,629,3.755,630,3.558,631,2.955,632,2.402,633,3.963,634,4.513,635,2.078,636,2.222,637,2.402,638,2.402,639,2.402,640,1.49,641,1.687,642,0.952,643,1.767,644,1.55,645,1.249,646,0.703,647,3.353,648,2.248,649,3.624,650,2.545,651,2.665,652,2.078,653,2.402,654,2.402,655,2.222,656,3.353,657,1.789,658,2.402,659,2.712,660,5.692,661,2.402,662,0.49,663,1.767,664,2.222,665,2.222,666,2.545,667,2.402,668,2.222,669,2.402,670,4.032,671,2.222,672,2.402,673,2.222,674,2.222,675,3.624,676,2.402,677,2.402,678,3.624,679,2.8,680,2.402,681,2.222,682,2.402,683,2.402,684,2.402,685,2.514,686,2.815,687,1.959,688,2.901,689,2.402,690,2.222,691,2.402,692,4.205,693,1.687,694,1.069,695,1.613,696,1.069,697,0.875,698,2.402,699,2.402,700,3.624,701,6.11,702,3.624,703,2.402,704,2.955,705,2.427,706,3.624,707,5.996,708,4.364,709,1.55,710,2.222,711,2.078,712,2.402,713,2.402,714,2.402,715,2.402,716,2.402,717,2.402,718,4.86,719,1.291,720,2.402,721,2.402,722,3.624,723,3.136,724,1.49,725,3.624,726,5.216,727,5.483,728,5.216,729,2.402,730,2.402,731,3.624,732,2.402,733,3.624,734,2.545,735,2.402,736,1.959,737,2.402,738,2.402,739,1.856,740,2.402,741,2.402,742,3.558,743,2.402,744,2.402,745,2.402,746,2.32,747,3.353,748,2.545,749,3.624,750,3.624,751,3.624,752,3.624,753,2.402,754,1.336,755,2.402,756,2.402,757,4.037,758,2.078,759,2.222,760,1.102,761,2.402,762,2.402,763,2.402,764,1.767,765,1.687,766,2.402,767,2.402,768,1.102,769,2.402,770,2.078,771,2.134,772,2.402,773,4.86,774,2.402,775,2.402,776,2.402,777,2.402,778,2.402,779,4.037,780,2.078,781,2.625,782,2.402,783,4.205,784,3.624,785,3.136,786,3.624,787,4.364,788,2.078,789,2.402,790,2.402,791,2.078,792,1.959,793,1.959,794,2.078,795,1.615,796,2.402,797,2.402,798,2.402,799,3.353,800,2.402,801,2.402,802,2.222,803,2.402,804,3.353,805,2.222,806,2.338,807,2.222,808,2.402,809,2.402,810,2.402,811,1.767,812,2.402,813,2.402,814,2.402,815,2.402,816,2.402,817,1.136,818,1.136,819,1.069,820,1.613,821,1.136,822,1.069,823,1.384,824,2.514,825,1.291,826,2.402,827,2.402,828,2.402,829,2.402,830,2.402,831,2.402,832,2.402,833,2.402,834,2.402,835,2.402,836,2.402,837,2.222,838,2.402,839,3.624,840,2.402,841,2.402]],["title/classes/Address.html",[0,0.026,622,2.223]],["body/classes/Address.html",[0,0.041,2,1.921,3,0.155,4,0.18,5,0.095,8,0.18,9,0.962,13,0.698,23,0.692,25,0.872,26,0.011,27,0.442,28,0.34,29,0.734,30,1.267,34,1.907,40,4.454,43,0.647,44,0.59,45,0.84,57,0.845,65,0.981,71,0.558,87,0.155,92,0.845,97,1.639,102,0.005,103,0.007,104,0.005,109,1.046,117,2.678,161,4.947,163,3.174,174,0.794,185,3.72,192,1.743,220,1.532,234,5.298,239,1.266,272,3.72,275,4.166,382,3.513,383,3.377,385,2.308,410,3.926,549,1.593,609,3.661,622,4.443,648,3.971,650,3.381,657,1.166,659,2.831,662,0.728,666,4.631,710,5.037,754,2.678,760,2.671,768,1.639,806,3.106,811,4.004,842,3.933,843,2.403,844,3.092,845,2.762,846,7.045,847,6.821,848,5.991,849,6.894,850,5.037,851,6.821,852,5.826,853,7.848,854,6.821,855,4.477,856,4.477,857,6.411,858,6.411,859,4.477,860,4.477,861,4.477,862,4.477,863,4.477,864,4.477,865,6.032,866,7.163,867,6.411,868,3.926,869,5.298,870,5.298,871,4.477,872,4.477,873,5.298,874,4.477,875,4.477,876,6.032,877,6.032,878,4.477,879,5.298,880,4.815,881,4.454,882,6.032,883,6.032,884,4.454,885,6.032,886,6.032,887,5.298,888,6.032,889,6.032,890,6.032,891,3.72,892,4.477,893,4.477,894,4.477,895,4.477,896,4.477,897,4.477,898,3.72,899,1.854,900,4.477,901,4.477,902,3.933,903,7.619,904,5.991,905,2.509,906,5.298,907,4.815,908,6.821,909,4.477,910,3.933,911,4.477,912,4.477,913,4.477,914,4.477,915,4.477,916,4.477,917,4.477,918,4.477,919,4.477,920,4.477,921,4.477]],["title/classes/Base.html",[0,0.026,618,1.036]],["body/classes/Base.html",[0,0.051,2,2.734,3,0.22,4,0.256,5,0.135,8,0.256,9,0.994,20,1.092,23,0.603,26,0.011,28,0.256,43,0.921,44,0.84,71,0.481,82,0.238,87,0.22,102,0.008,103,0.009,104,0.008,109,1.488,161,4.652,220,1.384,407,1.601,618,1.993,642,2.385,845,4.652,922,5.598,923,7.543,924,4.048,925,4.428,926,3.735,927,3.597,928,2.854,929,7.543,930,2.761,931,2.601,932,2.526,933,2.761,934,4.428,935,3.572]],["title/components/ButtonComponent.html",[313,0.236,501,1.036]],["body/components/ButtonComponent.html",[0,0.035,3,0.145,4,0.168,5,0.122,8,0.168,9,0.759,10,2.144,11,1.24,13,0.667,20,0.896,23,0.641,25,0.605,26,0.011,27,0.52,28,0.298,29,0.392,30,0.911,33,1.275,36,2.412,37,1.58,43,1.177,44,0.868,45,1.081,52,1.061,56,2.194,57,0.667,64,1.142,65,0.937,71,0.368,77,3.383,82,0.215,83,1.796,84,0.334,85,0.742,87,0.199,102,0.005,103,0.007,104,0.005,109,0.978,148,0.911,151,1.796,163,2.243,204,1.46,209,0.69,215,1.93,218,1.501,235,1.415,246,0.978,269,1.005,295,1.061,313,0.431,319,2.422,360,2.946,367,3.092,380,0.978,405,2.472,407,1.111,409,3.23,416,1.026,423,1.46,439,3.342,466,1.033,467,1.121,468,1.09,469,1.121,472,1.67,473,0.763,474,1.228,476,1.174,478,1.174,481,1.848,492,2.748,493,1.061,494,1.542,495,0.485,496,1.952,497,1.152,498,1.152,499,0.952,500,1.152,501,1.703,502,1.152,503,1.005,504,1.152,505,1.033,506,1.152,507,1.033,508,1.152,509,1.033,510,1.152,511,1.033,512,1.585,513,1.033,514,1.09,515,1.152,516,1.033,517,1.152,518,0.978,519,1.152,520,1.033,521,1.152,522,1.152,523,1.005,524,1.152,525,1.033,526,1.152,527,1.005,528,1.152,529,1.033,530,1.812,531,1.033,532,0.978,533,0.978,534,1.585,535,1.005,536,1.152,537,1.033,538,1.152,539,1.033,540,1.152,541,0.978,542,1.152,543,1.033,544,1.152,545,1.033,546,1.033,547,1.152,548,1.005,549,0.978,550,1.152,551,1.005,552,1.152,553,1.005,554,1.152,555,1.005,556,1.09,557,1.033,558,1.152,559,1.033,560,1.152,561,1.033,562,1.152,563,1.005,564,1.152,565,1.033,566,1.09,567,1.005,568,1.005,569,1.121,570,0.721,571,1.005,572,1.152,573,1.005,574,1.152,575,1.005,576,1.152,577,1.005,578,1.152,579,1.005,580,1.152,581,1.005,582,1.152,583,1.005,584,1.152,585,1.005,586,1.152,587,1.005,588,1.152,589,1.005,590,1.152,591,1.005,592,1.152,593,1.005,594,1.152,595,1.005,596,1.152,597,1.005,598,1.121,599,1.152,611,1.383,612,1.799,614,2.412,615,2.565,617,1.996,635,3.98,645,2.392,662,0.681,936,3.678,937,4.551,938,4.255,939,5.763,940,2.853,941,4.6,942,3.751,943,5.763,944,5.763,945,5.763,946,5.763,947,5.763,948,5.062,949,3.98,950,3.978,951,4.6,952,3.383,953,5.062,954,4.6,955,5.763,956,5.062,957,5.062,958,5.062,959,6.589,960,1.93,961,5.26,962,5.763,963,7.098,964,4.6,965,4.187,966,4.187,967,4.187,968,4.187,969,4.187,970,5.062,971,4.187,972,1.487,973,4.064,974,5.763,975,6.757,976,3.678]],["title/components/ButtonGroupComponent.html",[313,0.236,503,1.036]],["body/components/ButtonGroupComponent.html",[0,0.023,3,0.13,4,0.151,5,0.113,8,0.151,9,0.705,10,2.025,11,1.151,13,0.619,20,0.846,23,0.677,25,0.979,26,0.011,27,0.561,28,0.33,29,0.634,30,1.235,33,1.183,36,2.277,37,1.42,43,1.15,44,1.048,45,1.27,50,1.718,52,0.954,56,1.981,57,0.828,64,1.06,65,1.272,71,0.432,82,0.2,83,1.615,84,0.301,85,0.667,87,0.185,90,1.27,102,0.004,103,0.006,104,0.004,109,0.879,148,0.595,192,2.422,204,1.717,209,0.64,213,2.46,215,1.791,217,1.599,218,1.764,220,1.281,235,1.406,239,1.512,246,0.879,269,0.903,287,3.694,295,0.954,313,0.34,319,2.329,380,0.879,385,1.692,407,1.031,416,1.106,421,2.551,423,1.355,466,0.928,467,1.007,468,0.98,469,1.007,472,0.954,473,0.686,474,1.222,476,1.09,478,1.09,493,0.954,494,1.432,495,0.436,496,1.864,497,1.035,498,1.035,499,0.856,500,1.035,501,0.903,502,1.035,503,1.876,504,1.035,505,0.928,506,1.035,507,0.928,508,1.035,509,0.928,510,1.035,511,0.928,512,1.471,513,0.928,514,0.98,515,1.035,516,0.928,517,1.035,518,0.879,519,1.035,520,0.928,521,1.035,522,1.035,523,0.903,524,1.035,525,0.928,526,1.035,527,0.903,528,1.035,529,0.928,530,1.712,531,0.928,532,0.879,533,0.879,534,1.471,535,0.903,536,1.035,537,0.928,538,1.035,539,0.928,540,1.035,541,0.879,542,1.035,543,0.928,544,1.035,545,0.928,546,0.928,547,1.035,548,0.903,549,0.879,550,1.035,551,0.903,552,1.035,553,1.493,554,1.035,555,0.903,556,0.98,557,0.928,558,1.035,559,0.928,560,1.035,561,0.928,562,1.035,563,0.903,564,1.035,565,0.928,566,0.98,567,0.903,568,0.903,569,1.007,570,0.649,571,0.903,572,1.035,573,0.903,574,1.035,575,0.903,576,1.035,577,0.903,578,1.035,579,0.903,580,1.035,581,0.903,582,1.035,583,0.903,584,1.035,585,0.903,586,1.035,587,0.903,588,1.035,589,0.903,590,1.035,591,0.903,592,1.035,593,0.903,594,1.035,595,0.903,596,1.035,597,0.903,598,1.007,599,1.035,611,1.284,612,1.717,614,2.62,615,2.422,616,2.146,617,2.967,645,2.22,659,1.562,662,0.612,694,2.21,695,1.337,696,2.21,817,2.018,818,2.018,819,1.337,820,2.407,821,2.018,822,2.21,891,4.179,938,3.95,960,1.791,973,3.838,977,7.476,978,6.794,979,3.306,980,4.297,981,4.699,982,4.699,983,4.27,984,4.699,985,4.27,986,2.082,987,4.699,988,5.349,989,5.349,990,6.222,991,2.22,992,2.22,993,5.349,994,5.713,995,3.838,996,4.967,997,5.349,998,3.764,999,3.764,1000,3.764,1001,3.764,1002,3.764,1003,3.764,1004,3.764,1005,3.764,1006,3.764,1007,3.764,1008,5.349,1009,3.764,1010,2.295,1011,3.764,1012,3.764,1013,5.349,1014,3.764,1015,3.764,1016,3.764,1017,3.764,1018,3.306,1019,5.349]],["title/injectables/CaptchaDataService.html",[196,1.734,1020,2.809]],["body/injectables/CaptchaDataService.html",[0,0.04,3,0.177,4,0.205,5,0.108,8,0.205,13,0.762,20,0.695,23,0.614,25,1.111,26,0.011,27,0.564,28,0.308,29,0.719,42,5.945,57,0.843,71,0.577,81,2.865,82,0.287,84,0.408,87,0.227,92,0.943,102,0.006,103,0.008,104,0.006,110,4.08,115,4.738,120,4.78,139,4.504,147,3.153,165,2.865,166,2.437,174,0.906,196,2.925,198,3.001,220,1.461,771,1.486,1020,4.284,1021,6.35,1022,4.081,1023,6.582,1024,6.582,1025,6.582,1026,5.112,1027,5.112,1028,6.395,1029,6.987,1030,5.112,1031,6.501,1032,6.395,1033,7.041,1034,5.112,1035,6.395,1036,7.372,1037,7.153,1038,5.112,1039,4.49,1040,4.309,1041,3.775,1042,6.395,1043,3.53,1044,3.775,1045,5.028,1046,4.49,1047,3.53,1048,6.395,1049,6.395,1050,5.782,1051,4.49,1052,5.782,1053,6.395]],["title/modules/CaptchaModule.html",[1054,2.534,1055,2.809]],["body/modules/CaptchaModule.html",[0,0.034,3,0.194,4,0.225,5,0.119,13,0.65,23,0.449,26,0.011,57,0.65,82,0.322,84,0.449,85,0.996,87,0.194,92,0.65,102,0.007,103,0.008,104,0.007,111,3.213,165,3.149,203,4.587,215,1.882,217,2.494,235,1.104,239,1.976,240,3.917,313,0.307,349,5.578,360,2.332,422,3.466,492,2.679,493,1.424,505,2.162,603,1.828,604,1.828,636,5.16,657,1.463,760,2.057,850,5.16,926,2.782,934,3.298,1020,5.507,1031,4.485,1033,4.485,1045,5.253,1054,4.464,1055,5.749,1056,3.466,1057,5.652,1058,6.071,1059,4.935,1060,4.935,1061,4.935,1062,4.935,1063,5.578,1064,4.149,1065,5.619,1066,7.606,1067,5.619,1068,7.606,1069,6.138,1070,5.253,1071,2.782,1072,5.619,1073,4.935,1074,5.619,1075,4.935,1076,5.619,1077,3.881,1078,5.619,1079,4.935,1080,6.138,1081,5.619,1082,4.935,1083,6.138,1084,4.485]],["title/injectables/CheckCompleteBaseService.html",[196,1.734,1085,3.187]],["body/injectables/CheckCompleteBaseService.html",[0,0.044,3,0.136,4,0.158,5,0.084,8,0.292,9,0.729,13,0.64,15,1.883,17,3.443,20,0.752,21,2.727,22,4.658,23,0.678,25,1.053,26,0.011,27,0.534,28,0.317,29,0.682,30,1.34,43,0.923,44,0.912,45,1.298,57,0.962,64,1.569,65,1.229,71,0.541,76,3.474,80,4.034,82,0.238,84,0.315,86,2.034,87,0.191,90,1.298,92,0.916,97,2.338,102,0.005,103,0.007,104,0.005,109,0.922,111,2.544,117,2.456,163,1.537,174,1.227,196,2.223,197,3.601,198,2.318,199,2.727,201,4.269,202,3.248,209,0.473,213,2.937,214,3.939,215,1.323,220,1.508,221,5.525,222,5.525,223,5.098,224,5.525,227,3.469,239,1.564,272,5.304,273,3.101,309,3.182,326,1.402,360,2.296,362,3.101,385,1.75,409,3.101,448,1.445,600,0.9,657,1.441,734,3.879,760,2.025,771,2.195,781,2.223,794,3.821,795,3.714,845,3.413,852,6.029,940,2.74,1085,4.086,1086,6.805,1087,3.152,1088,4.86,1089,4.417,1090,4.086,1091,2.969,1092,5.61,1093,5.61,1094,5.61,1095,5.61,1096,6.079,1097,5.525,1098,5.525,1099,5.61,1100,5.61,1101,5.533,1102,3.949,1103,3.949,1104,3.949,1105,3.949,1106,3.939,1107,2.74,1108,3.821,1109,3.949,1110,4.417,1111,5.111,1112,3.949,1113,4.417,1114,3.821,1115,5.577,1116,3.949,1117,3.949,1118,4.86,1119,3.949,1120,4.86,1121,4.86,1122,4.086,1123,3.949,1124,4.86,1125,4.86,1126,3.949,1127,4.716,1128,3.949,1129,3.949,1130,3.949,1131,3.949,1132,3.949,1133,5.61,1134,3.152,1135,3.469,1136,3.469,1137,2.436,1138,2.436,1139,4.86,1140,4.86,1141,5.61,1142,6.401,1143,5.61,1144,4.86,1145,4.417,1146,4.417,1147,3.821,1148,4.86,1149,3.469,1150,3.469,1151,3.469,1152,3.469,1153,3.152,1154,3.469,1155,3.469,1156,3.469,1157,3.469,1158,3.469,1159,3.469,1160,3.469,1161,3.469,1162,3.469,1163,3.469]],["title/components/CheckboxComponent.html",[313,0.236,507,1.064]],["body/components/CheckboxComponent.html",[0,0.022,3,0.126,4,0.146,5,0.111,8,0.146,9,0.689,10,1.989,11,1.316,13,0.605,20,0.711,23,0.685,25,1.022,26,0.011,27,0.568,28,0.338,29,0.709,30,1.281,33,1.156,34,1.653,36,2.237,37,1.973,43,1.158,44,1.055,45,1.38,50,1.603,52,0.924,56,1.325,57,0.852,64,1.036,65,1.284,71,0.483,82,0.228,83,1.564,84,0.291,85,0.646,87,0.181,102,0.004,103,0.006,104,0.004,109,0.851,138,1.376,148,0.576,192,2.752,204,1.325,209,0.626,215,1.751,218,1.361,220,1.397,235,1.403,239,1.888,244,3.611,246,0.851,269,0.875,287,5.6,295,0.924,313,0.386,319,2.3,380,0.851,407,1.179,409,2.043,416,1.141,423,1.325,466,0.899,467,0.976,468,0.949,469,0.976,472,1.549,473,0.665,474,1.22,476,1.065,478,1.065,481,1.739,493,0.924,494,1.399,495,0.422,496,1.837,497,1.003,498,1.003,499,0.829,500,1.003,501,0.875,502,1.003,503,0.875,504,1.003,505,0.899,506,1.003,507,1.647,508,1.003,509,0.899,510,1.003,511,0.899,512,1.438,513,0.899,514,0.949,515,1.003,516,0.899,517,1.003,518,0.851,519,1.003,520,0.899,521,1.003,522,1.003,523,0.875,524,1.003,525,0.899,526,1.003,527,0.875,528,1.003,529,0.899,530,1.681,531,0.899,532,0.851,533,0.851,534,1.438,535,0.875,536,1.003,537,0.899,538,1.003,539,0.899,540,1.003,541,0.851,542,1.003,543,0.899,544,1.003,545,0.899,546,0.899,547,1.003,548,0.875,549,0.851,550,1.003,551,0.875,552,1.003,553,0.875,554,1.003,555,0.875,556,0.949,557,0.899,558,1.003,559,0.899,560,1.003,561,0.899,562,1.003,563,0.875,564,1.003,565,0.899,566,0.949,567,0.875,568,0.875,569,0.976,570,0.628,571,0.875,572,1.003,573,0.875,574,1.003,575,0.875,576,1.003,577,0.875,578,1.003,579,0.875,580,1.003,581,0.875,582,1.003,583,0.875,584,1.003,585,0.875,586,1.003,587,0.875,588,1.003,589,0.875,590,1.003,591,0.875,592,1.003,593,0.875,594,1.003,595,0.875,596,1.003,597,0.875,598,0.976,599,1.003,611,1.255,612,1.692,614,2.237,615,2.379,616,2.108,617,1.738,618,1.603,619,1.121,642,1.153,645,2.17,646,1.221,662,0.593,694,2.171,695,1.295,696,2.171,697,1.06,754,2.321,817,1.973,818,1.973,819,1.295,820,2.372,821,1.973,822,1.857,891,4.119,898,3.225,899,1.607,928,1.857,930,1.334,931,1.257,932,1.221,933,1.334,960,1.751,972,1.857,973,3.77,991,2.17,992,2.17,994,4.88,995,3.77,996,4.88,1010,2.243,1018,4.592,1164,3.202,1165,5.228,1166,5.228,1167,3.251,1168,6.656,1169,5.228,1170,1.805,1171,3.138,1172,5.228,1173,3.646,1174,5.228,1175,3.225,1176,3.225,1177,3.646,1178,3.646,1179,3.646,1180,3.646,1181,3.646,1182,3.646,1183,3.646,1184,3.646,1185,3.646,1186,3.646,1187,5.228,1188,3.646,1189,3.646,1190,3.646,1191,5.228,1192,3.646,1193,1.805,1194,3.646,1195,3.646,1196,1.257,1197,1.376,1198,2.321,1199,1.334,1200,3.202,1201,1.676,1202,4.592,1203,4.592,1204,2.249,1205,3.646,1206,3.646,1207,3.646]],["title/components/CityComponent.html",[313,0.236,509,1.064]],["body/components/CityComponent.html",[0,0.019,3,0.112,4,0.13,5,0.101,8,0.13,9,0.631,10,1.856,11,1.03,13,0.554,20,0.651,23,0.689,25,1.083,26,0.011,27,0.593,28,0.34,29,0.729,30,1.064,33,1.059,37,1.219,43,1.126,44,1.13,45,0.898,50,1.513,52,0.819,56,1.213,57,0.886,64,0.949,65,1.315,71,0.524,82,0.235,84,0.258,85,0.573,87,0.112,92,0.374,102,0.004,103,0.006,104,0.004,117,2.125,148,0.756,178,1.341,209,0.573,220,1.16,235,1.392,246,0.754,269,0.775,295,0.819,313,0.312,319,2.491,380,0.754,400,2.937,407,1.099,416,1.083,423,1.213,466,0.797,467,0.864,468,0.841,469,0.864,472,1.445,473,0.589,474,1.213,476,0.975,478,0.975,481,1.642,493,0.819,494,1.281,495,0.374,496,1.735,497,0.888,498,0.888,499,0.734,500,0.888,501,0.775,502,0.888,503,0.775,504,0.888,505,0.797,506,0.888,507,0.797,508,0.888,509,1.555,510,0.888,511,0.797,512,1.317,513,0.797,514,0.841,515,0.888,516,0.797,517,0.888,518,0.754,519,0.888,520,0.797,521,0.888,522,0.888,523,0.775,524,0.888,525,0.797,526,0.888,527,0.775,528,0.888,529,0.797,530,1.569,531,0.797,532,0.754,533,0.754,534,1.317,535,0.775,536,0.888,537,0.797,538,0.888,539,0.797,540,0.888,541,0.754,542,0.888,543,0.797,544,0.888,545,0.797,546,0.797,547,0.888,548,0.775,549,0.754,550,0.888,551,0.775,552,0.888,553,0.775,554,0.888,555,0.775,556,0.841,557,0.797,558,0.888,559,0.797,560,0.888,561,0.797,562,0.888,563,0.775,564,0.888,565,0.797,566,0.841,567,0.775,568,0.775,569,0.864,570,0.557,571,0.775,572,0.888,573,0.775,574,0.888,575,0.775,576,0.888,577,0.775,578,0.888,579,0.775,580,0.888,581,0.775,582,0.888,583,0.775,584,0.888,585,0.775,586,0.888,587,0.775,588,0.888,589,0.775,590,0.888,591,0.775,592,0.888,593,0.775,594,0.888,595,0.775,596,0.888,597,0.775,598,0.864,599,0.888,603,1.557,604,1.557,609,4.109,611,1.369,612,1.85,616,1.966,618,1.513,619,0.993,642,1.021,646,1.118,657,0.841,659,2.617,662,0.779,694,2.026,695,1.7,696,2.026,697,0.939,719,2.054,768,1.752,771,1.658,781,1.298,817,2.152,818,1.219,819,1.7,820,2.505,821,1.219,822,1.7,823,2.201,824,1.485,825,2.054,899,0.993,904,5.009,928,1.7,930,1.182,931,1.114,932,1.082,933,1.182,952,2.81,960,1.603,972,2.24,991,2.367,992,2.367,1010,1.386,1071,2.37,1167,3.096,1170,1.599,1171,2.989,1193,1.599,1196,1.114,1197,1.219,1198,2.125,1201,1.485,1208,2.837,1209,4.787,1210,4.787,1211,3.712,1212,3.06,1213,3.06,1214,2.683,1215,4.104,1216,3.86,1217,2.622,1218,2.937,1219,2.824,1220,2.719,1221,4.787,1222,3.23,1223,3.23,1224,3.23,1225,4.787,1226,2.125,1227,3.23,1228,3.115,1229,3.23,1230,3.23,1231,4.787,1232,3.23,1233,3.23,1234,3.23,1235,1.896,1236,3.23,1237,1.896,1238,3.23,1239,3.23,1240,3.23,1241,3.23,1242,3.23,1243,3.23,1244,3.23,1245,3.23,1246,3.23,1247,2.465,1248,2.952,1249,2.569,1250,2.125,1251,3.535,1252,2.952,1253,2.706,1254,3.306,1255,3.306,1256,3.306,1257,3.23,1258,1.81,1259,3.23,1260,1.81,1261,1.257,1262,1.863,1263,1.257,1264,1.863,1265,1.863,1266,1.863,1267,1.257,1268,1.257,1269,1.863,1270,1.863,1271,1.257,1272,1.257,1273,1.257,1274,1.257,1275,1.257,1276,1.863,1277,1.806,1278,1.257,1279,1.863,1280,1.863,1281,1.257,1282,1.863,1283,1.257,1284,1.257,1285,1.257,1286,1.257,1287,2.455,1288,1.257,1289,1.257,1290,1.257,1291,1.257,1292,1.257,1293,1.257,1294,1.257,1295,1.257,1296,1.257,1297,1.257,1298,1.257,1299,1.257,1300,1.257,1301,1.257,1302,1.257,1303,1.257,1304,1.863,1305,1.257,1306,1.257,1307,1.257,1308,1.257,1309,1.257,1310,1.257,1311,1.257,1312,1.257,1313,1.257,1314,1.257,1315,1.257,1316,1.257,1317,1.257,1318,1.863,1319,1.257,1320,1.257,1321,1.257,1322,1.257,1323,1.257,1324,1.051,1325,1.257,1326,1.257,1327,1.257,1328,1.257,1329,1.257,1330,1.257,1331,1.257,1332,1.257,1333,2.231,1334,2.102,1335,1.663,1336,1.599,1337,1.663,1338,2.102,1339,2.102,1340,2.102,1341,2.102,1342,3.535,1343,3.535]],["title/classes/CommonImage.html",[0,0.026,1344,2.419]],["body/classes/CommonImage.html",[0,0.044,2,2.251,3,0.181,4,0.21,5,0.164,8,0.21,9,0.882,17,2.329,20,1.002,23,0.697,26,0.011,27,0.54,28,0.348,29,0.626,43,0.758,44,0.691,59,2.377,71,0.561,82,0.196,87,0.277,92,0.607,97,2.45,102,0.006,103,0.008,104,0.006,109,1.225,148,1.267,209,0.628,220,0.904,238,3.236,309,2.413,326,2.246,354,2.043,600,0.854,651,3.08,662,0.854,899,1.613,934,4.707,935,2.941,1324,2.398,1344,4.351,1345,3.415,1346,4.546,1347,4.623,1348,5.442,1349,5.442,1350,5.442,1351,5.442,1352,5.442,1353,4.797,1354,5.442,1355,5.442,1356,6.693,1357,5.247,1358,5.247,1359,4.788,1360,5.247,1361,5.247,1362,5.247,1363,5.247,1364,5.247,1365,5.247,1366,5.247,1367,5.247,1368,5.247,1369,3.415,1370,4.128,1371,3.236,1372,3.415,1373,3.624,1374,3.624,1375,3.624,1376,3.624,1377,3.415,1378,3.624,1379,3.624,1380,3.624,1381,3.236,1382,3.875,1383,3.875,1384,3.236,1385,3.875,1386,3.875,1387,3.875,1388,2.598,1389,2.178,1390,3.624,1391,3.236,1392,3.875,1393,3.415,1394,3.875,1395,3.875,1396,3.875,1397,3.624,1398,3.875,1399,3.875,1400,3.624,1401,3.875,1402,3.875,1403,4.788,1404,4.942,1405,4.942,1406,4.942,1407,3.929,1408,3.875,1409,4.942,1410,4.942,1411,3.875,1412,4.942,1413,4.623]],["title/classes/CommonImageProcessingError.html",[0,0.026,1381,2.662]],["body/classes/CommonImageProcessingError.html",[0,0.045,2,2.326,3,0.187,4,0.217,5,0.171,8,0.217,9,0.9,17,2.407,20,0.929,23,0.661,25,0.784,26,0.011,27,0.501,28,0.332,29,0.802,59,1.926,71,0.554,81,3.039,82,0.202,87,0.28,92,0.628,97,1.984,102,0.006,103,0.008,104,0.006,148,1.182,209,0.649,220,1.395,238,3.344,309,2.493,326,2.236,354,2.11,600,0.882,651,3.182,662,0.882,899,1.667,934,4.392,935,3.039,1324,1.764,1344,4.635,1345,3.528,1346,4.215,1347,3.744,1348,4.003,1349,4.003,1350,4.003,1351,4.003,1352,4.003,1353,3.528,1354,4.003,1355,4.003,1359,5.1,1369,3.528,1370,4.215,1371,3.344,1372,3.528,1373,3.744,1374,3.744,1375,3.744,1376,3.744,1377,3.528,1378,3.744,1379,3.744,1380,3.744,1381,4.215,1382,5.525,1383,5.525,1384,3.344,1385,4.003,1386,4.003,1387,4.003,1388,2.684,1389,2.25,1390,3.744,1391,3.344,1392,4.003,1393,3.528,1394,4.003,1395,4.003,1396,5.801,1397,5.593,1398,4.003,1399,4.003,1400,3.744,1401,4.003,1402,4.003,1403,4.845,1404,5.046,1405,5.046,1406,5.046,1407,4.011,1408,4.003,1409,5.046,1410,5.046,1411,4.003,1412,5.046,1413,4.719,1414,5.421,1415,6.833,1416,5.421,1417,6.833,1418,5.421]],["title/interfaces/CommonImageScaleFactors.html",[600,0.702,1403,2.662]],["body/interfaces/CommonImageScaleFactors.html",[0,0.046,3,0.193,4,0.224,5,0.168,8,0.224,9,0.918,13,0.807,17,2.484,20,0.761,23,0.447,25,0.809,26,0.011,27,0.511,28,0.304,29,0.524,57,0.648,59,1.988,71,0.545,82,0.209,87,0.282,92,0.648,97,2.048,102,0.007,103,0.008,104,0.007,148,1.2,209,0.67,220,0.964,238,3.452,309,2.573,326,2.267,354,2.178,600,0.91,602,2.048,651,3.285,662,0.91,899,1.72,934,4.456,935,3.137,1324,1.821,1344,4.255,1345,3.642,1346,4.299,1347,3.865,1348,4.132,1349,4.132,1350,4.132,1351,4.132,1352,4.132,1353,3.642,1354,4.132,1355,4.132,1359,4.682,1369,3.642,1370,4.299,1371,3.452,1372,3.642,1373,3.865,1374,3.865,1375,3.865,1376,3.865,1377,3.642,1378,3.865,1379,3.865,1380,3.865,1381,3.452,1382,4.132,1383,4.132,1384,3.452,1385,4.132,1386,4.132,1387,4.132,1388,2.771,1389,2.323,1390,3.865,1391,3.452,1392,4.132,1393,3.642,1394,4.132,1395,4.132,1396,4.132,1397,3.865,1398,4.132,1399,4.132,1400,3.865,1401,4.132,1402,4.132,1403,5.141,1404,6.036,1405,6.036,1406,5.606,1407,4.091,1408,4.132,1409,5.147,1410,5.147,1411,4.132,1412,5.147,1413,5.243,1419,6.123,1420,5.596]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.026,1407,2.534]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.045,2,2.358,3,0.19,4,0.22,5,0.167,8,0.22,9,0.908,13,0.798,17,2.44,20,0.937,23,0.631,25,0.996,26,0.011,27,0.552,28,0.317,29,0.645,57,0.636,59,1.952,71,0.543,82,0.205,87,0.281,92,0.636,97,2.012,102,0.007,103,0.008,104,0.007,148,1.19,209,0.825,220,0.947,238,3.39,309,2.527,326,2.271,354,2.14,600,0.894,651,3.226,662,0.894,899,1.69,934,4.42,935,3.081,1324,1.788,1344,4.221,1345,3.577,1346,4.251,1347,3.796,1348,4.059,1349,4.059,1350,4.059,1351,4.059,1352,4.059,1353,3.577,1354,4.059,1355,4.059,1359,4.644,1369,3.577,1370,4.251,1371,3.39,1372,3.577,1373,3.796,1374,3.796,1375,3.796,1376,3.796,1377,3.577,1378,3.796,1379,3.796,1380,3.796,1381,3.39,1382,4.059,1383,4.059,1384,3.39,1385,4.059,1386,4.059,1387,4.059,1388,2.722,1389,2.281,1390,3.796,1391,3.39,1392,4.059,1393,3.577,1394,4.059,1395,4.059,1396,4.059,1397,3.796,1398,4.059,1399,4.059,1400,3.796,1401,4.059,1402,4.059,1403,5.118,1404,5.83,1405,5.83,1406,5.56,1407,4.42,1408,5.09,1409,5.83,1410,5.09,1411,5.09,1412,5.09,1413,5.2,1419,6.054,1421,6.893,1422,5.496,1423,5.496]],["title/interfaces/CommonLogMessage.html",[600,0.702,1424,3.187]],["body/interfaces/CommonLogMessage.html",[0,0.025,3,0.228,4,0.169,5,0.089,8,0.169,9,0.762,15,2.006,17,3.309,23,0.336,26,0.011,27,0.484,28,0.285,29,0.394,50,1.789,71,0.532,77,2.469,80,2.862,82,0.278,84,0.336,87,0.2,88,2.594,92,0.944,102,0.005,103,0.007,104,0.005,105,3.24,107,2.083,110,3.702,111,2.658,112,2.594,114,2.905,115,3.762,118,4.614,120,3.393,122,4.299,124,4.912,125,4.877,132,3.565,134,2.181,140,2.594,141,4.299,145,2.738,147,2.594,148,1.304,150,2.905,151,1.805,155,3.992,161,4.074,165,2.357,166,2.006,170,2.658,174,1.171,185,2.594,192,2.25,195,5.688,196,2.323,215,1.409,220,1.138,275,2.905,300,2.48,336,1.805,352,2.469,360,1.746,379,2.658,385,1.33,396,2.166,402,3.106,416,0.608,448,2.116,600,0.94,602,1.539,646,0.982,648,2.083,650,2.357,657,2.055,662,0.94,688,3.157,746,1.881,760,1.539,764,2.469,765,2.357,771,2.167,792,2.738,843,2.257,880,4.614,884,3.106,927,2.756,942,2.738,951,3.358,972,2.96,1040,3.986,1043,3.992,1137,2.594,1138,2.594,1176,2.594,1196,1.45,1216,2.977,1250,1.867,1324,1.881,1369,2.738,1370,2.594,1393,4.299,1424,5.826,1425,3.106,1426,3.358,1427,4.206,1428,4.614,1429,5.078,1430,2.905,1431,3.393,1432,2.738,1433,3.358,1434,4.614,1435,3.694,1436,6.548,1437,3.694,1438,5.078,1439,5.078,1440,6.247,1441,5.078,1442,2.905,1443,5.078,1444,5.078,1445,5.078,1446,3.694,1447,5.078,1448,3.694,1449,4.299,1450,4.376,1451,3.694,1452,3.694,1453,5.078,1454,5.272,1455,4.614,1456,5.272,1457,2.594,1458,4.614,1459,3.106,1460,3.358,1461,3.694,1462,3.694,1463,3.393,1464,3.694,1465,3.694,1466,3.694,1467,3.694,1468,3.694,1469,3.694,1470,3.694,1471,3.694,1472,2.594,1473,3.694,1474,3.762,1475,3.694,1476,3.694,1477,3.694,1478,3.694,1479,3.694,1480,3.694,1481,3.694,1482,3.694,1483,3.694,1484,3.106,1485,3.106,1486,3.106,1487,5.078,1488,2.738,1489,3.694,1490,3.694,1491,3.694,1492,3.694,1493,3.106,1494,3.694,1495,3.694,1496,3.694,1497,3.694,1498,3.358,1499,3.565,1500,2.469,1501,3.358,1502,3.106,1503,2.905,1504,3.694,1505,3.358,1506,3.694,1507,3.694,1508,4.614,1509,2.738,1510,3.358,1511,3.106,1512,4.614,1513,3.694,1514,3.358,1515,3.358,1516,3.358,1517,3.694,1518,3.358,1519,3.694,1520,5.078,1521,3.106,1522,3.694,1523,3.358,1524,2.738,1525,3.694,1526,3.358,1527,3.694,1528,3.694,1529,3.694,1530,3.694,1531,4.614,1532,3.694,1533,3.694,1534,3.694,1535,3.694,1536,3.694,1537,3.694,1538,3.694,1539,2.905,1540,3.694,1541,3.106,1542,3.694]],["title/injectables/CommonLogger.html",[196,1.734,1432,2.809]],["body/injectables/CommonLogger.html",[0,0.018,3,0.188,4,0.12,5,0.063,8,0.12,9,0.595,13,0.63,15,3.106,17,3.785,20,0.406,23,0.681,25,1.209,26,0.011,27,0.616,28,0.343,29,0.779,30,0.472,43,0.787,44,0.717,45,0.56,50,1.834,57,0.958,65,1.192,71,0.525,72,3.335,77,2.651,80,3.627,81,1.675,82,0.243,84,0.239,87,0.156,88,1.843,92,0.868,102,0.004,103,0.005,104,0.004,105,4.202,107,1.48,109,1.271,110,3.987,111,2.503,112,4.018,113,3.605,114,4.499,115,4.63,116,3.605,117,2.005,118,5.2,119,2.386,120,3.561,122,4.459,124,5.058,125,5.059,126,2.386,127,2.386,128,3.335,130,4.346,131,2.207,132,4.018,133,3.119,134,2.458,135,1.843,136,2.386,137,2.207,138,1.128,139,3.677,140,3.358,141,4.879,143,2.207,144,2.386,145,3.543,146,2.064,147,3.358,148,1.3,149,2.386,150,3.119,151,2.336,152,2.386,153,2.386,154,2.386,155,4.19,157,2.386,159,2.625,161,4.226,165,1.675,166,1.425,170,2.077,174,0.965,185,2.785,192,2.362,195,5.059,196,1.815,198,1.754,215,1.512,220,1.292,275,3.119,300,2.336,336,1.282,352,2.651,360,1.874,379,2.79,385,1.428,396,1.539,402,2.207,416,0.653,448,1.094,600,0.735,646,1.055,648,2.236,650,2.531,657,2.022,662,0.987,688,3.041,746,1.771,760,1.653,764,2.651,765,2.531,771,2.357,792,2.939,843,2.424,880,4.843,884,3.335,927,2.153,942,2.939,951,3.605,972,2.757,1040,3.84,1043,3.119,1137,1.843,1138,1.843,1176,1.843,1196,2.526,1216,3.124,1250,2.005,1324,1.771,1369,2.939,1370,1.843,1393,4.459,1424,5.81,1425,2.207,1428,2.386,1429,2.625,1430,2.064,1431,2.651,1432,2.939,1433,3.605,1434,4.346,1435,3.967,1436,6.433,1437,3.967,1438,5.329,1439,5.329,1440,6.433,1441,5.329,1442,2.064,1443,3.967,1444,3.967,1445,5.329,1446,3.967,1447,3.967,1448,3.967,1449,4.63,1450,4.314,1451,2.625,1452,4.782,1453,3.967,1454,5.2,1455,4.843,1456,4.843,1457,2.785,1458,4.843,1459,3.335,1460,3.605,1461,3.967,1462,3.967,1463,3.561,1464,3.967,1465,3.967,1466,3.967,1467,2.625,1468,2.625,1469,3.967,1470,2.625,1471,2.625,1472,2.785,1473,3.967,1474,3.543,1475,3.967,1476,3.967,1477,3.967,1478,2.625,1479,2.625,1480,2.625,1481,2.625,1482,2.625,1483,3.967,1484,3.335,1485,3.335,1486,3.335,1487,5.329,1488,2.939,1489,3.967,1490,3.967,1491,2.625,1492,2.625,1493,2.207,1494,2.625,1495,4.782,1496,2.625,1497,2.625,1498,2.386,1499,2.785,1500,1.754,1501,2.386,1502,2.207,1503,2.064,1504,2.625,1505,2.386,1506,2.625,1507,2.625,1508,3.605,1509,1.945,1510,2.386,1511,2.207,1512,3.605,1513,2.625,1514,2.386,1515,2.386,1516,2.386,1517,2.625,1518,2.386,1519,2.625,1520,4.782,1521,3.335,1522,3.967,1523,3.605,1524,2.939,1525,3.967,1526,3.605,1527,5.329,1528,2.625,1529,2.625,1530,3.967,1531,4.843,1532,2.625,1533,3.967,1534,3.967,1535,3.967,1536,3.967,1537,2.625,1538,2.625,1539,2.064,1540,2.625,1541,2.207,1542,2.625,1543,4.516,1544,4.516,1545,4.516,1546,4.516,1547,4.516,1548,4.516,1549,4.516,1550,2.988,1551,2.988,1552,2.988,1553,2.988,1554,2.988,1555,2.988,1556,2.988,1557,2.988,1558,2.988,1559,2.988,1560,2.988,1561,2.988,1562,2.988,1563,2.625,1564,2.625,1565,2.625,1566,2.625,1567,2.988,1568,2.625,1569,2.625,1570,2.988,1571,2.988,1572,2.988,1573,2.988,1574,2.988,1575,2.988,1576,2.988,1577,2.988,1578,2.988]],["title/classes/Container.html",[0,0.026,1579,2.662]],["body/classes/Container.html",[0,0.035,2,2.473,3,0.285,4,0.231,5,0.122,8,0.231,9,0.936,13,0.822,17,3.415,23,0.615,25,1.026,26,0.011,27,0.52,28,0.309,29,0.664,57,0.822,59,2.522,65,1.155,71,0.552,76,4.155,82,0.215,86,2.969,87,0.245,92,0.822,102,0.007,103,0.008,104,0.007,109,1.346,151,3.046,163,2.764,236,5.667,305,5.667,364,3.979,483,4.952,566,1.501,567,1.383,600,1.155,618,1.704,705,3.152,780,3.981,781,2.316,1106,4.745,1579,4.952,1580,4.602,1581,6.236,1582,6.236,1583,6.141,1584,7.1,1585,6.758,1586,5.007,1587,5.765,1588,6.236,1589,6.236,1590,5.765,1591,6.236,1592,6.236,1593,5.929,1594,5.765,1595,5.765,1596,5.765,1597,6.236,1598,5.063,1599,5.063,1600,5.063,1601,5.063,1602,5.063,1603,5.063,1604,6.236,1605,5.063]],["title/components/CoreBreadcrumbComponent.html",[313,0.236,513,1.064]],["body/components/CoreBreadcrumbComponent.html",[0,0.028,3,0.159,4,0.184,5,0.13,8,0.184,11,1.32,13,0.71,20,0.939,23,0.49,26,0.011,27,0.506,29,0.574,34,1.452,41,4.897,52,1.164,56,1.555,57,0.532,59,2.179,64,1.216,65,0.747,79,3.784,82,0.171,84,0.367,87,0.212,102,0.005,103,0.007,104,0.005,109,1.072,148,0.726,209,0.734,215,2.314,235,1.422,239,1.735,246,1.072,269,1.102,278,3.784,295,1.164,306,4.53,313,0.377,352,3.601,378,3.16,380,1.072,385,1.94,386,3.439,387,4.897,393,5.389,397,4.53,407,1.183,423,1.869,466,1.132,467,1.229,468,1.196,469,1.229,472,1.751,473,0.837,474,1.232,476,1.25,478,1.25,481,1.92,493,1.164,494,1.642,495,0.532,496,2.028,497,1.263,498,1.263,499,1.044,500,1.263,501,1.102,502,1.263,503,1.102,504,1.263,505,1.132,506,1.263,507,1.132,508,1.263,509,1.132,510,1.263,511,1.132,512,1.688,513,1.818,514,2.102,515,1.263,516,1.132,517,1.263,518,1.072,519,1.263,520,1.132,521,1.263,522,1.263,523,1.102,524,1.263,525,1.132,526,1.263,527,1.102,528,1.263,529,1.132,530,1.9,531,1.132,532,1.072,533,1.072,534,1.688,535,1.102,536,1.263,537,1.132,538,1.263,539,1.132,540,1.263,541,1.072,542,1.263,543,1.132,544,1.263,545,1.132,546,1.132,547,1.263,548,1.102,549,1.072,550,1.263,551,1.102,552,1.263,553,1.102,554,1.263,555,1.102,556,1.196,557,1.132,558,1.263,559,1.132,560,1.263,561,1.132,562,1.263,563,1.102,564,1.263,565,1.132,566,1.196,567,1.102,568,1.102,569,1.229,570,0.791,571,1.102,572,1.263,573,1.102,574,1.263,575,1.102,576,1.263,577,1.102,578,1.263,579,1.102,580,1.263,581,1.102,582,1.263,583,1.102,584,1.263,585,1.102,586,1.263,587,1.102,588,1.263,589,1.102,590,1.263,591,1.102,592,1.263,593,1.102,594,1.263,595,1.102,596,1.263,597,1.102,598,1.229,599,1.263,603,1.996,604,1.996,618,1.77,686,3.16,845,3.784,1488,3.993,1606,6.068,1607,5.515,1608,4.034,1609,5.445,1610,8.202,1611,7.374,1612,6.135,1613,6.135,1614,6.135,1615,6.135,1616,6.135,1617,6.135,1618,3.993,1619,6.135,1620,6.135,1621,6.135,1622,6.135,1623,6.135,1624,6.135,1625,6.135,1626,4.592,1627,4.592]],["title/interfaces/CountryList.html",[600,0.702,624,2.809]],["body/interfaces/CountryList.html",[0,0.012,3,0.067,4,0.078,5,0.041,8,0.078,9,0.423,10,0.631,20,0.264,26,0.011,28,0.129,29,0.3,30,0.752,43,0.28,44,0.885,45,0.601,50,0.984,65,0.775,71,0.449,82,0.178,84,0.155,85,0.344,87,0.196,90,0.364,92,0.371,102,0.002,103,0.004,104,0.002,109,2.126,148,0.307,174,0.844,178,0.805,209,0.232,213,0.892,220,0.334,235,0.307,313,0.175,319,0.631,382,2.111,383,0.961,391,1.704,400,0.999,416,0.97,468,0.505,472,0.813,474,0.264,476,0.395,478,0.395,481,0.505,516,0.478,600,0.667,602,0.71,603,1.044,604,1.044,609,1.041,611,0.984,612,1.336,616,1.106,618,0.77,619,0.596,624,3.432,625,1.652,626,1.34,627,2.215,646,0.453,657,0.505,659,1.976,662,0.858,687,2.087,693,1.088,694,0.689,695,1.139,696,0.689,697,0.564,719,0.832,768,1.5,771,0.564,781,0.78,795,1.041,799,2.368,802,1.433,817,0.732,819,1.139,820,1.691,822,1.139,823,0.892,824,0.892,825,0.832,899,0.596,906,4.631,952,1.139,972,1.456,975,1.704,991,0.805,992,0.805,1071,1.588,1167,1.475,1171,1.424,1198,1.424,1201,0.892,1211,1.263,1212,1.041,1213,1.041,1215,1.263,1216,2.452,1217,0.892,1219,0.961,1220,0.925,1226,0.861,1247,0.999,1248,1.197,1249,1.041,1250,0.861,1252,1.197,1253,1.376,1254,1.34,1255,1.34,1256,1.34,1261,0.755,1262,1.248,1263,0.755,1264,1.248,1265,1.248,1266,1.248,1267,0.755,1268,0.755,1269,1.248,1270,1.248,1271,0.755,1272,0.755,1273,0.755,1274,0.755,1275,0.755,1276,1.248,1277,1.21,1278,0.755,1279,1.248,1280,1.248,1281,0.755,1282,1.248,1283,0.755,1284,0.755,1285,0.755,1286,0.755,1287,1.853,1288,0.755,1289,0.755,1290,0.755,1291,0.755,1292,0.755,1293,0.755,1294,0.755,1295,0.755,1296,0.755,1297,0.755,1298,0.755,1299,0.755,1300,0.755,1301,0.755,1302,0.755,1303,0.755,1304,1.248,1305,0.755,1306,0.755,1307,0.755,1308,0.755,1309,0.755,1310,0.755,1311,0.755,1312,0.755,1313,0.755,1314,0.755,1315,0.755,1316,0.755,1317,0.755,1318,1.248,1319,0.755,1320,0.755,1321,0.755,1322,0.755,1323,0.755,1324,0.631,1325,0.755,1326,0.755,1327,0.755,1328,0.755,1329,0.755,1330,0.755,1331,0.755,1332,0.755,1334,1.263,1335,0.999,1336,0.961,1337,0.999,1338,1.263,1339,1.263,1340,1.263,1341,1.263,1628,1.549,1629,4.099,1630,7.998,1631,1.94,1632,1.94,1633,3.207,1634,1.94,1635,1.94,1636,1.94,1637,1.94,1638,7.387,1639,1.94,1640,1.94,1641,1.94,1642,1.94,1643,1.94,1644,1.94,1645,3.207,1646,1.94,1647,1.94,1648,1.94,1649,1.94,1650,1.94,1651,1.94,1652,1.94,1653,1.94,1654,1.94,1655,1.94,1656,1.94,1657,1.94,1658,1.94,1659,1.94,1660,1.94,1661,1.94,1662,1.94,1663,1.94,1664,1.94,1665,1.94,1666,1.94,1667,1.94,1668,1.94,1669,1.94,1670,1.94,1671,1.94,1672,1.94,1673,1.94,1674,1.94,1675,1.94,1676,1.94,1677,1.94,1678,1.94,1679,1.94,1680,1.94,1681,1.94,1682,1.94,1683,1.94,1684,1.94,1685,1.94,1686,1.94,1687,1.94,1688,1.94,1689,1.94,1690,1.94,1691,1.94,1692,3.207,1693,1.94,1694,1.94,1695,1.94,1696,1.94,1697,1.94,1698,1.94,1699,1.94,1700,1.94,1701,1.94,1702,3.801,1703,1.94,1704,1.94,1705,1.94,1706,2.215,1707,1.94,1708,1.94,1709,3.207,1710,1.94,1711,1.94,1712,1.94,1713,1.94,1714,1.94,1715,1.94,1716,1.94,1717,1.94,1718,1.94,1719,1.94,1720,1.94,1721,1.94,1722,1.94,1723,1.94,1724,1.94,1725,1.94,1726,1.94,1727,1.94,1728,1.94,1729,1.704,1730,1.94,1731,1.94,1732,7.166,1733,1.94,1734,1.94,1735,1.94,1736,1.94,1737,1.94,1738,3.207,1739,1.94,1740,1.94,1741,1.94,1742,1.94,1743,1.94,1744,1.94,1745,1.94,1746,1.94,1747,1.94,1748,1.94,1749,3.207,1750,1.94,1751,4.099,1752,1.94,1753,1.94,1754,1.94,1755,1.94,1756,1.94,1757,1.94,1758,1.94,1759,1.94,1760,1.94,1761,1.94,1762,1.94,1763,1.94,1764,1.94,1765,1.94,1766,1.94,1767,1.94,1768,1.94,1769,1.94,1770,1.94,1771,1.94,1772,1.94,1773,1.94,1774,1.94,1775,1.94,1776,1.94,1777,1.94,1778,1.94,1779,1.94,1780,1.94,1781,1.94,1782,1.94,1783,1.94,1784,1.94,1785,1.94,1786,4.761,1787,1.94,1788,1.94,1789,1.94,1790,1.94,1791,1.94,1792,1.94,1793,1.94,1794,1.94,1795,1.94,1796,1.94,1797,1.94,1798,1.94,1799,1.94,1800,1.94,1801,1.94,1802,1.94,1803,1.94,1804,1.94,1805,4.761,1806,1.94,1807,1.94,1808,1.94,1809,1.94,1810,1.94,1811,1.549,1812,1.94,1813,1.94,1814,1.94,1815,1.94,1816,1.94,1817,3.207,1818,1.94,1819,1.94,1820,1.94,1821,1.94,1822,1.704,1823,1.94,1824,1.94,1825,1.94,1826,1.94,1827,1.94,1828,1.94,1829,1.94,1830,1.94,1831,1.94,1832,1.94,1833,1.94,1834,1.94,1835,1.94,1836,1.94,1837,1.94,1838,1.94,1839,1.94,1840,1.94,1841,1.94,1842,1.94,1843,1.94,1844,1.94,1845,1.94,1846,1.94,1847,1.94,1848,1.94,1849,1.94,1850,1.94,1851,1.94,1852,1.94,1853,1.94,1854,1.94,1855,1.94,1856,1.94,1857,1.94,1858,1.94,1859,1.94,1860,1.94,1861,1.94,1862,1.94,1863,1.94,1864,1.94,1865,1.94,1866,1.94,1867,1.94,1868,1.94,1869,1.94,1870,1.94,1871,1.94,1872,1.94,1873,1.94,1874,1.94,1875,1.94,1876,1.94,1877,1.94,1878,1.94,1879,1.94,1880,1.94,1881,1.94,1882,1.94,1883,1.94,1884,1.94,1885,1.94,1886,1.94,1887,1.94,1888,1.94,1889,1.94,1890,1.94,1891,1.94,1892,1.94,1893,3.207,1894,3.207,1895,1.94,1896,1.94,1897,1.94,1898,1.94,1899,1.94,1900,3.207,1901,1.94,1902,1.94,1903,1.94,1904,1.94,1905,1.94,1906,1.94,1907,1.94,1908,1.94,1909,1.94,1910,1.94,1911,1.94,1912,1.94,1913,1.94,1914,1.94,1915,1.94,1916,1.94,1917,1.94,1918,1.94,1919,1.94,1920,1.94,1921,1.94,1922,1.94,1923,1.94,1924,1.94,1925,1.94,1926,1.94,1927,1.94,1928,1.94,1929,1.94,1930,1.94,1931,1.94,1932,1.94,1933,1.94,1934,1.94,1935,1.94,1936,1.94,1937,1.94,1938,1.94,1939,1.94,1940,1.94,1941,1.94,1942,1.94,1943,1.94,1944,1.94,1945,1.94,1946,1.94,1947,1.94,1948,1.94,1949,1.94,1950,3.601,1951,1.94,1952,1.94,1953,1.94,1954,1.94,1955,1.94,1956,1.94,1957,1.94,1958,1.94,1959,1.94,1960,1.94,1961,1.94,1962,1.94,1963,1.94,1964,1.94,1965,1.94,1966,1.94,1967,3.207,1968,1.94,1969,1.94,1970,1.94,1971,1.94,1972,1.94,1973,1.94,1974,1.94,1975,1.94,1976,1.94,1977,1.94,1978,1.94,1979,1.94,1980,1.94,1981,1.94,1982,1.94,1983,1.94,1984,1.94,1985,1.94,1986,1.94,1987,1.94,1988,1.94,1989,1.94,1990,1.94,1991,1.94,1992,1.94,1993,1.94,1994,1.94,1995,1.94,1996,1.94,1997,1.94,1998,1.94,1999,1.94,2000,1.94,2001,1.94,2002,1.94,2003,1.94,2004,1.704,2005,1.94,2006,1.94,2007,1.94,2008,1.94,2009,1.94,2010,1.94,2011,1.94,2012,1.94,2013,1.94,2014,1.94,2015,1.94,2016,1.94,2017,1.94,2018,1.94,2019,1.94,2020,1.94,2021,1.94,2022,1.94,2023,1.94,2024,1.94,2025,1.94,2026,1.94,2027,1.94,2028,1.94,2029,1.94,2030,1.94,2031,1.94,2032,1.94,2033,6.01,2034,1.94,2035,1.94,2036,1.94,2037,1.94,2038,1.94,2039,1.94,2040,1.94,2041,1.94,2042,1.94,2043,1.94,2044,1.94,2045,1.94,2046,1.94,2047,1.94,2048,2.817,2049,1.94,2050,1.94,2051,1.94,2052,1.94,2053,1.94,2054,1.94,2055,1.94,2056,1.94,2057,1.94,2058,1.94,2059,1.94,2060,1.94,2061,1.94,2062,1.94,2063,1.94,2064,1.94,2065,1.94,2066,1.94,2067,1.94,2068,1.94,2069,1.94,2070,1.94,2071,1.94,2072,1.94,2073,1.94,2074,1.94,2075,1.94,2076,1.94,2077,1.94,2078,1.94,2079,1.94,2080,1.94,2081,1.94,2082,1.94,2083,1.94,2084,1.94,2085,1.94,2086,1.94,2087,1.94,2088,1.94,2089,4.761,2090,1.94,2091,1.94,2092,1.94,2093,1.94,2094,3.207,2095,1.94,2096,1.94,2097,1.94,2098,1.94,2099,1.94,2100,1.94,2101,1.94,2102,1.94,2103,1.94,2104,1.94,2105,1.94,2106,1.94,2107,1.94,2108,1.94,2109,1.94,2110,1.94,2111,1.94,2112,1.94,2113,1.94,2114,1.94,2115,3.207,2116,1.94,2117,1.94,2118,1.94,2119,1.94,2120,1.94,2121,1.94,2122,5.272,2123,1.94,2124,1.94,2125,1.94,2126,1.94,2127,1.94,2128,1.94,2129,1.94,2130,1.94,2131,1.94,2132,1.94,2133,1.94,2134,1.94,2135,1.94,2136,1.94,2137,1.94,2138,1.94,2139,1.94,2140,1.94,2141,1.94,2142,1.94,2143,1.94,2144,1.94,2145,1.94,2146,1.94,2147,1.94,2148,1.94,2149,1.94,2150,1.94,2151,1.94,2152,1.94,2153,1.94,2154,1.94,2155,1.94,2156,1.94,2157,1.94,2158,1.94,2159,1.94,2160,1.94,2161,1.94,2162,1.94,2163,1.94,2164,1.94,2165,1.94,2166,1.94,2167,1.94,2168,1.94,2169,3.207,2170,1.94,2171,1.94,2172,1.94,2173,1.94,2174,1.94,2175,1.94,2176,1.94,2177,1.94,2178,1.94,2179,1.94,2180,1.94,2181,1.94,2182,1.94,2183,1.94,2184,1.549,2185,1.94,2186,1.94,2187,1.94,2188,1.94,2189,1.94,2190,1.549]],["title/components/DateComponent.html",[313,0.236,518,1.008]],["body/components/DateComponent.html",[0,0.016,3,0.093,4,0.108,5,0.088,8,0.108,9,0.551,10,1.663,11,1.417,13,0.484,20,0.568,23,0.673,25,0.899,26,0.011,27,0.52,28,0.334,29,0.582,30,1.04,33,0.924,36,2.596,37,1.929,43,1.094,44,1.106,45,1.079,47,1.337,50,1.58,52,0.684,56,1.059,57,0.795,59,1.484,64,0.828,65,1.184,67,2.886,68,2.342,71,0.548,82,0.232,83,2.469,84,0.216,85,0.479,87,0.144,90,0.783,92,0.312,93,1.513,97,1.529,102,0.003,103,0.005,104,0.003,134,1.019,148,0.66,151,1.793,174,1.103,182,2.069,204,1.059,209,0.5,218,1.088,220,1.222,235,1.372,239,1.181,246,0.63,269,0.648,274,2.069,295,0.684,313,0.34,319,2.025,326,1.059,336,1.158,337,2.437,350,2.155,373,1.198,379,1.921,380,0.63,405,1.158,407,0.985,416,1.075,423,1.059,466,0.666,467,0.722,468,0.703,469,0.722,472,1.295,473,0.492,474,1.2,476,0.851,478,0.851,481,1.498,493,0.684,494,1.118,495,0.312,496,1.583,497,0.743,498,0.743,499,0.614,500,0.743,501,0.648,502,0.743,503,0.648,504,0.743,505,0.666,506,0.743,507,0.666,508,0.743,509,0.666,510,0.743,511,0.666,512,1.149,513,0.666,514,0.703,515,0.743,516,0.666,517,0.743,518,1.344,519,0.743,520,0.666,521,0.743,522,0.743,523,0.648,524,0.743,525,0.666,526,0.743,527,0.648,528,0.743,529,0.666,530,1.406,531,0.666,532,0.63,533,0.63,534,1.149,535,0.648,536,0.743,537,0.666,538,0.743,539,0.666,540,0.743,541,0.63,542,0.743,543,0.666,544,0.743,545,0.666,546,0.666,547,0.743,548,0.648,549,0.63,550,0.743,551,0.648,552,0.743,553,0.648,554,0.743,555,0.648,556,0.703,557,0.666,558,0.743,559,0.666,560,0.743,561,0.666,562,0.743,563,0.648,564,0.743,565,0.666,566,0.703,567,0.648,568,0.648,569,0.722,570,0.881,571,0.648,572,0.743,573,0.648,574,0.743,575,0.648,576,0.743,577,0.648,578,0.743,579,0.648,580,0.743,581,0.648,582,0.743,583,0.648,584,0.743,585,0.648,586,0.743,587,0.648,588,0.743,589,0.648,590,0.743,591,0.648,592,0.743,593,0.648,594,0.743,595,0.648,596,0.743,597,0.648,598,0.722,599,0.743,600,0.439,603,1.359,604,1.359,611,1.003,612,1.458,614,1.871,615,1.99,618,1.381,619,0.83,640,1.337,641,1.513,642,1.321,643,1.584,644,1.39,645,1.734,646,0.976,648,2.069,657,1.847,662,0.439,697,0.785,734,2.342,746,2.025,748,2.342,760,1.529,765,2.342,771,2.162,899,2.023,924,1.449,925,1.584,926,1.337,927,2.437,928,1.484,930,0.988,931,0.931,932,0.904,933,0.988,949,4.546,960,1.399,973,1.665,1091,2.242,1175,4.233,1196,0.931,1197,1.019,1204,4.059,1226,2.922,1261,1.051,1262,1.626,1263,1.051,1264,1.626,1265,1.626,1266,1.626,1267,1.051,1268,1.051,1269,1.626,1270,1.626,1271,1.051,1272,1.051,1273,1.051,1274,1.051,1275,1.051,1276,1.626,1277,1.577,1278,1.051,1279,1.626,1280,1.626,1281,1.051,1282,1.626,1283,1.051,1284,1.051,1285,1.051,1286,1.051,1287,2.24,1288,1.051,1289,1.051,1290,1.051,1291,1.051,1292,1.051,1293,1.051,1294,1.051,1295,1.051,1296,1.051,1297,1.051,1298,1.051,1299,1.051,1300,1.051,1301,1.051,1302,1.051,1303,1.051,1304,1.626,1305,1.051,1306,1.051,1307,1.051,1308,1.051,1309,1.051,1310,1.051,1311,1.051,1312,1.051,1313,1.051,1314,1.051,1315,1.051,1316,1.051,1317,1.051,1318,1.626,1319,1.051,1320,1.051,1321,1.051,1322,1.051,1323,1.051,1324,0.878,1325,1.051,1326,1.051,1327,1.051,1328,1.051,1329,1.051,1330,1.051,1331,1.051,1332,1.051,1388,1.337,1389,2.583,1431,2.452,1463,4.273,1472,1.665,2191,2.155,2192,3.67,2193,3.67,2194,4.49,2195,5.467,2196,4.49,2197,4.49,2198,5.467,2199,4.49,2200,5.054,2201,4.49,2202,4.49,2203,4.49,2204,4.49,2205,5.054,2206,5.054,2207,3.327,2208,4.49,2209,4.49,2210,4.08,2211,2.699,2212,3.53,2213,3.745,2214,4.178,2215,3.153,2216,2.699,2217,2.699,2218,3.53,2219,2.699,2220,2.699,2221,2.699,2222,5.254,2223,2.699,2224,3.335,2225,2.699,2226,2.699,2227,2.699,2228,2.699,2229,2.452,2230,3.085,2231,2.699,2232,2.699,2233,2.699,2234,4.163,2235,5.254,2236,5.781,2237,2.699,2238,2.699,2239,4.366,2240,2.699,2241,2.699,2242,3.689,2243,2.699,2244,3.085,2245,2.577,2246,3.085,2247,3.335,2248,3.67,2249,3.085,2250,3.085,2251,3.67,2252,2.699,2253,3.67,2254,2.699,2255,2.699,2256,2.699,2257,2.699,2258,3.67,2259,2.699,2260,3.67,2261,3.67,2262,3.67,2263,3.67,2264,3.67,2265,3.67,2266,3.67,2267,3.67,2268,3.67,2269,3.67,2270,3.67,2271,2.699,2272,2.699,2273,2.699,2274,3.67,2275,2.699,2276,2.699,2277,2.371,2278,2.155,2279,3.335,2280,3.085,2281,3.085,2282,2.371,2283,3.085,2284,3.085,2285,1.993,2286,2.155,2287,1.198,2288,2.886,2289,2.371,2290,2.155,2291,3.67,2292,2.371,2293,3.67,2294,2.371,2295,3.67,2296,2.371,2297,4.49,2298,2.371,2299,5.254,2300,3.67,2301,3.67,2302,4.49,2303,2.371,2304,3.335,2305,3.67,2306,3.085,2307,2.577,2308,3.335,2309,3.67,2310,2.371,2311,2.371,2312,3.335,2313,2.371,2314,2.371,2315,4.49,2316,1.993,2317,1.241,2318,1.993,2319,3.67,2320,3.67,2321,3.67,2322,3.67,2323,3.67,2324,3.67,2325,3.67]],["title/interfaces/DateErrorMsg.html",[600,0.702,2218,2.981]],["body/interfaces/DateErrorMsg.html",[0,0.023,3,0.129,4,0.15,5,0.079,8,0.15,9,0.703,10,1.22,11,0.807,20,0.51,26,0.011,28,0.306,29,0.771,30,0.981,36,2.475,43,0.542,44,1.047,45,1,47,1.856,50,1.834,59,1.332,65,1.01,67,3.684,68,2.989,71,0.563,82,0.267,83,2.902,84,0.299,85,0.665,87,0.184,90,0.703,92,0.434,93,2.101,97,1.952,102,0.004,103,0.006,104,0.004,109,0.876,134,1.415,148,0.592,151,1.608,174,1.267,182,2.641,204,0.95,209,0.449,218,0.976,220,0.919,235,0.592,239,1.508,274,1.856,313,0.39,319,1.22,326,0.95,336,1.608,337,2.543,350,2.993,373,1.664,379,1.724,405,1.608,416,1.148,472,1.352,474,0.51,476,0.764,478,0.764,481,0.976,518,0.876,570,0.646,600,0.61,602,1.372,603,1.735,604,1.735,611,1.28,612,1.573,614,1.952,615,2.076,618,1.28,619,1.152,640,1.856,641,2.101,642,1.186,643,2.201,644,1.931,645,1.556,646,0.876,648,1.856,657,1.861,662,0.61,697,1.09,734,2.101,746,2.02,748,2.101,760,1.372,765,2.989,771,1.966,899,1.909,924,2.862,925,3.131,926,2.641,927,3.225,949,4.288,973,2.312,1091,2.012,1175,4.171,1204,4.581,1226,2.756,1261,1.459,1262,2.076,1263,1.459,1264,2.076,1265,2.076,1266,2.076,1267,1.459,1268,1.459,1269,2.076,1270,2.076,1271,1.459,1272,1.459,1273,1.459,1274,1.459,1275,1.459,1276,2.076,1277,2.013,1278,1.459,1279,2.076,1280,2.076,1281,1.459,1282,2.076,1283,1.459,1284,1.459,1285,1.459,1286,1.459,1287,2.633,1288,1.459,1289,1.459,1290,1.459,1291,1.459,1292,1.459,1293,1.459,1294,1.459,1295,1.459,1296,1.459,1297,1.459,1298,1.459,1299,1.459,1300,1.459,1301,1.459,1302,1.459,1303,1.459,1304,2.076,1305,1.459,1306,1.459,1307,1.459,1308,1.459,1309,1.459,1310,1.459,1311,1.459,1312,1.459,1313,1.459,1314,1.459,1315,1.459,1316,1.459,1317,1.459,1318,2.076,1319,1.459,1320,1.459,1321,1.459,1322,1.459,1323,1.459,1324,1.22,1325,1.459,1326,1.459,1327,1.459,1328,1.459,1329,1.459,1330,1.459,1331,1.459,1332,1.459,1388,1.856,1389,2.966,1431,3.131,1463,4.195,1472,2.312,2191,2.993,2192,3.293,2193,3.293,2194,3.293,2195,5.453,2196,3.293,2197,3.293,2198,5.453,2199,3.293,2200,4.685,2201,3.293,2202,3.293,2203,3.293,2204,3.293,2205,3.293,2206,3.293,2207,2.44,2208,3.293,2209,3.293,2210,2.993,2212,2.589,2213,3.471,2215,3.29,2218,4.288,2222,4.956,2224,2.993,2229,2.201,2230,2.768,2234,3.97,2235,4.956,2236,5.453,2239,3.97,2242,3.48,2244,2.768,2245,2.312,2246,2.768,2247,2.993,2248,3.293,2249,2.768,2250,2.768,2251,3.293,2253,3.293,2258,3.293,2260,3.293,2261,3.293,2262,3.293,2263,3.293,2264,3.293,2265,3.293,2266,3.293,2267,3.293,2268,3.293,2269,3.293,2270,3.293,2274,3.293,2277,3.293,2278,2.993,2279,5.704,2280,5.277,2281,5.277,2282,5.941,2283,5.277,2284,5.277,2285,2.768,2286,2.993,2287,1.664,2288,3.684,2289,3.293,2290,2.993,2291,4.685,2292,3.293,2293,4.685,2294,3.293,2295,4.685,2296,3.293,2297,5.453,2298,3.293,2299,5.928,2300,4.685,2301,4.685,2302,5.453,2303,3.293,2304,4.258,2305,4.685,2306,3.938,2307,3.29,2308,4.258,2309,4.685,2310,3.293,2311,3.293,2312,4.258,2313,3.293,2314,3.293,2315,5.453,2316,2.768,2317,1.724,2318,2.768]],["title/directives/DateFieldFormatDirective.html",[495,0.5,571,1.036]],["body/directives/DateFieldFormatDirective.html",[0,0.038,3,0.215,4,0.25,5,0.132,8,0.25,23,0.594,26,0.011,28,0.25,82,0.232,84,0.497,87,0.215,97,2.278,102,0.007,103,0.009,104,0.007,174,1.318,326,1.577,416,1.15,421,3.793,473,1.135,474,1.011,495,0.861,570,1.072,571,1.785,611,1.785,612,2.016,662,1.012,960,2.491,972,2.825,1217,3.42,2326,6.987,2327,5.466,2328,7.437,2329,7.954,2330,6.533,2331,6.223,2332,5.466,2333,6.223,2334,5.937,2335,6.223,2336,4.968,2337,6.223,2338,6.223,2339,6.223,2340,6.223,2341,6.223,2342,6.223,2343,4.595,2344,8.423,2345,6.223,2346,6.223,2347,7.437,2348,6.223,2349,6.223,2350,6.223]],["title/components/DatepickerComponent.html",[313,0.236,520,1.064]],["body/components/DatepickerComponent.html",[0,0.015,3,0.085,4,0.098,5,0.082,8,0.098,9,0.511,10,1.565,11,0.835,13,0.449,20,0.654,23,0.676,25,0.993,26,0.011,27,0.541,28,0.331,29,0.643,30,1,33,0.858,36,2,37,0.927,42,1.696,43,1.128,44,0.905,45,1.025,47,1.216,50,1.518,51,1.696,52,0.622,56,1.603,57,0.855,59,1.378,64,0.769,65,1.201,71,0.38,77,1.442,82,0.236,83,1.054,84,0.196,85,0.435,87,0.134,90,0.902,91,2.933,92,0.732,93,1.377,97,2,102,0.003,103,0.005,104,0.003,109,0.574,134,0.927,135,3.371,138,2.246,148,0.613,162,3.408,163,2.127,172,1.813,174,0.688,178,1.996,184,1.813,188,1.019,192,0.956,204,1.385,209,0.464,213,1.784,217,1.16,218,1.423,220,1.183,235,1.361,239,1.683,246,0.574,269,0.589,274,2.382,288,4.801,295,0.622,313,0.41,336,1.054,337,1.171,339,2.865,354,1.51,360,1.61,361,2.157,370,1.696,373,2.426,380,0.574,385,0.777,401,3.371,402,2.865,405,2.553,407,0.927,416,1.115,423,1.603,447,2.157,466,0.606,467,0.657,468,0.64,469,0.657,472,1.219,473,0.448,474,1.193,476,0.791,478,0.791,481,1.423,491,4.058,493,0.622,494,1.287,495,0.284,496,1.503,497,0.676,498,0.676,499,0.558,500,0.676,501,0.589,502,0.676,503,0.589,504,0.676,505,0.606,506,0.676,507,0.606,508,0.676,509,0.606,510,0.676,511,0.606,512,1.067,513,0.606,514,0.64,515,0.676,516,0.606,517,0.676,518,0.574,519,0.676,520,1.56,521,0.676,522,0.676,523,0.589,524,0.676,525,0.606,526,0.676,527,0.589,528,0.676,529,0.606,530,1.323,531,0.606,532,0.574,533,0.574,534,1.067,535,0.589,536,0.676,537,0.606,538,0.676,539,0.606,540,0.676,541,0.574,542,0.676,543,0.606,544,0.676,545,0.606,546,0.606,547,0.676,548,0.589,549,0.574,550,0.676,551,0.589,552,0.676,553,0.589,554,0.676,555,0.589,556,0.64,557,0.606,558,0.676,559,0.606,560,0.676,561,0.606,562,0.676,563,0.589,564,0.676,565,0.606,566,0.64,567,0.589,568,0.589,569,0.657,570,0.423,571,0.589,572,0.676,573,0.589,574,0.676,575,0.589,576,0.676,577,0.589,578,0.676,579,0.589,580,0.676,581,0.589,582,0.676,583,0.589,584,0.676,585,0.589,586,0.676,587,0.589,588,0.676,589,0.589,590,0.676,591,0.589,592,0.676,593,0.589,594,0.676,595,0.589,596,0.676,597,0.589,598,0.657,599,0.676,600,0.631,603,1.263,604,1.263,611,0.931,612,1.219,613,2.967,614,2.178,615,1.872,616,1.659,617,2.294,618,1.312,619,0.755,640,1.216,641,3.063,642,1.227,643,1.442,644,1.265,645,1.61,646,0.906,657,1.01,662,0.783,685,1.129,694,1.709,695,0.872,696,1.709,697,0.714,705,1.723,709,2.815,711,5,723,3.322,739,2.393,746,2.235,770,1.696,781,2.391,793,2.526,817,1.464,818,1.464,819,0.872,820,1.941,821,1.464,822,1.709,837,1.813,899,0.755,905,1.377,927,1.85,928,1.378,930,0.899,931,0.847,932,0.822,933,0.899,950,1.377,952,1.442,960,1.3,972,0.872,986,1.51,991,1.61,992,1.61,1090,1.813,1107,1.665,1108,2.68,1176,1.515,1196,0.847,1197,0.927,1199,1.42,1250,1.723,1261,0.956,1262,1.51,1263,0.956,1264,1.51,1265,1.51,1266,1.51,1267,0.956,1268,0.956,1269,1.51,1270,1.51,1271,0.956,1272,0.956,1273,0.956,1274,0.956,1275,0.956,1276,1.51,1277,1.815,1278,0.956,1279,1.51,1280,1.51,1281,0.956,1282,1.51,1283,0.956,1284,0.956,1285,0.956,1286,0.956,1287,2.127,1288,0.956,1289,0.956,1290,0.956,1291,0.956,1292,0.956,1293,0.956,1294,0.956,1295,0.956,1296,0.956,1297,0.956,1298,0.956,1299,0.956,1300,0.956,1301,0.956,1302,0.956,1303,0.956,1304,1.51,1305,0.956,1306,0.956,1307,0.956,1308,0.956,1309,0.956,1310,0.956,1311,0.956,1312,0.956,1313,0.956,1314,0.956,1315,0.956,1316,0.956,1317,0.956,1318,1.51,1319,0.956,1320,0.956,1321,0.956,1322,0.956,1323,0.956,1324,0.799,1325,0.956,1326,0.956,1327,0.956,1328,0.956,1329,0.956,1330,0.956,1331,0.956,1332,0.956,1353,4.312,1370,2.393,1389,2.47,1428,1.96,1431,2.278,1463,4.952,1500,1.442,1524,2.526,2207,3.131,2210,3.84,2218,3.322,2224,1.96,2229,3.208,2234,2.278,2239,2.278,2242,2.175,2279,1.96,2280,1.813,2281,1.813,2283,1.813,2284,1.813,2285,2.865,2288,2.68,2299,4.363,2307,2.393,2319,3.408,2320,3.408,2321,3.408,2322,3.408,2323,3.408,2324,3.408,2325,3.408,2351,1.96,2352,6.597,2353,3.88,2354,3.408,2355,6.778,2356,3.88,2357,3.88,2358,3.88,2359,2.393,2360,2.393,2361,3.88,2362,3.88,2363,4.81,2364,6.487,2365,5.289,2366,4.81,2367,5.465,2368,3.88,2369,3.88,2370,3.88,2371,3.408,2372,4.81,2373,4.81,2374,5.465,2375,5.952,2376,5.952,2377,5.952,2378,4.81,2379,3.88,2380,6.327,2381,4.801,2382,2.456,2383,3.88,2384,4.801,2385,1.998,2386,3.88,2387,2.456,2388,3.408,2389,2.456,2390,2.526,2391,2.456,2392,2.456,2393,4.801,2394,5.465,2395,5.465,2396,7.24,2397,2.456,2398,2.456,2399,2.456,2400,2.456,2401,3.88,2402,3.098,2403,3.88,2404,3.88,2405,2.456,2406,3.88,2407,2.456,2408,3.88,2409,2.456,2410,2.456,2411,3.88,2412,2.456,2413,3.88,2414,2.456,2415,3.88,2416,2.456,2417,4.801,2418,2.456,2419,2.456,2420,3.88,2421,2.456,2422,2.456,2423,2.456,2424,3.88,2425,2.456,2426,2.865,2427,2.456,2428,4.81,2429,2.456,2430,3.88,2431,2.456,2432,2.456,2433,3.88,2434,4.81,2435,3.88,2436,2.456,2437,1.813,2438,2.456,2439,2.157,2440,2.456,2441,2.456,2442,2.456,2443,2.456,2444,2.456,2445,2.456,2446,2.456,2447,2.456,2448,2.456,2449,6.327,2450,2.456,2451,2.456,2452,2.456,2453,2.456,2454,2.456,2455,2.456,2456,2.456,2457,2.456,2458,2.456,2459,2.456,2460,2.456,2461,2.456,2462,2.456,2463,2.456,2464,3.88,2465,2.456,2466,3.88,2467,2.456,2468,2.456,2469,3.098,2470,4.81,2471,2.456,2472,2.456,2473,4.225,2474,2.456,2475,2.456,2476,2.456,2477,1.96,2478,1.696,2479,2.456,2480,2.456,2481,1.96,2482,2.456,2483,2.456,2484,2.456,2485,3.88,2486,3.098,2487,2.456,2488,2.456,2489,2.456,2490,2.456,2491,2.456,2492,2.456]],["title/directives/DayValidationDirective.html",[495,0.5,573,1.036]],["body/directives/DayValidationDirective.html",[0,0.033,3,0.19,4,0.221,5,0.117,8,0.221,13,0.799,23,0.602,25,0.797,26,0.011,27,0.404,28,0.317,29,0.516,33,1.527,44,0.91,57,0.638,71,0.519,82,0.281,84,0.44,85,0.977,87,0.19,90,1.295,92,0.638,97,2.018,102,0.007,103,0.008,104,0.007,164,2.447,174,1.443,178,2.288,204,1.75,209,0.826,217,2.064,218,1.798,326,2.003,416,1.09,448,2.018,473,1.005,474,0.939,495,0.799,570,0.95,573,1.897,614,2.76,746,2.572,881,4.071,905,3.09,927,3.293,986,2.688,1199,2.527,1431,4.053,2230,4.071,2234,4.777,2239,4.639,2242,4.226,2249,5.099,2250,4.071,2287,3.509,2316,5.568,2317,3.467,2318,5.836,2437,5.836,2493,6.942,2494,4.842,2495,3.467,2496,3.595,2497,6.905,2498,6.623,2499,7.54,2500,5.513,2501,5.513,2502,2.629,2503,5.513,2504,5.513,2505,4.842,2506,3.595,2507,4.401,2508,5.513,2509,7.904,2510,5.513,2511,4.842,2512,5.513]],["title/components/DropdownComponent.html",[313,0.236,380,1.008]],["body/components/DropdownComponent.html",[0,0.025,3,0.14,4,0.163,5,0.119,8,0.163,9,0.744,11,1.215,13,0.653,20,0.767,23,0.687,25,1.013,26,0.011,27,0.573,28,0.34,29,0.713,30,1.204,33,1.249,37,1.534,43,1.185,44,1.08,45,1.059,50,1.767,52,1.03,56,1.431,57,0.751,64,1.119,65,1.24,71,0.516,82,0.242,84,0.325,85,0.72,87,0.14,90,1.059,102,0.005,103,0.007,104,0.005,148,0.642,188,2.343,209,0.676,220,1.459,235,1.413,246,0.949,269,0.975,295,1.03,313,0.354,319,2.634,327,4.507,380,1.637,407,1.251,416,1.17,423,1.431,466,1.002,467,1.088,468,1.058,469,1.088,472,1.03,473,0.741,474,1.226,476,1.15,478,1.15,493,1.03,494,1.511,495,0.47,496,1.928,497,1.118,498,1.118,499,0.924,500,1.118,501,0.975,502,1.118,503,0.975,504,1.118,505,1.002,506,1.118,507,1.002,508,1.118,509,1.002,510,1.118,511,1.002,512,1.553,513,1.002,514,1.058,515,1.118,516,1.002,517,1.118,518,0.949,519,1.118,520,1.002,521,1.118,522,1.118,523,0.975,524,1.118,525,1.002,526,1.118,527,0.975,528,1.118,529,1.002,530,1.784,531,1.002,532,0.949,533,0.949,534,1.553,535,0.975,536,1.118,537,1.002,538,1.118,539,1.002,540,1.118,541,0.949,542,1.118,543,1.002,544,1.118,545,1.002,546,1.002,547,1.118,548,0.975,549,0.949,550,1.118,551,0.975,552,1.118,553,0.975,554,1.118,555,0.975,556,1.058,557,1.002,558,1.118,559,1.002,560,1.118,561,1.002,562,1.118,563,0.975,564,1.118,565,1.002,566,1.058,567,0.975,568,0.975,569,1.088,570,0.7,571,0.975,572,1.118,573,0.975,574,1.118,575,0.975,576,1.118,577,0.975,578,1.118,579,0.975,580,1.118,581,0.975,582,1.118,583,0.975,584,1.118,585,0.975,586,1.118,587,0.975,588,1.118,589,0.975,590,1.118,591,0.975,592,1.118,593,0.975,594,1.118,595,0.975,596,1.118,597,0.975,598,1.088,599,1.118,614,1.488,616,2.237,617,1.938,618,1.682,619,1.249,642,1.285,646,1.318,694,2.304,695,1.444,696,2.304,697,1.181,817,2.13,818,2.13,819,1.444,820,2.489,821,2.13,822,1.444,928,2.005,930,1.488,931,1.402,932,1.361,933,1.488,991,2.343,992,2.343,1010,2.422,1106,4.001,1167,3.386,1170,2.012,1171,3.269,1193,2.012,1196,1.402,1197,1.534,1198,2.506,1201,1.869,1218,3.341,2365,5.178,2473,3.57,2513,3.57,2514,5.645,2515,5.645,2516,6.487,2517,6.487,2518,6.487,2519,5.698,2520,5.645,2521,4.065,2522,4.065,2523,4.065,2524,4.065,2525,4.065,2526,4.065,2527,4.065,2528,4.065,2529,4.065,2530,4.065,2531,4.065,2532,4.065,2533,4.065,2534,4.065]],["title/directives/DuplicateCheckDirective.html",[495,0.5,575,1.036]],["body/directives/DuplicateCheckDirective.html",[0,0.034,3,0.192,4,0.223,5,0.118,8,0.223,13,0.804,23,0.555,25,0.805,26,0.011,27,0.408,28,0.304,29,0.521,30,1.098,33,1.537,34,1.761,44,0.734,57,0.645,71,0.539,82,0.259,84,0.445,85,0.987,87,0.24,90,1.42,92,0.945,102,0.007,103,0.008,104,0.007,164,2.472,170,2.56,174,0.987,182,3.441,204,1.761,209,0.831,217,2.077,218,1.809,309,2.56,333,5.478,385,1.761,386,3.121,416,1.004,448,2.772,473,1.015,474,0.945,495,0.804,570,0.959,575,1.904,746,2.709,768,2.903,781,2.792,986,2.705,1199,3.091,2287,3.363,2495,3.483,2496,3.612,2502,2.655,2506,3.313,2535,6.046,2536,5.593,2537,4.445,2538,6.046,2539,7.498,2540,5.568,2541,4.287,2542,5.568,2543,3.441,2544,3.624,2545,6.046,2546,5.568,2547,5.568,2548,4.445,2549,3.845,2550,3.845,2551,5.568,2552,5.568]],["title/components/EmailComponent.html",[313,0.236,523,1.036]],["body/components/EmailComponent.html",[0,0.022,3,0.124,4,0.144,5,0.109,8,0.144,9,0.681,10,1.971,11,1.112,13,0.598,20,0.702,23,0.689,25,1.116,26,0.011,27,0.592,28,0.341,29,0.747,30,1.11,33,1.143,34,1.634,37,1.353,43,1.116,44,1.136,45,0.969,50,1.591,52,0.909,56,1.309,57,0.873,64,1.024,65,1.315,71,0.526,82,0.226,84,0.287,85,0.636,87,0.124,92,0.598,102,0.004,103,0.006,104,0.004,109,0.838,117,2.294,148,0.567,209,0.618,213,2.376,220,1.33,232,3.187,235,1.402,239,1.461,246,0.838,269,0.861,295,0.909,313,0.331,319,2.454,326,0.909,362,2.896,380,0.838,385,1.634,400,3.119,407,1.168,416,1.058,423,1.309,466,0.884,467,0.96,468,0.934,469,0.96,473,0.654,474,1.219,476,1.053,478,1.053,493,0.909,494,1.383,495,0.415,496,1.823,497,0.987,498,0.987,499,0.815,500,0.987,501,0.861,502,0.987,503,0.861,504,0.987,505,0.884,506,0.987,507,0.884,508,0.987,509,0.884,510,0.987,511,0.884,512,1.421,513,0.884,514,0.934,515,0.987,516,0.884,517,0.987,518,0.838,519,0.987,520,0.884,521,0.987,522,0.987,523,1.591,524,0.987,525,0.884,526,0.987,527,0.861,528,0.987,529,0.884,530,1.666,531,0.884,532,0.838,533,0.838,534,1.421,535,0.861,536,0.987,537,0.884,538,0.987,539,0.884,540,0.987,541,0.838,542,0.987,543,0.884,544,0.987,545,0.884,546,0.884,547,0.987,548,0.861,549,0.838,550,0.987,551,0.861,552,0.987,553,0.861,554,0.987,555,0.861,556,0.934,557,0.884,558,0.987,559,0.884,560,0.987,561,0.884,562,0.987,563,0.861,564,0.987,565,0.884,566,0.934,567,0.861,568,0.861,569,0.96,570,0.618,571,0.861,572,0.987,573,0.861,574,0.987,575,0.861,576,0.987,577,0.861,578,0.987,579,0.861,580,0.987,581,0.861,582,0.987,583,0.861,584,0.987,585,0.861,586,0.987,587,0.861,588,0.987,589,0.861,590,0.987,591,0.861,592,0.987,593,0.861,594,0.987,595,0.861,596,0.987,597,0.861,598,0.96,599,0.987,611,1.454,612,1.911,616,2.089,618,1.591,619,1.103,642,1.134,646,1.207,657,0.934,659,2.751,662,0.841,694,2.151,695,1.835,696,2.151,697,1.043,768,1.891,817,2.286,818,1.353,819,1.835,820,2.599,821,1.353,822,1.835,823,2.376,824,1.649,825,2.217,899,1.103,928,1.835,930,1.313,931,1.237,932,1.201,933,1.313,960,1.731,972,2.151,991,2.514,992,2.514,1010,1.539,1071,2.559,1167,3.23,1170,1.776,1171,3.119,1175,3.187,1193,1.776,1196,1.237,1197,1.353,1198,2.294,1201,1.649,1212,3.251,1213,3.251,1214,2.896,1219,2.999,1220,2.888,1226,2.294,1235,2.105,1237,2.105,1258,2.01,1260,2.01,1335,1.847,1336,1.776,1337,1.847,1389,2.145,2317,1.649,2343,4.473,2390,3.363,2549,3.569,2550,3.569,2553,3.151,2554,3.816,2555,3.187,2556,4.539,2557,6.906,2558,5.167,2559,5.167,2560,5.321,2561,5.167,2562,3.587,2563,3.587,2564,5.167,2565,3.587,2566,4.539,2567,3.587,2568,5.167,2569,3.587,2570,3.587,2571,3.587,2572,3.587,2573,3.587,2574,3.587,2575,3.587,2576,3.587,2577,3.587,2578,3.587,2579,3.587,2580,3.587,2581,3.151,2582,3.587,2583,6.057,2584,3.151,2585,3.151,2586,3.587]],["title/components/ErrorContainerComponent.html",[313,0.236,525,1.064]],["body/components/ErrorContainerComponent.html",[0,0.031,3,0.176,4,0.204,5,0.139,8,0.204,11,1.412,20,0.988,23,0.524,26,0.011,27,0.533,28,0.204,30,1.037,33,1.452,43,0.735,44,0.671,45,1.231,52,1.289,56,1.663,64,1.301,82,0.19,84,0.406,87,0.176,102,0.006,103,0.008,104,0.006,148,1.308,235,1.429,246,1.188,269,1.221,295,1.289,313,0.397,380,1.188,407,1.265,416,0.948,423,1.663,466,1.255,467,1.362,468,1.325,469,1.362,473,0.928,474,1.237,476,1.337,478,1.337,493,1.289,494,1.756,495,0.589,496,2.111,497,1.4,498,1.4,499,1.157,500,1.4,501,1.221,502,1.4,503,1.221,504,1.4,505,1.255,506,1.4,507,1.255,508,1.4,509,1.255,510,1.4,511,1.255,512,1.805,513,1.255,514,1.325,515,1.4,516,1.255,517,1.4,518,1.188,519,1.4,520,1.255,521,1.4,522,1.4,523,1.221,524,1.4,525,1.892,526,1.4,527,1.221,528,1.4,529,1.255,530,1.998,531,1.255,532,1.188,533,1.188,534,1.805,535,1.221,536,1.4,537,1.255,538,1.4,539,1.255,540,1.4,541,1.188,542,1.4,543,1.255,544,1.4,545,1.255,546,1.255,547,1.4,548,1.221,549,1.188,550,1.4,551,1.221,552,1.4,553,1.221,554,1.4,555,1.221,556,1.325,557,1.255,558,1.4,559,1.255,560,1.4,561,1.255,562,1.4,563,1.221,564,1.4,565,1.255,566,1.325,567,1.221,568,1.221,569,1.362,570,0.877,571,1.221,572,1.4,573,1.221,574,1.4,575,1.221,576,1.4,577,1.221,578,1.4,579,1.221,580,1.4,581,1.221,582,1.4,583,1.221,584,1.4,585,1.221,586,1.4,587,1.221,588,1.4,589,1.221,590,1.4,591,1.221,592,1.4,593,1.221,594,1.4,595,1.221,596,1.4,597,1.221,598,1.362,599,1.4,1579,4.048,2587,6.381,2588,5.799,2589,4.47,2590,6.563,2591,6.563,2592,7.264,2593,6.563]],["title/interfaces/ErrorMessage.html",[600,0.702,1216,2.223]],["body/interfaces/ErrorMessage.html",[3,0.23,4,0.267,5,0.141,8,0.267,9,1.02,23,0.532,26,0.01,28,0.267,29,0.725,50,2.058,71,0.558,87,0.23,102,0.008,103,0.009,104,0.008,109,1.556,148,1.053,319,2.519,421,3.177,448,2.834,600,1.084,602,2.439,1091,3.576,1216,3.988,1426,5.319,1450,3.576,2048,5.853,2594,6.801,2595,5.853,2596,5.319,2597,6.664]],["title/interfaces/FileUploaderMsg.html",[600,0.702,2598,3.445]],["body/interfaces/FileUploaderMsg.html",[0,0.011,3,0.139,4,0.076,5,0.17,8,0.209,9,0.687,11,0.678,12,4.577,20,0.258,22,2.49,26,0.011,27,0.382,28,0.188,29,0.178,30,0.823,34,1.486,36,1.478,40,2.981,45,1.168,50,1.551,58,1.668,59,2.114,60,1.516,64,0.376,65,0.914,71,0.412,82,0.286,83,0.815,84,0.152,85,0.337,86,0.978,87,0.109,90,1.31,92,0.931,97,2.502,102,0.004,103,0.004,104,0.002,107,0.94,111,1.856,124,2.176,134,1.189,138,0.717,139,1.691,140,1.171,146,2.176,148,1.25,151,0.815,166,1.925,169,1.064,170,0.873,171,4.577,172,1.402,174,1.471,185,1.171,188,0.788,189,2.515,190,1.668,192,1.226,193,1.668,204,0.481,209,0.227,210,0.978,213,0.873,218,0.495,235,0.498,241,2.263,272,1.171,273,1.064,276,1.115,298,1.516,302,1.171,304,1.668,309,1.449,313,0.221,326,1.424,333,1.312,335,0.978,337,2.679,345,1.402,348,1.516,354,1.572,360,0.788,362,1.766,364,1.064,367,2.981,370,4.111,384,1.171,385,0.996,386,1.064,396,0.978,410,1.236,415,1.402,416,0.963,419,1.402,422,1.171,423,1.321,467,0.508,468,0.495,472,0.798,473,0.736,474,0.258,476,0.387,478,0.387,481,0.495,488,2.176,491,0.978,492,0.906,527,0.456,600,0.309,602,0.695,603,1.025,604,1.025,611,0.969,612,1.321,613,1.943,614,1.153,615,1.829,618,0.756,619,0.584,640,0.94,641,1.064,644,1.623,645,0.788,646,0.444,648,0.94,662,1.195,670,2.37,671,1.402,679,1.171,685,0.873,688,0.843,697,0.552,704,1.236,705,1.399,739,1.171,748,1.766,754,1.399,758,1.312,768,2.179,771,1.879,781,0.763,793,1.236,795,1.019,811,2.37,843,1.019,850,1.402,899,1.602,927,1.502,931,0.655,932,1.352,934,1.115,940,1.56,964,1.516,972,2.367,973,3.842,980,2.176,995,1.171,1040,1.766,1064,2.326,1077,1.312,1082,1.668,1107,2.554,1115,1.402,1176,1.943,1198,1.792,1199,0.695,1228,1.236,1248,1.943,1252,1.171,1261,0.739,1262,1.226,1263,0.739,1264,1.226,1265,1.226,1266,1.226,1267,0.739,1268,0.739,1269,1.226,1270,1.226,1271,0.739,1272,0.739,1273,0.739,1274,0.739,1275,0.739,1276,1.226,1277,1.189,1278,0.739,1279,1.226,1280,1.226,1281,0.739,1282,1.226,1283,0.739,1284,0.739,1285,0.739,1286,0.739,1287,1.829,1288,0.739,1289,0.739,1290,0.739,1291,0.739,1292,0.739,1293,0.739,1294,0.739,1295,0.739,1296,0.739,1297,0.739,1298,0.739,1299,0.739,1300,0.739,1301,0.739,1302,0.739,1303,0.739,1304,1.226,1305,0.739,1306,0.739,1307,0.739,1308,0.739,1309,0.739,1310,0.739,1311,0.739,1312,0.739,1313,0.739,1314,0.739,1315,0.739,1316,0.739,1317,0.739,1318,1.226,1319,0.739,1320,0.739,1321,0.739,1322,0.739,1323,0.739,1324,1.314,1325,0.739,1326,0.739,1327,0.739,1328,0.739,1329,0.739,1330,0.739,1331,0.739,1332,0.739,1344,3.992,1346,5.229,1347,2.788,1353,4.45,1359,1.943,1372,1.236,1377,1.236,1381,3.466,1384,1.171,1389,0.788,1390,1.312,1397,2.176,1400,3.245,1403,1.943,1407,1.115,1413,1.312,1449,3.874,1455,2.515,1456,2.515,1457,2.898,1472,3.466,1499,1.943,1500,2.37,1502,1.402,1503,1.312,1509,1.236,1524,1.236,1822,1.668,2004,1.668,2207,1.236,2212,1.312,2213,2.051,2229,1.849,2235,2.515,2244,2.326,2246,2.981,2285,1.402,2306,1.402,2307,1.171,2317,0.873,2334,1.516,2360,1.171,2417,2.767,2469,1.516,2555,1.943,2598,3.223,2599,1.668,2600,1.516,2601,2.767,2602,1.899,2603,3.151,2604,1.899,2605,1.312,2606,4.038,2607,3.751,2608,2.981,2609,1.899,2610,3.546,2611,2.628,2612,2.788,2613,3.151,2614,3.151,2615,1.899,2616,3.151,2617,1.668,2618,3.151,2619,1.899,2620,3.151,2621,1.899,2622,1.899,2623,1.899,2624,1.899,2625,1.899,2626,1.899,2627,1.171,2628,1.899,2629,1.899,2630,1.899,2631,1.899,2632,3.546,2633,1.899,2634,4.16,2635,3.223,2636,1.899,2637,3.151,2638,2.767,2639,3.151,2640,1.899,2641,3.151,2642,1.115,2643,1.516,2644,1.668,2645,1.236,2646,1.516,2647,1.899,2648,1.899,2649,1.899,2650,4.038,2651,1.899,2652,1.899,2653,1.899,2654,1.899,2655,1.899,2656,1.899,2657,1.899,2658,1.899,2659,1.899,2660,1.899,2661,1.899,2662,1.899,2663,3.47,2664,2.788,2665,1.899,2666,1.899,2667,1.668,2668,1.312,2669,4.038,2670,1.899,2671,1.899,2672,7.122,2673,1.899,2674,1.899,2675,1.668,2676,1.899,2677,1.899,2678,1.899,2679,1.516,2680,2.515,2681,1.899,2682,4.038,2683,1.899,2684,1.899,2685,1.516,2686,1.899,2687,1.899,2688,1.899,2689,1.899,2690,3.151,2691,1.899,2692,1.899,2693,1.899,2694,1.899,2695,1.899,2696,3.151,2697,1.899,2698,1.899,2699,4.038,2700,4.038,2701,1.899,2702,3.151,2703,1.899,2704,2.767,2705,1.899,2706,1.899,2707,1.899,2708,1.899,2709,1.899,2710,1.899,2711,1.899,2712,1.899,2713,1.899,2714,1.899,2715,4.038,2716,1.668,2717,1.899,2718,1.668,2719,2.767,2720,3.151,2721,3.151,2722,1.899,2723,1.899,2724,1.668,2725,3.151,2726,1.899,2727,1.899,2728,3.546,2729,1.899,2730,1.312,2731,3.151,2732,1.668,2733,2.981,2734,1.171,2735,4.16,2736,3.546,2737,1.668,2738,1.516,2739,1.899,2740,1.899,2741,1.516,2742,1.899,2743,4.699,2744,1.402,2745,3.151,2746,2.767,2747,1.899,2748,1.064,2749,1.899,2750,4.038,2751,4.149,2752,4.936,2753,4.699,2754,1.899,2755,1.899,2756,1.312,2757,1.899,2758,1.899,2759,1.899,2760,1.402,2761,1.899,2762,1.899,2763,3.151,2764,1.899,2765,1.899,2766,1.899,2767,1.899,2768,1.899,2769,1.899,2770,1.899,2771,1.402,2772,1.899,2773,4.038,2774,3.151,2775,3.47,2776,1.516,2777,1.668,2778,5.953,2779,1.899,2780,1.402,2781,1.899,2782,1.899,2783,1.516,2784,1.899,2785,1.899,2786,1.668,2787,1.899,2788,3.151,2789,1.899,2790,1.899,2791,1.899,2792,2.981,2793,1.899,2794,1.402,2795,1.899,2796,1.668,2797,1.402,2798,1.899,2799,1.899,2800,1.899,2801,1.899,2802,1.668,2803,1.668,2804,1.899,2805,3.151,2806,4.038,2807,1.899,2808,1.899,2809,1.899,2810,1.899,2811,1.899,2812,1.899,2813,1.899,2814,1.899,2815,4.038,2816,1.899,2817,1.899,2818,1.899,2819,1.899,2820,1.899,2821,1.899,2822,1.899,2823,1.899,2824,1.899,2825,1.899,2826,2.326,2827,3.151,2828,3.151,2829,1.899,2830,1.899,2831,7.346,2832,5.619,2833,3.151,2834,4.038,2835,3.151,2836,5.211,2837,1.668,2838,1.899,2839,1.899,2840,1.899,2841,3.151,2842,4.038,2843,1.899,2844,1.899,2845,1.899,2846,4.127,2847,5.211,2848,1.899,2849,2.515,2850,5.953,2851,1.668,2852,1.402,2853,1.516,2854,1.516,2855,4.699,2856,1.899,2857,1.899,2858,5.211,2859,1.899,2860,1.899,2861,1.899,2862,1.899,2863,1.899,2864,1.899,2865,1.899,2866,1.899,2867,3.151,2868,1.899,2869,1.899,2870,1.899,2871,3.151,2872,3.151,2873,4.038,2874,1.899,2875,3.151,2876,1.899,2877,1.899,2878,1.668,2879,1.899,2880,1.899,2881,1.899,2882,1.899,2883,1.899,2884,1.899,2885,1.899,2886,1.899,2887,4.699,2888,1.899,2889,3.151,2890,1.899,2891,1.668,2892,1.516,2893,1.899,2894,3.151,2895,1.899,2896,1.899,2897,4.699,2898,1.899,2899,1.899,2900,6.464,2901,1.899,2902,1.668,2903,2.767,2904,3.151,2905,1.899,2906,1.899,2907,4.038,2908,1.899,2909,5.211,2910,4.038,2911,4.038,2912,5.211,2913,1.899,2914,2.767,2915,1.899,2916,1.899,2917,1.312,2918,1.516,2919,1.899,2920,1.899,2921,1.402,2922,1.899,2923,1.899,2924,1.899,2925,3.151,2926,4.699,2927,4.699,2928,1.899,2929,5.619,2930,1.899,2931,1.899,2932,1.402,2933,1.668,2934,1.899,2935,1.899,2936,3.151,2937,1.899,2938,3.151,2939,1.899,2940,1.899,2941,1.899,2942,3.151,2943,2.767,2944,1.899,2945,1.899,2946,1.899,2947,1.899,2948,1.899,2949,1.899,2950,1.899,2951,1.899,2952,1.899,2953,4.699,2954,1.899,2955,1.516,2956,1.899,2957,4.699,2958,3.151,2959,4.038,2960,4.699,2961,1.899,2962,1.899,2963,1.899,2964,1.899,2965,1.899,2966,1.899,2967,1.899,2968,1.899,2969,1.899,2970,1.899,2971,3.151,2972,4.038,2973,3.151,2974,1.899,2975,3.151,2976,1.899,2977,1.899,2978,1.899,2979,1.899,2980,1.899,2981,1.899,2982,4.038,2983,1.402,2984,1.899,2985,1.899,2986,1.899,2987,1.899,2988,1.236,2989,5.211,2990,4.699,2991,1.899,2992,1.899,2993,2.767,2994,1.899,2995,1.899,2996,1.899,2997,1.899,2998,1.899,2999,1.899,3000,1.899,3001,1.899,3002,1.899,3003,1.899,3004,1.899,3005,1.899,3006,1.899,3007,1.899,3008,1.899,3009,1.899,3010,1.899,3011,1.899,3012,3.151,3013,1.899,3014,1.899,3015,1.899,3016,3.151,3017,3.151,3018,4.699,3019,5.211,3020,1.668,3021,1.516,3022,1.899,3023,1.668,3024,1.668,3025,3.151,3026,1.899,3027,1.899,3028,1.899,3029,1.899,3030,1.899,3031,1.899,3032,1.899,3033,1.899,3034,1.899,3035,1.899,3036,4.038,3037,3.151,3038,1.899,3039,3.151,3040,1.899,3041,1.899,3042,1.899,3043,3.151,3044,1.899,3045,1.899,3046,1.899,3047,4.699,3048,1.899,3049,1.899,3050,1.899,3051,3.151,3052,1.899,3053,1.899,3054,1.899,3055,1.899,3056,1.899,3057,1.899,3058,1.899,3059,1.899,3060,1.516,3061,1.899,3062,1.899,3063,1.899,3064,1.899,3065,3.151,3066,1.899,3067,1.899,3068,1.899,3069,1.899,3070,1.899,3071,1.899,3072,1.899,3073,1.899,3074,1.899,3075,1.899,3076,3.151,3077,3.151,3078,3.151,3079,1.899,3080,1.899,3081,3.151,3082,1.899,3083,1.899,3084,1.899,3085,1.899,3086,1.899,3087,1.899,3088,1.899,3089,1.899,3090,1.402,3091,1.899,3092,1.899,3093,1.899,3094,1.899,3095,1.899,3096,1.899,3097,1.899,3098,1.899,3099,1.899,3100,1.899,3101,1.899,3102,1.899,3103,1.668,3104,1.899,3105,1.899,3106,3.151,3107,3.151,3108,1.899,3109,1.899,3110,1.899,3111,1.899,3112,1.899]],["title/components/FormActionBarComponent.html",[313,0.236,529,1.064]],["body/components/FormActionBarComponent.html",[0,0.025,3,0.141,4,0.164,5,0.12,8,0.164,11,1.718,13,0.656,14,5.194,16,3.689,20,0.885,23,0.638,25,0.591,26,0.011,27,0.515,28,0.296,29,0.383,30,1.237,33,1.254,36,2.382,43,1.015,44,0.926,45,1.22,52,2.229,53,3.327,56,1.436,57,0.656,64,1.124,65,0.665,71,0.362,82,0.211,84,0.327,85,0.725,87,0.141,90,1.317,92,0.473,102,0.005,103,0.007,104,0.005,148,0.896,204,1.436,209,0.678,218,1.476,235,1.413,246,0.955,269,0.981,295,1.036,313,0.355,380,0.955,407,1.093,416,1.067,423,1.436,466,1.008,467,1.094,468,1.065,469,1.094,472,1.649,473,0.745,474,1.226,476,1.155,478,1.155,481,1.83,493,1.036,494,1.517,495,0.473,496,1.933,497,1.125,498,1.125,499,0.929,500,1.125,501,0.981,502,1.125,503,0.981,504,1.125,505,1.008,506,1.125,507,1.008,508,1.125,509,1.008,510,1.125,511,1.008,512,1.559,513,1.008,514,1.065,515,1.125,516,1.008,517,1.125,518,0.955,519,1.125,520,1.008,521,1.125,522,1.125,523,0.981,524,1.125,525,1.008,526,1.125,527,0.981,528,1.125,529,1.733,530,1.79,531,1.008,532,0.955,533,0.955,534,1.559,535,0.981,536,1.125,537,1.008,538,1.125,539,1.008,540,1.125,541,0.955,542,1.125,543,1.008,544,1.125,545,1.008,546,1.008,547,1.125,548,0.981,549,0.955,550,1.125,551,0.981,552,1.125,553,0.981,554,1.125,555,0.981,556,1.065,557,1.008,558,1.125,559,1.008,560,1.125,561,1.008,562,1.125,563,0.981,564,1.125,565,1.008,566,1.065,567,0.981,568,0.981,569,1.094,570,0.704,571,0.981,572,1.125,573,0.981,574,1.125,575,0.981,576,1.125,577,0.981,578,1.125,579,0.981,580,1.125,581,0.981,582,1.125,583,0.981,584,1.125,585,0.981,586,1.125,587,0.981,588,1.125,589,0.981,590,1.125,591,0.981,592,1.125,593,0.981,594,1.125,595,0.981,596,1.125,597,0.981,598,1.094,599,1.125,603,1.844,604,1.844,611,1.36,612,1.78,614,2.382,615,2.533,645,2.353,662,0.665,958,4.979,960,1.898,961,5.194,970,4.979,972,1.452,976,3.591,1261,1.591,1262,2.207,1263,1.591,1264,2.207,1265,2.207,1266,2.207,1267,1.591,1268,1.591,1269,2.207,1270,2.207,1271,1.591,1272,1.591,1273,1.591,1274,1.591,1275,1.591,1276,2.207,1277,2.139,1278,1.591,1279,2.207,1280,2.207,1281,1.591,1282,2.207,1283,1.591,1284,1.591,1285,1.591,1286,1.591,1287,2.735,1288,1.591,1289,1.591,1290,1.591,1291,1.591,1292,1.591,1293,1.591,1294,1.591,1295,1.591,1296,1.591,1297,1.591,1298,1.591,1299,1.591,1300,1.591,1301,1.591,1302,1.591,1303,1.591,1304,2.207,1305,1.591,1306,1.591,1307,1.591,1308,1.591,1309,1.591,1310,1.591,1311,1.591,1312,1.591,1313,1.591,1314,1.591,1315,1.591,1316,1.591,1317,1.591,1318,2.207,1319,1.591,1320,1.591,1321,1.591,1322,1.591,1323,1.591,1324,1.33,1325,1.591,1326,1.591,1327,1.591,1328,1.591,1329,1.591,1330,1.591,1331,1.591,1332,1.591,3113,6.47,3114,5.985,3115,3.019,3116,4.525,3117,4.525,3118,5.715,3119,5.715,3120,6.482,3121,5.669,3122,4.088,3123,4.088,3124,4.088,3125,4.088,3126,3.591,3127,3.591,3128,4.088,3129,4.088,3130,4.088]],["title/components/FormSubmitBarComponent.html",[313,0.236,531,1.064]],["body/components/FormSubmitBarComponent.html",[0,0.023,2,2.324,3,0.132,4,0.154,5,0.115,8,0.154,11,1.806,13,0.627,14,5.016,16,3.526,20,0.854,23,0.627,26,0.011,27,0.461,28,0.315,30,1.241,33,1.198,36,2.3,43,1.041,44,0.949,45,1.281,52,0.971,53,3.18,56,1.373,57,0.444,64,1.483,65,0.623,71,0.346,82,0.202,84,0.306,85,0.679,87,0.132,90,1.281,102,0.005,103,0.006,104,0.005,109,0.895,138,2.044,148,0.856,163,2.109,188,2.248,204,1.373,209,0.648,210,2.79,218,1.411,235,1.408,246,0.895,269,2.099,295,0.971,297,4,306,5.043,313,0.394,380,0.895,385,1.713,386,3.036,407,1.044,416,1.081,423,1.373,466,0.945,467,1.025,468,0.998,469,1.025,472,1.592,473,0.699,474,1.223,476,1.104,478,1.104,481,1.778,493,0.971,494,1.45,495,0.444,496,1.879,497,1.054,498,1.054,499,0.871,500,1.054,501,0.92,502,1.054,503,0.92,504,1.054,505,0.945,506,1.054,507,0.945,508,1.054,509,0.945,510,1.054,511,0.945,512,1.49,513,0.945,514,0.998,515,1.054,516,0.945,517,1.054,518,0.895,519,1.054,520,0.945,521,1.054,522,1.054,523,0.92,524,1.054,525,0.945,526,1.054,527,0.92,528,1.054,529,0.945,530,1.728,531,1.684,532,0.895,533,1.467,534,1.49,535,0.92,536,1.054,537,0.945,538,1.054,539,0.945,540,1.054,541,0.895,542,1.054,543,0.945,544,1.054,545,0.945,546,0.945,547,1.054,548,0.92,549,0.895,550,1.054,551,0.92,552,1.054,553,0.92,554,1.054,555,0.92,556,0.998,557,0.945,558,1.054,559,0.945,560,1.054,561,0.945,562,1.054,563,0.92,564,1.054,565,0.945,566,0.998,567,0.92,568,0.92,569,1.025,570,0.66,571,0.92,572,1.054,573,0.92,574,1.054,575,0.92,576,1.054,577,0.92,578,1.054,579,0.92,580,1.054,581,0.92,582,1.054,583,0.92,584,1.054,585,0.92,586,1.054,587,0.92,588,1.054,589,0.92,590,1.054,591,0.92,592,1.054,593,0.92,594,1.054,595,0.92,596,1.054,597,0.92,598,1.025,599,1.054,603,1.763,604,1.763,611,1.3,612,1.731,614,2.3,615,2.446,645,2.248,662,0.623,709,2.79,719,2.324,760,1.983,845,3.341,960,1.814,961,5.016,1261,1.492,1262,2.109,1263,1.492,1264,2.109,1265,2.109,1266,2.109,1267,1.492,1268,1.492,1269,2.109,1270,2.109,1271,1.492,1272,1.492,1273,1.492,1274,1.492,1275,1.492,1276,2.109,1277,2.044,1278,1.492,1279,2.109,1280,2.109,1281,1.492,1282,2.109,1283,1.492,1284,1.492,1285,1.492,1286,1.492,1287,2.659,1288,1.492,1289,1.492,1290,1.492,1291,1.492,1292,1.492,1293,1.492,1294,1.492,1295,1.492,1296,1.492,1297,1.492,1298,1.492,1299,1.492,1300,1.492,1301,1.492,1302,1.492,1303,1.492,1304,2.109,1305,1.492,1306,1.492,1307,1.492,1308,1.492,1309,1.492,1310,1.492,1311,1.492,1312,1.492,1313,1.492,1314,1.492,1315,1.492,1316,1.492,1317,1.492,1318,2.109,1319,1.492,1320,1.492,1321,1.492,1322,1.492,1323,1.492,1324,1.247,1325,1.492,1326,1.492,1327,1.492,1328,1.492,1329,1.492,1330,1.492,1331,1.492,1332,1.492,1618,3.526,2385,2.79,2751,4,3113,6.376,3114,5.898,3115,2.829,3116,4.324,3117,4.324,3118,5.519,3119,5.519,3120,6.329,3126,3.366,3131,6.83,3132,4,3133,4.324,3134,5.417,3135,5.417,3136,5.417,3137,5.417,3138,6.283,3139,5.417,3140,3.832,3141,3.832,3142,4.758,3143,3.526,3144,5.452,3145,6.83,3146,5.417,3147,5.417,3148,4.324,3149,5.417,3150,3.832,3151,3.832,3152,3.832]],["title/components/FullNameComponent.html",[313,0.236,532,1.008]],["body/components/FullNameComponent.html",[0,0.019,3,0.112,4,0.13,5,0.101,8,0.13,9,0.631,10,1.857,11,1.031,13,0.555,20,0.776,23,0.681,25,0.825,26,0.011,27,0.607,28,0.336,29,0.534,30,0.997,33,1.06,34,1.515,36,1.184,43,1.142,44,1.083,45,0.898,50,1.8,52,0.819,56,1.214,57,0.73,64,0.95,65,1.22,71,0.541,82,0.251,83,1.387,84,0.258,85,0.573,87,0.197,90,0.898,102,0.004,103,0.006,104,0.004,109,0.755,148,0.511,169,1.813,204,1.214,209,0.573,213,2.203,215,1.604,217,1.432,218,1.248,220,1.405,235,1.392,246,1.333,269,0.776,295,0.819,313,0.368,335,3.25,354,1.865,379,2.203,380,0.755,385,1.515,407,1.1,416,1.055,421,3.009,423,1.214,466,0.797,467,0.865,468,0.842,469,0.865,472,1.446,473,0.59,474,1.213,476,0.976,478,0.976,481,1.643,493,0.819,494,1.282,495,0.374,496,1.736,497,0.89,498,0.89,499,0.735,500,0.89,501,0.776,502,0.89,503,0.776,504,0.89,505,0.797,506,0.89,507,0.797,508,0.89,509,0.797,510,0.89,511,0.797,512,1.318,513,0.797,514,0.842,515,0.89,516,0.797,517,0.89,518,0.755,519,0.89,520,0.797,521,0.89,522,0.89,523,0.776,524,0.89,525,0.797,526,0.89,527,0.776,528,0.89,529,0.797,530,1.57,531,0.797,532,1.751,533,1.705,534,1.318,535,0.776,536,0.89,537,0.797,538,0.89,539,0.797,540,0.89,541,0.755,542,0.89,543,0.797,544,0.89,545,0.797,546,0.797,547,0.89,548,0.776,549,0.755,550,0.89,551,0.776,552,0.89,553,0.776,554,0.89,555,0.776,556,0.842,557,0.797,558,0.89,559,0.797,560,0.89,561,0.797,562,0.89,563,0.776,564,0.89,565,0.797,566,0.842,567,0.776,568,0.776,569,0.865,570,0.557,571,0.776,572,0.89,573,0.776,574,0.89,575,0.776,576,0.89,577,0.776,578,0.89,579,0.776,580,0.89,581,0.776,582,0.89,583,0.776,584,0.89,585,0.776,586,0.89,587,0.776,588,0.89,589,0.776,590,0.89,591,0.776,592,0.89,593,0.776,594,0.89,595,0.776,596,0.89,597,0.776,598,0.865,599,0.89,600,0.526,611,1.15,612,1.446,614,2.089,615,1.259,616,1.968,617,2.721,618,1.514,619,0.994,642,1.023,646,1.119,662,0.526,694,2.027,695,1.149,696,2.027,697,0.94,719,2.055,771,2.051,817,1.808,818,1.808,819,1.149,820,2.241,821,1.808,822,2.393,868,3.118,928,1.702,930,1.184,931,1.115,932,1.083,933,1.184,960,1.604,986,1.865,991,1.988,992,1.988,995,3.52,1010,2.055,1077,3.309,1147,3.309,1196,1.115,1197,1.22,1249,2.571,1388,1.601,2213,2.105,2627,4.352,2733,3.538,3143,3.118,3153,6.801,3154,6.291,3155,2.581,3156,4.659,3157,5.037,3158,4.208,3159,3.824,3160,3.824,3161,3.824,3162,3.941,3163,4.555,3164,4.555,3165,4.555,3166,5.013,3167,4.975,3168,4.214,3169,6.414,3170,6.414,3171,6.414,3172,5.013,3173,4.791,3174,3.234,3175,3.234,3176,3.234,3177,3.234,3178,3.234,3179,3.234,3180,3.234,3181,3.234,3182,3.234,3183,3.234,3184,3.234,3185,3.234,3186,4.214,3187,3.234,3188,3.234,3189,3.234,3190,3.234,3191,3.892,3192,3.824,3193,3.234,3194,3.824,3195,3.118,3196,4.208,3197,3.824,3198,3.824,3199,3.824,3200,4.208,3201,3.234,3202,3.234,3203,2.84,3204,2.581,3205,4.208,3206,2.581,3207,5.013,3208,2.581,3209,5.013,3210,2.581,3211,5.013,3212,2.388,3213,2.388,3214,2.84,3215,2.84,3216,2.84,3217,2.84,3218,2.84,3219,2.84,3220,2.84,3221,5.013,3222,5.013,3223,2.84,3224,2.84,3225,6.197,3226,7.056]],["title/interfaces/FullNameErrorMsg.html",[600,0.702,3186,3.187]],["body/interfaces/FullNameErrorMsg.html",[0,0.03,3,0.17,4,0.197,5,0.104,8,0.197,9,0.845,10,1.597,20,0.667,26,0.011,27,0.576,28,0.257,29,0.708,30,1.013,34,1.552,36,1.797,43,0.709,44,0.997,45,0.92,50,1.997,65,1.231,71,0.557,82,0.293,83,2.106,84,0.392,85,0.87,87,0.247,90,0.92,102,0.006,103,0.008,104,0.006,169,2.751,204,1.244,209,0.587,213,2.257,215,1.644,217,1.467,218,1.278,220,1.304,235,0.776,246,1.146,313,0.39,335,3.302,354,1.911,379,2.257,385,1.552,416,1.186,421,3.057,472,1.625,474,0.667,476,1,478,1,481,1.278,532,1.667,533,1.667,600,0.799,602,1.797,611,1.539,612,1.625,614,2.347,615,1.911,616,2.211,617,3.057,618,1.539,619,1.509,646,1.146,662,0.799,694,1.743,695,1.743,696,1.743,697,1.427,719,2.106,771,1.864,818,1.852,819,1.743,820,2.277,821,1.852,822,2.789,868,3.195,986,1.911,995,3.028,1010,2.106,1077,3.39,1147,3.39,1249,2.634,1388,2.43,2213,3.195,2627,4.404,2733,3.625,3143,3.195,3153,3.918,3154,3.625,3155,3.918,3156,4.734,3157,5.118,3158,4.312,3159,3.918,3160,3.918,3161,3.918,3162,3.39,3163,3.918,3164,3.918,3165,3.918,3166,4.312,3167,5.948,3168,3.625,3169,4.312,3170,4.312,3171,4.312,3172,4.312,3186,5.272,3191,3.954,3192,3.918,3194,3.918,3195,3.195,3196,4.312,3197,3.918,3198,3.918,3199,3.918,3200,4.312,3203,4.312,3204,3.918,3205,5.631,3206,3.918,3207,6.271,3208,3.918,3209,6.271,3210,3.918,3211,6.271,3212,3.625,3213,3.625,3214,4.312,3215,4.312,3216,4.312,3217,4.312,3218,4.312,3219,4.312,3220,4.312,3221,6.271,3222,6.271,3223,4.312,3224,4.312]],["title/interfaces/GeoAddressResult.html",[600,0.702,620,2.419]],["body/interfaces/GeoAddressResult.html",[0,0.031,3,0.179,4,0.208,5,0.11,8,0.208,9,0.876,15,2.476,17,2.952,26,0.011,27,0.381,28,0.321,43,0.751,45,1.247,71,0.566,73,3.587,82,0.298,84,0.415,87,0.23,88,3.203,90,0.974,92,0.895,102,0.006,103,0.008,104,0.006,105,3.727,107,3.958,110,2.911,111,2.388,112,3.203,120,3.903,122,4.774,128,4.91,139,3.568,140,3.203,141,4.328,145,3.38,148,1.222,165,2.911,166,2.476,169,2.911,170,2.388,174,1.474,196,2.672,210,2.674,373,2.305,379,3.057,382,4.336,383,4.169,384,3.203,386,2.911,405,2.228,600,0.845,602,1.901,609,4.63,620,4.111,622,3.424,625,2.674,646,1.213,648,2.571,657,1.731,662,1.082,666,4.804,742,3.38,760,1.901,771,2.132,1040,4.111,1106,3.203,1137,3.203,1138,3.203,1430,3.587,1442,3.587,1459,3.835,1474,3.38,2307,3.203,2317,2.388,2426,3.835,2611,3.38,2775,3.835,3227,4.146,3228,7.021,3229,3.38,3230,4.562,3231,4.562,3232,6.442,3233,4.562,3234,4.562,3235,4.562,3236,4.562,3237,4.562,3238,4.562,3239,4.562,3240,4.562,3241,4.562,3242,4.562,3243,4.562,3244,4.562,3245,4.562,3246,4.562,3247,4.562,3248,4.562,3249,4.562,3250,5.84,3251,4.562,3252,4.562,3253,4.562,3254,4.562,3255,4.562,3256,4.562,3257,4.562,3258,4.562,3259,4.146,3260,4.562,3261,5.84,3262,4.562,3263,4.562,3264,4.562,3265,4.562,3266,4.562,3267,4.562]],["title/injectables/GeocoderService.html",[196,1.734,3229,2.809]],["body/injectables/GeocoderService.html",[0,0.026,3,0.148,4,0.171,5,0.09,8,0.171,9,0.77,13,0.771,15,3.575,17,3.853,20,0.581,23,0.677,25,1.208,26,0.011,27,0.6,28,0.34,29,0.755,30,0.675,43,1.084,44,0.943,45,1.249,57,0.917,71,0.533,72,4.316,73,2.952,80,3.545,81,2.396,82,0.28,84,0.341,87,0.202,88,2.636,90,0.801,92,0.829,102,0.005,103,0.007,104,0.005,105,4.587,107,3.712,109,1.365,110,3.733,111,1.965,112,4.624,113,4.665,114,4.945,115,4.335,116,4.665,119,3.412,120,4.203,122,5.038,124,4.036,125,3.156,126,3.412,127,3.412,128,5.287,130,5.317,131,3.156,132,3.605,133,4.036,134,1.613,135,2.636,136,3.412,137,3.156,138,1.613,139,4.391,140,4.108,141,5.038,143,3.156,144,3.412,145,4.335,146,2.952,147,2.636,148,1.293,149,3.412,150,2.952,151,1.834,152,3.412,153,3.412,154,3.412,155,4.036,157,3.412,165,2.396,166,2.038,169,2.396,170,1.965,174,1.405,196,2.348,198,2.509,210,2.201,373,1.897,379,1.965,382,3.687,383,3.545,384,2.636,386,3.276,395,3.804,405,2.507,600,0.695,609,4.253,620,3.733,622,3.43,625,2.201,646,1.365,648,2.894,657,1.734,662,1.083,666,4.339,742,2.782,760,2.139,771,2.379,1040,4.202,1106,3.605,1137,2.636,1138,2.636,1196,2.669,1430,2.952,1442,2.952,1459,3.156,1474,2.782,1563,3.754,1564,3.754,1565,3.754,1566,3.754,1568,3.754,1569,3.754,2307,2.636,2317,1.965,2426,4.316,2611,2.782,2775,3.156,3227,3.412,3228,5.134,3229,3.804,3230,5.85,3231,5.134,3232,6.96,3233,5.134,3234,3.754,3235,5.134,3236,3.754,3237,3.754,3238,3.754,3239,3.754,3240,3.754,3241,3.754,3242,3.754,3243,3.754,3244,3.754,3245,3.754,3246,3.754,3247,3.754,3248,3.754,3249,5.134,3250,5.85,3251,5.134,3252,5.134,3253,5.134,3254,3.754,3255,3.754,3256,3.754,3257,3.754,3258,3.754,3259,3.412,3260,3.754,3261,5.134,3262,3.754,3263,3.754,3264,3.754,3265,3.754,3266,3.754,3267,3.754,3268,5.845,3269,5.845,3270,4.274,3271,4.274,3272,4.274,3273,4.274,3274,4.274]],["title/components/HeaderComponent.html",[313,0.236,535,1.036]],["body/components/HeaderComponent.html",[0,0.025,3,0.142,4,0.165,5,0.121,8,0.165,9,0.752,11,1.228,13,0.66,20,0.561,21,2.849,22,4.723,23,0.657,25,0.824,26,0.011,27,0.543,28,0.307,29,0.534,30,0.901,33,1.261,43,1.019,44,0.929,52,1.045,56,1.445,57,0.816,64,1.13,65,0.928,71,0.534,79,3.518,80,2.042,82,0.244,84,0.329,86,2.124,87,0.142,92,0.757,102,0.005,103,0.007,104,0.005,109,0.963,148,0.652,169,2.312,188,1.712,209,0.682,220,1.126,235,1.414,246,0.963,269,0.99,278,4.934,280,5.208,281,5.01,282,5.01,295,1.045,313,0.357,333,2.849,360,2.367,362,3.197,380,0.963,407,1.1,416,1.019,423,1.94,466,1.017,467,1.104,468,1.074,469,1.104,472,1.657,473,0.752,474,1.227,476,1.162,478,1.162,481,1.837,493,1.045,494,1.526,495,0.477,496,1.94,497,1.135,498,1.135,499,0.938,500,1.135,501,0.99,502,1.135,503,0.99,504,1.135,505,1.017,506,1.135,507,1.017,508,1.135,509,1.017,510,1.135,511,1.017,512,1.569,513,1.017,514,1.074,515,1.135,516,1.017,517,1.135,518,0.963,519,1.135,520,1.017,521,1.135,522,1.135,523,0.99,524,1.135,525,1.017,526,1.135,527,0.99,528,1.135,529,1.017,530,1.798,531,1.017,532,0.963,533,0.963,534,1.569,535,1.838,536,1.135,537,1.017,538,1.135,539,1.017,540,1.135,541,0.963,542,1.135,543,1.017,544,1.135,545,1.017,546,1.017,547,1.135,548,0.99,549,0.963,550,1.135,551,0.99,552,1.135,553,0.99,554,1.135,555,0.99,556,1.074,557,1.017,558,1.135,559,1.017,560,1.135,561,1.017,562,1.135,563,0.99,564,1.135,565,1.017,566,1.074,567,0.99,568,0.99,569,1.104,570,0.711,571,0.99,572,1.135,573,0.99,574,1.135,575,0.99,576,1.135,577,0.99,578,1.135,579,0.99,580,1.135,581,0.99,582,1.135,583,0.99,584,1.135,585,0.99,586,1.135,587,0.99,588,1.135,589,0.99,590,1.135,591,0.99,592,1.135,593,0.99,594,1.135,595,0.99,596,1.135,597,0.99,598,1.104,599,1.135,688,1.831,771,2.226,940,2.824,942,3.712,950,2.312,1047,2.849,1107,1.77,1176,2.544,1250,1.831,1485,4.211,1509,2.685,2354,5.01,2439,5.01,2478,2.849,2612,2.849,3275,3.623,3276,5.703,3277,5.703,3278,6.195,3279,4.553,3280,4.553,3281,4.553,3282,3.939,3283,7.053,3284,7.053,3285,5.703,3286,5.703,3287,5.703,3288,5.703,3289,5.703,3290,6.537,3291,6.537,3292,7.053,3293,5.703,3294,7.053,3295,6.537,3296,7.403,3297,6.537,3298,5.703,3299,5.703,3300,4.125,3301,4.125,3302,4.125,3303,4.125,3304,4.125,3305,5.703,3306,4.125,3307,4.125,3308,4.125,3309,5.01,3310,3.623,3311,3.623,3312,3.623,3313,4.125,3314,4.125,3315,4.125,3316,4.125,3317,4.125,3318,4.125,3319,4.125,3320,5.703,3321,4.125,3322,4.125,3323,4.125,3324,4.125,3325,4.125,3326,4.125,3327,4.125]],["title/interfaces/ISpaEnvResponse.html",[600,0.702,3328,3.445]],["body/interfaces/ISpaEnvResponse.html",[0,0.03,3,0.204,4,0.137,5,0.072,8,0.137,9,0.659,11,1.076,16,3.253,17,2.219,26,0.011,28,0.298,30,0.79,34,1.083,36,1.829,43,0.495,45,1.293,51,2.366,55,3.009,59,1.217,65,1.055,71,0.559,77,2.011,80,1.696,82,0.284,83,1.47,84,0.274,85,0.607,87,0.204,88,2.113,90,1.35,92,0.579,102,0.004,103,0.006,104,0.004,105,2.801,107,3.212,109,0.8,110,1.92,111,1.575,112,2.113,120,2.934,122,4.222,131,3.69,132,2.113,134,2.448,138,1.293,139,3.167,140,2.113,141,3.253,147,4.001,148,1.248,150,2.366,155,4.48,163,2.525,165,1.92,166,1.633,174,0.607,185,2.113,188,1.422,192,1.945,194,2.366,195,2.529,204,1.266,209,0.598,211,6.461,213,2.298,215,1.976,217,1.024,218,1.301,220,1.241,235,0.541,247,3.009,269,1.557,272,3.082,273,1.92,276,2.011,278,2.113,287,2.366,290,5.178,291,5.183,295,1.931,296,5.136,297,2.529,313,0.354,337,1.633,351,2.529,352,2.011,360,3.163,396,1.764,415,3.69,416,1.123,422,3.082,423,0.868,448,1.254,472,1.266,474,0.466,476,0.698,478,0.698,481,1.301,483,2.113,491,1.764,492,1.633,511,1.6,600,0.557,602,1.254,611,1.557,612,1.748,614,2.16,615,1.945,616,1.723,617,2.383,635,2.366,645,1.422,646,0.8,657,1.301,662,1.172,670,2.934,679,3.082,688,2.88,694,1.217,695,1.217,696,1.217,705,1.521,746,1.115,754,1.521,771,1.453,806,3.341,818,1.293,819,1.217,820,1.775,821,1.293,822,1.775,881,4.357,932,1.674,972,1.217,986,1.333,1010,1.47,1040,3.866,1041,2.529,1043,3.452,1122,3.69,1147,2.366,1371,2.113,1430,2.366,1432,3.253,1442,2.366,1449,2.229,1450,2.682,1460,2.734,1474,2.229,1499,3.639,1500,2.011,1501,3.989,1505,2.734,1508,3.989,1509,2.229,1510,2.734,1511,2.529,1512,2.734,1514,2.734,1515,3.989,1516,2.734,1518,2.734,1593,4.79,1729,4.39,2360,3.082,2381,3.009,2478,3.452,2601,3.009,2605,3.452,2611,2.229,2643,2.734,2644,3.009,2645,3.253,2668,3.452,2675,3.009,2716,3.009,2724,3.009,2735,2.734,2737,4.39,2746,4.39,2796,4.39,2797,3.69,2846,3.009,2903,3.009,2918,2.734,2988,4.222,3090,3.69,3162,2.366,3282,3.452,3328,4.71,3329,3.009,3330,2.734,3331,2.529,3332,7.202,3333,7.202,3334,4.998,3335,6.898,3336,6.487,3337,6.487,3338,6.487,3339,6.487,3340,6.487,3341,6.487,3342,6.487,3343,3.425,3344,3.425,3345,3.425,3346,2.734,3347,3.425,3348,3.425,3349,3.425,3350,3.425,3351,3.425,3352,3.009,3353,3.425,3354,4.998,3355,4.998,3356,4.39,3357,6.487,3358,6.487,3359,4.998,3360,3.989,3361,4.998,3362,4.998,3363,6.059,3364,4.79,3365,4.998,3366,4.998,3367,4.39,3368,4.39,3369,3.989,3370,4.39,3371,4.998,3372,4.998,3373,4.998,3374,6.326,3375,4.998,3376,4.998,3377,4.998,3378,4.998,3379,4.998,3380,4.998,3381,4.998,3382,4.998,3383,4.998,3384,4.998,3385,4.998,3386,4.998,3387,4.998,3388,4.998,3389,4.998,3390,4.39,3391,3.425,3392,3.425,3393,3.425,3394,2.734,3395,3.425,3396,3.009,3397,2.734,3398,3.425,3399,2.734,3400,3.425,3401,4.998,3402,2.734,3403,3.425,3404,3.425,3405,3.425,3406,3.425,3407,3.425,3408,4.998,3409,3.425,3410,3.009,3411,3.009,3412,3.425,3413,3.425,3414,3.425,3415,3.425,3416,3.425,3417,3.425,3418,3.425,3419,3.425,3420,3.425,3421,3.425,3422,3.425,3423,3.425,3424,3.425,3425,3.425,3426,2.734,3427,3.425,3428,3.425,3429,3.009,3430,3.425,3431,3.425,3432,3.425,3433,3.425,3434,3.425,3435,3.425,3436,3.425,3437,4.998,3438,3.425,3439,3.425,3440,3.425,3441,3.425,3442,3.425,3443,3.425,3444,3.425,3445,2.734,3446,3.425,3447,3.425,3448,3.009,3449,3.425,3450,3.425,3451,3.425,3452,3.425,3453,3.425,3454,3.425,3455,3.425,3456,3.425,3457,3.425,3458,3.425,3459,4.998,3460,4.998,3461,3.425,3462,3.425,3463,3.425,3464,3.425,3465,3.425,3466,4.998,3467,3.425]],["title/classes/MaskModel.html",[0,0.026,3468,3.187]],["body/classes/MaskModel.html",[0,0.033,2,2.34,3,0.188,4,0.219,5,0.115,8,0.219,9,0.904,10,2.441,13,0.794,20,1.02,23,0.69,25,0.991,26,0.011,27,0.503,28,0.344,29,0.642,30,1.244,33,1.517,43,1.084,44,1.151,45,1.286,50,1.801,57,0.794,65,0.887,71,0.559,82,0.256,84,0.436,87,0.272,90,1.286,92,0.631,102,0.007,103,0.008,104,0.007,174,1.33,220,1.465,300,2.34,326,1.382,364,3.057,396,2.808,407,1.051,416,1.138,611,1.646,612,1.995,618,1.947,642,1.724,646,1.602,662,0.887,697,1.585,724,3.715,736,4.464,764,4.026,928,2.436,930,1.996,931,1.88,932,1.826,933,1.996,960,2.297,1091,3.681,1196,1.88,1197,2.058,1218,3.864,1220,3.578,1249,3.681,1335,2.808,1500,3.201,2385,2.808,2486,4.353,2878,4.79,2993,4.79,3195,3.549,3468,5.064,3469,4.79,3470,6.59,3471,5.475,3472,6.859,3473,5.453,3474,4.79,3475,5.453,3476,5.475,3477,5.453,3478,5.453,3479,5.453,3480,5.453,3481,5.453,3482,5.453,3483,5.453,3484,5.453,3485,4.79,3486,4.027,3487,4.79]],["title/interfaces/Maxlengths.html",[600,0.702,633,2.809]],["body/interfaces/Maxlengths.html",[0,0.018,3,0.105,4,0.122,5,0.064,8,0.122,9,0.603,10,0.989,20,0.413,26,0.011,27,0.223,28,0.263,29,0.718,30,1.274,34,1.446,36,2.013,43,0.661,44,1.052,45,1.497,47,1.505,59,1.079,65,0.895,71,0.559,76,1.449,82,0.267,84,0.243,85,0.539,87,0.211,90,1.147,92,0.888,93,1.703,102,0.004,103,0.005,104,0.004,134,1.147,138,1.147,170,2.103,174,1.222,178,1.261,188,2.282,192,2.141,203,1.703,204,1.159,209,0.364,217,0.908,218,1.191,235,0.48,239,0.859,259,2.244,273,1.703,300,1.304,302,1.874,310,2.821,313,0.334,326,1.159,336,1.304,337,1.449,354,1.183,364,1.703,373,1.349,378,1.565,382,4.297,383,3.954,385,1.739,395,3.579,396,1.565,401,1.874,405,1.304,416,1.165,421,1.449,472,1.159,474,0.413,476,0.619,478,0.619,481,0.791,499,1.04,533,0.71,549,1.068,600,0.895,601,3.798,602,1.112,603,1.488,604,1.488,605,2.244,606,3.377,607,3.651,608,3.651,609,4.118,610,5.202,611,1.098,612,1.394,613,2.821,614,2.013,615,1.78,616,1.577,617,2.181,618,1.098,619,0.934,620,2.564,621,2.244,622,4.297,623,2.426,624,3.579,625,3.379,626,2.099,627,3.159,628,2.099,629,3.774,630,3.579,631,2.977,632,2.426,633,4.271,634,4.532,635,2.099,636,2.244,637,2.426,638,2.426,639,2.426,640,1.505,641,1.703,642,0.961,643,1.784,644,1.565,645,1.261,646,0.71,647,3.377,648,2.265,649,3.651,650,2.564,651,2.685,652,2.099,653,2.426,654,2.426,655,2.244,656,3.377,657,1.795,658,2.426,659,2.723,660,5.711,661,2.426,662,0.494,663,1.784,664,2.244,665,2.244,666,2.564,667,2.426,668,2.244,669,2.426,670,4.047,671,2.244,672,2.426,673,2.244,674,2.244,675,3.651,676,2.426,677,2.426,678,3.651,679,2.821,680,2.426,681,2.244,682,2.426,683,2.426,684,2.426,685,2.529,686,2.832,687,1.978,688,2.913,689,2.426,690,2.244,691,2.426,692,4.226,693,1.703,694,1.079,695,1.625,696,1.079,697,0.883,698,2.426,699,2.426,700,3.651,701,6.126,702,3.651,703,2.426,704,2.977,705,2.441,706,3.651,707,6.012,708,4.39,709,1.565,710,2.244,711,2.099,712,2.426,713,2.426,714,2.426,715,2.426,716,2.426,717,2.426,718,4.884,719,1.304,720,2.426,721,2.426,722,3.651,723,3.159,724,1.505,725,3.651,726,5.238,727,5.504,728,5.238,729,2.426,730,2.426,731,3.651,732,2.426,733,3.651,734,2.564,735,2.426,736,1.978,737,2.426,738,2.426,739,1.874,740,2.426,741,2.426,742,3.579,743,2.426,744,2.426,745,2.426,746,2.328,747,3.377,748,2.564,749,3.651,750,3.651,751,3.651,752,3.651,753,2.426,754,1.349,755,2.426,756,2.426,757,4.061,758,2.099,759,2.244,760,1.112,761,2.426,762,2.426,763,2.426,764,1.784,765,1.703,766,2.426,767,2.426,768,1.112,769,2.426,770,2.099,771,2.14,772,2.426,773,4.884,774,2.426,775,2.426,776,2.426,777,2.426,778,2.426,779,4.061,780,2.099,781,2.637,782,2.426,783,4.226,784,3.651,785,3.159,786,3.651,787,4.39,788,2.099,789,2.426,790,2.426,791,2.099,792,1.978,793,1.978,794,2.099,795,1.631,796,2.426,797,2.426,798,2.426,799,3.377,800,2.426,801,2.426,802,2.244,803,2.426,804,3.377,805,2.244,806,2.356,807,2.244,808,2.426,809,2.426,810,2.426,811,1.784,812,2.426,813,2.426,814,2.426,815,2.426,816,2.426,817,1.147,818,1.147,819,1.079,820,1.625,821,1.147,822,1.079,823,1.397,824,2.529,825,1.304,826,2.426,827,2.426,828,2.426,829,2.426,830,2.426,831,2.426,832,2.426,833,2.426,834,2.426,835,2.426,836,2.426,837,2.244,838,2.426,839,3.651,840,2.426,841,2.426]],["title/classes/MoHCommonLibraryError.html",[0,0.026,3488,3.187]],["body/classes/MoHCommonLibraryError.html",[0,0.04,2,2.856,3,0.23,4,0.267,5,0.141,20,0.905,23,0.532,25,0.962,26,0.011,27,0.488,28,0.267,29,0.623,71,0.522,81,3.73,87,0.23,102,0.008,103,0.009,104,0.008,148,1.293,646,1.807,1450,3.572,1500,3.907,3488,5.714,3489,6.796,3490,5.846,3491,7.738,3492,6.656,3493,6.656,3494,6.656,3495,7.738,3496,7.738,3497,6.656,3498,6.656,3499,6.656]],["title/components/NameComponent.html",[246,1.008,313,0.236]],["body/components/NameComponent.html",[0,0.021,3,0.122,4,0.142,5,0.108,8,0.142,9,0.673,10,1.953,11,1.099,13,0.591,20,0.694,23,0.687,25,1.111,26,0.011,27,0.611,28,0.34,29,0.744,30,1.103,33,1.13,34,1.615,37,1.332,43,1.111,44,1.134,45,0.958,50,1.579,52,0.894,56,1.294,57,0.869,64,1.012,65,1.31,71,0.524,82,0.224,84,0.282,85,0.626,87,0.122,92,0.591,102,0.004,103,0.006,104,0.004,109,0.824,117,2.268,148,0.558,209,0.611,213,2.349,220,1.324,232,3.151,235,1.4,239,1.444,246,1.536,269,0.847,295,0.894,313,0.328,319,2.621,326,0.894,362,2.863,380,0.824,385,1.615,400,3.091,407,1.157,416,1.052,423,1.294,466,0.87,467,0.945,468,0.919,469,0.945,473,0.644,474,1.218,476,1.041,478,1.041,493,0.894,494,1.367,495,0.409,496,1.81,497,0.971,498,0.971,499,0.802,500,0.971,501,0.847,502,0.971,503,0.847,504,0.971,505,0.87,506,0.971,507,0.87,508,0.971,509,0.87,510,0.971,511,0.87,512,1.405,513,0.87,514,0.919,515,0.971,516,0.87,517,0.971,518,0.824,519,0.971,520,0.87,521,0.971,522,0.971,523,0.847,524,0.971,525,0.87,526,0.971,527,0.847,528,0.971,529,0.87,530,1.651,531,0.87,532,0.824,533,0.824,534,1.405,535,0.847,536,0.971,537,0.87,538,0.971,539,0.87,540,0.971,541,0.824,542,0.971,543,0.87,544,0.971,545,0.87,546,0.87,547,0.971,548,0.847,549,0.824,550,0.971,551,0.847,552,0.971,553,0.847,554,0.971,555,0.847,556,0.919,557,0.87,558,0.971,559,0.87,560,0.971,561,0.87,562,0.971,563,0.847,564,0.971,565,0.87,566,0.919,567,0.847,568,0.847,569,0.945,570,0.608,571,0.847,572,0.971,573,0.847,574,0.971,575,0.847,576,0.971,577,0.847,578,0.971,579,0.847,580,0.971,581,0.847,582,0.971,583,0.847,584,0.971,585,0.847,586,0.971,587,0.847,588,0.971,589,0.847,590,0.971,591,0.847,592,0.971,593,0.847,594,0.971,595,0.847,596,0.971,597,0.847,598,0.945,599,0.971,611,1.441,612,1.902,616,2.07,618,1.579,619,1.085,642,1.116,646,1.193,657,0.919,659,2.73,662,0.831,694,2.132,695,1.814,696,2.132,697,1.026,719,2.192,768,1.87,817,2.265,818,1.332,819,1.814,820,2.585,821,1.332,822,1.814,823,2.349,824,1.623,825,2.192,899,1.085,928,1.814,930,1.292,931,1.217,932,1.182,933,1.292,960,1.711,972,2.132,991,2.491,992,2.491,1010,1.514,1071,2.529,1107,2.192,1167,3.21,1170,1.748,1171,3.099,1175,3.151,1193,1.748,1196,1.217,1197,1.332,1198,2.268,1201,1.623,1212,3.221,1213,3.221,1214,2.863,1217,2.76,1219,2.972,1220,2.862,1226,2.268,1235,2.072,1237,2.072,1250,2.268,1252,3.151,1253,2.823,1254,3.528,1255,3.528,1256,3.528,1258,1.978,1260,1.978,1335,1.818,1336,1.748,1337,1.818,1484,3.772,2317,1.623,2549,3.528,2550,3.528,2554,3.772,2555,3.151,2556,4.487,2560,5.273,2566,4.487,2581,3.1,2584,3.1,2585,3.1,3160,4.078,3161,4.078,3194,4.078,3195,4.282,3500,3.1,3501,6.003,3502,5.108,3503,3.53,3504,3.53,3505,5.108,3506,3.53,3507,3.53,3508,5.108,3509,3.53,3510,3.53,3511,3.53,3512,3.53,3513,3.53,3514,3.53,3515,3.53,3516,3.53,3517,3.53,3518,3.53,3519,3.53,3520,3.53,3521,3.53,3522,6.003,3523,3.53,3524,5.108]],["title/components/PageFrameworkComponent.html",[313,0.236,537,1.064]],["body/components/PageFrameworkComponent.html",[0,0.026,3,0.148,4,0.172,5,0.124,8,0.172,11,1.261,13,0.678,23,0.468,26,0.011,27,0.489,28,0.172,33,1.296,43,1.085,44,0.565,52,1.087,56,1.485,57,0.497,64,1.671,65,0.698,82,0.16,84,0.343,87,0.202,102,0.005,103,0.007,104,0.005,109,1.002,148,0.926,163,2.792,209,0.701,215,1.963,235,1.417,246,1.002,269,1.03,295,1.087,306,4.327,313,0.365,352,4.209,354,2.281,380,1.002,407,1.13,416,0.847,423,1.817,466,1.058,467,1.786,468,1.117,469,1.148,472,1.691,473,0.782,474,1.229,476,1.194,478,1.194,481,1.867,493,1.087,494,1.568,495,0.497,496,1.973,497,1.18,498,1.18,499,0.975,500,1.18,501,1.03,502,1.18,503,1.03,504,1.18,505,1.058,506,1.18,507,1.058,508,1.18,509,1.058,510,1.18,511,1.058,512,1.612,513,1.058,514,1.117,515,1.18,516,1.058,517,1.18,518,1.002,519,1.18,520,1.058,521,1.18,522,1.18,523,1.03,524,1.18,525,1.058,526,1.18,527,1.03,528,1.18,529,1.058,530,1.836,531,1.058,532,1.002,533,1.002,534,1.612,535,1.03,536,1.18,537,1.768,538,1.18,539,1.058,540,1.18,541,1.002,542,1.18,543,1.058,544,1.18,545,1.058,546,1.058,547,1.18,548,1.03,549,1.002,550,1.18,551,1.03,552,1.18,553,1.03,554,1.18,555,1.03,556,1.117,557,1.058,558,1.18,559,1.058,560,1.18,561,1.058,562,1.18,563,1.03,564,1.18,565,1.058,566,1.117,567,1.03,568,1.03,569,1.148,570,0.739,571,1.03,572,1.18,573,1.03,574,1.18,575,1.03,576,1.18,577,1.03,578,1.18,579,1.03,580,1.18,581,1.03,582,1.18,583,1.03,584,1.18,585,1.03,586,1.18,587,1.03,588,1.18,589,1.03,590,1.18,591,1.03,592,1.18,593,1.03,594,1.18,595,1.03,596,1.18,597,1.03,598,1.148,599,1.18,603,1.907,604,1.907,719,2.514,981,5.147,1111,4.327,1261,1.67,1262,2.281,1263,1.67,1264,2.281,1265,2.281,1266,2.281,1267,1.67,1268,1.67,1269,2.281,1270,2.281,1271,1.67,1272,1.67,1273,1.67,1274,1.67,1275,1.67,1276,2.281,1277,2.211,1278,1.67,1279,2.281,1280,2.281,1281,1.67,1282,2.281,1283,1.67,1284,1.67,1285,1.67,1286,1.67,1287,2.792,1288,1.67,1289,1.67,1290,1.67,1291,1.67,1292,1.67,1293,1.67,1294,1.67,1295,1.67,1296,1.67,1297,1.67,1298,1.67,1299,1.67,1300,1.67,1301,1.67,1302,1.67,1303,1.67,1304,2.281,1305,1.67,1306,1.67,1307,1.67,1308,1.67,1309,1.67,1310,1.67,1311,1.67,1312,1.67,1313,1.67,1314,1.67,1315,1.67,1316,1.67,1317,1.67,1318,2.281,1319,1.67,1320,1.67,1321,1.67,1322,1.67,1323,1.67,1324,1.396,1325,1.67,1326,1.67,1327,1.67,1328,1.67,1329,1.67,1330,1.67,1331,1.67,1332,1.67,1486,4.327,1502,4.327,1511,4.327,2359,3.614,3144,5.993,3148,5.725,3156,4.327,3279,4.678,3368,5.147,3525,5.327,3526,5.327,3527,3.769,3528,5.147,3529,5.147,3530,5.86,3531,5.86,3532,5.86,3533,5.147,3534,4.327,3535,7.171,3536,5.147,3537,5.147,3538,5.147,3539,5.86,3540,5.86,3541,4.678,3542,4.291,3543,4.291,3544,3.769]],["title/interfaces/PageListInterface.html",[600,0.702,1127,3.187]],["body/interfaces/PageListInterface.html",[0,0.043,3,0.166,4,0.193,5,0.102,8,0.301,9,0.833,15,2.29,17,3.136,20,0.653,22,4.357,23,0.384,26,0.011,28,0.253,30,1.324,44,0.633,45,1.325,57,0.556,64,1.488,65,1.028,71,0.539,76,3.818,80,3.964,82,0.263,84,0.384,86,2.473,87,0.218,90,1.407,92,0.959,97,2.585,102,0.006,103,0.008,104,0.006,109,1.122,111,2.208,163,2.46,174,1.33,196,2.539,197,4.113,199,3.317,201,3.898,202,2.819,209,0.575,213,2.906,214,3.898,220,1.427,221,3.834,222,3.834,223,3.834,224,3.834,239,1.358,272,4.357,273,2.692,309,3.248,326,1.217,360,1.993,362,2.692,385,1.519,409,2.692,448,2.313,600,1.149,602,1.758,657,1.646,734,3.542,760,1.758,771,1.837,781,2.539,794,4.879,795,3.392,845,2.962,852,6.391,940,2.378,1085,3.546,1086,5.045,1087,3.834,1088,4.218,1089,3.834,1090,3.546,1091,2.577,1092,4.218,1093,4.218,1094,4.218,1095,4.218,1096,4.218,1097,3.834,1098,3.834,1099,4.218,1100,4.218,1106,3.898,1107,2.711,1108,3.317,1110,3.834,1111,4.667,1113,3.834,1114,3.317,1115,5.216,1118,4.218,1120,4.218,1121,4.218,1122,3.546,1124,4.218,1125,4.218,1127,5.216,1133,5.551,1134,3.834,1135,5.551,1136,5.551,1137,2.962,1138,2.962,1139,5.551,1140,5.551,1141,6.205,1142,6.85,1143,6.205,1144,5.551,1145,5.045,1146,5.045,1147,4.365,1148,5.551,1149,4.218,1150,4.218,1151,4.218,1152,4.218,1153,3.834,1154,4.218,1155,4.218,1156,4.218,1157,4.218,1158,4.218,1159,4.218,1160,4.218,1161,4.218,1162,4.218,1163,4.218,1426,3.834,3545,4.803]],["title/components/PageSectionComponent.html",[313,0.236,539,1.064]],["body/components/PageSectionComponent.html",[0,0.027,3,0.153,4,0.177,5,0.126,8,0.177,11,1.286,13,0.692,20,0.921,23,0.541,26,0.011,27,0.497,28,0.177,33,1.322,41,3.526,43,0.638,44,0.582,52,1.119,56,1.514,57,0.511,64,1.633,65,0.719,82,0.165,84,0.353,87,0.153,102,0.005,103,0.007,104,0.005,148,0.944,188,1.833,209,0.715,235,1.419,246,1.032,269,1.06,278,2.724,295,1.119,311,2.724,313,0.37,335,2.275,380,1.032,385,1.397,407,1.152,416,0.979,423,1.514,466,1.089,467,1.182,468,1.15,469,1.182,472,1.717,473,0.805,474,1.23,476,1.218,478,1.218,481,1.89,493,1.119,494,1.813,495,0.511,496,1.996,497,1.215,498,1.215,499,1.004,500,1.215,501,1.06,502,1.215,503,1.06,504,1.215,505,1.089,506,1.215,507,1.089,508,1.215,509,1.089,510,1.215,511,1.089,512,1.644,513,1.089,514,1.15,515,1.215,516,1.089,517,1.215,518,1.032,519,1.215,520,1.089,521,1.215,522,1.215,523,1.06,524,1.215,525,1.089,526,1.215,527,1.06,528,1.215,529,1.089,530,1.863,531,1.089,532,1.032,533,1.032,534,1.644,535,1.06,536,1.215,537,1.089,538,1.215,539,1.79,540,1.215,541,1.032,542,1.215,543,1.089,544,1.215,545,1.089,546,1.089,547,1.215,548,1.06,549,1.032,550,1.215,551,1.06,552,1.215,553,1.06,554,1.215,555,1.06,556,1.15,557,1.089,558,1.215,559,1.089,560,1.215,561,1.089,562,1.215,563,1.06,564,1.215,565,1.089,566,1.15,567,1.06,568,1.06,569,1.182,570,0.761,571,1.06,572,1.215,573,1.06,574,1.215,575,1.06,576,1.215,577,1.06,578,1.215,579,1.06,580,1.215,581,1.06,582,1.215,583,1.06,584,1.215,585,1.06,586,1.215,587,1.06,588,1.215,589,1.06,590,1.215,591,1.06,592,1.215,593,1.06,594,1.215,595,1.06,596,1.215,597,1.06,598,1.182,599,1.215,603,1.945,604,1.945,657,1.15,663,2.593,705,1.961,937,3.05,1091,2.37,1261,1.719,1262,2.326,1263,1.719,1264,2.326,1265,2.326,1266,2.326,1267,1.719,1268,1.719,1269,2.326,1270,2.326,1271,1.719,1272,1.719,1273,1.719,1274,1.719,1275,1.719,1276,2.326,1277,2.255,1278,1.719,1279,2.326,1280,2.326,1281,1.719,1282,2.326,1283,1.719,1284,1.719,1285,1.719,1286,1.719,1287,2.825,1288,1.719,1289,1.719,1290,1.719,1291,1.719,1292,1.719,1293,1.719,1294,1.719,1295,1.719,1296,1.719,1297,1.719,1298,1.719,1299,1.719,1300,1.719,1301,1.719,1302,1.719,1303,1.719,1304,2.326,1305,1.719,1306,1.719,1307,1.719,1308,1.719,1309,1.719,1310,1.719,1311,1.719,1312,1.719,1313,1.719,1314,1.719,1315,1.719,1316,1.719,1317,1.719,1318,2.326,1319,1.719,1320,1.719,1321,1.719,1322,1.719,1323,1.719,1324,1.437,1325,1.719,1326,1.719,1327,1.719,1328,1.719,1329,1.719,1330,1.719,1331,1.719,1332,1.719,2304,3.526,2555,2.724,3023,3.88,3144,5.794,3282,4.678,3352,3.88,3525,5.794,3536,6.375,3537,5.25,3538,5.25,3541,4.771,3544,3.88,3546,5.794,3547,3.88,3548,5.977,3549,5.977,3550,5.977,3551,5.977,3552,4.417,3553,4.417,3554,7.583,3555,4.417,3556,4.417,3557,4.417,3558,4.417,3559,3.526,3560,4.417,3561,4.417,3562,4.417]],["title/components/PasswordComponent.html",[313,0.236,541,1.008]],["body/components/PasswordComponent.html",[0,0.016,3,0.092,4,0.107,5,0.087,8,0.107,9,0.545,11,1.091,13,0.479,20,0.689,23,0.678,25,0.826,26,0.011,27,0.501,28,0.333,29,0.535,30,1.034,33,1.121,34,0.843,36,2.264,43,1.166,44,1.071,45,1.16,47,2.048,48,1.84,50,1.571,52,0.675,53,2.428,56,1.048,57,0.716,59,0.946,64,0.82,65,0.93,71,0.545,82,0.213,84,0.213,85,0.472,87,0.175,90,1.071,92,0.479,93,1.493,97,2.091,102,0.003,103,0.005,104,0.003,109,0.966,134,1.005,148,0.801,170,1.225,174,0.733,182,1.319,192,1.037,194,3.946,204,1.048,209,0.495,215,1.698,218,1.077,220,1.353,235,1.371,239,0.753,246,0.622,269,0.639,276,1.564,295,0.675,300,3.111,309,2.331,310,1.643,313,0.386,319,2.013,320,1.967,326,1.568,336,1.143,337,1.27,351,3.054,354,1.61,360,1.717,373,1.183,379,1.902,380,0.622,405,1.143,407,0.977,409,1.493,416,1.122,423,1.048,439,4.561,466,0.657,467,0.713,468,0.694,469,0.713,472,1.285,473,0.486,474,1.199,476,0.843,478,0.843,481,1.488,493,0.675,494,1.107,495,0.479,496,1.572,497,0.733,498,0.733,499,0.606,500,0.733,501,0.639,502,0.733,503,0.639,504,0.733,505,0.657,506,0.733,507,0.657,508,0.733,509,0.657,510,0.733,511,0.657,512,1.138,513,0.657,514,0.694,515,0.733,516,0.657,517,0.733,518,0.622,519,0.733,520,0.657,521,0.733,522,0.733,523,0.639,524,0.733,525,0.657,526,0.733,527,0.639,528,0.733,529,0.657,530,1.394,531,0.657,532,0.622,533,0.622,534,1.138,535,0.639,536,0.733,537,0.657,538,0.733,539,0.657,540,0.733,541,1.529,542,0.733,543,0.657,544,0.733,545,0.657,546,0.657,547,0.733,548,0.639,549,0.622,550,0.733,551,0.639,552,0.733,553,0.639,554,0.733,555,0.639,556,0.694,557,0.657,558,0.733,559,0.657,560,0.733,561,0.657,562,0.733,563,0.639,564,0.733,565,0.657,566,0.694,567,0.639,568,0.639,569,0.713,570,0.459,571,0.639,572,0.733,573,0.639,574,0.733,575,0.639,576,0.733,577,0.639,578,0.733,579,0.639,580,0.733,581,0.639,582,0.733,583,0.639,584,0.733,585,0.639,586,0.733,587,0.639,588,0.733,589,0.639,590,0.733,591,0.639,592,0.733,593,0.639,594,0.733,595,0.639,596,0.733,597,0.639,598,0.713,599,0.733,600,0.673,603,1.346,604,1.346,611,1.371,612,1.659,613,3.127,614,1.855,615,1.973,618,1.371,619,0.819,640,1.319,641,1.493,642,1.308,643,1.564,644,1.372,645,1.717,646,0.966,652,3.501,657,0.694,662,0.673,686,2.943,697,0.775,739,2.551,754,1.183,771,2.306,825,2.175,928,2.197,930,0.975,931,0.919,932,0.892,933,0.975,935,1.493,950,1.493,960,1.385,972,2.325,983,3.302,1107,1.143,1196,0.919,1197,1.005,1199,0.975,1204,3.127,1217,2.331,1219,2.51,1226,1.836,1228,1.734,1253,2.654,1261,1.037,1262,1.61,1263,1.037,1264,1.61,1265,1.61,1266,1.61,1267,1.037,1268,1.037,1269,1.61,1270,1.61,1271,1.037,1272,1.037,1273,1.037,1274,1.037,1275,1.037,1276,1.61,1277,1.561,1278,1.037,1279,1.61,1280,1.61,1281,1.037,1282,1.61,1283,1.037,1284,1.037,1285,1.037,1286,1.037,1287,2.224,1288,1.037,1289,1.037,1290,1.037,1291,1.037,1292,1.037,1293,1.037,1294,1.037,1295,1.037,1296,1.037,1297,1.037,1298,1.037,1299,1.037,1300,1.037,1301,1.037,1302,1.037,1303,1.037,1304,1.61,1305,1.037,1306,1.037,1307,1.037,1308,1.037,1309,1.037,1310,1.037,1311,1.037,1312,1.037,1313,1.037,1314,1.037,1315,1.037,1316,1.037,1317,1.037,1318,1.61,1319,1.037,1320,1.037,1321,1.037,1322,1.037,1323,1.037,1324,0.867,1325,1.037,1326,1.037,1327,1.037,1328,1.037,1329,1.037,1330,1.037,1331,1.037,1332,1.037,1336,1.319,1388,2.51,1389,1.717,1391,5.237,1450,1.43,1524,1.734,2207,3.719,2229,1.564,2288,1.84,2330,3.633,2332,2.34,2336,3.302,2371,3.633,2645,3.719,2680,2.127,2730,3.946,2734,1.643,2744,3.054,2797,3.054,2917,1.84,3060,3.302,3162,3.501,3168,3.743,3212,1.967,3213,1.967,3225,3.633,3360,4.561,3369,3.302,3445,2.127,3563,2.127,3564,5.751,3565,3.633,3566,3.302,3567,3.302,3568,3.633,3569,3.633,3570,3.302,3571,3.633,3572,5.434,3573,3.633,3574,3.633,3575,4.453,3576,4.453,3577,4.453,3578,4.453,3579,6,3580,4.453,3581,4.453,3582,4.136,3583,4.453,3584,4.453,3585,4.453,3586,4.453,3587,4.453,3588,4.136,3589,4.568,3590,2.664,3591,2.664,3592,2.664,3593,2.664,3594,3.054,3595,2.664,3596,2.664,3597,3.633,3598,2.664,3599,2.664,3600,2.318,3601,2.664,3602,2.664,3603,2.664,3604,2.664,3605,2.664,3606,2.664,3607,2.664,3608,2.664,3609,3.633,3610,3.633,3611,3.633,3612,3.633,3613,3.633,3614,2.664,3615,2.664,3616,3.633,3617,2.664,3618,2.664,3619,2.664,3620,3.302,3621,3.633,3622,2.664,3623,2.664,3624,2.664,3625,2.664,3626,2.664,3627,2.664,3628,2.664,3629,3.633,3630,4.047,3631,2.34,3632,1.734,3633,2.34,3634,2.34,3635,2.34,3636,2.34,3637,2.34,3638,4.453,3639,4.453,3640,3.633,3641,3.203,3642,2.34,3643,2.34,3644,2.34,3645,2.34,3646,2.34,3647,2.34,3648,1.84,3649,3.633,3650,2.34,3651,3.633,3652,2.34,3653,3.633,3654,2.34,3655,2.34,3656,3.633,3657,3.633,3658,2.34,3659,2.34,3660,2.34,3661,2.34,3662,2.34,3663,2.34,3664,2.34,3665,2.127,3666,2.34,3667,2.34,3668,6.547,3669,5.714,3670,4.136,3671,2.664,3672,4.136,3673,4.136,3674,5.019,3675,4.136,3676,4.136,3677,4.136,3678,4.136,3679,2.664]],["title/interfaces/PasswordErrorMsg.html",[600,0.702,3589,3.187]],["body/interfaces/PasswordErrorMsg.html",[0,0.024,3,0.135,4,0.157,5,0.083,8,0.157,9,0.725,11,1.185,20,0.533,26,0.011,28,0.255,29,0.705,30,1.005,33,0.867,34,1.741,36,2.66,43,0.92,44,0.725,45,1.193,47,2.726,48,2.708,50,1.896,53,2.302,59,1.393,71,0.554,82,0.257,84,0.313,85,0.695,87,0.22,90,1.032,92,0.637,93,2.198,97,2.015,102,0.005,103,0.007,104,0.005,109,0.916,134,1.48,148,0.87,170,1.803,174,0.976,182,1.941,192,1.526,204,0.994,209,0.469,215,1.844,218,1.021,220,1.189,235,0.62,239,1.109,276,2.302,300,2.362,309,2.531,310,2.418,313,0.412,319,1.276,320,2.895,326,1.395,336,1.682,337,1.87,351,2.895,354,1.526,360,1.627,373,1.741,379,1.803,405,1.682,409,3.086,416,1.2,472,1.395,474,0.533,476,0.799,478,0.799,481,1.021,495,0.454,541,1.286,600,0.896,602,1.435,603,1.791,604,1.791,611,1.656,612,1.748,613,3.396,614,2.015,615,2.143,618,1.321,619,1.205,640,1.941,641,2.198,642,1.24,643,2.302,644,2.019,645,1.627,646,0.916,652,2.708,657,1.021,662,0.896,697,1.14,739,2.418,754,2.444,771,2.113,825,1.682,928,1.393,935,2.198,972,2.451,983,3.13,1107,1.682,1199,2.015,1204,3.924,1217,1.803,1219,1.941,1226,1.741,1228,2.552,1253,2.73,1261,1.526,1262,2.143,1263,1.526,1264,2.143,1265,2.143,1266,2.143,1267,1.526,1268,1.526,1269,2.143,1270,2.143,1271,1.526,1272,1.526,1273,1.526,1274,1.526,1275,1.526,1276,2.143,1277,2.078,1278,1.526,1279,2.143,1280,2.143,1281,1.526,1282,2.143,1283,1.526,1284,1.526,1285,1.526,1286,1.526,1287,2.686,1288,1.526,1289,1.526,1290,1.526,1291,1.526,1292,1.526,1293,1.526,1294,1.526,1295,1.526,1296,1.526,1297,1.526,1298,1.526,1299,1.526,1300,1.526,1301,1.526,1302,1.526,1303,1.526,1304,2.143,1305,1.526,1306,1.526,1307,1.526,1308,1.526,1309,1.526,1310,1.526,1311,1.526,1312,1.526,1313,1.526,1314,1.526,1315,1.526,1316,1.526,1317,1.526,1318,2.143,1319,1.526,1320,1.526,1321,1.526,1322,1.526,1323,1.526,1324,1.276,1325,1.526,1326,1.526,1327,1.526,1328,1.526,1329,1.526,1330,1.526,1331,1.526,1332,1.526,1336,1.941,1388,3.15,1389,1.627,1391,5.278,1450,2.104,1524,2.552,2207,3.583,2229,3.232,2288,2.708,2336,4.395,2645,3.583,2680,3.13,2734,2.418,2744,2.895,2797,2.895,2917,2.708,3060,3.13,3162,2.708,3168,2.895,3212,2.895,3213,2.895,3360,4.395,3369,3.13,3445,3.13,3563,3.13,3564,6.06,3565,3.444,3566,3.13,3567,3.13,3568,3.444,3569,3.444,3570,3.13,3571,3.444,3572,4.836,3573,3.444,3574,3.444,3575,3.444,3576,3.444,3577,3.444,3578,3.444,3579,3.444,3580,3.444,3581,3.444,3583,3.444,3584,3.444,3585,3.444,3586,3.444,3587,3.444,3589,5.095,3594,2.895,3597,3.444,3600,2.198,3609,3.444,3610,3.444,3611,3.444,3612,3.444,3613,3.444,3616,3.444,3620,3.13,3621,3.444,3629,4.836,3630,5.079,3631,3.444,3632,2.552,3633,3.444,3634,3.444,3635,3.444,3636,3.444,3637,3.444,3638,5.589,3639,6.619,3640,4.836,3641,4.338,3642,3.444,3643,3.444,3644,3.444,3645,3.444,3646,3.444,3647,3.444,3648,2.708,3649,4.836,3650,3.444,3651,4.836,3652,3.444,3653,4.836,3654,3.444,3655,3.444,3656,4.836,3657,4.836,3658,3.444,3659,3.444,3660,3.444,3661,3.444,3662,3.444,3663,3.444,3664,3.444,3665,3.13,3666,3.444,3667,3.444]],["title/classes/Person.html",[0,0.026,2627,2.662]],["body/classes/Person.html",[0,0.04,2,1.788,3,0.144,4,0.167,5,0.088,8,0.167,9,0.757,13,0.665,23,0.675,25,0.83,26,0.011,27,0.61,28,0.322,29,0.538,30,0.908,43,1.074,44,0.866,57,0.963,65,0.935,71,0.55,82,0.245,87,0.144,90,0.782,92,0.86,102,0.005,103,0.007,104,0.005,107,2.844,109,0.973,117,2.55,161,3.543,163,2.236,174,1.165,192,2.236,220,1.486,238,3.543,326,1.456,335,3.649,354,2.236,407,0.804,448,1.526,533,1.342,618,1.783,642,1.318,646,1.342,657,1.085,662,0.678,685,1.917,686,2.959,705,3.145,734,3.22,746,2.648,759,3.078,760,1.526,768,1.526,781,2.308,811,4.158,843,3.083,844,3.967,845,3.543,873,3.661,905,3.22,924,3.083,925,3.372,926,2.844,927,3.753,928,2.04,930,1.526,931,1.437,932,1.396,933,1.526,1090,3.078,1107,2.465,1113,4.586,1114,3.967,1196,1.437,1197,1.573,1431,3.372,1463,4.362,2215,4.054,2234,4.158,2239,4.158,2242,4.165,2278,3.327,2286,4.586,2388,6.223,2390,5,2611,2.713,2612,3.967,2627,5.131,2645,2.713,2932,4.854,3156,4.242,3157,5.655,3163,5.247,3164,5.247,3165,5.247,3206,5.655,3208,6.132,3210,4.586,3680,3.661,3681,6.574,3682,7.431,3683,7.085,3684,7.085,3685,6.574,3686,6.574,3687,4.168,3688,4.168,3689,5.745,3690,4.168,3691,4.168,3692,4.168,3693,4.168,3694,4.168,3695,5.745,3696,5.745,3697,7.085,3698,4.168,3699,4.168,3700,4.168,3701,7.431,3702,6.574,3703,4.168,3704,4.168,3705,5.745,3706,4.168,3707,4.168,3708,5.745,3709,5.745,3710,4.168,3711,4.168,3712,3.739,3713,5.745,3714,5.046,3715,3.661,3716,4.168,3717,4.168,3718,4.168,3719,5.745,3720,7.085,3721,7.085,3722,7.085,3723,4.168,3724,4.168,3725,4.168,3726,4.168,3727,7.431,3728,4.168,3729,4.168,3730,4.168,3731,5.745,3732,5.745,3733,4.168,3734,5.745,3735,4.168,3736,3.661,3737,4.168,3738,4.168,3739,4.168,3740,4.168,3741,4.168,3742,4.168]],["title/components/PhnComponent.html",[313,0.236,543,1.064]],["body/components/PhnComponent.html",[0,0.021,3,0.121,4,0.141,5,0.108,8,0.141,9,0.671,10,1.948,11,1.095,13,0.589,20,0.692,23,0.689,25,1.109,26,0.011,27,0.59,28,0.343,29,0.743,30,1.101,33,1.126,37,1.325,43,1.13,44,1.143,45,0.954,50,1.436,52,0.89,56,1.29,57,0.867,63,3.758,64,1.009,65,1.309,71,0.532,82,0.245,84,0.281,85,0.623,87,0.121,92,0.407,102,0.004,103,0.006,104,0.004,117,2.259,148,0.804,163,1.981,178,1.458,209,0.609,220,1.2,235,1.4,246,0.82,269,0.843,295,0.89,313,0.327,319,2.618,326,2.08,380,0.82,400,3.083,407,1.154,416,1.083,423,1.29,466,0.866,467,0.94,468,0.915,469,0.94,473,0.64,474,1.218,476,1.037,478,1.037,493,0.89,494,1.362,495,0.407,496,1.805,497,0.966,498,0.966,499,0.798,500,0.966,501,0.843,502,0.966,503,0.843,504,0.966,505,0.866,506,0.966,507,0.866,508,0.966,509,0.866,510,0.966,511,0.866,512,1.4,513,0.866,514,0.915,515,0.966,516,0.866,517,0.966,518,0.82,519,0.966,520,0.866,521,0.966,522,0.966,523,0.843,524,0.966,525,0.866,526,0.966,527,0.843,528,0.966,529,0.866,530,1.646,531,0.866,532,0.82,533,0.82,534,1.4,535,0.843,536,0.966,537,0.866,538,0.966,539,0.866,540,0.966,541,0.82,542,0.966,543,1.619,544,0.966,545,0.866,546,0.866,547,0.966,548,0.843,549,0.82,550,0.966,551,0.843,552,0.966,553,0.843,554,0.966,555,0.843,556,0.915,557,0.866,558,0.966,559,0.866,560,0.966,561,0.866,562,0.966,563,0.843,564,0.966,565,0.866,566,0.915,567,0.843,568,0.843,569,0.94,570,0.605,571,0.843,572,0.966,573,0.843,574,0.966,575,0.843,576,0.966,577,0.843,578,0.966,579,0.843,580,0.966,581,0.843,582,0.966,583,0.843,584,0.966,585,0.843,586,0.966,587,0.843,588,0.966,589,0.843,590,0.966,591,0.843,592,0.966,593,0.843,594,0.966,595,0.843,596,0.966,597,0.843,598,0.94,599,0.966,611,1.436,612,1.899,616,2.064,618,1.575,619,1.08,642,1.111,646,1.189,657,0.915,659,2.724,662,0.828,694,2.126,695,1.808,696,2.126,697,1.021,705,1.559,724,2.964,768,1.285,817,2.259,818,1.325,819,1.808,820,2.58,821,1.325,822,1.808,823,2.34,824,1.615,825,2.184,891,2.166,899,1.08,928,1.808,930,1.285,931,1.211,932,1.176,933,1.285,960,1.704,972,2.331,991,2.484,992,2.484,1010,1.507,1071,2.52,1167,3.203,1170,1.739,1171,3.093,1193,1.739,1196,1.211,1197,1.325,1198,2.259,1201,1.615,1212,3.212,1213,3.212,1214,2.853,1217,2.752,1218,3.083,1219,2.964,1220,2.854,1226,2.259,1235,2.061,1237,2.061,1258,1.968,1260,1.968,1335,1.809,1336,1.739,1337,1.809,1389,2.112,1457,3.139,1593,3.758,2385,3.083,2642,2.061,2780,3.758,3374,4.47,3743,3.085,3744,5.533,3745,5.089,3746,5.089,3747,5.089,3748,3.512,3749,3.512,3750,5.089,3751,3.512,3752,3.512,3753,5.089,3754,5.765,3755,3.512,3756,5.089,3757,3.512,3758,3.512,3759,3.512,3760,3.512,3761,3.512,3762,3.512,3763,3.512,3764,3.512,3765,3.512,3766,3.512,3767,3.512,3768,3.512,3769,3.512,3770,2.593,3771,6.967,3772,2.593,3773,2.425,3774,2.803,3775,4.47,3776,4.063]],["title/components/PhoneNumberComponent.html",[313,0.236,545,1.064]],["body/components/PhoneNumberComponent.html",[0,0.02,3,0.113,4,0.131,5,0.102,8,0.131,9,0.636,10,1.57,11,1.039,13,0.559,20,0.656,23,0.688,25,1.059,26,0.011,27,0.573,28,0.341,29,0.719,30,1.119,33,1.067,36,2.101,37,1.232,43,1.145,44,1.115,45,1.076,47,2.39,50,1.843,52,0.828,56,1.223,57,0.82,59,1.16,64,0.957,65,1.223,71,0.529,82,0.237,84,0.261,85,0.855,87,0.167,90,1.076,92,0.378,102,0.004,103,0.006,104,0.004,109,0.763,117,2.142,138,2.166,148,0.516,163,1.879,174,0.579,188,2.003,192,1.271,204,1.223,209,0.577,215,1.616,218,1.257,220,1.429,235,1.393,239,1.365,244,2.256,246,0.763,269,0.784,295,0.828,298,2.607,300,1.401,313,0.346,319,2.499,326,2.071,354,1.271,380,0.763,385,1.033,407,1.107,416,1.023,423,1.223,466,0.805,467,0.874,468,0.851,469,0.874,473,0.596,474,1.213,476,0.983,478,0.983,493,0.828,494,1.292,495,0.378,496,1.744,497,0.898,498,0.898,499,0.742,500,0.898,501,0.784,502,0.898,503,0.784,504,0.898,505,0.805,506,0.898,507,0.805,508,0.898,509,0.805,510,0.898,511,0.805,512,1.328,513,0.805,514,0.851,515,0.898,516,0.805,517,0.898,518,0.763,519,0.898,520,0.805,521,0.898,522,0.898,523,0.784,524,0.898,525,0.805,526,0.898,527,0.784,528,0.898,529,0.805,530,1.579,531,0.805,532,0.763,533,0.763,534,1.328,535,0.784,536,0.898,537,0.805,538,0.898,539,0.805,540,0.898,541,0.763,542,0.898,543,0.805,544,0.898,545,1.746,546,1.894,547,0.898,548,0.784,549,0.763,550,0.898,551,0.784,552,0.898,553,0.784,554,0.898,555,0.784,556,0.851,557,0.805,558,0.898,559,0.805,560,0.898,561,0.805,562,0.898,563,0.784,564,0.898,565,0.805,566,0.851,567,0.784,568,0.784,569,0.874,570,0.563,571,0.784,572,0.898,573,0.784,574,0.898,575,0.784,576,0.898,577,0.784,578,0.898,579,0.784,580,0.898,581,0.784,582,0.898,583,0.784,584,0.898,585,0.784,586,0.898,587,0.784,588,0.898,589,0.784,590,0.898,591,0.784,592,0.898,593,0.784,594,0.898,595,0.784,596,0.898,597,0.784,598,0.874,599,0.898,611,1.158,612,1.607,614,2.101,615,2.234,616,1.979,617,1.557,618,0.784,642,1.033,645,2.003,646,1.127,662,0.531,685,2.915,694,2.039,695,1.16,696,2.039,697,0.949,709,2.956,724,2.842,736,2.126,748,1.831,764,1.917,817,1.821,818,1.821,819,1.16,820,2.252,821,1.821,822,1.714,850,4.239,902,2.869,910,2.869,928,2.403,930,1.195,931,1.126,932,1.094,933,1.195,960,1.616,980,2.256,991,2.003,992,2.003,1010,2.071,1091,1.753,1107,2.071,1167,3.111,1170,1.617,1171,3.003,1175,2.014,1193,1.617,1196,2.648,1197,1.232,1198,2.142,1201,1.502,1218,2.485,1220,2.301,1226,2.142,1249,1.753,1384,2.014,1526,2.607,2385,2.956,2477,2.607,2748,2.705,2983,2.412,3468,5.85,3470,4.239,3471,3.853,3474,2.869,3476,2.607,3770,2.412,3772,2.412,3777,6.659,3778,6.659,3779,2.869,3780,4.826,3781,3.853,3782,4.826,3783,4.826,3784,5.74,3785,4.826,3786,5.042,3787,5.569,3788,5.042,3789,5.74,3790,4.826,3791,3.266,3792,3.853,3793,3.266,3794,4.826,3795,3.266,3796,3.266,3797,3.266,3798,3.266,3799,3.266,3800,3.266,3801,3.266,3802,3.266,3803,3.266,3804,3.266,3805,4.826,3806,3.266,3807,3.266,3808,3.266,3809,3.266,3810,3.266,3811,3.266,3812,4.826,3813,4.826,3814,4.826,3815,3.266,3816,3.266,3817,3.266,3818,3.266,3819,3.266,3820,2.869,3821,3.266,3822,3.266,3823,3.266,3824,4.826,3825,3.266,3826,4.239,3827,3.266,3828,3.266,3829,3.266,3830,6.34,3831,3.266,3832,4.826,3833,3.266,3834,3.266,3835,2.869]],["title/components/PostalCodeComponent.html",[313,0.236,548,1.036]],["body/components/PostalCodeComponent.html",[0,0.018,3,0.101,4,0.117,5,0.094,8,0.117,9,0.586,10,1.748,11,0.956,13,0.514,20,0.604,23,0.687,25,1.077,26,0.011,27,0.574,28,0.34,29,0.723,30,1.116,33,0.983,37,1.104,43,1.116,44,1.136,45,0.833,50,1.549,52,0.741,56,1.126,57,0.88,64,0.881,65,1.289,71,0.532,82,0.241,84,0.234,85,0.519,87,0.101,90,0.833,92,0.514,102,0.003,103,0.005,104,0.003,117,1.973,148,0.849,178,1.214,182,2.661,209,0.532,220,1.112,235,1.381,246,0.683,269,0.702,295,0.741,300,1.255,313,0.294,319,2.425,326,1.521,380,0.683,400,2.767,407,1.036,416,1.077,423,1.126,466,0.721,467,0.783,468,0.762,469,0.783,472,1.362,473,0.533,474,1.206,476,0.905,478,0.905,481,1.563,493,0.741,494,1.189,495,0.339,496,1.651,497,0.805,498,0.805,499,0.665,500,0.805,501,0.702,502,0.805,503,0.702,504,0.805,505,0.721,506,0.805,507,0.721,508,0.805,509,0.721,510,0.805,511,0.721,512,1.222,513,0.721,514,0.762,515,0.805,516,0.721,517,0.805,518,0.683,519,0.805,520,0.721,521,0.805,522,0.805,523,0.702,524,0.805,525,0.721,526,0.805,527,0.702,528,0.805,529,0.721,530,1.478,531,0.721,532,0.683,533,0.683,534,1.222,535,0.702,536,0.805,537,0.721,538,0.805,539,0.721,540,0.805,541,0.683,542,0.805,543,0.721,544,0.805,545,0.721,546,0.721,547,0.805,548,1.44,549,1.804,550,0.805,551,0.702,552,0.805,553,0.702,554,0.805,555,0.702,556,0.762,557,0.721,558,0.805,559,0.721,560,0.805,561,0.721,562,0.805,563,0.702,564,0.805,565,0.721,566,0.762,567,0.702,568,0.702,569,0.783,570,0.504,571,0.702,572,0.805,573,0.702,574,0.805,575,0.702,576,0.805,577,0.702,578,0.805,579,0.702,580,0.805,581,0.702,582,0.805,583,0.702,584,0.805,585,0.702,586,0.805,587,0.702,588,0.805,589,0.702,590,0.805,591,0.702,592,0.805,593,0.702,594,0.805,595,0.702,596,0.805,597,0.702,598,0.783,599,0.805,603,1.446,604,1.446,610,3.711,611,1.29,612,1.79,616,1.853,618,1.44,619,0.899,642,0.925,646,1.038,657,1.157,659,2.678,662,0.723,688,3.016,693,2.491,694,1.909,695,1.578,696,1.909,697,0.85,705,1.299,719,1.907,724,2.661,736,2.892,768,1.071,771,1.562,781,1.175,817,2.028,818,1.104,819,1.578,820,2.414,821,1.104,822,1.578,823,2.043,824,1.345,825,1.907,891,1.804,899,0.899,928,1.578,930,1.071,931,1.009,932,0.98,933,1.071,960,1.488,972,2.132,991,2.23,992,2.23,1010,1.255,1071,2.2,1091,2.385,1167,2.967,1170,1.449,1171,2.865,1193,1.449,1196,1.009,1197,1.104,1198,1.973,1201,1.345,1211,3.497,1212,2.884,1213,3.221,1214,2.491,1215,3.906,1216,3.747,1217,2.471,1218,3.324,1219,2.661,1220,2.562,1226,1.973,1235,1.717,1237,1.717,1247,2.289,1248,2.741,1249,3.221,1250,1.973,1251,3.281,1253,1.907,1258,1.64,1260,1.64,1261,1.139,1262,1.73,1263,1.139,1264,1.73,1265,1.73,1266,1.73,1267,1.139,1268,1.139,1269,1.73,1270,1.73,1271,1.139,1272,1.139,1273,1.139,1274,1.139,1275,1.139,1276,1.73,1277,1.677,1278,1.139,1279,1.73,1280,1.73,1281,1.139,1282,1.73,1283,1.139,1284,1.139,1285,1.139,1286,1.139,1287,2.336,1288,1.139,1289,1.139,1290,1.139,1291,1.139,1292,1.139,1293,1.139,1294,1.139,1295,1.139,1296,1.139,1297,1.139,1298,1.139,1299,1.139,1300,1.139,1301,1.139,1302,1.139,1303,1.139,1304,1.73,1305,1.139,1306,1.139,1307,1.139,1308,1.139,1309,1.139,1310,1.139,1311,1.139,1312,1.139,1313,1.139,1314,1.139,1315,1.139,1316,1.139,1317,1.139,1318,1.73,1319,1.139,1320,1.139,1321,1.139,1322,1.139,1323,1.139,1324,0.952,1325,1.139,1326,1.139,1327,1.139,1328,1.139,1329,1.139,1330,1.139,1331,1.139,1332,1.139,1333,2.02,1334,1.904,1335,1.507,1336,1.449,1337,1.507,1338,1.904,1339,1.904,1340,1.904,1341,1.904,1342,3.281,1343,3.281,1389,1.844,1706,3.069,2385,2.289,2390,2.892,2642,1.717,3167,3.281,3195,3.906,3471,3.547,3476,3.547,3485,2.57,3770,2.16,3772,2.16,3773,2.02,3774,2.335,3786,4.72,3836,5.939,3837,6.864,3838,2.57,3839,4.444,3840,4.444,3841,4.444,3842,2.926,3843,2.926,3844,2.926,3845,2.926,3846,4.444,3847,2.926,3848,2.926,3849,4.444,3850,4.444,3851,2.926,3852,4.444,3853,2.926,3854,2.926,3855,2.926,3856,2.926,3857,2.926,3858,2.926,3859,2.926,3860,2.926,3861,2.926,3862,2.926,3863,2.926,3864,2.926,3865,2.926,3866,4.444,3867,3.903,3868,3.281,3869,2.926,3870,2.926,3871,2.926,3872,2.926,3873,7.062,3874,4.444,3875,4.444]],["title/components/ProvinceComponent.html",[313,0.236,551,1.036]],["body/components/ProvinceComponent.html",[0,0.017,3,0.099,4,0.115,5,0.093,8,0.115,9,0.577,10,1.727,11,0.942,13,0.507,20,0.595,23,0.685,25,1.045,26,0.011,27,0.563,28,0.339,29,0.707,30,1.171,33,0.968,37,1.082,43,1.127,44,1.128,45,1.114,50,1.683,52,0.726,56,1.109,57,0.858,64,0.867,65,1.284,71,0.528,82,0.239,84,0.229,85,0.508,87,0.221,90,0.82,92,0.507,102,0.003,103,0.005,104,0.003,109,1.862,117,1.942,148,0.691,174,0.941,178,1.19,209,0.524,220,1.102,235,1.379,246,0.669,269,0.688,295,0.726,313,0.29,319,2.411,378,2.253,380,0.669,382,4.106,383,3.669,400,2.733,407,1.023,416,1.111,423,1.109,466,0.707,467,0.767,468,0.746,469,0.767,472,1.345,473,0.523,474,1.205,476,0.892,478,0.892,481,1.546,493,0.726,494,1.171,495,0.332,496,1.634,497,0.789,498,0.789,499,0.652,500,0.789,501,0.688,502,0.789,503,0.688,504,0.789,505,0.707,506,0.789,507,0.707,508,0.789,509,0.707,510,0.789,511,0.707,512,1.204,513,0.707,514,0.746,515,0.789,516,0.707,517,0.789,518,0.669,519,0.789,520,0.707,521,0.789,522,0.789,523,0.688,524,0.789,525,0.707,526,0.789,527,0.688,528,0.789,529,0.707,530,1.46,531,0.707,532,0.669,533,0.669,534,1.204,535,0.688,536,0.789,537,0.707,538,0.789,539,0.707,540,0.789,541,0.669,542,0.789,543,0.707,544,0.789,545,0.707,546,0.707,547,0.789,548,0.688,549,0.669,550,0.789,551,1.425,552,0.789,553,0.688,554,0.789,555,0.688,556,0.746,557,0.707,558,0.789,559,0.707,560,0.789,561,0.707,562,0.789,563,0.688,564,0.789,565,0.707,566,0.746,567,0.688,568,0.688,569,0.767,570,0.494,571,0.688,572,0.789,573,0.688,574,0.789,575,0.688,576,0.789,577,0.688,578,0.789,579,0.688,580,0.789,581,0.688,582,0.789,583,0.688,584,0.789,585,0.688,586,0.789,587,0.688,588,0.789,589,0.688,590,0.789,591,0.688,592,0.789,593,0.688,594,0.789,595,0.688,596,0.789,597,0.688,598,0.767,599,0.789,600,0.466,603,1.424,604,1.424,611,1.274,612,1.777,616,1.83,618,1.425,619,0.881,625,4.144,628,1.98,629,4.325,630,1.866,631,3.454,642,0.906,646,1.022,657,0.746,659,2.654,662,0.863,693,2.452,694,1.885,695,1.554,696,1.885,697,0.833,719,1.877,768,1.942,771,1.543,781,1.152,783,3.022,785,1.98,788,1.98,791,1.98,806,2.253,817,2.003,818,1.082,819,1.554,820,2.394,821,1.082,822,1.554,823,2.012,824,1.318,825,1.877,899,0.881,907,5.105,928,1.554,930,1.049,931,0.988,932,0.96,933,1.049,952,2.568,960,1.465,972,2.109,991,2.202,992,2.202,1010,1.23,1071,2.167,1167,2.941,1170,1.419,1171,2.839,1193,1.419,1196,0.988,1197,1.082,1198,1.942,1201,1.318,1211,3.454,1212,2.848,1213,2.848,1214,2.452,1215,3.865,1216,3.724,1217,2.44,1218,2.733,1219,2.628,1220,2.53,1226,1.942,1235,1.683,1237,1.683,1247,2.253,1248,2.699,1249,2.348,1250,1.942,1252,2.699,1253,2.548,1254,3.022,1255,3.022,1256,3.022,1258,1.607,1260,1.607,1261,1.116,1262,1.703,1263,1.116,1264,1.703,1265,1.703,1266,1.703,1267,1.116,1268,1.116,1269,1.703,1270,1.703,1271,1.116,1272,1.116,1273,1.116,1274,1.116,1275,1.116,1276,1.703,1277,1.651,1278,1.116,1279,1.703,1280,1.703,1281,1.116,1282,1.703,1283,1.116,1284,1.116,1285,1.116,1286,1.116,1287,2.312,1288,1.116,1289,1.116,1290,1.116,1291,1.116,1292,1.116,1293,1.116,1294,1.116,1295,1.116,1296,1.116,1297,1.116,1298,1.116,1299,1.703,1300,1.116,1301,1.116,1302,1.116,1303,1.116,1304,1.703,1305,1.116,1306,1.116,1307,1.116,1308,1.116,1309,1.116,1310,1.116,1311,1.116,1312,1.116,1313,1.116,1314,1.116,1315,1.116,1316,1.116,1317,1.116,1318,1.703,1319,1.116,1320,1.116,1321,1.116,1322,1.116,1323,1.116,1324,0.933,1325,1.116,1326,1.116,1327,1.116,1328,1.116,1329,1.116,1330,1.116,1331,1.116,1332,1.116,1333,1.98,1334,1.866,1335,1.476,1336,1.419,1337,1.476,1338,1.866,1339,1.866,1340,1.866,1341,1.866,1342,3.231,1343,3.231,1702,2.288,1706,1.98,1811,2.288,2190,4.236,2668,3.022,2854,2.288,3868,2.117,3876,2.117,3877,3.843,3878,3.843,3879,4.376,3880,2.867,3881,2.867,3882,2.867,3883,3.843,3884,2.867,3885,2.867,3886,2.867,3887,2.867,3888,2.867,3889,2.867,3890,4.376,3891,2.867,3892,2.867,3893,2.867,3894,2.867,3895,2.867,3896,2.867,3897,2.867,3898,2.867,3899,2.867,3900,2.867,3901,2.867,3902,2.867,3903,2.867,3904,2.867,3905,2.867,3906,6.522,3907,2.518,3908,2.518,3909,2.518,3910,2.518,3911,2.518,3912,2.518,3913,2.518,3914,2.518,3915,2.518,3916,2.518,3917,2.518,3918,2.518,3919,2.518,3920,2.518,3921,2.518,3922,2.518,3923,2.518,3924,2.518,3925,2.518,3926,2.518,3927,2.518,3928,2.518,3929,2.518,3930,2.518,3931,2.117,3932,2.518]],["title/interfaces/ProvinceList.html",[600,0.702,629,2.662]],["body/interfaces/ProvinceList.html",[0,0.025,3,0.142,4,0.164,5,0.087,8,0.164,9,0.748,10,1.334,20,0.557,26,0.011,28,0.261,29,0.532,30,1.112,44,1.082,45,1.065,50,1.564,65,1.144,71,0.547,82,0.276,84,0.328,85,0.727,87,0.255,90,0.769,92,0.657,102,0.005,103,0.007,104,0.005,109,2.01,148,0.648,174,1.155,178,1.702,209,0.491,220,0.707,235,0.648,313,0.31,319,1.334,378,2.112,382,4.432,383,3.483,400,2.112,416,1.199,472,1.439,474,0.557,476,0.835,478,0.835,481,1.068,551,0.984,600,0.667,602,1.501,603,1.848,604,1.848,611,1.564,612,1.872,616,1.959,618,1.363,619,1.26,625,4.391,628,2.832,629,4.557,630,2.669,631,3.697,646,0.958,657,1.068,659,2.92,662,1.06,693,2.298,694,1.456,695,2.017,696,1.456,697,1.192,719,1.759,768,2.385,771,1.192,781,1.648,783,3.923,785,2.832,788,2.832,791,2.832,806,2.925,817,1.547,819,2.017,820,2.499,822,2.017,823,1.885,824,1.885,825,1.759,899,1.26,907,5.897,952,2.407,972,2.315,991,1.702,992,1.702,1071,2.812,1167,2.612,1171,2.522,1198,2.522,1201,1.885,1211,2.669,1212,2.201,1213,2.201,1215,2.669,1216,3.623,1217,1.885,1218,2.112,1219,2.03,1220,1.955,1226,1.82,1247,2.112,1248,2.529,1249,2.201,1250,1.82,1252,2.529,1253,2.437,1254,2.832,1255,2.832,1256,2.832,1261,1.596,1262,2.211,1263,1.596,1264,2.211,1265,2.211,1266,2.211,1267,1.596,1268,1.596,1269,2.211,1270,2.211,1271,1.596,1272,1.596,1273,1.596,1274,1.596,1275,1.596,1276,2.211,1277,2.143,1278,1.596,1279,2.211,1280,2.211,1281,1.596,1282,2.211,1283,1.596,1284,1.596,1285,1.596,1286,1.596,1287,2.738,1288,1.596,1289,1.596,1290,1.596,1291,1.596,1292,1.596,1293,1.596,1294,1.596,1295,1.596,1296,1.596,1297,1.596,1298,1.596,1299,2.211,1300,1.596,1301,1.596,1302,1.596,1303,1.596,1304,2.211,1305,1.596,1306,1.596,1307,1.596,1308,1.596,1309,1.596,1310,1.596,1311,1.596,1312,1.596,1313,1.596,1314,1.596,1315,1.596,1316,1.596,1317,1.596,1318,2.211,1319,1.596,1320,1.596,1321,1.596,1322,1.596,1323,1.596,1324,1.334,1325,1.596,1326,1.596,1327,1.596,1328,1.596,1329,1.596,1330,1.596,1331,1.596,1332,1.596,1333,2.832,1334,2.669,1335,2.112,1336,2.03,1337,2.112,1338,2.669,1339,2.669,1340,2.669,1341,2.669,1702,3.273,1706,2.832,1811,3.273,2190,3.273,2668,2.832,2854,3.273,3868,3.028,3876,3.028,3877,3.602,3878,3.602,3883,3.602,3906,6.94,3907,3.602,3908,3.602,3909,3.602,3910,3.602,3911,3.602,3912,3.602,3913,3.602,3914,3.602,3915,3.602,3916,3.602,3917,3.602,3918,3.602,3919,3.602,3920,3.602,3921,3.602,3922,3.602,3923,3.602,3924,3.602,3925,3.602,3926,3.602,3927,3.602,3928,3.602,3929,3.602,3930,3.602,3931,3.028,3932,3.602]],["title/components/RadioComponent.html",[313,0.236,553,1.036]],["body/components/RadioComponent.html",[0,0.019,3,0.111,4,0.129,5,0.101,8,0.129,9,0.627,10,1.848,11,1.025,13,0.551,20,0.647,23,0.686,25,1.053,26,0.011,27,0.57,28,0.34,29,0.715,30,1.151,33,1.053,34,1.506,37,1.21,43,1.124,44,1.146,45,1.178,50,0.77,51,3.289,52,0.813,56,1.207,57,0.843,64,0.944,65,1.284,71,0.534,81,2.669,82,0.212,84,0.256,85,0.569,87,0.164,90,0.893,92,0.371,102,0.004,103,0.006,104,0.004,109,0.749,117,2.114,148,0.507,163,1.854,209,0.57,215,1.595,220,1.36,235,1.391,239,1.346,246,0.749,269,0.77,274,2.358,295,0.813,302,3.876,313,0.31,319,2.736,326,1.207,380,0.749,407,1.095,416,1.105,421,1.529,423,1.207,466,0.791,467,0.858,468,0.835,469,0.858,472,1.439,473,0.585,474,1.212,476,0.97,478,0.97,481,1.637,493,0.813,494,1.274,495,0.371,496,1.729,497,0.882,498,0.882,499,0.729,500,0.882,501,0.77,502,0.882,503,0.77,504,0.882,505,0.791,506,0.882,507,0.791,508,0.882,509,0.791,510,0.882,511,0.791,512,1.31,513,0.791,514,0.835,515,0.882,516,0.791,517,0.882,518,0.749,519,0.882,520,0.791,521,0.882,522,0.882,523,0.77,524,0.882,525,0.791,526,0.882,527,0.77,528,0.882,529,0.791,530,1.562,531,0.791,532,0.749,533,0.749,534,1.31,535,0.77,536,0.882,537,0.791,538,0.882,539,0.791,540,0.882,541,0.749,542,0.882,543,0.791,544,0.882,545,0.791,546,0.791,547,0.882,548,0.77,549,0.749,550,0.882,551,0.77,552,0.882,553,1.688,554,0.882,555,0.77,556,0.835,557,0.791,558,0.882,559,0.791,560,0.882,561,0.791,562,0.882,563,0.77,564,0.882,565,0.791,566,0.835,567,0.77,568,0.77,569,0.858,570,0.553,571,0.77,572,0.882,573,0.77,574,0.882,575,0.77,576,0.882,577,0.77,578,0.882,579,0.77,580,0.882,581,0.77,582,0.882,583,0.77,584,0.882,585,0.77,586,0.882,587,0.77,588,0.882,589,0.77,590,0.882,591,0.77,592,0.882,593,0.77,594,0.882,595,0.77,596,0.882,597,0.77,598,0.858,599,0.882,611,1.363,612,1.846,616,1.958,618,1.508,619,0.986,642,1.014,646,1.112,650,2.669,657,0.835,659,2.357,662,0.775,679,3.876,686,2.452,694,2.017,695,1.139,696,2.017,697,0.932,705,3.233,754,2.114,765,2.669,817,1.797,818,1.797,819,1.139,820,2.232,821,1.797,822,1.691,823,2.19,824,1.475,825,2.043,898,2.937,899,1.746,928,1.691,930,1.174,931,1.106,932,1.074,933,1.174,937,3.289,941,3.801,960,1.595,987,5.52,991,1.976,992,1.976,994,4.534,995,3.503,1010,2.043,1167,3.087,1168,6.397,1170,1.588,1171,2.981,1193,1.588,1196,1.106,1197,1.21,1198,2.114,1201,1.475,1202,4.183,1203,4.183,1204,2.937,1214,2.669,1220,2.708,1258,1.798,1260,1.798,1539,3.289,2390,3.099,2664,3.289,2667,5.898,2983,3.516,3279,3.801,3346,3.801,3776,3.801,3835,4.183,3933,2.818,3934,7.016,3935,4.762,3936,4.183,3937,4.762,3938,6.285,3939,4.183,3940,4.762,3941,7.035,3942,4.762,3943,7.035,3944,4.762,3945,4.762,3946,6.714,3947,4.762,3948,4.762,3949,4.762,3950,6.285,3951,4.762,3952,4.762,3953,4.762,3954,4.762,3955,5.679,3956,4.762,3957,4.989,3958,4.762,3959,3.208,3960,4.183,3961,3.208,3962,3.208,3963,3.208,3964,3.208,3965,3.208,3966,3.208,3967,4.762,3968,3.208,3969,3.208,3970,3.208,3971,3.208,3972,3.208,3973,3.208,3974,4.762,3975,3.208,3976,3.208,3977,3.208,3978,3.208,3979,3.208,3980,3.208,3981,3.208,3982,4.762,3983,2.561,3984,3.208,3985,3.208,3986,3.208,3987,4.762]],["title/interfaces/ReadOnlyFields.html",[600,0.702,634,2.981]],["body/interfaces/ReadOnlyFields.html",[0,0.018,3,0.105,4,0.122,5,0.064,8,0.122,9,0.603,10,0.989,20,0.413,26,0.011,27,0.223,28,0.263,29,0.718,30,1.346,34,1.446,36,2.013,43,0.661,44,1.052,45,1.497,47,1.505,59,1.079,65,0.895,71,0.549,76,1.449,82,0.267,84,0.243,85,0.539,87,0.211,90,1.147,92,0.888,93,1.703,102,0.004,103,0.005,104,0.004,134,1.147,138,1.147,170,2.103,174,1.222,178,1.261,188,2.282,192,2.141,203,1.703,204,1.159,209,0.364,217,0.908,218,1.191,235,0.48,239,0.859,259,2.244,273,1.703,300,1.304,302,1.874,310,2.821,313,0.334,326,1.159,336,1.304,337,1.449,354,1.183,364,1.703,373,1.349,378,1.565,382,4.297,383,3.954,385,1.739,395,3.579,396,1.565,401,1.874,405,1.304,416,1.165,421,1.449,472,1.159,474,0.413,476,0.619,478,0.619,481,0.791,499,1.04,533,0.71,549,1.068,600,0.895,601,3.798,602,1.112,603,1.488,604,1.488,605,2.244,606,3.377,607,3.651,608,3.651,609,4.118,610,5.202,611,1.098,612,1.394,613,2.821,614,2.013,615,1.78,616,1.577,617,2.181,618,1.098,619,0.934,620,2.564,621,2.244,622,4.297,623,2.426,624,3.579,625,3.379,626,2.099,627,3.159,628,2.099,629,3.774,630,3.579,631,2.977,632,2.426,633,3.982,634,4.762,635,2.099,636,2.244,637,2.426,638,2.426,639,2.426,640,1.505,641,1.703,642,0.961,643,1.784,644,1.565,645,1.261,646,0.71,647,3.377,648,2.265,649,3.651,650,2.564,651,2.685,652,2.099,653,2.426,654,2.426,655,2.244,656,3.377,657,1.795,658,2.426,659,2.723,660,5.711,661,2.426,662,0.494,663,1.784,664,2.244,665,2.244,666,2.564,667,2.426,668,2.244,669,2.426,670,4.047,671,2.244,672,2.426,673,2.244,674,2.244,675,3.651,676,2.426,677,2.426,678,3.651,679,2.821,680,2.426,681,2.244,682,2.426,683,2.426,684,2.426,685,2.529,686,2.832,687,1.978,688,2.913,689,2.426,690,2.244,691,2.426,692,4.226,693,1.703,694,1.079,695,1.625,696,1.079,697,0.883,698,2.426,699,2.426,700,3.651,701,6.126,702,3.651,703,2.426,704,2.977,705,2.441,706,3.651,707,6.012,708,4.39,709,1.565,710,2.244,711,2.099,712,2.426,713,2.426,714,2.426,715,2.426,716,2.426,717,2.426,718,4.884,719,1.304,720,2.426,721,2.426,722,3.651,723,3.159,724,1.505,725,3.651,726,5.238,727,5.504,728,5.238,729,2.426,730,2.426,731,3.651,732,2.426,733,3.651,734,2.564,735,2.426,736,1.978,737,2.426,738,2.426,739,1.874,740,2.426,741,2.426,742,3.579,743,2.426,744,2.426,745,2.426,746,2.328,747,3.377,748,2.564,749,3.651,750,3.651,751,3.651,752,3.651,753,2.426,754,1.349,755,2.426,756,2.426,757,4.061,758,2.099,759,2.244,760,1.112,761,2.426,762,2.426,763,2.426,764,1.784,765,1.703,766,2.426,767,2.426,768,1.112,769,2.426,770,2.099,771,2.14,772,2.426,773,4.884,774,2.426,775,2.426,776,2.426,777,2.426,778,2.426,779,4.061,780,2.099,781,2.637,782,2.426,783,4.226,784,3.651,785,3.159,786,3.651,787,4.39,788,2.099,789,2.426,790,2.426,791,2.099,792,1.978,793,1.978,794,2.099,795,1.631,796,2.426,797,2.426,798,2.426,799,3.377,800,2.426,801,2.426,802,2.244,803,2.426,804,3.377,805,2.244,806,2.356,807,2.244,808,2.426,809,2.426,810,2.426,811,1.784,812,2.426,813,2.426,814,2.426,815,2.426,816,2.426,817,1.147,818,1.147,819,1.079,820,1.625,821,1.147,822,1.079,823,1.397,824,2.529,825,1.304,826,2.426,827,2.426,828,2.426,829,2.426,830,2.426,831,2.426,832,2.426,833,2.426,834,2.426,835,2.426,836,2.426,837,2.244,838,2.426,839,3.651,840,2.426,841,2.426]],["title/guards/RouteGuardService.html",[201,2.662,214,2.662]],["body/guards/RouteGuardService.html",[0,0.026,3,0.151,4,0.176,5,0.093,8,0.176,11,1.557,13,0.837,15,3.216,16,4.707,20,0.595,21,3.024,22,4.809,23,0.578,25,1.045,26,0.011,27,0.53,28,0.29,29,0.677,30,1.232,45,1.356,57,0.781,59,2.11,64,1.545,71,0.43,76,3.448,82,0.27,84,0.35,86,2.255,87,0.151,90,1.114,92,0.903,102,0.005,103,0.007,104,0.005,109,1.023,111,3.782,138,2.242,139,4.057,166,2.088,174,1.053,188,2.466,196,2.387,197,5.413,199,3.024,202,4.576,203,3.33,204,1.506,209,0.524,214,5.129,215,1.99,216,5.219,217,2.33,218,1.883,219,6.848,239,2.045,273,4.37,274,2.942,342,6.352,360,2.466,405,2.549,481,1.547,685,3.101,686,3.473,687,5.074,709,3.06,771,2.102,843,3.188,881,4.387,940,2.942,1047,3.024,1089,4.743,1097,4.743,1098,4.743,1107,1.879,1114,4.103,1115,3.233,1122,4.387,1134,3.495,1137,2.701,1138,2.701,1145,5.383,1153,5.773,1498,4.743,1499,3.665,1541,4.387,2730,4.657,2734,4.159,2852,6.245,3021,4.743,3988,6.641,3989,3.846,3990,5.941,3991,5.941,3992,5.941,3993,5.941,3994,5.941,3995,7.797,3996,8.225,3997,8.225,3998,5.941,3999,5.941,4000,5.941,4001,5.941,4002,4.103,4003,5.941,4004,5.941,4005,5.941,4006,5.941,4007,4.379,4008,5.941,4009,4.379,4010,4.379,4011,4.379,4012,7.975,4013,7.975,4014,4.379,4015,6.744,4016,4.379,4017,4.379,4018,4.379,4019,4.379,4020,5.941,4021,4.379,4022,3.024,4023,4.379,4024,4.379,4025,4.379,4026,4.379]],["title/interfaces/SampleImageInterface.html",[600,0.702,4027,3.187]],["body/interfaces/SampleImageInterface.html",[0,0.037,3,0.215,4,0.249,5,0.131,8,0.249,9,0.979,20,0.845,26,0.011,28,0.319,29,0.696,65,1.209,71,0.562,82,0.297,83,2.667,84,0.497,87,0.257,102,0.007,103,0.009,104,0.007,220,1.37,235,0.982,296,4.293,313,0.406,416,1.149,474,0.845,476,1.267,478,1.267,483,5.193,491,3.201,492,2.964,555,1.492,556,2.07,600,1.011,602,2.275,618,1.784,619,1.911,646,1.452,697,1.807,1371,3.834,2605,5.133,2663,4.59,3331,4.59,3397,4.962,3399,4.962,4002,5.689,4027,5.871,4028,4.962,4029,4.59,4030,7.236,4031,5.46,4032,5.46,4033,5.46,4034,5.46,4035,5.46]],["title/components/SampleModalComponent.html",[313,0.236,555,1.036]],["body/components/SampleModalComponent.html",[0,0.028,3,0.158,4,0.184,5,0.13,8,0.184,9,0.808,11,1.319,13,0.709,20,0.938,23,0.645,26,0.011,27,0.506,28,0.296,33,1.355,37,1.73,43,0.886,44,0.808,52,1.162,56,1.553,57,0.709,64,1.215,65,1.199,71,0.504,82,0.257,83,1.967,84,0.366,87,0.212,102,0.005,103,0.007,104,0.005,148,0.724,220,1.457,235,1.422,246,1.071,269,1.1,295,1.162,296,4.232,313,0.377,380,1.071,407,1.331,416,0.998,423,1.553,466,1.131,467,1.227,468,1.194,469,1.227,473,0.836,474,1.232,476,1.249,478,1.249,483,4.874,491,2.361,492,2.186,493,1.162,494,1.64,495,0.531,496,2.027,497,1.261,498,1.261,499,1.042,500,1.261,501,1.1,502,1.261,503,1.1,504,1.261,505,1.131,506,1.261,507,1.131,508,1.261,509,1.131,510,1.261,511,1.131,512,1.686,513,1.131,514,1.194,515,1.261,516,1.131,517,1.261,518,1.071,519,1.261,520,1.131,521,1.261,522,1.261,523,1.1,524,1.261,525,1.131,526,1.261,527,1.1,528,1.261,529,1.131,530,1.899,531,1.131,532,1.071,533,1.071,534,1.686,535,1.1,536,1.261,537,1.131,538,1.261,539,1.131,540,1.261,541,1.071,542,1.261,543,1.131,544,1.261,545,1.131,546,1.131,547,1.261,548,1.1,549,1.071,550,1.261,551,1.1,552,1.261,553,1.1,554,1.261,555,1.768,556,2.101,557,1.131,558,1.261,559,1.131,560,1.261,561,1.131,562,1.261,563,1.1,564,1.261,565,1.131,566,1.194,567,1.1,568,1.1,569,1.227,570,0.79,571,1.1,572,1.261,573,1.1,574,1.261,575,1.1,576,1.261,577,1.1,578,1.261,579,1.1,580,1.261,581,1.1,582,1.261,583,1.1,584,1.261,585,1.1,586,1.261,587,1.1,588,1.261,589,1.1,590,1.261,591,1.1,592,1.261,593,1.1,594,1.261,595,1.1,596,1.261,597,1.1,598,1.227,599,1.261,600,0.746,618,1.768,619,1.409,642,1.45,646,1.431,697,1.333,928,2.177,930,1.678,931,1.581,932,1.535,933,1.678,1196,1.581,1197,1.73,1371,3.78,2605,4.767,2663,5.097,3331,3.385,3363,5.383,3397,5.882,3399,4.892,4002,3.166,4027,5.097,4028,6.441,4029,5.958,4030,4.027,4031,5.383,4032,6.063,4033,4.027,4034,6.473,4035,4.027,4036,6.128,4037,4.585,4038,4.585,4039,4.585,4040,4.585,4041,6.128]],["title/injectables/ServerPayload.html",[196,1.734,1044,3.187]],["body/injectables/ServerPayload.html",[0,0.041,3,0.187,4,0.217,5,0.115,8,0.217,9,0.9,23,0.628,26,0.011,28,0.315,42,5.997,71,0.573,82,0.293,84,0.433,87,0.236,92,0.957,102,0.006,103,0.008,104,0.006,110,4.194,115,4.87,120,4.392,139,4.438,147,3.344,165,3.039,166,2.585,174,0.961,196,3.007,198,3.182,220,1.289,771,1.576,1020,3.528,1021,6.465,1022,4.328,1028,6.002,1029,6.573,1031,5.973,1032,6.002,1033,7.045,1035,6.002,1036,7.263,1037,6.901,1039,4.762,1040,4.403,1041,4.003,1042,6.573,1043,3.744,1044,5.046,1045,5.593,1046,6.573,1047,3.744,1048,6.573,1049,6.573,1050,6.002,1051,4.762,1052,6.002,1053,6.573,4042,5.421,4043,5.421,4044,5.421,4045,5.421]],["title/modules/SharedCoreModule.html",[1054,2.534,4046,2.809]],["body/modules/SharedCoreModule.html",[0,0.017,3,0.099,4,0.115,5,0.06,26,0.011,36,1.597,52,1.106,82,0.332,84,0.228,85,0.506,86,1.471,87,0.099,102,0.003,103,0.005,104,0.003,174,0.506,203,2.446,217,1.304,246,1.793,269,1.047,300,1.225,311,1.762,378,1.471,380,1.793,421,1.362,466,1.894,491,2.727,492,2.081,493,0.724,499,1.745,501,1.843,503,1.843,507,1.894,509,1.894,511,1.894,513,1.894,516,1.894,518,1.793,520,1.894,523,1.843,525,1.894,527,1.843,529,1.894,531,1.894,532,1.793,535,1.843,537,1.894,539,1.894,541,1.793,543,1.894,545,1.894,546,0.704,548,1.843,551,1.843,553,1.843,555,1.843,557,1.894,559,1.894,561,1.894,563,1.843,565,1.894,567,1.047,568,1.843,570,0.492,571,1.843,573,1.843,575,1.843,577,1.843,579,1.843,581,1.843,583,1.843,585,1.843,587,1.843,589,1.843,591,1.843,593,1.843,595,1.843,597,1.843,724,1.414,760,1.045,806,1.471,926,1.414,935,1.601,978,2.28,1054,1.677,1056,1.762,1057,3.657,1058,4.227,1063,3.483,1064,2.109,1070,1.973,1080,3.833,1083,3.833,1084,2.28,1607,2.28,2355,2.509,2536,2.109,2588,2.28,2600,2.28,3114,3.222,3154,2.109,3330,2.28,3526,2.28,3546,2.28,3778,2.28,3837,2.28,4029,2.109,4046,5.926,4047,2.509,4048,2.509,4049,2.509,4050,2.509,4051,2.509,4052,2.856,4053,2.856,4054,4.364,4055,5.295,4056,4.364,4057,2.856,4058,2.856,4059,2.856,4060,2.28,4061,2.856,4062,2.856,4063,2.856,4064,4.364,4065,2.856,4066,2.856,4067,2.856,4068,2.856,4069,2.856,4070,2.856,4071,2.856,4072,2.856,4073,2.856,4074,2.856,4075,2.856,4076,2.856,4077,4.364,4078,5.295,4079,2.856,4080,2.856,4081,2.856,4082,4.364,4083,2.509,4084,2.856,4085,2.856,4086,2.856,4087,2.856,4088,2.856,4089,2.856,4090,2.856,4091,2.856,4092,2.856,4093,2.856,4094,2.856,4095,4.364,4096,2.856,4097,4.364,4098,2.856,4099,2.856,4100,2.856,4101,2.856,4102,2.856,4103,2.856,4104,2.856,4105,2.856,4106,2.856,4107,2.856,4108,2.856,4109,2.856,4110,3.014,4111,2.856,4112,2.856,4113,2.28,4114,2.856,4115,2.856,4116,2.856,4117,2.856,4118,2.856,4119,2.856,4120,2.856,4121,2.856,4122,2.856,4123,2.856,4124,2.856,4125,2.856,4126,2.856,4127,2.856,4128,2.28,4129,2.856,4130,2.856,4131,2.856,4132,2.856,4133,2.856,4134,2.856,4135,2.28,4136,2.856,4137,4.651,4138,2.856,4139,2.856,4140,2.856,4141,2.856,4142,2.856]],["title/interfaces/SimpleDate.html",[600,0.702,2215,2.662]],["body/interfaces/SimpleDate.html",[3,0.229,4,0.266,5,0.14,8,0.266,9,1.017,26,0.01,28,0.328,87,0.229,102,0.008,103,0.009,104,0.008,109,1.549,163,2.582,326,2.243,600,1.256,602,2.427,2215,4.762,2234,4.938,2239,4.938,2242,4.715,4143,5.825,4144,5.825,4145,5.825,4146,6.632,4147,6.632,4148,5.825,4149,5.825]],["title/components/SinComponent.html",[313,0.236,557,1.064]],["body/components/SinComponent.html",[0,0.021,3,0.12,4,0.14,5,0.107,8,0.14,9,0.666,10,1.938,11,1.088,13,0.585,20,0.687,23,0.689,25,1.107,26,0.011,27,0.589,28,0.342,29,0.742,30,1.097,33,1.118,37,1.314,43,1.128,44,1.15,45,0.948,50,1.429,52,0.882,56,1.281,57,0.865,63,3.734,64,1.002,65,1.307,71,0.531,82,0.244,84,0.278,85,0.617,87,0.12,92,0.403,102,0.004,103,0.006,104,0.004,117,2.245,148,0.799,163,1.968,182,2.949,209,0.605,220,1.196,235,1.399,246,0.813,269,0.835,295,0.882,313,0.325,319,2.613,326,2.058,380,0.813,400,3.067,407,1.148,416,1.08,423,1.281,466,0.858,467,0.932,468,0.907,469,0.932,473,0.635,474,1.217,476,1.03,478,1.03,493,0.882,494,1.353,495,0.403,496,1.798,497,0.958,498,0.958,499,0.791,500,0.958,501,0.835,502,0.958,503,0.835,504,0.958,505,0.858,506,0.958,507,0.858,508,0.958,509,0.858,510,0.958,511,0.858,512,1.391,513,0.858,514,0.907,515,0.958,516,0.858,517,0.958,518,0.813,519,0.958,520,0.858,521,0.958,522,0.958,523,0.835,524,0.958,525,0.858,526,0.958,527,0.835,528,0.958,529,0.858,530,1.638,531,0.858,532,0.813,533,0.813,534,1.391,535,0.835,536,0.958,537,0.858,538,0.958,539,0.858,540,0.958,541,0.813,542,0.958,543,0.858,544,0.958,545,0.858,546,0.858,547,0.958,548,0.835,549,0.813,550,0.958,551,0.835,552,0.958,553,0.835,554,0.958,555,0.835,556,0.907,557,1.612,558,0.958,559,0.858,560,0.958,561,0.858,562,0.958,563,0.835,564,0.958,565,0.858,566,0.907,567,0.835,568,0.835,569,0.932,570,0.6,571,0.835,572,0.958,573,0.835,574,0.958,575,0.835,576,0.958,577,0.835,578,0.958,579,0.835,580,0.958,581,0.835,582,0.958,583,0.835,584,0.958,585,0.835,586,0.958,587,0.835,588,0.958,589,0.835,590,0.958,591,0.835,592,0.958,593,0.835,594,0.958,595,0.835,596,0.958,597,0.835,598,0.932,599,0.958,611,1.429,612,1.894,616,2.054,618,1.569,619,1.07,642,1.101,646,1.181,657,1.317,659,2.881,662,0.823,694,2.115,695,1.796,696,2.115,697,1.012,705,1.545,724,2.949,768,1.274,817,2.247,818,1.314,819,1.796,820,2.572,821,1.314,822,1.796,823,2.325,824,1.601,825,2.17,891,2.147,899,1.07,928,1.796,930,1.274,931,1.2,932,1.166,933,1.274,960,1.694,972,2.322,991,2.472,992,2.472,1010,1.494,1071,2.504,1167,3.192,1170,1.724,1171,3.082,1193,1.724,1196,1.2,1197,1.314,1198,2.245,1201,1.601,1212,3.196,1213,3.196,1214,2.834,1217,2.738,1218,3.067,1219,2.949,1220,2.84,1226,2.245,1235,2.043,1237,2.043,1258,1.951,1260,1.951,1335,1.793,1336,1.724,1337,1.793,1389,2.099,1457,3.119,2385,3.067,2642,2.043,2780,3.734,3390,4.442,3754,6.362,3770,2.57,3772,2.57,3773,2.404,3774,2.779,3775,4.442,3776,4.037,4150,3.058,4151,5.966,4152,5.057,4153,5.057,4154,5.057,4155,3.481,4156,5.057,4157,3.481,4158,5.057,4159,3.481,4160,3.481,4161,3.481,4162,5.057,4163,3.481,4164,3.481,4165,3.481,4166,3.481,4167,3.481,4168,3.481,4169,3.481,4170,3.481,4171,3.481,4172,3.481,4173,3.481,4174,3.481,4175,3.481,4176,7.473]],["title/components/StreetComponent.html",[313,0.236,559,1.064]],["body/components/StreetComponent.html",[0,0.016,3,0.093,4,0.108,5,0.088,8,0.108,9,0.548,10,1.656,11,0.895,13,0.481,20,0.565,23,0.689,25,1.092,26,0.011,27,0.588,28,0.341,29,0.728,30,1.082,33,0.919,34,0.848,37,1.012,43,1.109,44,1.116,45,1.075,50,1.376,51,2.87,52,0.679,56,1.053,57,0.888,59,1.808,63,1.98,64,0.824,65,1.314,71,0.528,76,1.982,82,0.264,84,0.214,85,0.475,87,0.093,92,0.664,102,0.008,103,0.005,104,0.007,107,2.058,110,1.503,117,1.845,132,3.536,134,1.012,139,3.33,148,0.657,166,1.278,167,2.355,169,1.503,178,1.113,182,1.328,184,3.069,209,0.497,220,1.069,235,1.372,246,0.626,269,0.643,295,0.679,300,2.184,313,0.278,319,2.364,326,1.053,336,1.783,373,1.19,380,0.626,388,1.98,395,2.705,400,2.621,401,1.654,407,1.105,410,1.745,411,2.355,415,3.069,416,1.109,423,1.053,466,0.661,467,0.718,468,0.698,469,0.718,472,1.29,473,0.489,474,1.2,476,0.847,478,0.847,481,1.493,491,1.381,492,1.278,493,0.679,494,1.112,495,0.31,496,1.577,497,0.737,498,0.737,499,0.609,500,0.737,501,0.643,502,0.737,503,0.643,504,0.737,505,0.661,506,0.737,507,0.661,508,0.737,509,0.661,510,0.737,511,0.661,512,1.143,513,0.661,514,0.698,515,0.737,516,0.661,517,0.737,518,0.626,519,0.737,520,0.661,521,0.737,522,0.737,523,0.643,524,0.737,525,0.661,526,0.737,527,0.643,528,0.737,529,0.661,530,1.4,531,0.661,532,0.626,533,1.189,534,1.143,535,0.643,536,0.737,537,0.661,538,0.737,539,0.661,540,0.737,541,0.626,542,0.737,543,0.661,544,0.737,545,0.661,546,0.661,547,0.737,548,0.643,549,0.626,550,0.737,551,0.643,552,0.737,553,0.643,554,0.737,555,0.643,556,0.698,557,0.661,558,0.737,559,1.414,560,0.737,561,0.661,562,0.737,563,0.643,564,0.737,565,0.661,566,0.698,567,0.643,568,0.643,569,0.718,570,0.462,571,0.643,572,0.737,573,0.643,574,0.737,575,0.643,576,0.737,577,0.643,578,0.737,579,0.643,580,0.737,581,0.643,582,0.737,583,0.643,584,0.737,585,0.643,586,0.737,587,0.643,588,0.737,589,0.643,590,0.737,591,0.643,592,0.737,593,0.643,594,0.737,595,0.643,596,0.737,597,0.643,598,0.718,599,0.737,603,1.352,604,1.352,611,1.376,612,1.881,616,1.755,618,1.376,619,0.824,620,1.503,621,1.98,622,2.953,642,0.848,646,0.971,657,1.325,659,2.379,662,1.068,666,4.072,681,3.069,693,2.853,694,1.808,695,1.476,696,1.808,697,0.779,719,1.783,760,0.981,768,1.521,771,2.158,781,1.077,792,4.272,795,3.077,804,3.758,807,3.758,817,1.921,818,1.012,819,1.476,820,2.331,821,1.012,822,1.476,823,1.911,824,1.233,825,1.783,857,3.651,899,0.824,905,1.503,928,1.476,930,0.981,931,0.925,932,0.898,933,0.981,952,2.44,960,1.392,972,2.331,991,2.112,992,2.112,1010,1.15,1040,1.503,1071,2.058,1167,2.853,1170,1.328,1171,2.754,1193,1.328,1196,0.925,1197,1.012,1198,1.845,1201,1.233,1211,3.313,1212,2.731,1213,2.731,1214,2.33,1215,3.732,1216,3.644,1217,2.636,1218,2.621,1219,2.52,1220,2.427,1226,1.845,1235,1.574,1237,1.574,1247,2.14,1248,2.563,1249,2.23,1250,1.845,1251,3.069,1252,2.563,1253,2.46,1258,1.503,1260,1.503,1261,1.044,1262,1.618,1263,1.044,1264,1.618,1265,1.618,1266,1.618,1267,1.044,1268,1.044,1269,1.618,1270,1.618,1271,1.044,1272,1.044,1273,1.044,1274,1.044,1275,1.044,1276,1.618,1277,1.568,1278,1.044,1279,1.618,1280,1.618,1281,1.044,1282,1.618,1283,1.044,1284,1.044,1285,1.044,1286,1.044,1287,2.232,1288,1.044,1289,1.044,1290,1.044,1291,1.044,1292,1.044,1293,1.044,1294,1.044,1295,1.044,1296,1.044,1297,1.044,1298,1.044,1299,1.044,1300,1.044,1301,1.044,1302,1.044,1303,1.044,1304,1.618,1305,1.044,1306,1.044,1307,1.044,1308,1.044,1309,1.044,1310,1.044,1311,1.044,1312,1.044,1313,1.044,1314,1.044,1315,1.044,1316,1.044,1317,1.044,1318,1.618,1319,1.044,1320,1.044,1321,1.044,1322,1.044,1323,1.044,1324,0.872,1325,1.044,1326,1.044,1327,1.044,1328,1.044,1329,1.044,1330,1.044,1331,1.044,1332,1.044,1333,1.852,1334,1.745,1335,1.381,1336,1.328,1337,1.381,1338,1.745,1339,1.745,1340,1.745,1341,1.745,1342,3.069,1343,3.069,1449,1.745,1474,1.745,2244,1.98,2334,4.063,2343,3.069,2612,2.87,2664,1.852,2704,2.355,2748,1.503,2771,1.98,2853,2.14,3103,3.651,3132,1.98,3197,3.318,3198,3.318,3199,3.318,3204,2.14,3229,4.728,3281,2.14,3486,1.98,3648,1.852,4177,2.355,4178,4.156,4179,4.156,4180,5.09,4181,6.204,4182,4.156,4183,4.156,4184,5.09,4185,5.09,4186,4.156,4187,2.681,4188,2.681,4189,2.681,4190,4.156,4191,2.681,4192,2.681,4193,2.681,4194,2.681,4195,4.156,4196,2.681,4197,2.681,4198,2.681,4199,2.681,4200,2.681,4201,4.156,4202,2.681,4203,2.681,4204,4.156,4205,2.681,4206,4.156,4207,5.733,4208,2.681,4209,2.681,4210,2.681,4211,2.681,4212,2.681,4213,2.681,4214,2.681,4215,2.681,4216,2.681,4217,3.651,4218,4.156,4219,2.681,4220,2.681,4221,6.204,4222,2.681,4223,3.651,4224,2.681,4225,2.681,4226,5.036,4227,2.681,4228,4.156,4229,2.681,4230,5.733,4231,2.681,4232,2.681,4233,2.681,4234,2.681,4235,2.681,4236,2.681,4237,2.681,4238,2.681,4239,2.681,4240,2.681,4241,2.681,4242,2.681,4243,2.681,4244,2.681,4245,2.681,4246,2.681,4247,4.156,4248,2.681,4249,2.681,4250,2.681,4251,2.681,4252,4.156,4253,2.681,4254,2.681]],["title/components/ThumbnailComponent.html",[313,0.236,561,1.064]],["body/components/ThumbnailComponent.html",[0,0.025,3,0.141,4,0.164,5,0.12,8,0.164,9,0.746,11,1.218,13,0.655,20,0.555,23,0.662,25,0.818,26,0.011,27,0.541,28,0.32,29,0.53,30,0.894,33,1.252,37,1.539,43,0.818,44,0.746,45,1.061,52,1.034,56,1.434,57,0.813,64,1.122,65,1.142,71,0.26,82,0.242,83,1.75,84,0.326,87,0.141,102,0.005,103,0.007,104,0.005,148,0.894,174,0.723,209,0.677,220,1.12,235,1.413,246,0.953,269,0.979,295,1.034,313,0.355,326,1.434,370,2.817,380,0.953,407,1.091,416,0.939,423,1.434,466,1.006,467,1.092,468,1.062,469,1.092,472,1.647,473,0.744,474,1.226,476,1.153,478,1.153,481,1.828,491,2.101,492,1.945,493,1.034,494,1.515,495,0.472,496,1.931,497,1.122,498,1.122,499,0.927,500,1.122,501,0.979,502,1.122,503,0.979,504,1.122,505,1.006,506,1.122,507,1.006,508,1.122,509,1.006,510,1.122,511,1.006,512,1.557,513,1.006,514,1.062,515,1.122,516,1.006,517,1.122,518,0.953,519,1.122,520,1.006,521,1.122,522,1.122,523,0.979,524,1.122,525,1.006,526,1.122,527,0.979,528,1.122,529,1.006,530,1.788,531,1.006,532,0.953,533,0.953,534,1.557,535,0.979,536,1.122,537,1.006,538,1.122,539,1.006,540,1.122,541,0.953,542,1.122,543,1.006,544,1.122,545,1.006,546,1.006,547,1.122,548,0.979,549,0.953,550,1.122,551,0.979,552,1.122,553,0.979,554,1.122,555,0.979,556,1.062,557,1.006,558,1.122,559,1.006,560,1.122,561,1.731,562,1.122,563,0.979,564,1.122,565,1.006,566,1.062,567,0.979,568,0.979,569,1.092,570,0.703,571,0.979,572,1.122,573,0.979,574,1.122,575,0.979,576,1.122,577,0.979,578,1.122,579,0.979,580,1.122,581,0.979,582,1.122,583,0.979,584,1.122,585,0.979,586,1.122,587,0.979,588,1.122,589,0.979,590,1.122,591,0.979,592,1.122,593,0.979,594,1.122,595,0.979,596,1.122,597,0.979,598,1.092,599,1.122,603,1.842,604,1.842,611,1.358,612,1.779,662,0.664,693,3.934,754,2.513,771,1.889,960,1.896,1261,1.588,1262,2.203,1263,1.588,1264,2.203,1265,2.203,1266,2.203,1267,1.588,1268,1.588,1269,2.203,1270,2.203,1271,1.588,1272,1.588,1273,1.588,1274,1.588,1275,1.588,1276,2.203,1277,2.136,1278,1.588,1279,2.203,1280,2.203,1281,1.588,1282,2.203,1283,1.588,1284,1.588,1285,1.588,1286,1.588,1287,2.732,1288,1.588,1289,1.588,1290,1.588,1291,1.588,1292,1.588,1293,1.588,1294,1.588,1295,1.588,1296,1.588,1297,1.588,1298,1.588,1299,1.588,1300,1.588,1301,1.588,1302,1.588,1303,1.588,1304,2.203,1305,1.588,1306,1.588,1307,1.588,1308,1.588,1309,1.588,1310,1.588,1311,1.588,1312,1.588,1313,1.588,1314,1.588,1315,1.588,1316,1.588,1317,1.588,1318,2.203,1319,1.588,1320,1.588,1321,1.588,1322,1.588,1323,1.588,1324,1.327,1325,1.588,1326,1.588,1327,1.588,1328,1.588,1329,1.588,1330,1.588,1331,1.588,1332,1.588,1344,3.643,2317,1.876,2605,4.488,2617,3.583,2728,3.583,2751,4.179,2803,4.971,2849,3.256,2983,3.012,3090,4.179,3410,4.971,3411,5.709,3429,5.709,4255,3.583,4256,5.66,4257,5.66,4258,6.499,4259,8.287,4260,6.499,4261,6.499,4262,6.499,4263,6.499,4264,5.66,4265,5.66,4266,4.079,4267,4.079,4268,4.079,4269,4.079,4270,4.079,4271,4.079,4272,4.079,4273,4.079,4274,4.079,4275,7.02,4276,4.079,4277,4.079,4278,5.66,4279,4.079,4280,4.079,4281,4.079,4282,5.66,4283,7.02,4284,4.079,4285,5.66,4286,5.66]],["title/components/ToggleComponent.html",[313,0.236,563,1.036]],["body/components/ToggleComponent.html",[0,0.027,3,0.154,4,0.179,5,0.127,8,0.179,9,0.793,11,1.296,13,0.697,20,0.926,23,0.626,26,0.011,27,0.499,28,0.292,30,0.952,33,1.332,43,0.646,44,0.589,52,1.132,56,1.526,57,0.517,64,1.194,65,0.727,71,0.435,82,0.225,84,0.357,87,0.154,102,0.005,103,0.007,104,0.005,148,0.952,192,2.652,209,0.721,220,1.038,235,1.42,246,1.043,269,1.072,295,1.132,313,0.372,319,2.217,380,1.043,407,1.313,416,0.985,423,1.526,466,1.101,467,1.195,468,1.163,469,1.195,472,1.726,473,0.814,474,1.231,476,1.227,478,1.227,481,1.899,493,1.132,494,1.612,495,0.517,496,2.006,497,1.229,498,1.229,499,1.015,500,1.229,501,1.072,502,1.229,503,1.072,504,1.229,505,1.101,506,1.229,507,1.101,508,1.229,509,1.101,510,1.229,511,1.101,512,1.656,513,1.101,514,1.163,515,1.229,516,1.101,517,1.229,518,1.043,519,1.229,520,1.101,521,1.229,522,1.229,523,1.072,524,1.229,525,1.101,526,1.229,527,1.072,528,1.229,529,1.101,530,1.874,531,1.101,532,1.043,533,1.043,534,1.656,535,1.072,536,1.229,537,1.101,538,1.229,539,1.101,540,1.229,541,1.043,542,1.229,543,1.101,544,1.229,545,1.101,546,1.101,547,1.229,548,1.072,549,1.043,550,1.229,551,1.072,552,1.229,553,1.072,554,1.229,555,1.072,556,1.163,557,1.101,558,1.229,559,1.101,560,1.229,561,1.101,562,1.229,563,1.75,564,1.229,565,1.101,566,1.163,567,1.072,568,1.072,569,1.195,570,0.77,571,1.072,572,1.229,573,1.072,574,1.229,575,1.072,576,1.229,577,1.072,578,1.229,579,1.072,580,1.229,581,1.072,582,1.229,583,1.072,584,1.229,585,1.072,586,1.229,587,1.072,588,1.229,589,1.072,590,1.229,591,1.072,592,1.229,593,1.072,594,1.229,595,1.072,596,1.229,597,1.072,598,1.195,599,1.229,603,1.959,604,1.959,611,1.445,612,1.848,618,1.75,619,1.373,642,1.412,646,1.406,662,0.727,697,1.298,928,2.139,930,1.635,931,1.54,932,1.496,933,1.635,960,2.017,985,4.807,996,5.438,1196,1.54,1197,1.685,1261,1.739,1262,2.344,1263,1.739,1264,2.344,1265,2.344,1266,2.344,1267,1.739,1268,1.739,1269,2.344,1270,2.344,1271,1.739,1272,1.739,1273,1.739,1274,1.739,1275,1.739,1276,2.344,1277,2.272,1278,1.739,1279,2.344,1280,2.344,1281,1.739,1282,2.344,1283,1.739,1284,1.739,1285,1.739,1286,1.739,1287,2.838,1288,1.739,1289,1.739,1290,1.739,1291,1.739,1292,1.739,1293,1.739,1294,1.739,1295,1.739,1296,1.739,1297,1.739,1298,1.739,1299,1.739,1300,1.739,1301,1.739,1302,1.739,1303,1.739,1304,2.344,1305,1.739,1306,1.739,1307,1.739,1308,1.739,1309,1.739,1310,1.739,1311,1.739,1312,1.739,1313,1.739,1314,1.739,1315,1.739,1316,1.739,1317,1.739,1318,2.344,1319,1.739,1320,1.739,1321,1.739,1322,1.739,1323,1.739,1324,1.453,1325,1.739,1326,1.739,1327,1.739,1328,1.739,1329,1.739,1330,1.739,1331,1.739,1332,1.739,4287,3.923,4288,6.022,4289,6.022,4290,6.022,4291,4.467,4292,4.467,4293,4.467]],["title/directives/ValidateBcPostalDirective.html",[495,0.5,577,1.036]],["body/directives/ValidateBcPostalDirective.html",[0,0.036,3,0.205,4,0.238,5,0.125,8,0.238,13,0.836,23,0.474,25,0.857,26,0.011,27,0.435,28,0.29,29,0.555,57,0.687,71,0.378,82,0.269,84,0.474,85,1.051,87,0.249,90,1.461,91,3.183,92,0.902,102,0.007,103,0.009,104,0.007,164,2.633,174,1.281,204,1.831,209,0.864,217,2.159,218,1.881,448,2.171,473,1.081,474,0.982,495,0.836,549,1.385,570,1.022,577,1.946,688,2.633,746,2.705,806,4.012,866,7.122,867,6.346,868,3.86,869,5.209,870,5.209,986,2.812,1199,2.968,1253,2.545,2287,3.458,2495,3.582,2496,3.715,2502,2.828,2506,3.445,2541,4.281,2543,3.577,3600,3.324,3641,3.324,3836,4.989,3867,5.209,4110,4.989,4294,5.209,4295,7.122,4296,5.931,4297,4.049,4298,5.931,4299,3.86]],["title/directives/ValidateCityDirective.html",[495,0.5,579,1.036]],["body/directives/ValidateCityDirective.html",[0,0.036,3,0.205,4,0.238,5,0.126,8,0.238,13,0.837,23,0.475,25,0.859,26,0.011,27,0.436,28,0.29,29,0.556,57,0.688,71,0.379,82,0.27,84,0.475,85,1.054,87,0.25,90,1.462,91,3.19,92,0.903,102,0.009,103,0.009,104,0.007,164,2.638,174,1.382,204,1.833,209,0.866,217,2.162,218,1.884,448,2.175,473,1.084,474,0.983,495,0.837,570,1.024,579,1.947,609,3.19,746,2.706,986,2.816,1199,2.97,1247,3.061,1253,2.55,2287,3.462,2495,3.585,2496,3.718,2502,2.834,2506,3.449,2541,4.283,2543,3.582,2748,3.331,2932,4.389,3191,4.462,3600,4.054,3641,3.331,4297,4.054,4299,3.868,4300,6.354,4301,5.221,4302,7.127,4303,5.944,4304,5.221,4305,4.744]],["title/directives/ValidateEmailDirective.html",[495,0.5,581,1.036]],["body/directives/ValidateEmailDirective.html",[0,0.036,3,0.209,4,0.243,5,0.128,8,0.243,13,0.846,23,0.483,25,0.874,26,0.011,27,0.443,28,0.293,29,0.566,57,0.7,71,0.386,82,0.273,84,0.483,85,1.072,87,0.252,90,1.53,92,0.909,102,0.009,103,0.009,104,0.007,164,2.684,174,1.393,204,1.852,209,0.875,217,2.185,218,1.904,448,2.213,473,1.103,474,0.994,495,0.846,570,1.042,581,1.959,746,2.656,986,2.845,1199,2.987,2287,3.488,2495,3.613,2496,3.746,2502,2.883,2506,2.883,2541,4.304,2543,3.619,3600,3.389,3641,3.389,4297,4.097,4306,6.421,4307,5.312,4308,7.169,4309,6.047,4310,6.047,4311,6.047,4312,7.31]],["title/directives/ValidateNameDirective.html",[495,0.5,583,1.036]],["body/directives/ValidateNameDirective.html",[0,0.036,3,0.207,4,0.24,5,0.127,8,0.24,13,0.841,23,0.478,25,0.865,26,0.011,27,0.532,28,0.291,29,0.56,57,0.692,71,0.382,82,0.271,84,0.478,85,1.06,87,0.251,90,1.466,91,3.21,92,0.905,102,0.007,103,0.009,104,0.007,164,2.655,174,1.287,204,1.84,209,0.869,217,2.171,218,1.891,448,2.189,473,1.091,474,0.987,495,0.841,570,1.031,583,1.952,746,2.711,868,3.893,986,2.827,1199,2.976,1247,3.081,1253,2.566,2287,3.471,2495,3.596,2496,3.729,2502,2.852,2506,3.463,2541,4.291,2543,3.596,3191,4.479,3192,4.775,3600,4.07,3641,3.353,4297,4.07,4299,3.893,4313,6.379,4314,5.254,4315,7.143,4316,5.982]],["title/directives/ValidatePhnDirective.html",[495,0.5,585,1.036]],["body/directives/ValidatePhnDirective.html",[0,0.03,3,0.174,4,0.202,5,0.106,8,0.202,13,0.754,23,0.577,25,0.727,26,0.011,27,0.369,28,0.306,29,0.471,30,1.347,33,1.441,34,1.592,43,0.942,44,1.043,45,1.433,57,0.583,71,0.505,82,0.243,84,0.402,85,0.892,87,0.225,90,1.569,92,0.939,97,1.842,102,0.01,103,0.008,104,0.006,164,2.234,170,2.314,174,1.155,178,2.705,182,3.227,188,2.089,204,1.651,209,0.78,217,1.948,218,1.697,294,3.717,385,1.592,386,2.821,416,1.044,448,2.645,473,0.918,474,0.886,495,0.754,570,0.867,585,1.834,746,2.686,768,2.645,905,3.652,986,2.537,1199,2.797,1389,3.172,2287,3.208,2317,3.323,2495,3.323,2496,3.446,2502,2.4,2506,3.446,2541,4.077,2543,3.227,2548,4.018,2549,3.476,2550,3.476,2756,5.7,2792,3.717,3744,5.643,4022,3.476,4317,6.101,4318,4.018,4319,6.101,4320,7.123,4321,6.589,4322,5.033,4323,5.033,4324,5.033,4325,5.033,4326,5.768,4327,4.421,4328,5.033,4329,5.033,4330,5.724,4331,5.033,4332,5.033,4333,5.033,4334,5.033,4335,4.421,4336,5.033,4337,4.421,4338,6.517,4339,5.033,4340,7.643,4341,5.033,4342,5.033,4343,5.033,4344,6.517,4345,5.033,4346,5.033,4347,5.033]],["title/directives/ValidatePhoneDirective.html",[495,0.5,587,1.036]],["body/directives/ValidatePhoneDirective.html",[0,0.034,3,0.195,4,0.226,5,0.119,8,0.226,13,0.811,20,1.036,23,0.56,25,0.816,26,0.011,27,0.414,28,0.281,29,0.529,34,1.786,44,1.004,50,1.355,57,0.654,71,0.36,82,0.261,84,0.451,85,1.001,87,0.242,90,1.429,91,3.762,92,0.882,102,0.007,103,0.008,104,0.007,138,2.131,164,2.507,174,1.453,204,1.776,209,0.839,217,2.095,218,1.825,300,2.423,326,1.431,448,2.067,473,1.03,474,0.953,495,0.811,546,2.021,570,0.973,587,1.913,690,4.17,724,2.796,746,2.667,754,2.507,986,2.729,1110,4.508,1199,2.566,1253,2.423,2287,3.112,2495,3.505,2496,3.635,2502,3.342,2506,2.693,2541,4.221,2543,3.471,2756,3.9,3487,4.96,3559,4.508,3648,5.265,3777,6.085,3781,6.085,4135,6.085,4297,3.929,4348,4.96,4349,5.647,4350,5.647,4351,4.96,4352,4.96,4353,5.647,4354,4.96,4355,6.157,4356,5.647,4357,5.647,4358,5.647,4359,5.647,4360,5.647,4361,5.647,4362,7.01,4363,5.647,4364,5.647,4365,5.647,4366,4.96,4367,5.647,4368,5.647,4369,5.647]],["title/directives/ValidatePostalcodeDirective.html",[495,0.5,589,1.036]],["body/directives/ValidatePostalcodeDirective.html",[0,0.033,3,0.189,4,0.22,5,0.116,8,0.22,13,0.796,23,0.549,25,0.791,26,0.011,27,0.401,28,0.301,29,0.512,30,1.31,33,1.521,43,0.791,44,0.721,57,0.634,71,0.479,82,0.28,84,0.437,85,0.97,87,0.237,90,1.554,92,0.96,102,0.007,103,0.008,104,0.007,164,2.43,174,1.219,204,1.742,209,0.823,217,2.055,218,1.79,416,0.994,448,2.751,473,0.998,474,0.935,495,0.796,570,0.943,589,1.892,746,2.737,768,2.751,927,2.61,986,2.676,1199,2.973,1247,2.819,2287,3.337,2495,3.456,2496,3.584,2502,2.61,2506,3.584,2541,4.269,2543,3.404,2544,3.563,2748,3.854,3167,4.043,3191,5.01,3600,4.213,3641,3.069,3836,5.191,4110,5.191,4297,3.069,4299,3.563,4305,5.488,4370,4.37,4371,6,4372,7.39,4373,5.475,4374,5.475,4375,5.475,4376,4.809,4377,5.475,4378,6.876,4379,6.876,4380,5.475,4381,5.475,4382,4.809,4383,5.488,4384,5.475]],["title/directives/ValidateRegionDirective.html",[495,0.5,591,1.036]],["body/directives/ValidateRegionDirective.html",[0,0.036,3,0.205,4,0.238,5,0.126,8,0.238,13,0.837,23,0.474,25,0.858,26,0.011,27,0.435,28,0.29,29,0.556,57,0.687,71,0.379,82,0.27,84,0.474,85,1.052,87,0.25,90,1.461,91,3.186,92,0.902,102,0.009,103,0.009,104,0.007,164,2.636,174,1.382,204,1.832,209,0.865,217,2.161,218,1.882,448,2.173,473,1.083,474,0.983,495,0.837,570,1.023,591,1.947,746,2.705,868,3.864,986,2.814,1199,2.969,1247,3.058,1253,2.547,2287,3.46,2495,3.584,2496,3.716,2502,2.831,2506,3.447,2541,4.282,2543,3.579,2932,4.384,3191,4.459,3600,4.052,3641,3.328,4128,5.771,4297,4.052,4299,3.864,4304,5.215,4385,6.35,4386,5.215,4387,7.125,4388,5.937,4389,5.937]],["title/directives/ValidateSinDirective.html",[495,0.5,593,1.036]],["body/directives/ValidateSinDirective.html",[0,0.036,3,0.204,4,0.236,5,0.125,8,0.236,13,0.833,23,0.471,25,0.852,26,0.011,27,0.432,28,0.289,29,0.552,57,0.682,71,0.376,82,0.268,84,0.471,85,1.045,87,0.249,90,1.457,92,0.899,97,2.157,102,0.01,103,0.009,104,0.007,164,2.616,174,1.045,178,2.446,188,2.446,204,1.824,209,0.861,217,2.151,218,1.874,294,4.351,448,2.157,473,1.074,474,0.978,495,0.833,570,1.015,593,1.942,746,2.7,986,2.801,1199,2.961,1389,2.446,2287,3.449,2317,3.309,2495,3.572,2496,3.704,2502,2.81,2506,2.81,2541,4.273,2543,3.563,2748,4.033,2792,4.351,4022,4.07,4151,6.201,4297,4.033,4327,5.176,4337,7.107,4390,6.321,4391,5.176,4392,7.107,4393,5.893,4394,5.893,4395,5.893]],["title/directives/ValidateStreetDirective.html",[495,0.5,595,1.036]],["body/directives/ValidateStreetDirective.html",[0,0.036,3,0.205,4,0.238,5,0.126,8,0.238,13,0.837,23,0.475,25,0.859,26,0.011,27,0.436,28,0.29,29,0.556,57,0.688,71,0.379,82,0.27,84,0.475,85,1.054,87,0.25,90,1.462,91,3.19,92,0.903,102,0.009,103,0.009,104,0.007,164,2.638,174,1.382,204,1.833,209,0.866,217,2.162,218,1.884,448,2.175,473,1.084,474,0.983,495,0.837,570,1.024,595,1.947,666,3.331,746,2.706,986,2.816,1199,2.97,1247,3.061,1253,2.55,2287,3.462,2495,3.585,2496,3.718,2502,2.834,2506,3.449,2541,4.283,2543,3.582,2748,3.331,3191,4.462,3600,4.054,3641,3.331,4297,4.054,4299,3.868,4305,5.774,4382,5.221,4396,6.354,4397,5.221,4398,7.127,4399,5.944]],["title/components/WizardProgressBarComponent.html",[313,0.236,565,1.064]],["body/components/WizardProgressBarComponent.html",[0,0.021,3,0.118,4,0.137,5,0.106,8,0.137,9,0.659,11,1.076,13,0.579,20,0.466,21,2.366,22,4.442,23,0.639,25,0.722,26,0.011,27,0.506,28,0.289,29,0.468,33,1.105,37,1.886,43,0.495,44,0.451,52,0.868,53,3.808,56,1.266,57,0.798,64,0.991,65,0.96,68,3.307,76,2.383,78,3.989,80,1.696,82,0.257,83,1.47,84,0.274,86,1.764,87,0.118,92,0.683,97,1.254,102,0.004,103,0.006,104,0.004,109,0.8,134,1.293,137,2.529,148,1.025,166,2.814,169,1.92,174,1.223,209,0.598,220,1.017,235,1.397,246,0.8,269,0.822,280,2.529,295,0.868,313,0.322,326,1.825,335,1.764,336,1.47,354,1.945,380,0.8,407,0.964,416,0.722,422,3.082,423,1.266,466,0.845,467,0.917,468,0.892,469,0.917,472,1.495,473,0.625,474,1.216,476,1.018,478,1.018,481,1.689,491,2.574,492,2.383,493,0.868,494,1.338,495,0.396,496,1.784,497,0.942,498,0.942,499,0.779,500,0.942,501,0.822,502,0.942,503,0.822,504,0.942,505,0.845,506,0.942,507,0.845,508,0.942,509,0.845,510,0.942,511,0.845,512,1.375,513,0.845,514,0.892,515,0.942,516,0.845,517,0.942,518,0.8,519,0.942,520,0.845,521,0.942,522,0.942,523,0.822,524,0.942,525,0.845,526,0.942,527,0.822,528,0.942,529,0.845,530,1.623,531,0.845,532,0.8,533,0.8,534,1.375,535,0.822,536,0.942,537,0.845,538,0.942,539,0.845,540,0.942,541,0.8,542,0.942,543,0.845,544,0.942,545,0.845,546,0.845,547,0.942,548,0.822,549,0.8,550,0.942,551,0.822,552,0.942,553,0.822,554,0.942,555,0.822,556,0.892,557,0.845,558,0.942,559,0.845,560,0.942,561,0.845,562,0.942,563,0.822,564,0.942,565,1.6,566,1.936,567,2.106,568,0.822,569,0.917,570,0.59,571,0.822,572,0.942,573,0.822,574,0.942,575,0.822,576,0.942,577,0.822,578,0.942,579,0.822,580,0.942,581,0.822,582,0.942,583,0.822,584,0.942,585,0.822,586,0.942,587,0.822,588,0.942,589,0.822,590,0.942,591,0.822,592,0.942,593,0.822,594,0.942,595,0.822,596,0.942,597,0.822,598,0.917,599,0.942,603,1.626,604,1.626,657,0.892,663,2.011,685,2.298,760,1.254,768,1.829,771,2.162,879,4.39,898,2.113,899,1.053,924,2.682,926,2.475,950,2.801,973,3.639,1047,2.366,1107,2.532,1228,3.253,1261,1.333,1262,1.945,1263,1.333,1264,1.945,1265,1.945,1266,1.945,1267,1.333,1268,1.333,1269,1.945,1270,1.945,1271,1.333,1272,1.333,1273,1.333,1274,1.333,1275,1.333,1276,1.945,1277,1.886,1278,1.333,1279,1.945,1280,1.945,1281,1.333,1282,1.945,1283,1.333,1284,1.333,1285,1.333,1286,1.333,1287,2.525,1288,1.333,1289,1.333,1290,1.333,1291,1.333,1292,1.333,1293,1.333,1294,1.333,1295,1.333,1296,1.333,1297,1.333,1298,1.333,1299,1.333,1300,1.333,1301,1.333,1302,1.333,1303,1.333,1304,1.945,1305,1.333,1306,1.333,1307,1.333,1308,1.333,1309,1.333,1310,1.333,1311,1.333,1312,1.333,1313,1.333,1314,1.333,1315,1.333,1316,1.333,1317,1.333,1318,1.945,1319,1.333,1320,1.333,1321,1.333,1322,1.333,1323,1.333,1324,1.115,1325,1.333,1326,1.333,1327,1.333,1328,1.333,1329,1.333,1330,1.333,1331,1.333,1332,1.333,1457,2.113,1499,3.082,1500,2.011,1509,2.229,1521,2.529,1523,2.734,1579,3.082,1583,4.71,1586,3.84,2212,4.075,2213,4.222,2245,2.113,2306,2.529,2312,2.734,2385,3.341,2478,3.452,2611,2.229,2612,2.366,2718,6.059,2733,2.529,2852,3.69,3115,2.529,3116,3.989,3117,3.989,3127,3.009,3159,3.989,3309,5.183,3310,3.009,3311,3.009,3312,3.009,3402,3.989,3773,2.366,3792,3.989,4060,6.461,4148,4.39,4400,7.11,4401,5.901,4402,5.901,4403,4.998,4404,5.901,4405,5.901,4406,5.901,4407,6.487,4408,4.998,4409,6.487,4410,6.487,4411,4.998,4412,3.425,4413,4.998,4414,3.425,4415,3.425,4416,3.425,4417,3.425,4418,4.998,4419,4.998,4420,5.183,4421,4.39,4422,4.998,4423,4.998,4424,3.69,4425,3.425,4426,5.901,4427,4.998,4428,3.425,4429,5.901,4430,4.998,4431,3.425,4432,3.425,4433,3.425,4434,3.425,4435,3.425,4436,3.425,4437,3.425,4438,3.425,4439,3.425,4440,3.425,4441,3.425,4442,3.425,4443,5.901,4444,3.425,4445,3.425,4446,3.425,4447,3.425,4448,3.425,4449,3.425,4450,6.898,4451,3.425,4452,4.998,4453,3.425,4454,3.425,4455,3.425,4456,3.425,4457,3.425,4458,4.998,4459,3.425,4460,3.425,4461,3.425,4462,3.425,4463,3.425,4464,3.425,4465,3.425,4466,3.425,4467,3.425,4468,3.425,4469,3.425,4470,3.425,4471,3.425,4472,3.425,4473,3.425,4474,3.425,4475,4.998]],["title/interfaces/WizardProgressItem.html",[600,0.702,1586,2.809]],["body/interfaces/WizardProgressItem.html",[0,0.037,3,0.272,4,0.245,5,0.129,8,0.245,9,0.969,17,2.711,26,0.011,28,0.295,59,2.169,65,0.993,71,0.558,76,4.168,82,0.228,86,3.145,87,0.254,92,0.851,102,0.007,103,0.009,104,0.007,151,2.62,163,2.377,236,4.875,305,4.875,364,3.423,483,5.25,566,1.59,567,1.466,600,1.196,602,2.235,618,1.466,705,2.711,780,4.218,781,2.454,1106,4.535,1579,4.535,1580,4.875,1581,5.364,1582,5.364,1583,4.875,1585,5.364,1586,5.135,1588,5.364,1589,5.364,1591,5.364,1592,5.364,1593,5.43,1597,5.364,1598,5.364,1599,5.364,1600,5.364,1601,5.364,1602,5.364,1603,5.364,1604,6.459,1605,5.364]],["title/components/XiconButtonComponent.html",[313,0.236,568,1.036]],["body/components/XiconButtonComponent.html",[0,0.027,3,0.156,4,0.181,5,0.128,8,0.181,11,1.306,13,0.702,20,0.931,23,0.629,26,0.011,27,0.502,28,0.275,33,1.342,34,1.428,50,1.084,52,1.145,56,1.994,57,0.702,64,1.203,65,0.987,71,0.387,82,0.226,84,0.361,87,0.156,102,0.005,103,0.007,104,0.005,146,4.191,148,0.959,151,1.938,174,0.801,209,0.726,232,2.786,235,1.422,239,1.716,246,1.055,269,1.084,295,1.145,313,0.374,319,2.693,352,2.652,380,1.055,397,4.481,407,1.17,416,0.877,423,1.538,466,1.114,467,1.209,468,1.176,469,1.209,472,1.736,473,0.824,474,1.231,476,1.236,478,1.236,481,1.908,488,5.059,493,1.145,494,1.624,495,0.523,496,2.015,497,1.243,498,1.243,499,1.027,500,1.243,501,1.084,502,1.243,503,1.084,504,1.243,505,1.114,506,1.243,507,1.114,508,1.243,509,1.114,510,1.243,511,1.114,512,1.669,513,1.114,514,1.176,515,1.243,516,1.114,517,1.243,518,1.055,519,1.243,520,1.114,521,1.243,522,1.243,523,1.084,524,1.243,525,1.114,526,1.243,527,1.084,528,1.243,529,1.114,530,1.885,531,1.114,532,1.055,533,1.055,534,1.669,535,1.084,536,1.243,537,1.114,538,1.243,539,1.114,540,1.243,541,1.055,542,1.243,543,1.114,544,1.243,545,1.114,546,1.114,547,1.243,548,1.084,549,1.055,550,1.243,551,1.084,552,1.243,553,1.084,554,1.243,555,1.084,556,1.176,557,1.114,558,1.243,559,1.114,560,1.243,561,1.114,562,1.243,563,1.084,564,1.243,565,1.114,566,1.176,567,1.084,568,1.758,569,2.215,570,0.778,571,1.084,572,1.243,573,1.084,574,1.243,575,1.084,576,1.243,577,1.084,578,1.243,579,1.084,580,1.243,581,1.084,582,1.243,583,1.084,584,1.243,585,1.084,586,1.243,587,1.084,588,1.243,589,1.084,590,1.243,591,1.084,592,1.243,593,1.084,594,1.243,595,1.084,596,1.243,597,1.084,598,1.209,599,1.243,611,1.644,612,2.037,662,1.115,670,2.652,719,1.938,754,2.005,898,2.786,899,1.865,940,2.237,956,5.33,957,5.33,960,2.032,980,3.12,1204,2.786,1493,3.336,3426,4.844,3486,4.481,3488,3.336,4113,6.417,4476,7.061,4477,3.606,4478,7.325,4479,5.47,4480,6.068,4481,4.517,4482,6.434,4483,4.517,4484,4.517,4485,4.517,4486,4.517,4487,4.517,4488,4.517,4489,4.517,4490,4.517,4491,6.068,4492,4.517,4493,4.517,4494,4.517,4495,4.517,4496,4.517,4497,4.517,4498,4.517]],["title/directives/YearValidateDirective.html",[495,0.5,597,1.036]],["body/directives/YearValidateDirective.html",[0,0.028,3,0.161,4,0.187,5,0.099,8,0.249,13,0.718,23,0.593,25,0.674,26,0.011,27,0.342,28,0.31,29,0.437,33,1.371,34,1.475,44,0.918,57,0.54,71,0.517,82,0.26,84,0.373,85,0.827,87,0.161,90,1.52,92,0.919,97,1.708,102,0.006,103,0.007,104,0.006,148,0.737,164,2.071,174,1.408,178,1.936,182,4.075,204,1.571,209,0.742,217,1.853,218,1.615,274,2.31,309,2.145,310,2.878,326,1.765,337,2.225,367,3.445,378,2.403,416,1.072,448,1.708,473,0.851,474,0.843,495,0.718,570,0.804,597,1.781,598,1.659,614,2.549,651,2.738,663,2.738,746,2.513,905,2.615,927,3.538,940,2.31,949,3.222,986,2.413,1054,2.738,1107,3.184,1114,3.222,1199,2.549,1388,2.31,1391,2.878,1431,3.639,1450,2.504,1463,3.639,2222,5.559,2230,3.445,2234,4.534,2239,4.662,2242,4.924,2249,3.445,2280,4.578,2281,4.578,2283,3.445,2284,3.445,2287,3.792,2290,3.724,2316,5.142,2317,3.202,2318,5.704,2393,5.446,2437,5.479,2495,3.202,2496,3.32,2498,6.117,2502,2.225,2505,4.098,2506,3.538,2507,3.724,2511,4.098,2664,3.222,3132,3.445,3570,3.724,3736,6.976,4330,4.098,4499,6.785,4500,4.098,4501,7.421,4502,6.964,4503,4.665,4504,4.665,4505,4.665,4506,4.665,4507,4.665,4508,7.725,4509,4.665,4510,4.665,4511,6.2,4512,7.421,4513,4.665,4514,4.665,4515,4.665,4516,4.665,4517,4.665,4518,4.665,4519,4.665,4520,4.665]],["title/changelog.html",[4521,2.022,4522,2.022,4523,2.88]],["body/changelog.html",[0,0.012,2,0.884,3,0.071,5,0.131,11,1.385,13,0.239,15,1.607,19,1.522,23,0.165,25,0.298,26,0.006,27,0.472,28,0.083,33,0.456,34,1.562,35,1.811,42,3.411,43,0.892,44,0.272,47,1.669,48,1.424,50,1.307,53,1.978,56,0.854,64,0.848,71,0.315,76,0.983,82,0.126,87,0.171,91,1.106,92,0.239,102,0.002,103,0.004,104,0.002,107,1.669,111,0.948,134,1.272,135,1.271,143,1.522,148,0.924,163,1.923,172,1.522,178,1.775,184,1.522,185,2.079,188,3.396,189,3.413,192,1.312,194,1.424,201,1.271,210,1.062,214,1.271,215,1.129,220,0.581,230,1.522,232,1.271,235,1.393,237,2.961,239,1.397,240,4.94,241,4.93,244,1.424,274,1.021,276,1.21,278,1.271,280,1.522,285,1.811,287,4.446,295,1.084,296,4.038,300,1.446,302,1.271,309,2.96,311,1.271,313,0.436,318,3.157,319,2.008,320,2.489,326,0.854,327,3.943,333,1.424,335,2.202,336,3.072,338,1.645,339,1.522,345,1.522,348,1.645,360,0.855,362,1.155,366,1.811,370,1.424,373,0.915,378,1.062,379,0.948,380,0.481,382,2.202,383,2.446,386,1.155,388,5.288,389,1.811,390,2.489,396,1.062,397,1.522,401,2.079,405,1.446,407,1.19,409,2.397,410,1.342,416,0.99,419,1.522,421,1.607,488,1.424,494,0.552,499,1.463,501,0.809,503,1.185,505,0.508,518,0.481,523,0.495,527,0.495,532,0.481,533,0.787,535,0.495,541,0.787,546,1.343,548,0.495,549,1.365,553,1.403,556,0.878,563,1.026,568,0.495,602,0.754,603,1.097,604,1.097,606,1.522,609,1.809,610,1.424,616,0.711,617,2.039,622,3.987,625,1.062,633,1.342,640,1.669,644,2.202,647,1.522,648,2.117,655,1.522,656,3.157,657,1.113,659,0.855,662,0.951,664,1.522,665,1.522,666,2.768,668,1.522,670,2.899,673,1.522,679,1.271,685,1.966,686,1.062,688,2.957,692,3.761,705,1.898,711,1.424,723,2.953,724,1.021,734,1.155,742,3.215,746,1.097,747,2.489,748,2.397,754,2.595,760,0.754,765,1.155,779,1.522,781,0.828,793,1.342,795,1.106,806,1.062,843,1.106,846,2.961,858,2.961,891,1.271,898,3.359,899,1.897,905,1.889,924,3.311,925,1.21,932,1.432,934,1.21,937,1.424,940,3.713,941,1.645,942,2.194,950,3.458,953,1.811,954,1.645,972,0.732,980,1.424,984,2.961,985,3.413,986,0.802,1045,3.761,1054,1.21,1055,2.194,1070,1.424,1073,2.961,1077,2.953,1107,0.884,1108,1.424,1111,1.522,1146,1.645,1175,1.271,1199,1.565,1217,0.948,1218,2.805,1250,1.496,1251,1.522,1253,0.884,1337,2.202,1346,2.079,1384,4.328,1388,1.021,1389,1.399,1432,2.783,1433,1.645,1449,1.342,1450,2.651,1454,3.413,1458,1.645,1463,3.197,1472,2.637,1539,1.424,1541,1.522,1579,1.271,1586,1.342,1609,4.317,1618,2.194,2215,2.079,2229,1.21,2234,1.21,2239,1.21,2242,1.889,2245,1.271,2250,3.647,2308,3.413,2317,3.063,2352,4.784,2359,2.637,2385,1.062,2402,1.645,2481,2.691,2486,1.645,2495,0.948,2519,2.961,2544,1.342,2548,1.645,2549,2.328,2550,2.328,2554,2.489,2557,1.811,2608,1.522,2610,1.811,2642,3.778,2643,1.645,2645,2.194,2646,3.413,2663,3.157,2664,2.953,2685,1.645,2732,2.961,2734,1.271,2748,1.155,2751,3.647,2752,1.811,2756,1.424,2760,2.489,2771,3.157,2780,2.489,2783,4.347,2786,4.784,2794,2.489,2802,4.784,2826,1.522,2837,5.135,2849,2.691,2851,1.811,2891,1.811,2892,1.645,2902,1.811,2914,4.338,2917,5.932,2921,1.522,2933,1.811,2943,1.811,2955,2.691,2988,1.342,3021,3.413,3024,1.811,3133,4.347,3143,3.545,3148,1.645,3278,4.338,3280,2.691,3281,2.691,3282,1.424,3364,1.522,3367,1.811,3394,5.602,3396,5.135,3402,1.645,3426,1.645,3528,1.811,3533,1.811,3559,1.645,3566,1.645,3594,2.489,3620,2.691,3632,4.661,3674,1.811,3712,1.342,3714,1.811,3744,3.647,3773,1.424,3787,2.961,3788,1.811,3792,2.691,3820,1.811,3826,2.961,3934,6.736,3936,1.811,3939,1.811,3957,1.811,3983,1.645,4002,1.424,4151,4.667,4217,1.811,4226,1.811,4321,1.645,4424,1.522,4479,1.645,4482,4.784,4521,1.155,4522,1.155,4523,4.925,4524,2.061,4525,7.72,4526,7.668,4527,2.061,4528,7.508,4529,1.811,4530,2.061,4531,8.424,4532,2.061,4533,2.061,4534,2.061,4535,2.061,4536,1.811,4537,2.061,4538,2.061,4539,2.061,4540,2.061,4541,6.662,4542,3.371,4543,2.061,4544,2.061,4545,2.061,4546,3.371,4547,2.061,4548,2.061,4549,2.061,4550,2.061,4551,6.17,4552,2.061,4553,2.061,4554,1.811,4555,2.061,4556,2.061,4557,2.061,4558,2.061,4559,2.061,4560,3.371,4561,2.061,4562,2.061,4563,2.061,4564,2.061,4565,4.88,4566,2.061,4567,3.371,4568,4.276,4569,1.811,4570,2.061,4571,2.061,4572,2.961,4573,2.061,4574,3.371,4575,2.061,4576,2.061,4577,2.061,4578,3.371,4579,2.061,4580,2.061,4581,2.691,4582,2.061,4583,2.061,4584,2.061,4585,2.061,4586,3.756,4587,2.061,4588,2.061,4589,2.061,4590,2.061,4591,2.061,4592,2.061,4593,3.371,4594,2.061,4595,2.061,4596,2.061,4597,2.061,4598,2.061,4599,2.061,4600,2.061,4601,2.061,4602,2.061,4603,1.645,4604,2.061,4605,2.061,4606,5.446,4607,2.061,4608,2.061,4609,2.061,4610,2.061,4611,2.061,4612,2.061,4613,1.811,4614,2.061,4615,2.061,4616,2.061,4617,2.061,4618,2.061,4619,2.061,4620,2.061,4621,2.061,4622,2.061,4623,2.061,4624,2.061,4625,2.061,4626,2.061,4627,2.061,4628,2.061,4629,2.061,4630,2.061,4631,3.371,4632,2.061,4633,2.061,4634,2.061,4635,4.939,4636,2.061,4637,2.061,4638,2.061,4639,3.371,4640,2.061,4641,2.061,4642,2.061,4643,3.371,4644,2.061,4645,7.499,4646,2.061,4647,2.061,4648,5.446,4649,2.061,4650,2.061,4651,2.061,4652,2.061,4653,2.061,4654,2.061,4655,3.371,4656,2.061,4657,2.061,4658,1.424,4659,2.061,4660,2.061,4661,4.939,4662,2.061,4663,2.061,4664,2.061,4665,2.061,4666,3.371,4667,2.061,4668,2.061,4669,2.061,4670,2.061,4671,2.061,4672,2.061,4673,2.061,4674,2.061,4675,2.061,4676,2.061,4677,2.061,4678,2.061,4679,2.061,4680,2.061,4681,2.061,4682,2.061,4683,2.061,4684,2.061,4685,2.061,4686,3.371,4687,2.061,4688,2.061,4689,2.061,4690,3.371,4691,2.061,4692,2.061,4693,2.061,4694,2.061,4695,2.061,4696,3.371,4697,2.061,4698,2.061,4699,4.338,4700,2.061,4701,2.061,4702,2.061,4703,2.061,4704,2.061,4705,2.061,4706,2.061,4707,2.061,4708,7.287,4709,2.061,4710,2.061,4711,6.858,4712,4.338,4713,2.061,4714,2.061,4715,2.061,4716,4.276,4717,2.061,4718,2.061,4719,2.061,4720,2.061,4721,1.811,4722,2.061,4723,4.939,4724,2.061,4725,2.061,4726,2.061,4727,2.061,4728,2.061,4729,2.061,4730,2.061,4731,2.061,4732,2.061,4733,2.061,4734,2.061,4735,2.061,4736,2.061,4737,2.061,4738,2.061,4739,2.061,4740,2.061,4741,1.645,4742,2.061,4743,5.446,4744,1.811,4745,2.061,4746,2.061,4747,2.061,4748,2.061,4749,2.061,4750,2.061,4751,2.061,4752,2.061,4753,2.061,4754,2.061,4755,2.061,4756,2.061,4757,3.413,4758,1.811,4759,2.061,4760,2.061,4761,2.061,4762,2.061,4763,2.061,4764,2.061,4765,2.061,4766,2.061,4767,2.061,4768,2.061,4769,2.061,4770,2.061,4771,2.061,4772,2.061,4773,2.061,4774,2.061,4775,1.645,4776,2.061,4777,2.061,4778,3.371,4779,2.061,4780,2.061,4781,2.061,4782,3.371,4783,2.061,4784,1.811,4785,2.061,4786,2.061,4787,2.061,4788,3.371,4789,2.061,4790,2.061,4791,3.943,4792,2.061,4793,2.061,4794,2.061,4795,4.338,4796,2.061,4797,2.061,4798,2.061,4799,2.061,4800,2.061,4801,2.061,4802,2.061,4803,2.961,4804,2.061,4805,2.061,4806,2.061,4807,2.061,4808,2.061,4809,1.811,4810,1.811,4811,1.811,4812,1.811,4813,2.061,4814,2.061,4815,2.061,4816,2.061,4817,3.756,4818,2.061,4819,2.061,4820,2.061,4821,2.061,4822,2.061,4823,2.061,4824,3.756,4825,2.691,4826,2.061,4827,2.061,4828,2.061,4829,2.061,4830,2.061,4831,2.061,4832,2.061,4833,2.061,4834,2.061,4835,2.061,4836,2.061,4837,2.061,4838,2.061,4839,2.061,4840,2.061,4841,2.061,4842,2.061,4843,2.061,4844,2.061,4845,2.061,4846,2.061,4847,2.061,4848,2.061,4849,2.061,4850,2.061,4851,2.061,4852,2.061,4853,2.061,4854,2.061,4855,2.061,4856,2.061,4857,2.061,4858,2.061,4859,2.061,4860,2.061,4861,2.061,4862,2.061,4863,2.061,4864,1.811,4865,2.061,4866,2.061,4867,2.061,4868,2.061,4869,2.061,4870,2.061,4871,2.061,4872,2.061,4873,2.061,4874,2.061,4875,2.061,4876,2.061,4877,2.061,4878,1.811,4879,1.811,4880,2.061,4881,2.061,4882,1.811,4883,2.061,4884,2.061,4885,2.061,4886,1.811,4887,2.061,4888,2.061,4889,1.811,4890,2.061,4891,2.061,4892,4.338,4893,2.061,4894,2.691,4895,2.061,4896,2.061,4897,1.522,4898,2.061,4899,2.061,4900,2.061,4901,1.811,4902,2.061,4903,2.061,4904,2.061,4905,1.811,4906,1.811,4907,2.061,4908,3.371,4909,2.061,4910,2.061,4911,2.061,4912,1.645,4913,2.061,4914,1.811,4915,2.061,4916,2.061,4917,1.811,4918,1.522,4919,2.061,4920,2.061,4921,3.756,4922,2.061,4923,2.061,4924,2.061,4925,2.061,4926,2.061,4927,2.061,4928,2.061,4929,2.061,4930,2.061,4931,2.061,4932,2.061,4933,2.061,4934,1.811,4935,2.061,4936,2.061,4937,2.061,4938,1.424,4939,1.811,4940,1.811,4941,2.061,4942,1.811,4943,2.061,4944,2.061,4945,2.061,4946,3.371,4947,2.061,4948,2.061,4949,2.061,4950,2.061,4951,2.061,4952,2.061,4953,2.961,4954,2.061,4955,2.061,4956,2.061,4957,2.061,4958,2.061,4959,2.061,4960,2.061,4961,2.061,4962,2.061,4963,2.061,4964,1.811,4965,1.811,4966,2.061,4967,1.811,4968,2.061,4969,2.061,4970,2.061,4971,2.061,4972,2.061,4973,2.061,4974,2.061]],["title/contributing.html",[4521,2.022,4522,2.022,4757,2.88]],["body/contributing.html",[26,0.009,48,4.264,77,3.624,91,3.314,102,0.007,103,0.009,104,0.007,210,3.18,212,4.929,232,3.808,238,3.808,239,2.093,362,3.461,384,3.808,385,2.341,419,4.56,567,1.482,662,1.005,663,3.624,688,3.519,770,4.264,795,3.314,899,2.276,924,3.314,937,4.264,950,4.443,1176,3.808,1493,4.56,1521,4.56,1618,4.019,2245,3.808,2385,3.18,2390,5.16,2481,4.929,2507,4.929,2596,5.909,2642,4.345,2679,4.929,2917,5.112,3132,4.56,3394,4.929,3448,5.424,3632,4.818,4022,4.264,4523,6.709,4528,5.424,4529,5.424,4565,4.019,4699,7.22,4757,5.909,4758,5.424,4878,6.502,4892,5.424,4894,5.909,4901,6.964,4964,5.424,4975,8.22,4976,6.175,4977,6.175,4978,7.402,4979,6.175,4980,6.175,4981,6.175,4982,6.175,4983,6.175,4984,6.175,4985,6.175,4986,6.175,4987,6.175,4988,5.424,4989,7.402,4990,6.175,4991,6.175,4992,6.175,4993,6.175,4994,6.175,4995,5.424,4996,6.175,4997,6.175,4998,6.175,4999,6.175,5000,7.402,5001,6.175,5002,6.175]],["title/coverage.html",[5003,5.168]],["body/coverage.html",[0,0.047,1,2.346,5,0.062,6,2.582,7,2.582,26,0.011,28,0.118,52,1.13,97,3.301,102,0.004,103,0.005,104,0.004,105,1.648,106,3.56,107,1.455,108,2.582,194,2.03,196,2.735,197,1.913,199,2.03,200,2.582,201,1.813,214,1.813,230,2.171,231,2.582,232,1.813,233,2.582,246,0.687,269,1.07,272,2.751,313,0.476,326,0.745,380,0.687,421,1.402,466,0.725,470,2.582,495,0.928,499,0.668,501,0.705,503,0.705,505,0.725,507,0.725,509,0.725,511,0.725,513,0.725,516,0.725,518,0.687,520,0.725,523,0.705,525,0.725,527,0.705,529,0.725,531,0.725,532,0.687,535,0.705,537,0.725,539,0.725,541,0.687,543,0.725,545,0.725,546,1.329,548,0.705,551,0.705,553,0.705,555,0.705,557,0.725,559,0.725,561,0.725,563,0.705,565,0.725,567,1.07,568,0.705,571,0.705,573,0.705,575,0.705,577,0.705,579,0.705,581,0.705,583,0.705,585,0.705,587,0.705,589,0.705,591,0.705,593,0.705,595,0.705,597,0.705,600,1.343,601,2.03,605,4.442,618,0.705,620,1.648,622,1.514,624,1.913,625,1.514,626,2.03,627,2.03,629,1.813,630,1.913,631,1.913,633,1.913,634,2.03,662,0.478,686,2.297,692,3.08,757,6.512,768,3.115,806,2.297,842,2.582,922,2.582,927,3.246,931,1.014,936,2.582,977,2.582,978,2.346,979,2.582,1020,1.913,1021,3.56,1022,3.56,1044,2.171,1085,2.171,1086,3.56,1087,3.56,1127,2.171,1164,2.582,1208,2.582,1216,1.514,1228,5.215,1344,1.648,1345,3.915,1372,4.209,1381,1.813,1403,1.813,1407,1.725,1424,2.171,1425,3.979,1432,1.913,1450,1.577,1579,1.813,1580,3.56,1586,1.913,1606,2.582,1607,2.346,1608,2.582,1628,5.434,2184,2.346,2191,4.302,2215,1.813,2218,2.03,2242,1.648,2317,2.051,2326,2.582,2327,2.582,2351,3.56,2385,1.514,2493,3.918,2494,3.918,2513,2.582,2535,4.302,2536,3.979,2537,4.302,2538,2.346,2545,2.346,2553,2.582,2587,2.582,2588,2.346,2589,2.582,2594,2.582,2595,2.582,2598,2.346,2599,5.681,2600,5.162,2607,2.346,2627,1.813,2632,2.582,2635,2.346,2730,3.722,2734,2.751,2741,3.56,2744,3.293,2748,2.5,2756,2.03,2760,4.442,2771,2.171,2775,4.775,2776,4.302,2783,5.162,2794,2.171,3113,3.56,3114,3.293,3115,3.979,3153,3.56,3154,3.293,3155,3.56,3186,2.171,3195,1.913,3227,3.56,3229,1.913,3275,2.582,3328,2.346,3329,3.918,3330,3.56,3331,4.442,3468,2.171,3469,5.284,3488,2.171,3489,2.582,3490,2.582,3500,2.582,3525,3.56,3526,2.346,3527,2.582,3546,2.346,3547,2.582,3563,4.302,3589,2.171,3594,2.171,3630,2.346,3680,3.918,3743,2.582,3777,4.802,3778,2.346,3779,2.582,3781,2.346,3836,4.702,3837,2.346,3838,2.582,3876,4.775,3931,2.171,3933,2.582,3960,2.582,3988,2.582,3989,2.582,4027,2.171,4028,3.56,4029,3.293,4050,2.582,4051,2.582,4060,2.346,4110,4.466,4113,2.346,4128,3.56,4135,4.302,4137,2.582,4143,2.582,4144,2.582,4150,2.582,4177,2.582,4255,2.582,4287,2.582,4294,3.918,4295,2.582,4300,3.918,4301,3.918,4302,2.582,4306,3.918,4307,3.918,4308,2.582,4313,3.918,4314,3.918,4315,2.582,4317,4.302,4318,4.302,4319,2.346,4326,2.346,4348,4.734,4355,2.582,4370,4.302,4371,2.346,4383,2.346,4385,3.918,4386,3.918,4387,2.582,4390,3.918,4391,3.918,4392,2.582,4396,3.918,4397,3.918,4398,2.582,4400,2.582,4476,2.582,4477,2.346,4499,3.918,4500,3.918,4554,2.582,4565,1.913,4572,2.582,4586,2.582,4613,2.582,4712,2.582,5003,2.582,5004,2.939,5005,6.016,5006,2.582,5007,2.939,5008,2.939,5009,2.939,5010,7.462,5011,4.46,5012,2.939,5013,2.939,5014,4.46,5015,2.939,5016,2.939,5017,2.939,5018,2.939,5019,8.899,5020,2.939,5021,5.389,5022,6.016,5023,6.016,5024,2.939,5025,8.013,5026,7.074,5027,2.939,5028,6.808,5029,2.939,5030,2.939,5031,4.46,5032,2.939,5033,2.939,5034,2.939,5035,2.939,5036,2.939,5037,2.939,5038,4.46,5039,4.46,5040,2.939,5041,2.939,5042,2.939,5043,2.939,5044,2.939,5045,2.939,5046,4.46,5047,2.939,5048,2.939,5049,2.939,5050,2.939,5051,2.939,5052,2.939,5053,2.939,5054,2.939,5055,2.939,5056,4.46,5057,2.939,5058,2.939,5059,2.939,5060,2.939,5061,2.939,5062,2.939,5063,2.939,5064,2.939,5065,2.939,5066,2.939,5067,2.939,5068,2.939,5069,2.939,5070,4.734,5071,4.734,5072,2.582,5073,2.171,5074,3.918,5075,2.582,5076,3.918,5077,7.207,5078,2.939,5079,2.939,5080,4.46,5081,2.939,5082,2.939,5083,2.939,5084,2.939,5085,2.939,5086,2.939,5087,2.939,5088,2.939,5089,2.939,5090,2.939,5091,2.939,5092,2.939,5093,5.98,5094,2.582,5095,2.582,5096,2.582,5097,2.582,5098,2.582,5099,2.582,5100,4.734,5101,4.734,5102,2.582,5103,2.582,5104,6.683,5105,6.467,5106,2.939,5107,2.939,5108,2.939,5109,5.681,5110,2.582,5111,2.582,5112,2.582,5113,2.582,5114,2.582,5115,4.46,5116,2.939,5117,2.939,5118,2.939]],["title/dependencies.html",[925,2.118,926,2.569]],["body/dependencies.html",[26,0.011,84,0.513,85,1.139,86,3.309,102,0.008,103,0.009,104,0.008,166,3.063,300,2.756,311,3.963,378,3.309,422,4.675,491,3.309,492,3.614,514,1.673,724,3.181,926,3.181,927,3.063,935,3.601,1041,4.744,1079,6.657,1084,5.129,1346,3.963,2607,5.129,2608,5.597,2634,5.129,2635,5.129,2638,5.643,4083,5.643,4536,5.643,4784,5.643,5119,6.425,5120,8.811,5121,6.425,5122,6.425,5123,6.425,5124,6.425,5125,6.425,5126,6.425,5127,6.425,5128,5.643,5129,6.425,5130,6.425,5131,6.425,5132,6.425,5133,6.425,5134,6.425,5135,6.425]],["title/miscellaneous/enumerations.html",[5136,2.664,5137,4.558]],["body/miscellaneous/enumerations.html",[3,0.262,8,0.258,26,0.011,43,1.096,44,1.167,102,0.008,103,0.009,104,0.008,148,1.198,274,3.185,346,5.135,349,5.135,685,2.958,686,3.313,687,4.186,1107,2.76,1345,4.186,1359,4.678,1373,4.442,1374,4.442,1375,4.442,1376,4.442,1377,4.186,1378,4.442,1379,4.442,1380,4.442,1425,4.75,1434,5.135,1531,6.054,1950,5.65,2351,5.135,2364,6.662,2384,6.662,2730,4.442,2734,3.967,2738,5.135,2741,5.135,5006,5.65,5136,4.75,5137,5.65,5138,7.584,5139,6.432,5140,6.432,5141,6.432,5142,6.432,5143,6.432,5144,6.432,5145,6.432,5146,6.432,5147,6.432,5148,6.432,5149,6.432,5150,6.432]],["title/miscellaneous/functions.html",[4424,3.832,5136,2.664]],["body/miscellaneous/functions.html",[5,0.154,8,0.18,25,1.279,26,0.011,27,0.651,28,0.343,29,0.828,30,1.357,50,1.075,57,1.003,71,0.385,79,2.764,81,2.512,82,0.167,102,0.005,103,0.007,104,0.005,133,3.095,135,3.722,138,1.691,151,1.922,161,3.722,164,3.029,182,2.219,235,0.708,239,1.267,240,2.512,241,2.512,275,4.168,278,4.7,294,3.309,336,1.922,346,5.828,469,2.255,663,2.63,685,2.06,709,2.308,746,2.376,760,1.64,764,2.63,811,2.63,844,3.095,925,3.542,1199,2.209,1488,2.916,1628,3.577,1630,3.936,2184,4.817,2359,4.503,2426,4.456,2535,3.577,2536,3.309,2537,5.447,2538,4.817,2539,5.994,2543,3.379,2545,4.817,2736,5.301,2853,4.817,2918,3.577,3143,2.916,3259,3.577,3364,3.309,3744,3.309,3836,3.095,3876,3.309,3906,3.577,3931,4.456,4022,3.095,4110,3.095,4223,3.936,4317,3.577,4318,5.447,4319,4.817,4320,6.413,4321,5.447,4326,4.817,4370,5.447,4371,4.817,4372,5.994,4376,3.936,4383,4.817,4424,3.309,4897,5.039,4965,5.301,4988,3.936,5070,3.936,5071,3.936,5072,5.301,5073,4.456,5074,3.936,5075,5.301,5076,6.413,5077,5.301,5093,3.936,5094,5.301,5095,5.994,5096,5.301,5097,5.301,5098,5.301,5099,5.301,5100,3.936,5101,6.413,5102,5.301,5103,5.301,5104,3.936,5109,3.936,5110,5.301,5111,5.301,5112,5.301,5113,5.301,5114,5.301,5136,3.309,5151,8.488,5152,6.824,5153,6.035,5154,7.301,5155,4.481,5156,4.481,5157,6.035,5158,4.481,5159,6.035,5160,4.481,5161,8.157,5162,4.481,5163,4.481,5164,4.481,5165,4.481,5166,4.481,5167,4.481,5168,4.481,5169,4.481,5170,4.481,5171,7.621,5172,4.481,5173,6.035,5174,6.035,5175,8.022,5176,4.481,5177,6.035,5178,6.035,5179,6.035,5180,4.481,5181,4.481,5182,4.481,5183,4.481,5184,4.481,5185,4.481,5186,4.481,5187,3.936,5188,6.035,5189,4.481,5190,7.301,5191,4.481,5192,4.481,5193,4.481,5194,4.481,5195,4.481,5196,4.481,5197,4.481,5198,3.936,5199,4.481,5200,4.481,5201,4.481,5202,4.481,5203,6.035]],["title/index.html",[8,0.145,4521,2.022,4522,2.022]],["body/index.html",[26,0.011,82,0.237,102,0.008,103,0.009,104,0.008,134,2.402,145,4.143,202,3.737,203,3.568,210,3.278,217,1.903,235,1.312,240,4.501,241,3.568,269,1.528,390,4.701,407,1.453,704,4.143,924,4.045,938,4.701,1057,4.396,1070,4.396,1609,5.566,2360,4.649,2555,3.926,2627,3.926,2668,4.396,2735,5.082,2921,4.701,3356,6.621,3567,5.082,3665,5.082,4046,4.906,4335,5.592,4421,5.592,4521,3.568,4522,3.568,4565,5.404,4721,6.621,4864,5.592,4918,4.701,4995,5.592,5204,6.366,5205,6.366,5206,6.366,5207,7.538,5208,7.538,5209,6.366,5210,6.366,5211,6.366,5212,7.538,5213,6.366,5214,6.366,5215,6.366,5216,6.366,5217,6.366,5218,6.366,5219,6.366,5220,6.366,5221,6.366]],["title/license.html",[4521,2.022,4522,2.022,5073,2.664]],["body/license.html",[5,0.14,26,0.01,50,1.592,102,0.008,103,0.009,104,0.008,213,3.049,239,1.875,383,3.284,625,3.415,650,3.717,805,4.897,811,3.893,1484,4.897,1706,4.58,2359,4.09,2988,5.317,3486,4.897,3868,4.897,5073,6.46,5187,5.825,5222,6.632,5223,6.632,5224,6.632,5225,6.632,5226,6.632,5227,6.632,5228,6.632,5229,6.632,5230,6.632,5231,6.632,5232,5.825,5233,6.632,5234,7.721,5235,6.632,5236,6.632,5237,6.632,5238,6.632,5239,6.632,5240,6.632,5241,6.632,5242,6.632,5243,6.632,5244,6.632]],["title/modules.html",[1056,3.629]],["body/modules.html",[26,0.009,102,0.008,103,0.009,104,0.008,422,4.895,1055,4.527,1056,4.29,2719,6.971,4046,4.527,4569,6.971,5245,7.937]],["title/overview.html",[5246,5.168]],["body/overview.html",[2,1.666,26,0.011,102,0.005,103,0.007,104,0.005,198,2.279,201,2.395,217,1.161,246,1.803,380,1.803,407,0.749,466,1.903,492,1.851,493,0.984,499,1.754,501,1.852,503,1.852,505,1.903,507,1.903,509,1.903,511,1.903,513,1.903,516,1.903,518,1.803,520,1.903,523,1.852,525,1.903,527,1.852,529,1.903,531,1.903,532,1.803,535,1.852,537,1.903,539,1.903,541,1.803,543,1.903,545,1.903,548,1.852,551,1.852,553,1.852,555,1.852,557,1.903,559,1.903,561,1.903,563,1.852,565,1.903,568,1.852,570,0.669,571,1.852,573,1.852,575,1.852,577,1.852,579,1.852,581,1.852,583,1.852,585,1.852,587,1.852,589,1.852,591,1.852,593,1.852,595,1.852,597,1.852,602,1.421,685,1.785,760,1.421,926,1.922,1020,4.119,1054,2.279,1055,5.023,1056,2.395,1057,2.681,1058,3.099,1059,3.41,1060,3.41,1061,3.41,1062,3.41,1063,4.365,1064,2.867,1107,1.666,2738,3.099,2760,2.867,2776,3.099,2794,2.867,4046,5.958,4047,3.41,4048,3.41,4049,3.41,5246,3.41,5247,3.883]],["title/todo.html",[34,1.141,4521,2.022,4522,2.022]],["body/todo.html",[11,1.325,26,0.011,30,1.297,34,2.655,43,0.889,45,1.154,50,1.477,68,3.449,102,0.007,103,0.009,104,0.007,138,2.788,210,3.169,220,1.273,235,0.972,239,2.089,240,3.449,241,3.449,335,3.169,385,2.336,390,4.544,407,1.187,409,3.449,416,1.144,488,4.25,569,1.647,611,1.477,754,3.86,848,5.406,849,5.406,898,5.318,899,2.65,950,3.449,954,5.897,995,4.883,1171,2.732,1199,2.253,1200,5.406,1217,2.83,1486,4.544,1503,4.25,2343,5.455,2359,3.796,2437,4.544,2634,4.913,2642,3.612,3090,4.544,3133,4.913,3648,4.25,3983,4.913,4149,5.406,4477,4.913,4479,4.913,4803,5.406,5248,6.154,5249,6.154,5250,6.154,5251,6.154,5252,6.154,5253,6.154,5254,6.154,5255,6.154,5256,6.154,5257,6.154,5258,6.154,5259,6.154,5260,6.154,5261,6.154,5262,6.154,5263,6.154,5264,6.154,5265,6.154,5266,6.154]],["title/additional-documentation/getting-started.html",[64,0.614,4521,1.737,4522,1.737,4658,2.14]],["body/additional-documentation/getting-started.html",[0,0.031,2,3.606,5,0.109,13,0.596,15,3.153,26,0.011,40,4.883,68,2.886,77,3.023,82,0.323,87,0.252,102,0.006,103,0.008,104,0.006,105,4.095,107,3.275,111,3.545,112,3.176,114,3.557,132,3.176,134,1.943,138,1.943,151,2.209,174,0.913,196,2.069,198,3.882,202,3.882,203,3.707,204,1.676,212,5.279,215,1.725,217,1.977,235,1.395,239,1.456,240,4.934,241,4.321,274,2.55,297,3.803,309,2.368,352,3.023,354,2.005,360,2.137,365,4.524,373,2.286,379,2.368,381,4.524,384,3.176,385,1.629,396,2.652,407,1.537,416,0.744,514,1.341,602,2.421,620,2.886,622,3.762,644,2.652,646,1.203,650,3.707,662,0.838,674,3.803,688,2.286,704,3.352,709,2.652,843,3.549,884,3.803,940,3.275,952,3.023,964,4.111,982,4.524,1045,5.045,1054,3.882,1055,4.304,1057,4.567,1069,4.524,1070,5.324,1071,2.55,1091,2.764,1250,2.286,1277,1.943,1344,2.886,1359,3.176,1407,3.023,1457,3.176,1488,3.352,1503,3.557,1618,3.352,2360,3.176,2365,5.279,2477,4.111,2555,3.176,2646,4.111,2685,4.111,2988,4.304,3143,3.352,3229,4.304,3282,4.567,3346,4.111,3529,4.524,3534,3.803,3541,4.111,3712,3.352,4046,5.017,4420,4.524,4521,2.886,4522,2.886,4565,3.352,4744,4.524,4775,4.111,4809,5.809,4810,6.771,4811,4.524,4812,4.524,4825,4.111,4886,6.771,4906,5.809,4934,6.417,5267,5.15,5268,4.524,5269,4.524,5270,7.973,5271,5.15,5272,5.15,5273,5.15,5274,5.15,5275,5.15,5276,5.15,5277,5.15,5278,5.15,5279,5.15,5280,5.15,5281,5.15,5282,5.15,5283,5.15,5284,5.15,5285,5.15,5286,5.15,5287,5.15,5288,5.15,5289,4.111,5290,5.15,5291,5.15,5292,4.524,5293,5.15,5294,6.614,5295,5.15,5296,5.15]],["title/additional-documentation/local-development.html",[64,0.614,2544,2.017,3712,2.017,4658,2.14]],["body/additional-documentation/local-development.html",[26,0.01,102,0.008,103,0.01,104,0.008,407,1.351,2544,4.561,3712,4.561,4938,5.505]],["title/additional-documentation/local-development/schematics.html",[64,0.715,4658,2.492,4938,2.492]],["body/additional-documentation/local-development/schematics.html",[5,0.106,26,0.01,27,0.529,36,1.834,50,1.202,64,0.993,67,3.46,68,3.642,73,3.46,79,3.09,90,0.939,102,0.006,103,0.008,104,0.006,138,2.879,151,3.094,188,2.993,202,3.814,215,1.678,235,1.303,239,2.039,240,4.81,241,2.808,244,3.46,274,2.481,276,2.941,311,4.007,313,0.274,318,5.634,335,3.346,336,3.273,337,3.098,384,3.09,385,2.055,387,4,405,2.15,407,1.253,410,3.261,483,3.09,615,1.95,640,3.217,645,2.079,662,1.286,688,2.884,709,3.714,719,2.15,758,3.46,843,2.689,844,4.98,899,1.54,924,4.572,926,2.481,940,2.481,948,4.401,949,3.46,950,4.276,1056,4.007,1075,4.401,1250,2.224,1472,3.09,1499,3.09,1539,3.46,1609,3.7,1618,3.261,2212,4.487,2229,2.941,2245,5.155,2246,3.7,2247,4,2307,4.007,2359,4.007,2360,3.09,2469,4,2478,3.46,2554,3.7,2555,3.09,2642,2.941,2777,4.401,2792,3.7,2826,5.324,2892,4,2921,3.7,2955,4,3020,4.401,3142,4.401,3370,4.401,3534,4.798,3632,4.966,4002,3.46,4351,4.401,4352,4.401,4366,5.707,4525,4.401,4581,5.187,4603,4,4711,4.401,4741,4,4791,4,4817,4.401,4824,5.707,4894,4,4897,5.634,4905,4.401,4912,5.756,4917,6.334,4918,4.798,4921,4.401,4938,6.079,4939,6.943,4940,6.702,4942,4.401,4967,4.401,5128,5.707,5232,4.401,5269,4.401,5289,6.801,5292,4.401,5297,4.401,5298,4.401,5299,5.011,5300,5.011,5301,6.497,5302,4.401,5303,5.011,5304,5.011,5305,5.011,5306,7.63,5307,6.497,5308,5.011,5309,5.011,5310,5.011,5311,5.011,5312,5.011,5313,5.011,5314,5.011,5315,5.011,5316,4.401,5317,5.707,5318,5.011,5319,5.011,5320,5.011,5321,6.497,5322,5.011,5323,5.011,5324,5.011,5325,5.011,5326,5.011,5327,5.011,5328,5.011,5329,5.011,5330,5.011,5331,5.011,5332,5.011,5333,5.011,5334,5.011,5335,5.011,5336,5.011,5337,5.011,5338,5.011,5339,5.011,5340,5.011,5341,5.011,5342,5.011,5343,5.011,5344,5.011,5345,5.011,5346,5.011,5347,5.011,5348,5.011,5349,5.011,5350,5.011,5351,5.011,5352,5.011,5353,5.011,5354,5.011,5355,5.011,5356,5.011,5357,5.011,5358,5.011,5359,5.011,5360,4.401,5361,4.401]],["title/additional-documentation/local-development/components.html",[64,0.715,407,0.696,4658,2.492]],["body/additional-documentation/local-development/components.html",[5,0.107,19,4.823,23,0.404,26,0.01,27,0.479,47,2.501,50,1.212,67,3.489,68,4.442,79,3.116,82,0.244,90,0.947,102,0.006,103,0.008,104,0.006,134,1.906,138,2.991,151,2.802,163,2.543,202,4.249,205,4.437,210,2.602,211,4.032,213,3.003,215,1.692,235,1.388,239,1.428,240,4.844,241,4.742,274,2.501,276,2.965,290,4.032,311,4.029,312,4.437,313,0.276,318,5.651,335,2.602,338,5.214,339,4.823,345,3.73,357,4.437,360,3.289,364,2.831,373,2.9,379,2.323,388,4.823,399,4.437,405,2.167,407,1.259,611,1.568,640,2.501,657,1.315,662,0.822,670,2.965,685,3.003,688,2.242,709,4.081,748,2.831,843,3.505,844,5.782,887,4.437,905,2.831,924,4.54,925,2.965,926,2.501,938,3.73,940,2.501,942,3.288,1056,3.116,1108,3.489,1250,2.242,1485,3.73,1488,3.288,2245,4.465,2360,5.4,2402,5.214,2544,4.981,2596,5.214,2608,3.73,2679,4.032,2826,3.73,2852,3.73,2988,3.288,3280,5.214,3364,3.73,3534,3.73,3632,5.377,3712,4.711,3715,4.437,4145,5.737,4354,5.737,4565,3.288,4581,4.032,4603,5.214,4741,4.032,4775,4.032,4791,4.032,4795,4.437,4825,4.032,4879,4.437,4882,5.737,4889,4.437,4897,5.651,4912,5.214,4914,4.437,4918,4.823,4938,5.892,4953,4.437,5198,4.437,5268,4.437,5289,6.811,5297,4.437,5298,5.737,5302,4.437,5316,5.737,5317,5.737,5360,4.437,5361,4.437,5362,5.052,5363,5.052,5364,5.052,5365,5.052,5366,6.532,5367,6.532,5368,5.052,5369,5.052,5370,5.052,5371,5.052,5372,5.052,5373,5.052,5374,5.052,5375,5.052,5376,5.052,5377,6.532,5378,6.532,5379,7.239,5380,6.532,5381,5.052,5382,7.239,5383,5.052,5384,5.052,5385,5.052,5386,5.052,5387,5.052,5388,5.052,5389,5.052,5390,5.052,5391,5.052,5392,5.052,5393,5.052,5394,5.052,5395,5.052,5396,5.052,5397,5.052]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["0.0.17",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":5125,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":5135,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":2883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":5019,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5045,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5010,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5026,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5028,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5005,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5014,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5058,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5013,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":5033,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4921,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4711,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["0699178",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["0ed3875",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1107,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1',space,'(',number,number,number,')',space,number,number,number",{"_index":3821,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["1.0.0",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":4784,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":5025,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5036,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5057,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":5015,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5030,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":5056,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":5039,"title":{},"body":{"coverage.html":{}}}],["1/25",{"_index":5018,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":5024,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":5042,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5023,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5038,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5063,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5011,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5046,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5021,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5016,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2317,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["10.256s",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":5029,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1228,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1024",{"_index":2973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":2991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["10^10",{"_index":3612,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["10th",{"_index":4342,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["11",{"_index":2756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["111",{"_index":3754,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["1111",{"_index":3753,"title":{},"body":{"components/PhnComponent.html":{}}}],["12",{"_index":2760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["126d876",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["1303722",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"overview.html":{}}}],["15",{"_index":2780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["150",{"_index":4511,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["151f173",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1650a23",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["16da113",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["18",{"_index":2794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["180",{"_index":4279,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2459,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["19/23",{"_index":5009,"title":{},"body":{"coverage.html":{}}}],["1].iscomplete",{"_index":1155,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":3850,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["1c51f01",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":685,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":5225,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3533,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.1",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["2.0.550",{"_index":5132,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":5229,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["2.1.4",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["2.10.0",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["2.11.0",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["2.12.0",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["2.13.0",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["2.14.0",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["2.15.0",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["2.16.0",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["2.16.2",{"_index":5123,"title":{},"body":{"dependencies.html":{}}}],["2.17.0",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["2.17.1",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["2.18.0",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["2.18.1",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["2.19.0",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["2.20.0",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["2.20.1",{"_index":4536,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.21.0",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["2.24.0",{"_index":5130,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["2.5.2",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":5129,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["2.7.0",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["2.7.1",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["2.8.0",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["2.9.0",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["2/12",{"_index":5047,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":5031,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":5035,"title":{},"body":{"coverage.html":{}}}],["2/24",{"_index":5043,"title":{},"body":{"coverage.html":{}}}],["2/28",{"_index":5041,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5053,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5069,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":5034,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4586,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":5223,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4525,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2461,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["22",{"_index":4613,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22710b7",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4572,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25",{"_index":692,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":693,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":2566,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["26",{"_index":4554,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26(a",{"_index":3375,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":3006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["27b488b",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4712,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["29",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["29c5160",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["29e521c",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["2a511e7",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["2c0b127",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["2c2f322",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":686,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":5249,"title":{},"body":{"todo.html":{}}}],["3.2.0",{"_index":5131,"title":{},"body":{"dependencies.html":{}}}],["3/21",{"_index":5017,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":5007,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5055,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":5060,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2851,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["300",{"_index":4275,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":2250,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"changelog.html":{}}}],["32",{"_index":3594,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["33",{"_index":5022,"title":{},"body":{"coverage.html":{}}}],["3300",{"_index":3009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["35",{"_index":5050,"title":{},"body":{"coverage.html":{}}}],["355945207",{"_index":3636,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":5247,"title":{},"body":{"overview.html":{}}}],["36476f8",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":5066,"title":{},"body":{"coverage.html":{}}}],["3868c50",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["3a06f99",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["3a5677b",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["3f1149e",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2730,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"guards/RouteGuardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":5127,"title":{},"body":{"dependencies.html":{}}}],["4/14",{"_index":5065,"title":{},"body":{"coverage.html":{}}}],["4/25",{"_index":5040,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":5037,"title":{},"body":{"coverage.html":{}}}],["4/33",{"_index":5044,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2457,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["4/8",{"_index":5062,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5068,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":149,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["41f5609",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":5059,"title":{},"body":{"coverage.html":{}}}],["4295b03",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["4766a2b",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["483b735",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["496c252",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["4d39002",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["4f3e59f",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["4f8f2e7",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2734,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5/10",{"_index":5061,"title":{},"body":{"coverage.html":{}}}],["5/14",{"_index":5051,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["5069fe8",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["51bfe3b",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":3824,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5555",{"_index":3825,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5910979",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["5965aec",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["5a7c37b",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["5b18c5f",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["5b88093",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["5bb54fc",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["5d8f61d",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":2738,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.4.0",{"_index":5133,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":5209,"title":{},"body":{"index.html":{}}}],["6/36",{"_index":5020,"title":{},"body":{"coverage.html":{}}}],["60befc2",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["6242bea",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["6427f10",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":5052,"title":{},"body":{"coverage.html":{}}}],["66e58e7",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["66f9608",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["67b6f78",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["6f093d2",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":5120,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":5064,"title":{},"body":{"coverage.html":{}}}],["7/26",{"_index":5027,"title":{},"body":{"coverage.html":{}}}],["7226b37",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["7398e93",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["7400a64",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":5054,"title":{},"body":{"coverage.html":{}}}],["7c99c1e",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["7d274e8",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["7d2e7cd",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["8.9.4",{"_index":5206,"title":{},"body":{"index.html":{}}}],["8/21",{"_index":5067,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":5049,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["82",{"_index":5008,"title":{},"body":{"coverage.html":{}}}],["8361a0e",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["8380850",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["83d31d",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["85eab15",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["867f969",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["88",{"_index":5048,"title":{},"body":{"coverage.html":{}}}],["8a22405",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["8f6886f",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{},"components/StreetComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["9.0.0",{"_index":5126,"title":{},"body":{"dependencies.html":{}}}],["9/37",{"_index":5032,"title":{},"body":{"coverage.html":{}}}],["9/48",{"_index":5012,"title":{},"body":{"coverage.html":{}}}],["901885e",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["96a58b1",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["978250b",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["9855d9c",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["996cad7",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["9])[a",{"_index":4382,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["9][a",{"_index":4379,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["9]{1}\\\\d{2",{"_index":3812,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["9a38474",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["9dc5375",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["9f5a04e",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":695,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_applicationheadermap",{"_index":3417,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_bypassguards",{"_index":1092,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_context",{"_index":5161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_continue",{"_index":4006,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":4008,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_headers",{"_index":112,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_log",{"_index":1543,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_log(message",{"_index":1466,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_logerror",{"_index":1544,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_logerror(errormessage",{"_index":1469,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_name",{"_index":3727,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":3728,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":425,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":694,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_only_",{"_index":4435,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":696,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_options",{"_index":5188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_sendlog",{"_index":1545,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_sendlog(message",{"_index":1490,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_starturl",{"_index":1093,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_value",{"_index":3955,"title":{},"body":{"components/RadioComponent.html":{}}}],["a11y",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["a1a",{"_index":3849,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a27faa9",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["a512eb0",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["a702d6d",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["aa",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["aad93b5",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1299,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ability",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["abiltiy",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["abort",{"_index":2759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3534,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":15,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractcontrol",{"_index":2541,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["abstractform",{"_index":1,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstracthttpservice",{"_index":105,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:11",{"_index":1569,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:16",{"_index":1568,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:22",{"_index":1563,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:30",{"_index":1565,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:38",{"_index":1566,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:59",{"_index":1564,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstractpgcheckservice",{"_index":197,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":3994,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstracttestpage",{"_index":230,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":1660,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["ac9d61c",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":3019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":2724,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["accepting",{"_index":4518,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["access",{"_index":40,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":767,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["accessibility",{"_index":4482,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["accessible",{"_index":2439,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":117,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["accidentally",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["accomplish",{"_index":4519,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["accordion",{"_index":475,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":498,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":479,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":477,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":466,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":471,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":4100,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":4142,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["account",{"_index":3950,"title":{},"body":{"components/RadioComponent.html":{}}}],["accusamus",{"_index":1300,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aceb028",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["acl",{"_index":3466,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3381,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":52,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":4012,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["activeindex",{"_index":4404,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2477,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":599,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":5220,"title":{},"body":{"index.html":{}}}],["add",{"_index":188,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":1384,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["adding",{"_index":1618,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["additional",{"_index":4658,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"changelog.html":{}}}],["additionaldocumentation",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["addline(line",{"_index":745,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addpackagejsonscript",{"_index":5110,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagejsonscript(tree",{"_index":5158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addpackagetopackagejson",{"_index":5102,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagetopackagejson(host",{"_index":5172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addr",{"_index":674,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/getting-started.html":{}}}],["address",{"_index":622,"title":{"classes/Address.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":500,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":5290,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address(val",{"_index":658,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.addressline2",{"_index":672,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.html",{"_index":638,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.scss",{"_index":639,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.model.ts",{"_index":5258,"title":{},"body":{"todo.html":{}}}],["address1",{"_index":606,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["address2",{"_index":607,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address3",{"_index":608,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address_url",{"_index":3232,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":661,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addresscomponent",{"_index":499,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":809,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline${line",{"_index":762,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline1",{"_index":846,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["addressline2",{"_index":710,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline3",{"_index":847,"title":{},"body":{"classes/Address.html":{}}}],["addressmodel",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["addresss",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["addrlabellist",{"_index":601,"title":{"interfaces/AddrLabelList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["addrlabels",{"_index":680,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addrlookup",{"_index":761,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["adds",{"_index":663,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["addtag",{"_index":2516,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2517,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1267,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3385,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":943,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["af91989",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["affect",{"_index":4979,"title":{},"body":{"contributing.html":{}}}],["afg",{"_index":1634,"title":{},"body":{"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":1635,"title":{},"body":{"interfaces/CountryList.html":{}}}],["africa",{"_index":2090,"title":{},"body":{"interfaces/CountryList.html":{}}}],["african",{"_index":1731,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2601,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":2604,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["again",{"_index":2246,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["against",{"_index":4330,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{}}}],["age",{"_index":3696,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":1647,"title":{},"body":{"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3423,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":249,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":5231,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3406,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":289,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":1649,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aka",{"_index":3347,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":1636,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alb",{"_index":1639,"title":{},"body":{"interfaces/CountryList.html":{}}}],["albania",{"_index":1640,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alberta",{"_index":3907,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":1642,"title":{},"body":{"interfaces/CountryList.html":{}}}],["algorithm",{"_index":2785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1325,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allmembers",{"_index":3951,"title":{},"body":{"components/RadioComponent.html":{}}}],["allow",{"_index":1541,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["allowed",{"_index":2994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["allowemptyvalue",{"_index":4320,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"miscellaneous/functions.html":{}}}],["allowextralines",{"_index":673,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["allowing",{"_index":1120,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["alone",{"_index":3405,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":126,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1457,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1376,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":172,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["american",{"_index":1644,"title":{},"body":{"interfaces/CountryList.html":{}}}],["amet",{"_index":1265,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ampersand",{"_index":4218,"title":{},"body":{"components/StreetComponent.html":{}}}],["amultiples",{"_index":2963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":2975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["and/or",{"_index":3866,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["andorra",{"_index":1646,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angola",{"_index":1648,"title":{},"body":{"interfaces/CountryList.html":{}}}],["anguilla",{"_index":1650,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angular",{"_index":68,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1521,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{},"contributing.html":{}}}],["angular.json",{"_index":5360,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":5119,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1084,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":165,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":5121,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":85,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1041,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1079,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":86,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":935,"title":{},"body":{"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2705,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1312,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":63,"title":{},"body":{"classes/AbstractForm.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["answer",{"_index":1036,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":1019,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":1652,"title":{},"body":{"interfaces/CountryList.html":{}}}],["antigua",{"_index":1654,"title":{},"body":{"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":3073,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2694,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1369,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["anywhere",{"_index":5312,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":5187,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["aperiam",{"_index":1288,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":107,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":1031,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apiservice",{"_index":5286,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apostrophe",{"_index":3199,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/StreetComponent.html":{}}}],["apostrophes",{"_index":1256,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["app",{"_index":3334,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["app.component.ts",{"_index":5163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appcomponentcss",{"_index":5081,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":5082,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2650,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":2596,"title":{},"body":{"interfaces/ErrorMessage.html":{},"contributing.html":{},"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":283,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2453,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["applicable",{"_index":805,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["applicant",{"_index":1121,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":1124,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":360,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":205,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3371,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2629,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1436,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["applications",{"_index":902,"title":{},"body":{"classes/Address.html":{},"components/PhoneNumberComponent.html":{}}}],["appropriate",{"_index":758,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":2962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["april",{"_index":2263,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["arab",{"_index":2115,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arabia",{"_index":2065,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arbitrarily",{"_index":4993,"title":{},"body":{"contributing.html":{}}}],["architecto",{"_index":1274,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1533,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["arg",{"_index":1656,"title":{},"body":{"interfaces/CountryList.html":{}}}],["argentina",{"_index":1657,"title":{},"body":{"interfaces/CountryList.html":{}}}],["args",{"_index":3047,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":2790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2332,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":3674,"title":{},"body":{"components/PasswordComponent.html":{},"changelog.html":{}}}],["arm",{"_index":1658,"title":{},"body":{"interfaces/CountryList.html":{}}}],["armenia",{"_index":1659,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aroud",{"_index":3287,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":3159,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["array",{"_index":2664,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{},"components/StreetComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["array(0",{"_index":2665,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["artifacts",{"_index":5382,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":1661,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ascension",{"_index":2037,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ask",{"_index":5219,"title":{},"body":{"index.html":{}}}],["asm",{"_index":1643,"title":{},"body":{"interfaces/CountryList.html":{}}}],["assets",{"_index":5354,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3299,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assistance",{"_index":3387,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":332,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["association",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["assuming",{"_index":5390,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":5267,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":259,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ata",{"_index":1651,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atf",{"_index":1809,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atg",{"_index":1653,"title":{},"body":{"interfaces/CountryList.html":{}}}],["attachmentorder",{"_index":1348,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attr",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":3672,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":397,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":3242,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":2266,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["aus",{"_index":1662,"title":{},"body":{"interfaces/CountryList.html":{}}}],["australia",{"_index":1663,"title":{},"body":{"interfaces/CountryList.html":{}}}],["austria",{"_index":1665,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aut",{"_index":1664,"title":{},"body":{"interfaces/CountryList.html":{}}}],["autem",{"_index":1294,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":644,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2518,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":77,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":2755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":363,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["awkward",{"_index":3631,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":1666,"title":{},"body":{"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":1667,"title":{},"body":{"interfaces/CountryList.html":{}}}],["b",{"_index":4148,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b555787",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["b901868",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3369,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backdrop",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1515,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3391,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["backward",{"_index":900,"title":{},"body":{"classes/Address.html":{}}}],["bad",{"_index":5280,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["baee5ad",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["bahamas",{"_index":1669,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bahrain",{"_index":1671,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":1673,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bar",{"_index":53,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":530,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":4055,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":3117,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":3116,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":3115,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":3125,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:12",{"_index":3122,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:13",{"_index":3124,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":3123,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":3121,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":3150,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3140,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3126,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3141,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3151,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":3127,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":4428,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4431,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":4425,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4411,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3139,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4416,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3152,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4415,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4412,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4414,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4417,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":3114,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":4060,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":1675,"title":{},"body":{"interfaces/CountryList.html":{}}}],["barbuda",{"_index":1655,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bars",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":2034,"title":{},"body":{"interfaces/CountryList.html":{}}}],["base",{"_index":618,"title":{"classes/Base.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["base.component",{"_index":2623,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2631,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":1087,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:10",{"_index":3545,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:101",{"_index":1105,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:105",{"_index":1116,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:26",{"_index":1128,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:28",{"_index":1126,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:29",{"_index":1101,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:33",{"_index":1130,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:37",{"_index":1132,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:41",{"_index":1102,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:45",{"_index":1103,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:50",{"_index":1117,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:57",{"_index":1123,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:72",{"_index":1119,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:82",{"_index":1112,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:93",{"_index":1109,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":5356,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":1197,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":3230,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2622,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":302,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["basic",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":5235,"title":{},"body":{"license.html":{}}}],["bc",{"_index":806,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bclogobase64",{"_index":5086,"title":{},"body":{"coverage.html":{}}}],["bdi",{"_index":1718,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beatae",{"_index":1318,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["become",{"_index":5266,"title":{},"body":{"todo.html":{}}}],["befc319",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2307,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":3194,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3350,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behavior",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{}}}],["behaviour",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["bein",{"_index":4991,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":1428,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":1678,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belarus",{"_index":1677,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belgium",{"_index":1679,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belize",{"_index":1681,"title":{},"body":{"interfaces/CountryList.html":{}}}],["below",{"_index":3346,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":1682,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beneficial",{"_index":3560,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["benefits",{"_index":3384,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":1683,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bermuda",{"_index":1685,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bes",{"_index":1690,"title":{},"body":{"interfaces/CountryList.html":{}}}],["best",{"_index":3283,"title":{},"body":{"components/HeaderComponent.html":{}}}],["better",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4493,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["bf3cf23",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":1715,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bg",{"_index":3668,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":1672,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bgr",{"_index":1713,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhr",{"_index":1670,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhs",{"_index":1668,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhutan",{"_index":1686,"title":{},"body":{"interfaces/CountryList.html":{}}}],["big",{"_index":3031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":1695,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bind",{"_index":1174,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2683,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":671,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["birth",{"_index":3697,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":3689,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":1840,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1303,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":719,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":2032,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blob",{"_index":2778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":2954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":3943,"title":{},"body":{"components/RadioComponent.html":{}}}],["blr",{"_index":1676,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blue",{"_index":3277,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2638,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["blurevent",{"_index":1219,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["blz",{"_index":1680,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bmu",{"_index":1684,"title":{},"body":{"interfaces/CountryList.html":{}}}],["body",{"_index":155,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1506,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["boilerplate",{"_index":3351,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":1687,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":2165,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivia",{"_index":1688,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bonaire",{"_index":1691,"title":{},"body":{"interfaces/CountryList.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["bootstrap",{"_index":492,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":4101,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":1696,"title":{},"body":{"interfaces/CountryList.html":{}}}],["both",{"_index":244,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":1699,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bottom",{"_index":371,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":5215,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":1701,"title":{},"body":{"interfaces/CountryList.html":{}}}],["box",{"_index":310,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/YearValidateDirective.html":{}}}],["bps",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":1703,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brackets",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["brazil",{"_index":1704,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brb",{"_index":1674,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bread",{"_index":1581,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1610,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":515,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":4053,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1625,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1624,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1608,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1626,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1627,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1607,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3367,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":898,"title":{},"body":{"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/RadioComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["breaks",{"_index":3494,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["british",{"_index":1706,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":630,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["brn",{"_index":1710,"title":{},"body":{"interfaces/CountryList.html":{}}}],["broken",{"_index":5365,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":3093,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":2719,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2654,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":2817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":422,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":446,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":429,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":368,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":426,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3365,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":1078,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":1711,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brunswick",{"_index":3910,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["btn",{"_index":975,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":961,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":2917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"contributing.html":{}}}],["buiding",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3632,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":5310,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["build_utils/commit",{"_index":5002,"title":{},"body":{"contributing.html":{}}}],["building",{"_index":5298,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":4603,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":5106,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3280,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":1714,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bullet",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["burkina",{"_index":1716,"title":{},"body":{"interfaces/CountryList.html":{}}}],["burundi",{"_index":1719,"title":{},"body":{"interfaces/CountryList.html":{}}}],["button",{"_index":56,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":502,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":4114,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":957,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":956,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4477,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{},"todo.html":{}}}],["button.component.ts:15",{"_index":4481,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4483,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4480,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:24",{"_index":4484,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":4485,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":4113,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":501,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":990,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":503,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":941,"title":{},"body":{"components/ButtonComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["buttontype",{"_index":959,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":1700,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bwa",{"_index":1698,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bypass",{"_index":1133,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bypassguards",{"_index":1100,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1400,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3376,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["c122a2a",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["c2fd959",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["c6067fd",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["c64c066",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["c78856a",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":1729,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":2145,"title":{},"body":{"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4407,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":3695,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":1976,"title":{},"body":{"interfaces/CountryList.html":{}}}],["calendarformat",{"_index":4375,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["call",{"_index":1499,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":3060,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":3048,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":2918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"miscellaneous/functions.html":{}}}],["caller",{"_index":2236,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["calling",{"_index":351,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3436,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":5351,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":1721,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cameroon",{"_index":1723,"title":{},"body":{"interfaces/CountryList.html":{}}}],["can't",{"_index":2682,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":3996,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":4011,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":3997,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":4016,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canada",{"_index":625,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":221,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":2807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":14,"title":{},"body":{"classes/AbstractForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["cannotopen",{"_index":1378,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1380,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2672,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":3069,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":2952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":1725,"title":{},"body":{"interfaces/CountryList.html":{}}}],["capitalize",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["captcha",{"_index":1045,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":506,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":1081,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":1052,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":5138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":505,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":1020,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":1055,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":3095,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2656,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":2819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1501,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4422,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":364,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1091,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"classes/MaskModel.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":4474,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":167,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/StreetComponent.html":{}}}],["catcherror(err",{"_index":4238,"title":{},"body":{"components/StreetComponent.html":{}}}],["categories",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":3022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":1728,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["cbbfaa8",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":1741,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cd",{"_index":2212,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["cdnformat",{"_index":4377,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["cdnformat.test",{"_index":4381,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["center",{"_index":1615,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":1730,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cf962bc",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["chaange",{"_index":4436,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":1734,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chain",{"_index":3496,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["chanfges",{"_index":5396,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":899,"title":{},"body":{"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["changedetection",{"_index":4402,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4433,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4403,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":2213,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4523,"title":{"changelog.html":{}},"body":{"changelog.html":{},"contributing.html":{}}}],["changelog.md",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":950,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.password",{"_index":3655,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":740,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['countrylist'].currentvalue",{"_index":741,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['images",{"_index":2710,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue",{"_index":2711,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2712,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2713,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2714,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":743,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['provincelist'].currentvalue",{"_index":744,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changing",{"_index":2490,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["character",{"_index":3200,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["characters",{"_index":1253,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["che",{"_index":2111,"title":{},"body":{"interfaces/CountryList.html":{}}}],["check",{"_index":309,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["check.directive",{"_index":4120,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["check.directive.ts",{"_index":2537,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["check.directive.ts:35",{"_index":2540,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.directive.ts:37",{"_index":2542,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.service",{"_index":1134,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":200,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:24",{"_index":225,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:25",{"_index":228,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":229,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":226,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check/duplicate",{"_index":2536,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":287,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":508,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":1166,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1165,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":5260,"title":{},"body":{"todo.html":{}}}],["checkboxcomponent",{"_index":507,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":1085,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":250,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkdigit",{"_index":4340,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["checkforduplicates",{"_index":2545,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkforduplicates(control",{"_index":5180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkimagedimensions(file",{"_index":3111,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2695,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":1135,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":294,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"miscellaneous/functions.html":{}}}],["checksum",{"_index":1402,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3352,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{}}}],["chile",{"_index":1736,"title":{},"body":{"interfaces/CountryList.html":{}}}],["china",{"_index":1738,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chl",{"_index":1735,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chn",{"_index":1737,"title":{},"body":{"interfaces/CountryList.html":{}}}],["choice",{"_index":412,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["chore",{"_index":4989,"title":{},"body":{"contributing.html":{}}}],["christmas",{"_index":1740,"title":{},"body":{"interfaces/CountryList.html":{}}}],["circle",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["city",{"_index":609,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateCityDirective.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":510,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":1210,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.scss",{"_index":1209,"title":{},"body":{"components/CityComponent.html":{}}}],["city.directive",{"_index":4126,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["city.directive.ts",{"_index":4301,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["city.directive.ts:26",{"_index":4303,"title":{},"body":{"directives/ValidateCityDirective.html":{}}}],["city/country/province",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":1225,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":509,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3261,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":1757,"title":{},"body":{"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":303,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":723,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["clearable",{"_index":2519,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2373,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleardate",{"_index":2367,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2443,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["clears",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":5328,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":488,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["click)=\"showfullsizeview",{"_index":4285,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":251,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":299,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":252,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":307,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":253,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4479,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["clicking",{"_index":271,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":254,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":316,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":60,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":255,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":150,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":5331,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3363,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SampleModalComponent.html":{}}}],["closemodal",{"_index":4034,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["closes",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":1059,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":1060,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":1061,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":1062,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":4047,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":4048,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":4049,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmr",{"_index":1722,"title":{},"body":{"interfaces/CountryList.html":{}}}],["coard",{"_index":5221,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":1742,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cod",{"_index":1750,"title":{},"body":{"interfaces/CountryList.html":{}}}],["code",{"_index":688,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":550,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":4079,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":3840,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":3839,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":3838,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:102",{"_index":3862,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:106",{"_index":3861,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":3845,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":3843,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":3848,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":3851,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":3847,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:20",{"_index":3842,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:21",{"_index":3844,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:24",{"_index":3852,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:30",{"_index":3872,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:35",{"_index":3854,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:36",{"_index":3853,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":3871,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:39",{"_index":3870,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:41",{"_index":3869,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:48",{"_index":3864,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:49",{"_index":3841,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:51",{"_index":3865,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:60",{"_index":3855,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:64",{"_index":3857,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:74",{"_index":3856,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:79",{"_index":3863,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:86",{"_index":3858,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:91",{"_index":3859,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:95",{"_index":3860,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":3837,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":4110,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cog",{"_index":1748,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cok",{"_index":1752,"title":{},"body":{"interfaces/CountryList.html":{}}}],["col",{"_index":1744,"title":{},"body":{"interfaces/CountryList.html":{}}}],["collected",{"_index":3372,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":290,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":1745,"title":{},"body":{"interfaces/CountryList.html":{}}}],["colons",{"_index":4984,"title":{},"body":{"contributing.html":{}}}],["color",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["colour",{"_index":954,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["colours",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":3868,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3535,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":1746,"title":{},"body":{"interfaces/CountryList.html":{}}}],["come",{"_index":3368,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":4912,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":3260,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":4699,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["commits",{"_index":4975,"title":{},"body":{"contributing.html":{}}}],["committed",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":4882,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":235,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commondatefieldformat",{"_index":2328,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":572,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commondayvalidation][ngmodel",{"_index":2497,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["commondayvalidation][ngmodel]'},{'name",{"_index":574,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatecheck",{"_index":2538,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonduplicatecheck(duplist",{"_index":5181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonduplicatecheck]'},{'name",{"_index":576,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatesin",{"_index":2551,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["commonformactionbar",{"_index":3531,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commonimage",{"_index":1344,"title":{"classes/CommonImage.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1359,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":2859,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":2864,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":3084,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":2856,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1381,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":3054,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":2905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":2996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1403,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1407,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":2830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogger",{"_index":1432,"title":{"injectables/CommonLogger.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1424,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1083,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonvalidatebcpostal",{"_index":4295,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":578,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatecity",{"_index":4302,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["commonvalidatecity]'},{'name",{"_index":580,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateemail",{"_index":4308,"title":{},"body":{"directives/ValidateEmailDirective.html":{},"coverage.html":{}}}],["commonvalidateemail]'},{'name",{"_index":582,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4315,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":584,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephn",{"_index":4319,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonvalidatephn(isbcphn",{"_index":5182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonvalidatephn]'},{'name",{"_index":586,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephone",{"_index":3781,"title":{},"body":{"components/PhoneNumberComponent.html":{},"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["commonvalidatephone(control",{"_index":4356,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["commonvalidatephone]'},{'name",{"_index":588,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatepostalcode",{"_index":4371,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonvalidatepostalcode(hasmask",{"_index":5184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonvalidatepostalcode]'},{'name",{"_index":590,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateregion",{"_index":4387,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["commonvalidateregion]'},{'name",{"_index":592,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatesin",{"_index":4392,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["commonvalidatesin]'},{'name",{"_index":594,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatestreet",{"_index":4398,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["commonvalidatestreet]'},{'name",{"_index":596,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonyearvalidate",{"_index":4501,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["commonyearvalidate][ngmodel",{"_index":598,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["comoros",{"_index":1747,"title":{},"body":{"interfaces/CountryList.html":{}}}],["compare",{"_index":4341,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["comparing",{"_index":4520,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["compat",{"_index":3025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compatibilty",{"_index":901,"title":{},"body":{"classes/Address.html":{}}}],["compatible",{"_index":4721,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":5336,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":4824,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":5307,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2692,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":5301,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":272,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["completed",{"_index":1115,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":1136,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1612,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":5226,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3319,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":313,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3424,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":497,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentlist",{"_index":4137,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":407,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":4102,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":4085,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":4090,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":4092,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":4093,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":4088,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/validate",{"_index":4125,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":4094,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":4052,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":4086,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":4068,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":4065,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/day",{"_index":4066,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/year",{"_index":4070,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":4072,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":4081,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/duplicate",{"_index":4119,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/email.component",{"_index":4132,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/validate",{"_index":4133,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/error",{"_index":4121,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":4074,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":4054,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":4107,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":4109,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":4146,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":4096,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":4103,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":4056,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":4058,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":4106,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/validate",{"_index":4117,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":4097,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":4078,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":4087,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":4099,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sample",{"_index":4131,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":4105,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/validate",{"_index":4115,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":4089,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/validate",{"_index":4123,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":4076,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":4084,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/validate",{"_index":4127,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":4059,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":4112,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":5350,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3358,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["computers",{"_index":5255,"title":{},"body":{"todo.html":{}}}],["concatenate",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["concatenates",{"_index":3708,"title":{},"body":{"classes/Person.html":{}}}],["conditions",{"_index":5237,"title":{},"body":{"license.html":{}}}],["config",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":5101,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configurable",{"_index":4352,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1616,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1498,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":1073,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configures",{"_index":5195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":5389,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":2548,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["conform",{"_index":4998,"title":{},"body":{"contributing.html":{}}}],["congo",{"_index":1749,"title":{},"body":{"interfaces/CountryList.html":{}}}],["connectivity",{"_index":1475,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["consectetur",{"_index":1266,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":295,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3396,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":511,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":877,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":944,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1486,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PageFrameworkComponent.html":{},"todo.html":{}}}],["console",{"_index":189,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('an",{"_index":1513,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error('geocoder",{"_index":3266,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3442,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1517,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3443,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1496,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log",{"_index":182,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DuplicateCheckDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["console.log(\"error",{"_index":3088,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":2810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":2867,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":2846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":2992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":2825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3441,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":193,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":2928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":3038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":3106,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1507,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log('scaled",{"_index":4282,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('setphonenumber",{"_index":3831,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["console.log('start",{"_index":2944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('taplog",{"_index":4237,"title":{},"body":{"components/StreetComponent.html":{}}}],["console.log('this",{"_index":3050,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2698,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":2978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":2940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":3079,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2701,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":3109,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(response",{"_index":3108,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3457,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":2869,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log({valid",{"_index":4369,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["const",{"_index":174,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":359,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["constructor(controldir",{"_index":1170,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["constructor(errorcode",{"_index":1414,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(form",{"_index":2211,"title":{},"body":{"components/DateComponent.html":{}}}],["constructor(http",{"_index":119,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":1026,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(message",{"_index":3491,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["constructor(private",{"_index":1047,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1395,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":21,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":4264,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1408,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":5395,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3389,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":1248,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["container",{"_index":1579,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/ErrorContainerComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":526,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["container.component",{"_index":4122,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["container.component.html",{"_index":2591,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.scss",{"_index":2590,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.ts",{"_index":2589,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:10",{"_index":2593,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.length",{"_index":4465,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container/error",{"_index":2588,"title":{},"body":{"components/ErrorContainerComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["container[0].scrollleft",{"_index":4471,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["contains",{"_index":3621,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["content",{"_index":278,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["contentchild",{"_index":2602,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2661,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3323,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1349,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":5116,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":16,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["continuebutton",{"_index":247,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contrast",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["contributing",{"_index":4757,"title":{"contributing.html":{}},"body":{"changelog.html":{},"contributing.html":{}}}],["contributing.md",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":1199,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["control.value",{"_index":2506,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["controlcontainer",{"_index":615,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":1167,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["controldir.valueaccessor",{"_index":1201,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["controlvalueaccessor",{"_index":616,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["conventional",{"_index":5262,"title":{},"body":{"todo.html":{}}}],["convert",{"_index":2229,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2368,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2411,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["converted",{"_index":735,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["convertroutetotitle",{"_index":1584,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1589,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1591,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2369,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2413,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cook",{"_index":1753,"title":{},"body":{"interfaces/CountryList.html":{}}}],["copied",{"_index":389,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copies",{"_index":5186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copy",{"_index":811,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["copy(object",{"_index":873,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3392,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":5072,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copylicense(_options",{"_index":5185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copyright",{"_index":5222,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":5111,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copyversionfile(options",{"_index":5160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":514,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":4051,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1613,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":513,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1314,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":4967,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correcting",{"_index":4987,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":3999,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["correspond",{"_index":245,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":353,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":399,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["costa",{"_index":1755,"title":{},"body":{"interfaces/CountryList.html":{}}}],["could've",{"_index":2791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["counter",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":256,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":323,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1629,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country",{"_index":382,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["country'},{'name",{"_index":517,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":2187,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country.component.scss",{"_index":2188,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":628,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["country/prov",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["country/province",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["country/province/region",{"_index":4389,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["country_",{"_index":2189,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country_list",{"_index":627,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["country_list.find",{"_index":2185,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycode",{"_index":1630,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/functions.html":{}}}],["countrycomponent",{"_index":516,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":624,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["countryobj",{"_index":799,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.countrycode",{"_index":803,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.description",{"_index":2186,"title":{},"body":{"interfaces/CountryList.html":{}}}],["counts",{"_index":325,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":5003,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":1724,"title":{},"body":{"interfaces/CountryList.html":{}}}],["create",{"_index":940,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["created",{"_index":2679,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"contributing.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":5094,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createifmissing(host",{"_index":5189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":5321,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["creating",{"_index":1088,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":1754,"title":{},"body":{"interfaces/CountryList.html":{}}}],["criteria",{"_index":3641,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test",{"_index":4299,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test(control.value",{"_index":4311,"title":{},"body":{"directives/ValidateEmailDirective.html":{}}}],["criteriamsg",{"_index":3575,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":1761,"title":{},"body":{"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1582,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":3068,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":1762,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cuba",{"_index":1763,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cunha",{"_index":2040,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1322,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":1765,"title":{},"body":{"interfaces/CountryList.html":{}}}],["curr",{"_index":3018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["current",{"_index":2290,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["currently",{"_index":297,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":3065,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currentyear",{"_index":4508,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["custom",{"_index":409,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["customize",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3412,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":1764,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cxr",{"_index":1739,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cycles",{"_index":2480,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cym",{"_index":1727,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyp",{"_index":1766,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyprus",{"_index":1767,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cze",{"_index":1768,"title":{},"body":{"interfaces/CountryList.html":{}}}],["czech",{"_index":1769,"title":{},"body":{"interfaces/CountryList.html":{}}}],["côte",{"_index":1758,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d",{"_index":2993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["d.ts",{"_index":5314,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d4f0e3b",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["d5dd02f",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":869,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["d\\'ivoire",{"_index":1759,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2346,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":2039,"title":{},"body":{"interfaces/CountryList.html":{}}}],["danger",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["darken",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["darussalam",{"_index":1712,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1620,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":192,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.city",{"_index":814,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.country",{"_index":816,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.province",{"_index":815,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.service",{"_index":1082,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":1022,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":4042,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":4045,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":4043,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":1027,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":1034,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":1038,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":1030,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":4044,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":813,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["datachange",{"_index":996,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2674,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":2743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1463,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["date'},{'name",{"_index":519,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2445,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.component.html",{"_index":2193,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.scss",{"_index":2192,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.ts",{"_index":4149,"title":{},"body":{"interfaces/SimpleDate.html":{},"todo.html":{}}}],["date.day",{"_index":2447,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2442,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2440,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2441,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.interface",{"_index":2278,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["date.interface.ts",{"_index":4144,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2446,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2444,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date/date.component",{"_index":2438,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datechange",{"_index":2210,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":518,"title":{"components/DateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":2218,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":571,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2374,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1462,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["dateofbirth",{"_index":3681,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":3685,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2352,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":521,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2362,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2361,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":520,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2363,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2364,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2406,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2455,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dates",{"_index":2393,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["datetime",{"_index":2433,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["day",{"_index":2234,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["day_",{"_index":2253,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["daylabelforid",{"_index":2194,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["dayoutofrange",{"_index":2279,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dayref",{"_index":2195,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["days",{"_index":2249,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["daysinmonth",{"_index":2509,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["dayvalidationdirective",{"_index":573,"title":{"directives/DayValidationDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dbb94e1",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["dd",{"_index":4515,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["dd29a60",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":5349,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":3204,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/StreetComponent.html":{}}}],["debouncetime(500",{"_index":4233,"title":{},"body":{"components/StreetComponent.html":{}}}],["december",{"_index":2270,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["declarations",{"_index":1057,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":37,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":5277,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":43,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["defaultcolor",{"_index":3118,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["defaultcountry",{"_index":653,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulted",{"_index":678,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulterrmsg",{"_index":1211,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["defaulterrmsg.invalidbcpostal",{"_index":3875,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidchar",{"_index":1343,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/StreetComponent.html":{}}}],["defaulterrmsg.pattern",{"_index":3874,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.required",{"_index":1342,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/StreetComponent.html":{}}}],["defaulterrormessage",{"_index":1168,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["defaultprovince",{"_index":654,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaults",{"_index":742,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2472,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["delay",{"_index":2615,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":3090,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"todo.html":{}}}],["delete(evt",{"_index":4269,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage",{"_index":4263,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":3099,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delivery",{"_index":684,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["democratic",{"_index":1751,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denmark",{"_index":1771,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denominator",{"_index":4450,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":926,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":5359,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["depending",{"_index":755,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["deployed",{"_index":1074,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3320,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecate",{"_index":3820,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["deprecated",{"_index":980,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["desc",{"_index":4030,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["description",{"_index":109,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["descriptions",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["deserunt",{"_index":1330,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":603,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3348,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":5273,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["details",{"_index":4996,"title":{},"body":{"contributing.html":{}}}],["detect",{"_index":2707,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["detection",{"_index":2479,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["detector",{"_index":2706,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["deteremines",{"_index":4357,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["determine",{"_index":881,"title":{},"body":{"classes/Address.html":{},"directives/DayValidationDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["determines",{"_index":55,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":1818,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dev",{"_index":1147,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["development",{"_index":3712,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3357,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/schematics",{"_index":5330,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["diff",{"_index":3736,"title":{},"body":{"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["differ",{"_index":5392,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["different",{"_index":4354,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"additional-documentation/local-development/components.html":{}}}],["digit",{"_index":4343,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["direcive",{"_index":3780,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["directive",{"_index":495,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["directive's",{"_index":3425,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directive/function",{"_index":4353,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["directives",{"_index":570,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"overview.html":{}}}],["directly",{"_index":887,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disable",{"_index":647,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disablebefore",{"_index":2403,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disabled",{"_index":10,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["disablegeocoder",{"_index":655,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disables",{"_index":32,"title":{},"body":{"classes/AbstractForm.html":{}}}],["disablesince",{"_index":2375,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2376,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3345,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":4245,"title":{},"body":{"components/StreetComponent.html":{}}}],["display",{"_index":705,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["display=\"table",{"_index":3937,"title":{},"body":{"components/RadioComponent.html":{}}}],["display='inline",{"_index":3942,"title":{},"body":{"components/RadioComponent.html":{}}}],["displayed",{"_index":298,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["displayerror",{"_index":2592,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["displaying",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":3786,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2608,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/common",{"_index":5388,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distinctio",{"_index":1293,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":4228,"title":{},"body":{"components/StreetComponent.html":{}}}],["distributed",{"_index":5234,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4334,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["divisible",{"_index":4395,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["divs",{"_index":3557,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["dji",{"_index":1772,"title":{},"body":{"interfaces/CountryList.html":{}}}],["djibouti",{"_index":1773,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dma",{"_index":1774,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dnk",{"_index":1770,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dob",{"_index":3701,"title":{},"body":{"classes/Person.html":{}}}],["dobdt",{"_index":3734,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":3682,"title":{},"body":{"classes/Person.html":{}}}],["doc",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["docinitparams",{"_index":3070,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3394,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"contributing.html":{}}}],["document",{"_index":2554,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":430,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":3066,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":3041,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4463,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":3587,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":3605,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4565,"title":{},"body":{"changelog.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2670,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["doing",{"_index":983,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1263,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":468,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":1775,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dominican",{"_index":1776,"title":{},"body":{"interfaces/CountryList.html":{}}}],["don't",{"_index":1176,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"contributing.html":{}}}],["don'ts",{"_index":5275,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":2792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3361,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":5274,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3541,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":370,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":2720,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":2806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":2804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":2808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":2728,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":327,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":522,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2515,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2514,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":380,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":2722,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":2812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":2814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2652,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1317,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1524,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dummy",{"_index":3713,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":333,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["duplicatecheckdirective",{"_index":575,"title":{"directives/DuplicateCheckDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duplist",{"_index":2539,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"miscellaneous/functions.html":{}}}],["duplist.find",{"_index":2547,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.length",{"_index":2546,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["dutch",{"_index":2079,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dynamic",{"_index":5122,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":756,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["dza",{"_index":1641,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d{3",{"_index":3813,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["d{4",{"_index":3814,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["e",{"_index":3377,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":151,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e2271b7",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":237,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":2799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":843,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":2793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":951,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["easily",{"_index":2781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":3149,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ebb6998",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["ecu",{"_index":1777,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ecuador",{"_index":1778,"title":{},"body":{"interfaces/CountryList.html":{}}}],["edf0b2e",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["edward",{"_index":3920,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["egy",{"_index":1779,"title":{},"body":{"interfaces/CountryList.html":{}}}],["egypt",{"_index":1780,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eib",{"_index":2968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":1782,"title":{},"body":{"interfaces/CountryList.html":{}}}],["element",{"_index":423,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["element's",{"_index":2749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":268,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":277,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":432,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":973,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":41,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageSectionComponent.html":{}}}],["elementsgit",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["eligibility",{"_index":3382,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1268,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["email",{"_index":2557,"title":{},"body":{"components/EmailComponent.html":{},"changelog.html":{}}}],["email'},{'name",{"_index":524,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["email.component.html",{"_index":2559,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":2558,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.directive",{"_index":4134,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["email.directive.ts",{"_index":4307,"title":{},"body":{"directives/ValidateEmailDirective.html":{},"coverage.html":{}}}],["email.directive.ts:13",{"_index":4309,"title":{},"body":{"directives/ValidateEmailDirective.html":{}}}],["email_",{"_index":2564,"title":{},"body":{"components/EmailComponent.html":{}}}],["emailcomponent",{"_index":523,"title":{"components/EmailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["embedded",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":2152,"title":{},"body":{"interfaces/CountryList.html":{}}}],["emit",{"_index":2486,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/MaskModel.html":{},"changelog.html":{}}}],["emits",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":905,"title":{},"body":{"classes/Address.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["enable",{"_index":4999,"title":{},"body":{"contributing.html":{}}}],["enabled",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["enables",{"_index":667,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["encapsulation",{"_index":3537,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["enclose",{"_index":3136,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":5357,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":3030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":355,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":1037,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":5378,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["ensure",{"_index":1502,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":415,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{}}}],["entered",{"_index":3360,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":4244,"title":{},"body":{"components/StreetComponent.html":{}}}],["entries",{"_index":2693,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":4811,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2626,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1370,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":5137,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":5295,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3333,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["environment",{"_index":1148,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["equation",{"_index":2882,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":1785,"title":{},"body":{"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2401,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["eri",{"_index":1787,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eritrea",{"_index":1788,"title":{},"body":{"interfaces/CountryList.html":{}}}],["erorr",{"_index":3447,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":4203,"title":{},"body":{"components/StreetComponent.html":{}}}],["errmsg",{"_index":3162,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":3678,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":3677,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":3226,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":3225,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":148,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('common",{"_index":4490,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["error('this",{"_index":3053,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1508,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1514,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":2855,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":2866,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":2858,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":2861,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1478,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.name",{"_index":1480,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.rawimagefile",{"_index":2860,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":2862,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1518,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1482,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error_fetch_img",{"_index":5147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":5150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1396,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errorcontainercomponent",{"_index":525,"title":{"components/ErrorContainerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordescription",{"_index":1397,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1385,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2673,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1510,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":1216,"title":{"interfaces/ErrorMessage.html":{}},"body":{"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/ErrorMessage.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"coverage.html":{}}}],["errormessagerequired",{"_index":994,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["errormessages",{"_index":2207,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errormessages.dayoutofrange",{"_index":2320,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2325,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2324,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2323,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2319,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2322,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2321,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1479,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errorr",{"_index":4487,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["errorr.ts",{"_index":3490,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["errorr.ts:1",{"_index":3492,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["errorreason",{"_index":3062,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":1472,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":3016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":3029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":3028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":2175,"title":{},"body":{"interfaces/CountryList.html":{}}}],["esp",{"_index":2095,"title":{},"body":{"interfaces/CountryList.html":{}}}],["especially",{"_index":3355,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1286,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":1789,"title":{},"body":{"interfaces/CountryList.html":{}}}],["estonia",{"_index":1790,"title":{},"body":{"interfaces/CountryList.html":{}}}],["et",{"_index":1305,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":384,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":1791,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":1792,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eum",{"_index":1297,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":1693,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ev",{"_index":3312,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4441,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2469,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4455,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":972,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["event.datatransfer.files",{"_index":2816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":4252,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.item.street",{"_index":4253,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.jsdate",{"_index":2485,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":4247,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.preventdefault",{"_index":2815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":3130,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2340,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":2584,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["event.target['files",{"_index":2822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":612,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2337,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":4243,"title":{},"body":{"components/StreetComponent.html":{}}}],["everything",{"_index":1459,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":2983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":2877,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":2811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":2985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.value",{"_index":3832,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["exactly",{"_index":2838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":215,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":4003,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":5393,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":5333,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":2763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1484,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3530,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":5144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4470,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exercitationem",{"_index":1310,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1108,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["existing",{"_index":4988,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{}}}],["exists",{"_index":2285,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":489,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":480,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":5293,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":1046,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":1058,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":5239,"title":{},"body":{"license.html":{}}}],["extend",{"_index":845,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extends",{"_index":646,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":858,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["extract",{"_index":2765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":3644,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f103e7c",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["f2ccfe6",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["f541d81",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":3643,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facere",{"_index":1281,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":5372,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facing",{"_index":3446,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":144,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2691,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":1794,"title":{},"body":{"interfaces/CountryList.html":{}}}],["false",{"_index":45,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhnDirective.html":{},"todo.html":{}}}],["family",{"_index":3775,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["faroe",{"_index":1797,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faso",{"_index":1717,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faster",{"_index":5254,"title":{},"body":{"todo.html":{}}}],["favicon_base64",{"_index":5084,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4437,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["feat",{"_index":4977,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":4978,"title":{},"body":{"contributing.html":{}}}],["feature.properties",{"_index":3256,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["february",{"_index":2261,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["februrary",{"_index":2251,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["federated",{"_index":1949,"title":{},"body":{"interfaces/CountryList.html":{}}}],["federation",{"_index":2029,"title":{},"body":{"interfaces/CountryList.html":{}}}],["feedback",{"_index":3665,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":1023,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":1028,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":1024,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":1032,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":5145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["field",{"_index":421,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"directives/DateFieldFormatDirective.html":{},"interfaces/ErrorMessage.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"coverage.html":{}}}],["fieldmaxlenghts",{"_index":691,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fields",{"_index":648,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["fieldset",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["fiji",{"_index":1799,"title":{},"body":{"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":2742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2702,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":3112,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":2895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1350,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["filecontrol",{"_index":2686,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":2889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":2828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":2736,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/functions.html":{}}}],["fileobservable",{"_index":2923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":2927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":2826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":2827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":2813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":2823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":2958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":2959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileupload",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["fileuploadbrowse",{"_index":2688,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4934,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":527,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":2833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2598,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":876,"title":{},"body":{"classes/Address.html":{}}}],["fills",{"_index":2248,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["filter",{"_index":2612,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"classes/Person.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter((mspimage",{"_index":2841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3311,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":2824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":780,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":1800,"title":{},"body":{"interfaces/CountryList.html":{}}}],["final",{"_index":2787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finaldigit",{"_index":4344,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["finally",{"_index":2795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":704,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["findcountrycode",{"_index":798,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["findprovincedescription(prov",{"_index":790,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fine",{"_index":1465,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["finish",{"_index":3362,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":2747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":1801,"title":{},"body":{"interfaces/CountryList.html":{}}}],["firefox",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":335,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":3163,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":3169,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2642,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4528,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["fixing",{"_index":3027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fji",{"_index":1798,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flag",{"_index":3445,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["flags",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":5252,"title":{},"body":{"todo.html":{}}}],["flatmap",{"_index":2613,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":3554,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["flk",{"_index":1793,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flow",{"_index":3991,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["fluid",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":820,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["focus",{"_index":891,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["focusable",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":5289,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":4914,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["follow",{"_index":4976,"title":{},"body":{"contributing.html":{}}}],["followed",{"_index":3196,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":4145,"title":{},"body":{"interfaces/SimpleDate.html":{},"additional-documentation/local-development/components.html":{}}}],["follows",{"_index":5261,"title":{},"body":{"todo.html":{}}}],["fonts",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":2244,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["forceoverwrite",{"_index":5174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forcerender",{"_index":2708,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1504,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["form",{"_index":11,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["form.ts",{"_index":7,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["form.ts:10",{"_index":39,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:13",{"_index":31,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:15",{"_index":46,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:17",{"_index":24,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:30",{"_index":54,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:36",{"_index":74,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:45",{"_index":66,"title":{},"body":{"classes/AbstractForm.html":{}}}],["formactionbar",{"_index":3133,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["formactionbarcomponent",{"_index":529,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2390,"title":{},"body":{"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"contributing.html":{}}}],["format.directive",{"_index":4069,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2327,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2335,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2331,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":3686,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":3249,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formatting",{"_index":4982,"title":{},"body":{"contributing.html":{}}}],["formcontrol",{"_index":2437,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{},"todo.html":{}}}],["former",{"_index":1921,"title":{},"body":{"interfaces/CountryList.html":{}}}],["formerrors",{"_index":257,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["forms",{"_index":2550,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["formsmodule",{"_index":1080,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmibar",{"_index":5250,"title":{},"body":{"todo.html":{}}}],["formsubmitbar",{"_index":3131,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":531,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":1066,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":614,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/YearValidateDirective.html":{}}}],["found",{"_index":212,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":5285,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":4817,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3528,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":1802,"title":{},"body":{"interfaces/CountryList.html":{}}}],["framework",{"_index":3148,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":538,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":4057,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3540,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3539,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3527,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3542,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3543,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3526,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":1803,"title":{},"body":{"interfaces/CountryList.html":{}}}],["free",{"_index":939,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3378,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":1805,"title":{},"body":{"interfaces/CountryList.html":{}}}],["friendly",{"_index":2779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":1796,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2609,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":2818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":2820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":2805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":2872,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":2874,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":2875,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":1947,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1289,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":533,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":3228,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":3714,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":3729,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":532,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":3186,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3411,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":768,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":236,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":3774,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["functions",{"_index":4424,"title":{"miscellaneous/functions.html":{}},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["futuna",{"_index":2174,"title":{},"body":{"interfaces/CountryList.html":{}}}],["future",{"_index":949,"title":{},"body":{"components/ButtonComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":4366,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":1812,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gabon",{"_index":1813,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gambia",{"_index":1815,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gbr",{"_index":2153,"title":{},"body":{"interfaces/CountryList.html":{}}}],["general",{"_index":683,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["generally",{"_index":61,"title":{},"body":{"classes/AbstractForm.html":{}}}],["generate",{"_index":4953,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generated",{"_index":5164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generateskiptocontentlink",{"_index":3292,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generation",{"_index":4894,"title":{},"body":{"changelog.html":{},"contributing.html":{},"additional-documentation/local-development/schematics.html":{}}}],["geo",{"_index":1816,"title":{},"body":{"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":620,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":804,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{}}}],["geocoderservice",{"_index":3229,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/StreetComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["georgia",{"_index":1817,"title":{},"body":{"interfaces/CountryList.html":{}}}],["germany",{"_index":1819,"title":{},"body":{"interfaces/CountryList.html":{}}}],["get(url",{"_index":127,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4408,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4413,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":3683,"title":{},"body":{"classes/Person.html":{}}}],["getapplicationid",{"_index":1570,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getcontinuebutton",{"_index":258,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getcountrydescription",{"_index":2184,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcountrydescription(countrycode",{"_index":5200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdateofbirthshort",{"_index":3699,"title":{},"body":{"classes/Person.html":{}}}],["getformatdateofbirth",{"_index":3703,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":159,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{}}}],["getisbconly",{"_index":896,"title":{},"body":{"classes/Address.html":{}}}],["getmaxlenasnumber",{"_index":2581,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["getname",{"_index":3706,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":242,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":330,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":243,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":343,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnumericvalue",{"_index":2201,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["getnumericvalue(value",{"_index":2227,"title":{},"body":{"components/DateComponent.html":{}}}],["getpackageversionfrompackagejson",{"_index":5103,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpackageversionfrompackagejson(tree",{"_index":5176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpasswordstrength",{"_index":3581,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":3607,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getphonenumberstring",{"_index":3818,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["getprogramname",{"_index":1574,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getprovincedescription",{"_index":3931,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getprovincedescription(provincecode",{"_index":5201,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":4223,"title":{},"body":{"components/StreetComponent.html":{},"miscellaneous/functions.html":{}}}],["getstarturl",{"_index":222,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getstreet",{"_index":892,"title":{},"body":{"classes/Address.html":{}}}],["getting",{"_index":4521,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":1095,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":1104,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1258,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["ggy",{"_index":1836,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gha",{"_index":1820,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ghana",{"_index":1821,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gib",{"_index":1822,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":1823,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gif",{"_index":2727,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":2848,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":1838,"title":{},"body":{"interfaces/CountryList.html":{}}}],["git",{"_index":4901,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gitcommit",{"_index":5107,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":390,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["give",{"_index":2930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["given",{"_index":346,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["gives",{"_index":1386,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":1830,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gmb",{"_index":1814,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnb",{"_index":1839,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnq",{"_index":1784,"title":{},"body":{"interfaces/CountryList.html":{}}}],["go",{"_index":352,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":5391,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":3034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3529,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":5242,"title":{},"body":{"license.html":{}}}],["grab",{"_index":334,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":1824,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grd",{"_index":1828,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greece",{"_index":1825,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greenland",{"_index":1827,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenada",{"_index":1829,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenadines",{"_index":2054,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grl",{"_index":1826,"title":{},"body":{"interfaces/CountryList.html":{}}}],["group",{"_index":987,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":504,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":4091,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":989,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":988,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":979,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":998,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":1002,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":1003,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":999,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":1000,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":1001,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":1004,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":1014,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":1012,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":997,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":1009,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":1005,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":1006,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":1007,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":1011,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":978,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":5216,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":1834,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":1831,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guam",{"_index":1833,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guard",{"_index":201,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service.ts",{"_index":3989,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:52",{"_index":4007,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":4014,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":4017,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":4009,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":1145,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["guatemala",{"_index":1835,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guernsey",{"_index":1837,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guessable",{"_index":3609,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":3611,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":1804,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guiana",{"_index":1806,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guide",{"_index":4995,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["guidelines",{"_index":604,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":1786,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gum",{"_index":1832,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guy",{"_index":1841,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guyana",{"_index":1842,"title":{},"body":{"interfaces/CountryList.html":{}}}],["haiti",{"_index":1844,"title":{},"body":{"interfaces/CountryList.html":{}}}],["half",{"_index":4456,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4458,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4469,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":2733,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["handleerror",{"_index":114,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":140,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":143,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["handling",{"_index":173,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":58,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":356,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1328,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["hash",{"_index":2784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasmask",{"_index":4372,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{}}}],["hasn't",{"_index":774,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["hasvalue",{"_index":848,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["having",{"_index":3559,"title":{},"body":{"components/PageSectionComponent.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{}}}],["header",{"_index":3278,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":536,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3289,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3288,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":535,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3452,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":124,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["health",{"_index":3374,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{}}}],["heard",{"_index":1846,"title":{},"body":{"interfaces/CountryList.html":{}}}],["height",{"_index":2752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1405,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":2036,"title":{},"body":{"interfaces/CountryList.html":{}}}],["help",{"_index":5297,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":5311,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["helpers/library",{"_index":4486,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["here",{"_index":1500,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":1697,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1409,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":2739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":48,"title":{},"body":{"classes/AbstractForm.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"contributing.html":{}}}],["hidefullsizeview",{"_index":4260,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":3576,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":5334,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["hkg",{"_index":1853,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hmd",{"_index":1845,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hnd",{"_index":1851,"title":{},"body":{"interfaces/CountryList.html":{}}}],["holy",{"_index":1849,"title":{},"body":{"interfaces/CountryList.html":{}}}],["homepage",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":1852,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hong",{"_index":1854,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hood",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["hook",{"_index":5000,"title":{},"body":{"contributing.html":{}}}],["hooks",{"_index":4892,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["hooksthe",{"_index":5001,"title":{},"body":{"contributing.html":{}}}],["horizontal",{"_index":3940,"title":{},"body":{"components/RadioComponent.html":{}}}],["horizontally",{"_index":4419,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["host",{"_index":5175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hostlistener",{"_index":2336,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2338,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2330,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":1760,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hti",{"_index":1843,"title":{},"body":{"interfaces/CountryList.html":{}}}],["html",{"_index":494,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["html5",{"_index":2731,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":2949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":2909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2341,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":110,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["http://full",{"_index":3321,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":5228,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1441,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpclient",{"_index":120,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":636,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["httperrorresponse",{"_index":141,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":122,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":118,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpopts",{"_index":175,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":177,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":128,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":1039,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":5204,"title":{},"body":{"index.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":3231,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":3234,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":3216,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":3613,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":3634,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2356,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["human",{"_index":304,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":1856,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hungary",{"_index":1857,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hyphen",{"_index":3197,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/StreetComponent.html":{}}}],["hyphens",{"_index":1254,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["iceland",{"_index":1859,"title":{},"body":{"interfaces/CountryList.html":{}}}],["icon",{"_index":665,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["id",{"_index":1324,"title":{},"body":{"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3285,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":393,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":2839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":931,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":1862,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ids",{"_index":923,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":1142,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ie",{"_index":3773,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ie10",{"_index":4489,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["ignore",{"_index":3483,"title":{},"body":{"classes/MaskModel.html":{}}}],["ignored",{"_index":2916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1346,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":2912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":2897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":2939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":2937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":2946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.title",{"_index":4041,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["image/jpeg",{"_index":2942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":2832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":2910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":2913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2696,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2697,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2699,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":4261,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4286,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":2871,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2658,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":2904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":3055,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2663,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["images.length",{"_index":2893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":2896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2666,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":2842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":2995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":2998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":2997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":2907,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":3040,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":3049,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":3046,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":3042,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":3067,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":3091,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":1871,"title":{},"body":{"interfaces/CountryList.html":{}}}],["implement",{"_index":3021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":2358,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["implemented",{"_index":35,"title":{},"body":{"classes/AbstractForm.html":{},"changelog.html":{}}}],["implementing",{"_index":3993,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["implements",{"_index":209,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["implied",{"_index":5240,"title":{},"body":{"license.html":{}}}],["import",{"_index":82,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["importable",{"_index":5362,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":2247,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["importantly",{"_index":3555,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imported",{"_index":338,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":5270,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":1070,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":2729,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":2933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["improvement",{"_index":3553,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["improves",{"_index":4986,"title":{},"body":{"contributing.html":{}}}],["imydate",{"_index":2396,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1327,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":1250,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":379,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":2800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":1110,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"directives/ValidatePhoneDirective.html":{}}}],["incompletepages",{"_index":1156,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":1159,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incorrect",{"_index":365,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":3138,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":1860,"title":{},"body":{"interfaces/CountryList.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":5304,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1426,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":1861,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indian",{"_index":1707,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indicates",{"_index":1113,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["individual",{"_index":3158,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["indonesia",{"_index":1863,"title":{},"body":{"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":292,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":211,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2428,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["inherited",{"_index":1196,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":3717,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3426,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["initinvalid",{"_index":3524,"title":{},"body":{"components/NameComponent.html":{}}}],["injectable",{"_index":196,"title":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":198,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injectiontoken",{"_index":4018,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["injector",{"_index":4019,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["inline",{"_index":3941,"title":{},"body":{"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3451,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":416,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["input(event",{"_index":2333,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.getattribute",{"_index":2342,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2347,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2345,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input[type='file",{"_index":2681,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2687,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":33,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["inside",{"_index":306,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":4918,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":5210,"title":{},"body":{"index.html":{}}}],["installed",{"_index":5269,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":5095,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1509,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instances",{"_index":5257,"title":{},"body":{"todo.html":{}}}],["instead",{"_index":410,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":2761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2667,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{}}}],["insurance",{"_index":3390,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":5292,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["intentional",{"_index":4492,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["interface",{"_index":600,"title":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":602,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1483,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["internet",{"_index":153,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["introduced",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":1389,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":3867,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["invalidchar",{"_index":1247,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["invalidemail",{"_index":4312,"title":{},"body":{"directives/ValidateEmailDirective.html":{}}}],["invalidimagehanlder",{"_index":3035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":3056,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2284,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["invisible",{"_index":2380,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["invocation",{"_index":769,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iot",{"_index":1705,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1271,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1262,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iran",{"_index":1865,"title":{},"body":{"interfaces/CountryList.html":{}}}],["iraq",{"_index":1868,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ireland",{"_index":1870,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irl",{"_index":1869,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irn",{"_index":1864,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irq",{"_index":1867,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":3251,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1622,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":854,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":4321,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["iscanada",{"_index":738,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iscomplete",{"_index":852,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isdate",{"_index":2370,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2415,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":825,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["isdobempty",{"_index":3684,"title":{},"body":{"classes/Person.html":{}}}],["isl",{"_index":1858,"title":{},"body":{"interfaces/CountryList.html":{}}}],["islamic",{"_index":1866,"title":{},"body":{"interfaces/CountryList.html":{}}}],["island",{"_index":1702,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":1638,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isle",{"_index":1872,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isloading",{"_index":3119,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["isn't",{"_index":2684,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isnan",{"_index":2318,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["isopen",{"_index":482,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3328,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":223,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispagecomplete(url",{"_index":227,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":1096,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":2925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":224,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":1874,"title":{},"body":{"interfaces/CountryList.html":{}}}],["israel",{"_index":1875,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isrequired",{"_index":652,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["issue",{"_index":2921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":1077,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1282,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["isundermaintenance",{"_index":3401,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":849,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["it'll",{"_index":2474,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["it's",{"_index":337,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":1876,"title":{},"body":{"interfaces/CountryList.html":{}}}],["italy",{"_index":1877,"title":{},"body":{"interfaces/CountryList.html":{}}}],["item",{"_index":794,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{}}}],["item.iscomplete",{"_index":1151,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":1106,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["iterate",{"_index":4251,"title":{},"body":{"components/StreetComponent.html":{}}}],["itself",{"_index":4529,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["jam",{"_index":1878,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jamaica",{"_index":1879,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jan",{"_index":2105,"title":{},"body":{"interfaces/CountryList.html":{}}}],["january",{"_index":2260,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["japan",{"_index":1881,"title":{},"body":{"interfaces/CountryList.html":{}}}],["javascript",{"_index":880,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["jersey",{"_index":1883,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jey",{"_index":1882,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jor",{"_index":1884,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jordan",{"_index":1885,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jpeg",{"_index":2773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":2726,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":1880,"title":{},"body":{"interfaces/CountryList.html":{}}}],["js",{"_index":5128,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":5105,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":5109,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["jsdate",{"_index":2470,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1526,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PhoneNumberComponent.html":{}}}],["json.stringify(error",{"_index":2903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["july",{"_index":2265,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["june",{"_index":2264,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["kaz",{"_index":1886,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":1887,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keeling",{"_index":1743,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keep",{"_index":932,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":1888,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kenya",{"_index":1889,"title":{},"body":{"interfaces/CountryList.html":{}}}],["key",{"_index":448,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["keyboard",{"_index":4242,"title":{},"body":{"components/StreetComponent.html":{}}}],["keyboardevent",{"_index":2334,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["keys",{"_index":5179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyup",{"_index":2873,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":1898,"title":{},"body":{"interfaces/CountryList.html":{}}}],["khm",{"_index":1720,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kib",{"_index":2964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":5238,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":2154,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kir",{"_index":1890,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kiribati",{"_index":1891,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kitts",{"_index":2042,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kna",{"_index":2041,"title":{},"body":{"interfaces/CountryList.html":{}}}],["know",{"_index":982,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":1076,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":1855,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kor",{"_index":1895,"title":{},"body":{"interfaces/CountryList.html":{}}}],["korea",{"_index":1893,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kuwait",{"_index":1897,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kwt",{"_index":1896,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":1899,"title":{},"body":{"interfaces/CountryList.html":{}}}],["label",{"_index":319,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":400,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["labelid",{"_index":398,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":340,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labels",{"_index":656,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["labeltext",{"_index":2377,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["labrador",{"_index":3913,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["land",{"_index":1637,"title":{},"body":{"interfaces/CountryList.html":{}}}],["language",{"_index":5241,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":2099,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lao",{"_index":1900,"title":{},"body":{"interfaces/CountryList.html":{}}}],["largely",{"_index":2353,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["last",{"_index":3157,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastname",{"_index":3164,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":3170,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":2737,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":1902,"title":{},"body":{"interfaces/CountryList.html":{}}}],["law",{"_index":5230,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3144,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":1903,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lbr",{"_index":1907,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lby",{"_index":1909,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lca",{"_index":2044,"title":{},"body":{"interfaces/CountryList.html":{}}}],["leads",{"_index":361,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":3404,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lebanon",{"_index":1904,"title":{},"body":{"interfaces/CountryList.html":{}}}],["left",{"_index":1614,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":493,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":2645,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"changelog.html":{}}}],["lengths",{"_index":690,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePhoneDirective.html":{}}}],["leone",{"_index":2074,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lesotho",{"_index":1906,"title":{},"body":{"interfaces/CountryList.html":{}}}],["less",{"_index":946,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":2127,"title":{},"body":{"interfaces/CountryList.html":{}}}],["letter",{"_index":3195,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":1249,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["level",{"_index":1488,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":5313,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":241,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":1069,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":5294,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":5296,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":4906,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":4886,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":5284,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":5281,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":1908,"title":{},"body":{"interfaces/CountryList.html":{}}}],["libif",{"_index":5376,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2360,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":3635,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libsetup",{"_index":5211,"title":{},"body":{"index.html":{}}}],["libya",{"_index":1910,"title":{},"body":{"interfaces/CountryList.html":{}}}],["license",{"_index":5073,"title":{"license.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["license/index.ts",{"_index":5071,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["licensed",{"_index":5224,"title":{},"body":{"license.html":{}}}],["lie",{"_index":1911,"title":{},"body":{"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":1912,"title":{},"body":{"interfaces/CountryList.html":{}}}],["likes",{"_index":5279,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":5244,"title":{},"body":{"license.html":{}}}],["line",{"_index":670,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3416,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lines",{"_index":747,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["link",{"_index":318,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":5317,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":5387,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":357,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":795,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["listed",{"_index":5276,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":164,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["literals",{"_index":1540,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lithuania",{"_index":1914,"title":{},"body":{"interfaces/CountryList.html":{}}}],["live",{"_index":5369,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":2097,"title":{},"body":{"interfaces/CountryList.html":{}}}],["load",{"_index":2634,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{},"todo.html":{}}}],["loaded",{"_index":775,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["loadimage",{"_index":2632,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2637,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":12,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["local",{"_index":2544,"title":{"additional-documentation/local-development.html":{}},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street,block,intersection",{"_index":3245,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3370,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":2801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":5337,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1449,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["log(message",{"_index":1554,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logentry",{"_index":2624,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1452,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logerror(errormessage",{"_index":1556,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logged",{"_index":1429,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logger",{"_index":1433,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logging",{"_index":190,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["logging/log",{"_index":2625,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror",{"_index":1546,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["loghttperror(error",{"_index":1477,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["loghttprequeststoconsole",{"_index":113,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":1089,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["logo",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3295,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1454,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logservice",{"_index":2675,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1439,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["long",{"_index":208,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["longer",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":5375,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":3259,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["lookup",{"_index":395,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{}}}],["lookup(address",{"_index":3235,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1261,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1473,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lost",{"_index":152,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["lot",{"_index":4360,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["lower",{"_index":1592,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":1905,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ltu",{"_index":1913,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lucia",{"_index":2045,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lux",{"_index":1915,"title":{},"body":{"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":1916,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lva",{"_index":1901,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maarten",{"_index":2078,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mac",{"_index":1917,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macao",{"_index":1918,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macbooks",{"_index":5253,"title":{},"body":{"todo.html":{}}}],["macedonia",{"_index":1920,"title":{},"body":{"interfaces/CountryList.html":{}}}],["machine",{"_index":5329,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":1924,"title":{},"body":{"interfaces/CountryList.html":{}}}],["made",{"_index":4889,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":2046,"title":{},"body":{"interfaces/CountryList.html":{}}}],["magnam",{"_index":1270,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":942,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3335,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenanceflag",{"_index":3408,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3414,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":138,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidatePhoneDirective.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":131,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":948,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":1926,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malaysia",{"_index":1928,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maldives",{"_index":1930,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malformed",{"_index":3015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":1932,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malta",{"_index":1934,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malvinas",{"_index":1795,"title":{},"body":{"interfaces/CountryList.html":{}}}],["man",{"_index":1873,"title":{},"body":{"interfaces/CountryList.html":{}}}],["manage",{"_index":2782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":3908,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2478,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":3944,"title":{},"body":{"components/RadioComponent.html":{}}}],["map",{"_index":2611,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4440,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":2879,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map([['acl",{"_index":3418,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["map(prov",{"_index":777,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["map(x",{"_index":1599,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":5315,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2395,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["mar",{"_index":1961,"title":{},"body":{"interfaces/CountryList.html":{}}}],["march",{"_index":2262,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["margins",{"_index":3146,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":1991,"title":{},"body":{"interfaces/CountryList.html":{}}}],["marino",{"_index":2058,"title":{},"body":{"interfaces/CountryList.html":{}}}],["markallinputstouched",{"_index":18,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markastouched",{"_index":69,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markdown",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["markdownlint",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":947,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":1936,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martin",{"_index":2047,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martinique",{"_index":1938,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mask",{"_index":724,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["maskmodel",{"_index":3468,"title":{"classes/MaskModel.html":{}},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["maskmodel:11",{"_index":3800,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:12",{"_index":3802,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:14",{"_index":3798,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:15",{"_index":3799,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:17",{"_index":3816,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:18",{"_index":3817,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:27",{"_index":3809,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:34",{"_index":3808,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["match",{"_index":3826,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["matching",{"_index":103,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":3252,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4472,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil",{"_index":3735,"title":{},"body":{"classes/Person.html":{}}}],["math.ceil(math.random()*100",{"_index":2934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4459,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":1940,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mauritius",{"_index":1942,"title":{},"body":{"interfaces/CountryList.html":{}}}],["max",{"_index":2989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxheight",{"_index":3008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":2764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":1217,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{},"todo.html":{}}}],["maxlenasnumber",{"_index":2560,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["maxlength",{"_index":2343,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/EmailComponent.html":{},"components/StreetComponent.html":{},"todo.html":{}}}],["maxlengths",{"_index":633,"title":{"interfaces/Maxlengths.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["maxretry",{"_index":3013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1383,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":2990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":3005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mayen",{"_index":2106,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mayotte",{"_index":1944,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mb",{"_index":2854,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":1847,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mco",{"_index":1953,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mda",{"_index":1951,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdg",{"_index":1923,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdv",{"_index":1929,"title":{},"body":{"interfaces/CountryList.html":{}}}],["meaning",{"_index":4980,"title":{},"body":{"contributing.html":{}}}],["means",{"_index":288,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":3134,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["meet",{"_index":3642,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":3776,"title":{},"body":{"components/PhnComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["members",{"_index":3949,"title":{},"body":{"components/RadioComponent.html":{}}}],["menial",{"_index":4990,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":5283,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2610,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":2821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1450,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["message.interface",{"_index":1632,"title":{},"body":{"interfaces/CountryList.html":{}}}],["message.interface.ts",{"_index":2595,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["message.interface.ts:7",{"_index":2597,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["messages",{"_index":1388,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["meta",{"_index":1455,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":473,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["method",{"_index":185,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":1945,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mexico",{"_index":1946,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mhl",{"_index":1935,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mib",{"_index":2965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":1948,"title":{},"body":{"interfaces/CountryList.html":{}}}],["middle",{"_index":3156,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":3165,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":3171,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":2725,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["min_phone_length",{"_index":4355,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["mini",{"_index":2384,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2482,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["minimum",{"_index":3565,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3373,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":3584,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":3639,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":3577,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":3578,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":391,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{}}}],["miquelon",{"_index":2051,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mirror",{"_index":394,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":5136,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missing",{"_index":4878,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["mistakes",{"_index":5212,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":1919,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mli",{"_index":1931,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mlt",{"_index":1933,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mm",{"_index":4514,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["mm').daysinmonth",{"_index":2512,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["mmr",{"_index":1965,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mne",{"_index":1957,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mng",{"_index":1955,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mnp",{"_index":1989,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mobile",{"_index":3792,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["mockups",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["mod",{"_index":4339,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["modal",{"_index":296,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":512,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":4095,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1371,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.scss",{"_index":3399,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.ts",{"_index":3331,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:18",{"_index":4038,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:19",{"_index":4037,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:21",{"_index":4036,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:27",{"_index":4040,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:31",{"_index":4039,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal/consent",{"_index":3330,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modal/sample",{"_index":4029,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":2605,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":4062,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":4140,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2365,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2630,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2628,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":4810,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/address.model",{"_index":623,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["models/base",{"_index":619,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4434,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/error",{"_index":1631,"title":{},"body":{"interfaces/CountryList.html":{}}}],["models/images.model",{"_index":2617,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.model",{"_index":3770,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":3203,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["models/simple",{"_index":2277,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["modified",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["modifyjson",{"_index":5075,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyjson(host",{"_index":5202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":1054,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":1056,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":1068,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":240,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohcommmonlibraryerror",{"_index":4488,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror",{"_index":3488,"title":{"classes/MoHCommonLibraryError.html":{}},"body":{"classes/MoHCommonLibraryError.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["mohcommonlibraryerror(msg",{"_index":4496,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohstart",{"_index":5096,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mohstart(_options",{"_index":5191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moldova",{"_index":1952,"title":{},"body":{"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1326,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1285,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1283,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":927,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().date",{"_index":2294,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().format",{"_index":4513,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().get",{"_index":4509,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().isutc",{"_index":4516,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().month",{"_index":2292,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().toisostring",{"_index":1529,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["moment().year",{"_index":2296,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment(str",{"_index":2510,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["moment_",{"_index":1431,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["momentjs",{"_index":5358,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":1954,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mongolia",{"_index":1956,"title":{},"body":{"interfaces/CountryList.html":{}}}],["montenegro",{"_index":1958,"title":{},"body":{"interfaces/CountryList.html":{}}}],["month",{"_index":2239,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["month_",{"_index":2258,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthlabelforid",{"_index":2196,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthlist",{"_index":2197,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthref",{"_index":2198,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["montserrat",{"_index":1960,"title":{},"body":{"interfaces/CountryList.html":{}}}],["more",{"_index":210,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":1962,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mouse",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":4905,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moz",{"_index":1963,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mozambique",{"_index":1964,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mrt",{"_index":1939,"title":{},"body":{"interfaces/CountryList.html":{}}}],["msg",{"_index":1493,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/XiconButtonComponent.html":{},"contributing.html":{}}}],["msp",{"_index":679,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["msp's",{"_index":3827,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["msp/api/env",{"_index":3409,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2620,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":3087,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":3086,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":2831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":2935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":2941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":3083,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":2984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":2986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":2929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":2938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":2936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":2953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":2980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":2977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":3102,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":3085,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":2886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2618,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":1959,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mtq",{"_index":1937,"title":{},"body":{"interfaces/CountryList.html":{}}}],["multi",{"_index":986,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["multiple",{"_index":1539,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":2961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["multiply",{"_index":4329,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["mus",{"_index":1941,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mutually",{"_index":5143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":1925,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myanmar",{"_index":1966,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2355,"title":{},"body":{"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":5079,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":1927,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myself",{"_index":3947,"title":{},"body":{"components/RadioComponent.html":{}}}],["myselfonly",{"_index":3948,"title":{},"body":{"components/RadioComponent.html":{}}}],["myt",{"_index":1943,"title":{},"body":{"interfaces/CountryList.html":{}}}],["n",{"_index":2721,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":1967,"title":{},"body":{"interfaces/CountryList.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":534,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":4108,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":3161,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":3160,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":3155,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":3182,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":3183,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":3184,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":3178,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":3180,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":3179,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":3175,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":3177,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":3176,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":3174,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":3188,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":3190,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":3189,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":3193,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":3187,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":3202,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":3201,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":3185,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":3173,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":3181,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":4104,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4314,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:26",{"_index":4316,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":3154,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":5332,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name^=\"${refnameval",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3505,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":246,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":3166,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":2932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["names.length",{"_index":3731,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":3730,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":3732,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":3733,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3501,"title":{},"body":{"components/NameComponent.html":{}}}],["namibia",{"_index":1968,"title":{},"body":{"interfaces/CountryList.html":{}}}],["naming",{"_index":5263,"title":{},"body":{"todo.html":{}}}],["napprox",{"_index":2972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":2976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":2974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":879,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":2750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1351,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1352,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1273,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":1970,"title":{},"body":{"interfaces/CountryList.html":{}}}],["navigate",{"_index":19,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":70,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigates",{"_index":75,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigateto",{"_index":260,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":62,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigationend",{"_index":3309,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":3909,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":2957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":1975,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nec",{"_index":2556,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["necessary",{"_index":276,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":385,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePhnDirective.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["negative",{"_index":3145,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1295,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":1972,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ner",{"_index":1981,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1332,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":3142,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1464,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["netherlands",{"_index":1974,"title":{},"body":{"interfaces/CountryList.html":{}}}],["network",{"_index":1474,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{}}}],["never",{"_index":1503,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":2043,"title":{},"body":{"interfaces/CountryList.html":{}}}],["new",{"_index":662,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["new.target.prototype",{"_index":3498,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["newfoundland",{"_index":3912,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1448,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["next",{"_index":273,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":2911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":1987,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ng",{"_index":311,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2496,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["ng_value_accessor",{"_index":617,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["nga",{"_index":1983,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":2870,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":3215,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["ngchanges",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["ngcontrol",{"_index":1171,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"todo.html":{}}}],["ngform",{"_index":36,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":5345,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1175,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["ngmodelchange",{"_index":2329,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":203,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":3998,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2371,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{}}}],["ngonchanges(changes",{"_index":739,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ngondestroy",{"_index":4409,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ngoninit",{"_index":481,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["ngselect",{"_index":406,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":4082,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":3135,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":491,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2366,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2434,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":4073,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":4139,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2603,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":1979,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":1980,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niger",{"_index":1982,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nigeria",{"_index":1984,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nisi",{"_index":1280,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":1985,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niue",{"_index":1986,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nl",{"_index":3911,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nld",{"_index":1973,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":2971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1309,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":5205,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":5367,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":5340,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2283,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["noidimage",{"_index":2649,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1277,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":1033,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2381,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nonvdi",{"_index":5256,"title":{},"body":{"todo.html":{}}}],["nopastdatesallowed",{"_index":2282,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["norfolk",{"_index":1988,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northern",{"_index":1990,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northwest",{"_index":3926,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["norway",{"_index":1992,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1319,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":354,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nothing",{"_index":4250,"title":{},"body":{"components/StreetComponent.html":{}}}],["notice",{"_index":291,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":2235,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3551,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":3915,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["november",{"_index":2269,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["now",{"_index":388,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":1971,"title":{},"body":{"interfaces/CountryList.html":{}}}],["npm",{"_index":924,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":866,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["nru",{"_index":1969,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ns",{"_index":3914,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nt",{"_index":3925,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nu",{"_index":3927,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["null",{"_index":746,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["null/undefined",{"_index":759,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{}}}],["nulls",{"_index":3718,"title":{},"body":{"classes/Person.html":{}}}],["num",{"_index":4332,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["number",{"_index":326,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":547,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number(phn.substring(9",{"_index":4345,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["number,number,number,number",{"_index":3822,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component",{"_index":4098,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.html",{"_index":3783,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.scss",{"_index":3782,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts",{"_index":3779,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["number.component.ts:39",{"_index":3815,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:40",{"_index":3791,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:41",{"_index":3797,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:42",{"_index":3793,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:45",{"_index":3796,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:48",{"_index":3795,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:49",{"_index":3801,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:51",{"_index":3810,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:52",{"_index":3790,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:55",{"_index":3811,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:68",{"_index":3819,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:73",{"_index":3806,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:82",{"_index":3803,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:86",{"_index":3804,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:90",{"_index":3807,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.directive",{"_index":4136,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.directive.ts",{"_index":4348,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["number.directive.ts:12",{"_index":4349,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["number.directive.ts:16",{"_index":4350,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["number.parseint",{"_index":2585,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["number/phone",{"_index":3778,"title":{},"body":{"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["number/validate",{"_index":4135,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["numbers",{"_index":1251,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["numerator",{"_index":4452,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numeric",{"_index":2230,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["numpages",{"_index":3074,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1320,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":3928,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":1977,"title":{},"body":{"interfaces/CountryList.html":{}}}],["o",{"_index":2847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1315,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":2426,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["obj.features.map(feature",{"_index":3254,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["object",{"_index":161,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{}}}],["object.addressline1",{"_index":913,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":915,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":917,"title":{},"body":{"classes/Address.html":{}}}],["object.city",{"_index":918,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":919,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth.day",{"_index":3741,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.month",{"_index":3740,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.year",{"_index":3742,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":3737,"title":{},"body":{"classes/Person.html":{}}}],["object.keys",{"_index":3724,"title":{},"body":{"classes/Person.html":{}}}],["object.keys(this.disabled).map",{"_index":840,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.errormessage).map",{"_index":1339,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["object.keys(this.fieldmaxlenghts).map",{"_index":833,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.keys(this.labels).map",{"_index":828,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.readonlyfields).map",{"_index":838,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.lastname",{"_index":3739,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":3738,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":920,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":921,"title":{},"body":{"classes/Address.html":{}}}],["object.setprototypeof(this",{"_index":3497,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["objectid",{"_index":928,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":5363,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":139,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":186,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":191,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observe",{"_index":1049,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":171,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":2919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":2906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":2999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":3002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":5227,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":2001,"title":{},"body":{"interfaces/CountryList.html":{}}}],["occured",{"_index":1512,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":1708,"title":{},"body":{"interfaces/CountryList.html":{}}}],["october",{"_index":2268,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["ocurrence",{"_index":420,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1323,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3450,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":2885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":5385,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":5207,"title":{},"body":{"index.html":{}}}],["oman",{"_index":1994,"title":{},"body":{"interfaces/CountryList.html":{}}}],["omit",{"_index":888,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":1993,"title":{},"body":{"interfaces/CountryList.html":{}}}],["onblur",{"_index":3661,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onblurevent",{"_index":1212,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onblurevent(event",{"_index":1235,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onbtnclick",{"_index":4478,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":2777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":3788,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["onchanges",{"_index":613,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["onclick",{"_index":958,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":970,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2372,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2420,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":4401,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["one",{"_index":274,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":4182,"title":{},"body":{"components/StreetComponent.html":{}}}],["onerror(err",{"_index":4201,"title":{},"body":{"components/StreetComponent.html":{}}}],["ongoing",{"_index":2798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":472,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["oninput",{"_index":2339,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":3582,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":3616,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":4183,"title":{},"body":{"components/StreetComponent.html":{}}}],["onkeyup(event",{"_index":4204,"title":{},"body":{"components/StreetComponent.html":{}}}],["onload",{"_index":3044,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onlyfuturedates",{"_index":2378,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["onpaste",{"_index":3664,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":4184,"title":{},"body":{"components/StreetComponent.html":{}}}],["onselect(event",{"_index":4206,"title":{},"body":{"components/StreetComponent.html":{}}}],["onstatuschange",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":3917,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["onupdate",{"_index":3470,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{}}}],["onupdate(value",{"_index":3474,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{}}}],["onvaluechange",{"_index":1213,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onvaluechange(value",{"_index":1237,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["open",{"_index":2732,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":3051,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3397,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["opens",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["openshift",{"_index":1075,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":5370,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":2767,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opt",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":4438,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1287,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":401,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["optional()@self",{"_index":1193,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["optionally",{"_index":187,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":135,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optiontext",{"_index":375,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":748,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":2766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":3011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":381,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2306,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":760,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["outlying",{"_index":2156,"title":{},"body":{"interfaces/CountryList.html":{}}}],["output",{"_index":611,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":960,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":4423,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":2853,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"miscellaneous/functions.html":{}}}],["override",{"_index":348,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overridesscss",{"_index":5088,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":5246,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":275,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/functions.html":{}}}],["overwritefile",{"_index":5097,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["overwritefile(host",{"_index":5192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overwritten",{"_index":285,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3421,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["package",{"_index":925,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":4897,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":5322,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":64,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1604,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":233,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":404,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":414,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":301,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":270,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":308,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":286,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":315,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":293,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":372,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":418,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":317,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":279,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":324,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":347,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":322,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":329,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":369,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":321,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":331,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":344,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":328,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":376,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":1094,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":537,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelistinterface",{"_index":1127,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagenumber",{"_index":2900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1597,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1603,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":1111,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["pagesection",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["pagesectioncomponent",{"_index":539,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pageurl",{"_index":4010,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["pains",{"_index":5217,"title":{},"body":{"index.html":{}}}],["pak",{"_index":1995,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pakistan",{"_index":1996,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palau",{"_index":1998,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palestinian",{"_index":2000,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pan",{"_index":2002,"title":{},"body":{"interfaces/CountryList.html":{}}}],["panama",{"_index":2003,"title":{},"body":{"interfaces/CountryList.html":{}}}],["papua",{"_index":2005,"title":{},"body":{"interfaces/CountryList.html":{}}}],["paraguay",{"_index":2007,"title":{},"body":{"interfaces/CountryList.html":{}}}],["param",{"_index":170,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePhnDirective.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":73,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":3248,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":641,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parents",{"_index":642,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1311,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parsed",{"_index":2315,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["parseint",{"_index":2316,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["parseint(scaledwidthstring",{"_index":4284,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parsing",{"_index":1522,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["part",{"_index":2048,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ErrorMessage.html":{}}}],["parts",{"_index":3715,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":367,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"directives/YearValidateDirective.html":{}}}],["passed",{"_index":51,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{},"components/StreetComponent.html":{}}}],["passes",{"_index":3620,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":3637,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password",{"_index":1391,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["password'},{'name",{"_index":542,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":3574,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":3573,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":3597,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":3572,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":541,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":3589,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":2222,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["pasting",{"_index":3663,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["path",{"_index":4002,"title":{},"body":{"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["paths",{"_index":4825,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":3167,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["payload",{"_index":1042,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":1051,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcn",{"_index":2012,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pdf",{"_index":1390,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["pdf.good",{"_index":1392,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":3075,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":3061,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":2898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2607,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":3064,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":3063,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":3072,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2641,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2606,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1379,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":3059,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":3918,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":1894,"title":{},"body":{"interfaces/CountryList.html":{}}}],["per",{"_index":2008,"title":{},"body":{"interfaces/CountryList.html":{}}}],["perf",{"_index":4985,"title":{},"body":{"contributing.html":{}}}],["performance",{"_index":770,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"contributing.html":{}}}],["period",{"_index":3198,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/StreetComponent.html":{}}}],["periods",{"_index":1255,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["permissions",{"_index":5243,"title":{},"body":{"license.html":{}}}],["persisted",{"_index":712,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["person",{"_index":2627,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":3716,"title":{},"body":{"classes/Person.html":{}}}],["person.model.ts",{"_index":4147,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1593,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":3172,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["peru",{"_index":2009,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pg",{"_index":199,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":890,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":2011,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phl",{"_index":2010,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phn",{"_index":3744,"title":{},"body":{"components/PhnComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["phn'},{'name",{"_index":544,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phn.component.html",{"_index":3746,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.component.scss",{"_index":3745,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.directive",{"_index":4118,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["phn.directive.ts",{"_index":4318,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["phn.directive.ts:104",{"_index":4323,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.directive.ts:105",{"_index":4322,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.directive.ts:107",{"_index":4324,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.trim().length",{"_index":4328,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn_",{"_index":3750,"title":{},"body":{"components/PhnComponent.html":{}}}],["phncomponent",{"_index":543,"title":{"components/PhnComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":546,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["phone_",{"_index":3794,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumber",{"_index":3787,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["phonenumbercomponent",{"_index":545,"title":{"components/PhoneNumberComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumbercomponent's",{"_index":4359,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["phonenumberregex",{"_index":3784,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumberstring",{"_index":3789,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["pib",{"_index":2967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":2050,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pipe",{"_index":2878,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["pipe(filter((evt",{"_index":2876,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":2922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":2013,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pixel",{"_index":2769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pkg",{"_index":5173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["place",{"_index":206,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":1218,"title":{},"body":{"components/CityComponent.html":{},"components/DropdownComponent.html":{},"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["placeholders",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":3829,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["please",{"_index":2668,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":1689,"title":{},"body":{"interfaces/CountryList.html":{}}}],["plus",{"_index":664,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["plw",{"_index":1997,"title":{},"body":{"interfaces/CountryList.html":{}}}],["png",{"_index":2004,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["po",{"_index":682,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["point",{"_index":349,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":4812,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":2014,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poland",{"_index":2015,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":5347,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":1808,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poor",{"_index":2357,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["populated",{"_index":3045,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":3071,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":2017,"title":{},"body":{"interfaces/CountryList.html":{}}}],["possible",{"_index":1200,"title":{},"body":{"components/CheckboxComponent.html":{},"todo.html":{}}}],["post",{"_index":115,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":154,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":549,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":4111,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4294,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:25",{"_index":4296,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":610,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["postalcode.directive",{"_index":4130,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postalcode.directive.ts",{"_index":4370,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["postalcode.directive.ts:34",{"_index":4373,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:36",{"_index":4374,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode_",{"_index":3846,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":851,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":548,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":2920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":4351,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":2884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3284,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pre",{"_index":4022,"title":{},"body":{"guards/RouteGuardService.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["preceding",{"_index":2840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["premium",{"_index":3386,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prerequisites",{"_index":1118,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":3570,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["preservesymlinks",{"_index":4741,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":3662,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":5348,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":1153,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["previously",{"_index":2943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pri",{"_index":2018,"title":{},"body":{"interfaces/CountryList.html":{}}}],["primarily",{"_index":4418,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":963,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":339,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":3919,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["principe",{"_index":2062,"title":{},"body":{"interfaces/CountryList.html":{}}}],["print",{"_index":885,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":882,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":5316,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":5335,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3380,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":771,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["prk",{"_index":1892,"title":{},"body":{"interfaces/CountryList.html":{}}}],["probably",{"_index":3052,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["problem",{"_index":3562,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["proceed",{"_index":1122,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["process",{"_index":2507,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{},"contributing.html":{}}}],["processing",{"_index":2717,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3400,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3268,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":3253,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1434,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1445,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["progress",{"_index":567,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"contributing.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":4061,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":4138,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":3037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":3036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1583,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":844,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":5394,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":5361,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":5139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../country.component.ts",{"_index":5155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../datepicker.component.ts",{"_index":5141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../duplicate",{"_index":5153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../images.model.ts",{"_index":5140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../index.ts",{"_index":5151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../json.ts",{"_index":5157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../logger.service.ts",{"_index":5142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../package",{"_index":5152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../province.component.ts",{"_index":5156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../validate",{"_index":5154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/common/captcha/src/captcha",{"_index":1021,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":5006,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":1065,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":1067,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":231,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/helpers/library",{"_index":3489,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":470,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":486,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:22",{"_index":485,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":490,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":487,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:26",{"_index":484,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":605,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":977,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":936,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":965,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":966,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":967,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":968,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:40",{"_index":962,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:44",{"_index":969,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:47",{"_index":971,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":1164,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:31",{"_index":1195,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:36",{"_index":1173,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:37",{"_index":1180,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:38",{"_index":1177,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:39",{"_index":1179,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:40",{"_index":1178,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:41",{"_index":1181,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:42",{"_index":1182,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:43",{"_index":1192,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:46",{"_index":1190,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:47",{"_index":1172,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:49",{"_index":1194,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:56",{"_index":1184,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:64",{"_index":1188,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:71",{"_index":1183,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:75",{"_index":1185,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:79",{"_index":1186,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:83",{"_index":1189,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":1208,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:13",{"_index":1224,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":1229,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":1227,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":1222,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:17",{"_index":1230,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:18",{"_index":1223,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:21",{"_index":1231,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:26",{"_index":1259,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:30",{"_index":1233,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:31",{"_index":1232,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:33",{"_index":1245,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:35",{"_index":1257,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:41",{"_index":1244,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:42",{"_index":1221,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:44",{"_index":1246,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:51",{"_index":1234,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:55",{"_index":1238,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:60",{"_index":1236,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:65",{"_index":1243,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:72",{"_index":1239,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:77",{"_index":1240,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:81",{"_index":1241,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:85",{"_index":1242,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/validate",{"_index":4300,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/consent",{"_index":3329,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1606,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1628,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/date/date",{"_index":2326,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":2191,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts:110",{"_index":2241,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:125",{"_index":2243,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:135",{"_index":2252,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:146",{"_index":2228,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:34",{"_index":2273,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:35",{"_index":2256,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:36",{"_index":2276,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:38",{"_index":2225,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:39",{"_index":2221,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:40",{"_index":2217,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:41",{"_index":2220,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:42",{"_index":2216,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:44",{"_index":2223,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:45",{"_index":2219,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:47",{"_index":2226,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:49",{"_index":2271,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:54",{"_index":2259,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:55",{"_index":2254,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:56",{"_index":2214,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:58",{"_index":2257,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:63",{"_index":2231,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:85",{"_index":2238,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:98",{"_index":2233,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/day",{"_index":2493,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/year",{"_index":4499,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2351,"title":{},"body":{"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2414,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2416,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:116",{"_index":2419,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:167",{"_index":2418,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:177",{"_index":2421,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:186",{"_index":2410,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:194",{"_index":2422,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:198",{"_index":2423,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2425,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:36",{"_index":2407,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:37",{"_index":2387,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:38",{"_index":2409,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:39",{"_index":2391,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:40",{"_index":2399,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:42",{"_index":2405,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:46",{"_index":2397,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:49",{"_index":2392,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:52",{"_index":2400,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2382,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:72",{"_index":2389,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2398,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:78",{"_index":2432,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:81",{"_index":2431,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:83",{"_index":2436,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:86",{"_index":2429,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:88",{"_index":2427,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:89",{"_index":2379,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:95",{"_index":2412,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2513,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:11",{"_index":2534,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:13",{"_index":2525,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:14",{"_index":2526,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:15",{"_index":2527,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:16",{"_index":2523,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:17",{"_index":2521,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2522,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:19",{"_index":2528,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2524,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2532,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2520,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2533,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:32",{"_index":2531,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:36",{"_index":2529,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:40",{"_index":2530,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/duplicate",{"_index":2535,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/email/email.component.ts",{"_index":2553,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts:21",{"_index":2562,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:22",{"_index":2563,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:23",{"_index":2567,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:24",{"_index":2565,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:27",{"_index":2568,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:32",{"_index":2580,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:36",{"_index":2570,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:37",{"_index":2569,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:39",{"_index":2579,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:41",{"_index":2577,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:42",{"_index":2561,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:44",{"_index":2578,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:51",{"_index":2572,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:56",{"_index":2571,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:61",{"_index":2576,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:68",{"_index":2573,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:73",{"_index":2574,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:77",{"_index":2575,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:81",{"_index":2582,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/validate",{"_index":4306,"title":{},"body":{"directives/ValidateEmailDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/error",{"_index":2587,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/file",{"_index":2599,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":3113,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":3153,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3275,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3301,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3302,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3300,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3308,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:25",{"_index":3298,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:30",{"_index":3304,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:39",{"_index":3306,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:43",{"_index":3307,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:51",{"_index":3303,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3500,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:21",{"_index":3503,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:22",{"_index":3504,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3507,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3506,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:27",{"_index":3508,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:32",{"_index":3520,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:36",{"_index":3510,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:37",{"_index":3509,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3519,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3517,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:42",{"_index":3502,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:44",{"_index":3518,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3512,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:56",{"_index":3511,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:61",{"_index":3516,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:68",{"_index":3513,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:73",{"_index":3514,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:77",{"_index":3515,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3521,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4313,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3525,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3563,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":3614,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":3619,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":3617,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":3606,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":3608,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":3593,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":3592,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":3591,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":3599,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":3601,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":3596,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":3595,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":3590,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":3602,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":3598,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":3604,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":3603,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":3623,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":3626,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":3628,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":3622,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":3627,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":3624,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":3625,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":3588,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":3615,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":3743,"title":{},"body":{"components/PhnComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:13",{"_index":3749,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:14",{"_index":3752,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:15",{"_index":3755,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:16",{"_index":3751,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:17",{"_index":3748,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:21",{"_index":3756,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:26",{"_index":3769,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:30",{"_index":3758,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:31",{"_index":3757,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:33",{"_index":3768,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:34",{"_index":3767,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:36",{"_index":3765,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:37",{"_index":3747,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:39",{"_index":3766,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:49",{"_index":3760,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:58",{"_index":3759,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:63",{"_index":3764,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:70",{"_index":3761,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:75",{"_index":3762,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:79",{"_index":3763,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/validate",{"_index":4317,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/phone",{"_index":3777,"title":{},"body":{"components/PhoneNumberComponent.html":{},"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":3836,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":3876,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/province/province.component.ts:100",{"_index":3900,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:107",{"_index":3896,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:112",{"_index":3897,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:116",{"_index":3898,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:120",{"_index":3899,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:42",{"_index":3882,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:43",{"_index":3887,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:44",{"_index":3884,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:45",{"_index":3880,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:46",{"_index":3888,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:47",{"_index":3886,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:48",{"_index":3885,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:49",{"_index":3889,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:50",{"_index":3881,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:53",{"_index":3890,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:58",{"_index":3905,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:62",{"_index":3892,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:63",{"_index":3891,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:65",{"_index":3904,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:67",{"_index":3903,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:73",{"_index":3901,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:74",{"_index":3879,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:76",{"_index":3902,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:83",{"_index":3893,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:87",{"_index":3895,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:95",{"_index":3894,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":3933,"title":{},"body":{"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:100",{"_index":3971,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:104",{"_index":3972,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:108",{"_index":3976,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:112",{"_index":3973,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:48",{"_index":3978,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:49",{"_index":3980,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:51",{"_index":3965,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:56",{"_index":3959,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:57",{"_index":3964,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:59",{"_index":3967,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:62",{"_index":3981,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:65",{"_index":3966,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:66",{"_index":3962,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:67",{"_index":3961,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:68",{"_index":3963,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:70",{"_index":3968,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:71",{"_index":3969,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:73",{"_index":3977,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:74",{"_index":3958,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:76",{"_index":3979,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:83",{"_index":3970,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:91",{"_index":3975,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sample",{"_index":4028,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":4150,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:13",{"_index":4157,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:14",{"_index":4160,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:15",{"_index":4161,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:16",{"_index":4159,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:17",{"_index":4155,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:20",{"_index":4162,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:28",{"_index":4175,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:33",{"_index":4164,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":4163,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:36",{"_index":4174,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:37",{"_index":4173,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:39",{"_index":4171,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:40",{"_index":4154,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:42",{"_index":4172,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:52",{"_index":4166,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:61",{"_index":4165,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:66",{"_index":4170,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:73",{"_index":4167,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:78",{"_index":4168,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:82",{"_index":4169,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/validate",{"_index":4390,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":4177,"title":{},"body":{"components/StreetComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/street/street.component.ts:102",{"_index":4214,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:109",{"_index":4210,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:114",{"_index":4211,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:118",{"_index":4212,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:123",{"_index":4205,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:138",{"_index":4202,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:143",{"_index":4208,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:149",{"_index":4213,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:17",{"_index":4189,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:18",{"_index":4192,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:21",{"_index":4191,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:22",{"_index":4187,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:23",{"_index":4194,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:24",{"_index":4193,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:25",{"_index":4188,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:28",{"_index":4195,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:33",{"_index":4227,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:37",{"_index":4198,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:38",{"_index":4196,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:39",{"_index":4197,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:41",{"_index":4224,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:47",{"_index":4225,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:50",{"_index":4220,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:52",{"_index":4222,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:54",{"_index":4219,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:60",{"_index":4215,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:61",{"_index":4186,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:63",{"_index":4216,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:71",{"_index":4199,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:88",{"_index":4209,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:97",{"_index":4200,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/validate",{"_index":4396,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":4255,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:12",{"_index":4266,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":4267,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":4268,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4274,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:17",{"_index":4265,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:22",{"_index":4276,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4272,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:41",{"_index":4270,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:47",{"_index":4273,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:52",{"_index":4271,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4287,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4291,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4292,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4290,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4293,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/validate",{"_index":4385,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/wizard",{"_index":4400,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4476,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":842,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:11",{"_index":856,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":859,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:14",{"_index":864,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":861,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:16",{"_index":872,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":860,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":862,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":863,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:23",{"_index":893,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:27",{"_index":895,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:36",{"_index":878,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:44",{"_index":875,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:50",{"_index":897,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:61",{"_index":874,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":871,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:9",{"_index":855,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":922,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":929,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1580,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:12",{"_index":1587,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:18",{"_index":1590,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:22",{"_index":1596,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/error",{"_index":2594,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1345,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1416,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1418,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1415,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1417,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:29",{"_index":1356,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:35",{"_index":1361,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:36",{"_index":1358,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:38",{"_index":1366,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:39",{"_index":1368,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:40",{"_index":1367,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:41",{"_index":1364,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:42",{"_index":1365,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:43",{"_index":1363,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:46",{"_index":1362,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1360,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:49",{"_index":1357,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1420,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1422,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1421,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:68",{"_index":1423,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.model.ts",{"_index":3469,"title":{},"body":{"classes/MaskModel.html":{},"coverage.html":{}}}],["projects/common/lib/models/mask.model.ts:11",{"_index":3480,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:12",{"_index":3481,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:14",{"_index":3478,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:15",{"_index":3479,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:17",{"_index":3473,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:18",{"_index":3472,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:27",{"_index":3477,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:34",{"_index":3475,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":3680,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":3690,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":3692,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:16",{"_index":3691,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":3688,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":3687,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":3700,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":3704,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:45",{"_index":3698,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":3707,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:71",{"_index":3711,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:85",{"_index":3694,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":3693,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":4143,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":106,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":1086,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":3227,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:22",{"_index":3273,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:23",{"_index":3274,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3269,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:31",{"_index":3271,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:52",{"_index":3272,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:73",{"_index":3270,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1425,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:110",{"_index":1552,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:129",{"_index":1553,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:147",{"_index":1578,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:154",{"_index":1561,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:158",{"_index":1559,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:166",{"_index":1560,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:179",{"_index":1427,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/logger.service.ts:23",{"_index":1567,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:29",{"_index":1549,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:35",{"_index":1573,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:39",{"_index":1571,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:43",{"_index":1577,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:47",{"_index":1575,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:51",{"_index":1562,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:55",{"_index":1555,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:59",{"_index":1557,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:79",{"_index":1550,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:84",{"_index":1551,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:93",{"_index":1558,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/route",{"_index":3988,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":4050,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":5373,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":5306,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":5374,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":5070,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":5074,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/moh",{"_index":5077,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/version",{"_index":5104,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/src/public_api.ts",{"_index":5397,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":5115,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":5108,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":342,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/RouteGuardService.html":{}}}],["proper",{"_index":1387,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":3143,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1542,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["property",{"_index":1458,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["props",{"_index":3255,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":3265,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":3262,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3263,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":3257,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.provincecode",{"_index":3264,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3379,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prototype",{"_index":3495,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["protractor",{"_index":424,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":779,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["prov.country",{"_index":778,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provide",{"_index":204,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":320,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":1137,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1278,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":217,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":234,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":383,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":552,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":3878,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":3877,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":889,"title":{},"body":{"classes/Address.html":{}}}],["province/province.component",{"_index":632,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["province_",{"_index":3883,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":631,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["province_list.find",{"_index":3932,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecode",{"_index":3906,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"miscellaneous/functions.html":{}}}],["provincecomponent",{"_index":551,"title":{"components/ProvinceComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":629,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["provincial",{"_index":3383,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1621,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":675,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj",{"_index":783,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.description",{"_index":791,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.provincecode",{"_index":789,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["prt",{"_index":2016,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pry",{"_index":2006,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pse",{"_index":1999,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":3666,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":3667,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":3579,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":220,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["public_api",{"_index":1333,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["publish",{"_index":5383,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4581,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":2019,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pull",{"_index":5213,"title":{},"body":{"index.html":{}}}],["pure",{"_index":5291,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":3705,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3286,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":3585,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":1807,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qat",{"_index":2021,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qatar",{"_index":2022,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qc",{"_index":3921,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["quality",{"_index":2774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1304,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1272,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":3922,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["query",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":4429,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":72,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":3137,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["questions",{"_index":3388,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1279,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1321,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1301,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1292,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["radio",{"_index":3934,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":3945,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":554,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":3954,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":3953,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio.component.ts",{"_index":5259,"title":{},"body":{"todo.html":{}}}],["radio/checkbox",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["radiocomponent",{"_index":553,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":3946,"title":{},"body":{"components/RadioComponent.html":{}}}],["radios",{"_index":3935,"title":{},"body":{"components/RadioComponent.html":{}}}],["ran",{"_index":5364,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":3110,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rapid",{"_index":3437,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3440,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":2770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1316,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1382,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["re",{"_index":640,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":3032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reactive",{"_index":2549,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["read",{"_index":2735,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":305,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":2926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":2982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":3003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":3057,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":3043,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":282,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":4795,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readonlyfields",{"_index":634,"title":{"interfaces/ReadOnlyFields.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["readpdf(pdffile",{"_index":3058,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reason",{"_index":2704,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["receiving",{"_index":1476,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["recommend",{"_index":3571,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":341,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["reduced",{"_index":2408,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ref",{"_index":2947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2481,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["refactored",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4994,"title":{},"body":{"contributing.html":{}}}],["reference",{"_index":4879,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":312,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":314,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regex",{"_index":910,"title":{},"body":{"classes/Address.html":{},"components/PhoneNumberComponent.html":{}}}],["regex.test(this.postal",{"_index":912,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":3600,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4298,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":911,"title":{},"body":{"classes/Address.html":{}}}],["region.directive",{"_index":4129,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["region.directive.ts",{"_index":4386,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["region.directive.ts:26",{"_index":4388,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["region/validate",{"_index":4128,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["register",{"_index":1071,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registered",{"_index":637,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["registeronchange",{"_index":991,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registeronchange(fn",{"_index":818,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registerontouched",{"_index":992,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registerontouched(fn",{"_index":821,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registration",{"_index":4000,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":216,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["registrationservice",{"_index":219,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["reject",{"_index":4517,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["related",{"_index":4744,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":5366,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["release",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":5299,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remainder",{"_index":4336,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["remove",{"_index":754,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["removed",{"_index":2837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["removeline(line",{"_index":753,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["removing",{"_index":3024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rename",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":3393,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2703,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reorder",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["reorganize",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["repellat",{"_index":1291,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":3648,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"directives/ValidatePhoneDirective.html":{},"todo.html":{}}}],["replace(/\\s/g",{"_index":4365,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["replace(/_/g",{"_index":4363,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["repo",{"_index":5169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo=https://github.com/bcgov/prime",{"_index":5170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reprehenderit",{"_index":1307,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":1732,"title":{},"body":{"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1313,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1535,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["req",{"_index":4327,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{}}}],["request",{"_index":132,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1438,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["requests",{"_index":145,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":5117,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2633,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2640,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2636,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":50,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":3168,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requirements",{"_index":3567,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":635,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["requisite",{"_index":4023,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1275,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":1064,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":3092,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":2924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":2762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":2789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":5344,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["respective",{"_index":136,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1525,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["response",{"_index":1040,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["responsetype",{"_index":1520,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["rest",{"_index":3107,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restore",{"_index":3499,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["restrictdate",{"_index":2208,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["result",{"_index":102,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":104,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":2768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrieve",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["retry",{"_index":3012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":3014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2616,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["returned",{"_index":1043,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":57,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["reu",{"_index":2023,"title":{},"body":{"interfaces/CountryList.html":{}}}],["reverts",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["reviewmode",{"_index":4262,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["rica",{"_index":1756,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rico",{"_index":2020,"title":{},"body":{"interfaces/CountryList.html":{}}}],["right",{"_index":387,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":3610,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":3670,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["romania",{"_index":2026,"title":{},"body":{"interfaces/CountryList.html":{}}}],["root",{"_index":1138,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":2754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":2025,"title":{},"body":{"interfaces/CountryList.html":{}}}],["route",{"_index":76,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeguard",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":214,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3293,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3305,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routepath",{"_index":1594,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1598,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":22,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4405,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":4064,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":4013,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routes",{"_index":3995,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":4001,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":5324,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":3938,"title":{},"body":{"components/RadioComponent.html":{}}}],["rule",{"_index":5171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rules",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":2245,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":4917,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":67,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":681,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{}}}],["rus",{"_index":2027,"title":{},"body":{"interfaces/CountryList.html":{}}}],["russian",{"_index":2028,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwa",{"_index":2030,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwanda",{"_index":2031,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rxjs",{"_index":166,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":169,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":2024,"title":{},"body":{"interfaces/CountryList.html":{}}}],["s",{"_index":2956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["s+)@(\\s+)\\.(\\s",{"_index":4310,"title":{},"body":{"directives/ValidateEmailDirective.html":{}}}],["saba",{"_index":1694,"title":{},"body":{"interfaces/CountryList.html":{}}}],["safe",{"_index":4467,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":2177,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saint",{"_index":2033,"title":{},"body":{"interfaces/CountryList.html":{}}}],["salvador",{"_index":1783,"title":{},"body":{"interfaces/CountryList.html":{}}}],["same",{"_index":405,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":1645,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sample",{"_index":556,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["sampleimageinterface",{"_index":4027,"title":{"interfaces/SampleImageInterface.html":{}},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["samplemodal",{"_index":4032,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["samplemodalcomponent",{"_index":555,"title":{"components/SampleModalComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["san",{"_index":2057,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sandwich",{"_index":2092,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sao",{"_index":2060,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1269,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":3924,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2475,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["sau",{"_index":2063,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saudi",{"_index":2064,"title":{},"body":{"interfaces/CountryList.html":{}}}],["save",{"_index":4335,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"index.html":{}}}],["saved",{"_index":2796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":3026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scale",{"_index":1413,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":2979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":2945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1419,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1406,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":4258,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4278,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":2887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":3010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":2888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":3007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":2850,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2614,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":3017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4446,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schema",{"_index":3828,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["schematic",{"_index":4940,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":5327,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":4938,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":5326,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":5305,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3359,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scopes",{"_index":4992,"title":{},"body":{"contributing.html":{}}}],["scotia",{"_index":3916,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["screen",{"_index":281,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["screenreader",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":4965,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["scriptname",{"_index":5159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scripts",{"_index":4791,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":4464,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrolldown",{"_index":261,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolls",{"_index":78,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4410,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrollup",{"_index":262,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":5353,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":2100,"title":{},"body":{"interfaces/CountryList.html":{}}}],["search",{"_index":792,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{}}}],["searchtext",{"_index":4180,"title":{},"body":{"components/StreetComponent.html":{}}}],["second",{"_index":669,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["secondary",{"_index":964,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3282,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":540,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":4080,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3549,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3548,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3547,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:17",{"_index":3550,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:21",{"_index":3552,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3546,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3354,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":4803,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["see",{"_index":213,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":378,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":4083,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectedday",{"_index":4502,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["selectedmonth",{"_index":2498,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["selectedyear",{"_index":2499,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["selectevent",{"_index":4185,"title":{},"body":{"components/StreetComponent.html":{}}}],["selectfilelabelref",{"_index":2660,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":411,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/StreetComponent.html":{}}}],["selections",{"_index":2394,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":263,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":374,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":474,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["selects",{"_index":377,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":1198,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["self.dataservice.getmspuuid",{"_index":2894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":2950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":3000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":2951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["semantic",{"_index":5265,"title":{},"body":{"todo.html":{}}}],["semi",{"_index":4983,"title":{},"body":{"contributing.html":{}}}],["sen",{"_index":2066,"title":{},"body":{"interfaces/CountryList.html":{}}}],["send",{"_index":125,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["sending",{"_index":649,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sends",{"_index":408,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3438,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":2067,"title":{},"body":{"interfaces/CountryList.html":{}}}],["september",{"_index":2267,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["sequence",{"_index":1125,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":3992,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1331,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":2069,"title":{},"body":{"interfaces/CountryList.html":{}}}],["server",{"_index":147,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":1044,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":111,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":108,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:11",{"_index":121,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:16",{"_index":123,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:22",{"_index":129,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:30",{"_index":156,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:38",{"_index":158,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:52",{"_index":160,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:59",{"_index":142,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2619,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2621,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3296,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":4809,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3344,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/geocoder.service",{"_index":621,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{}}}],["services/logger.service",{"_index":3343,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sessionid",{"_index":1437,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["set",{"_index":657,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["set('addressstring",{"_index":3246,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":3243,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":3239,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":3238,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":3244,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":3237,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":3236,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setaddress(data",{"_index":812,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setapplicationid(id",{"_index":1572,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setbuttongrpval",{"_index":993,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":1008,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":1131,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setcheckboxval",{"_index":1169,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcheckboxval(event",{"_index":1187,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcity(value",{"_index":732,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setcountry(value",{"_index":720,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setday",{"_index":2202,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setday(value",{"_index":2232,"title":{},"body":{"components/DateComponent.html":{}}}],["setdefaultcountryasoption",{"_index":796,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultprovinceasoption(country",{"_index":782,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdisabledstate",{"_index":1214,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":823,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["seterrormsg",{"_index":1215,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["setfirstname(value",{"_index":3220,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setlabels",{"_index":826,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setlastname(value",{"_index":3224,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmaxlengths",{"_index":831,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setmiddlename(value",{"_index":3223,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmonth",{"_index":2203,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setmonth(value",{"_index":2237,"title":{},"body":{"components/DateComponent.html":{}}}],["setname(fullname",{"_index":3710,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":1097,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete",{"_index":1098,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpassword",{"_index":3583,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":3618,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setphonenumber",{"_index":3785,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setphonenumber(evt",{"_index":3805,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setpostalcode(value",{"_index":737,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setprogramname(name",{"_index":1576,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setprogresssteps",{"_index":1585,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1595,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":729,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setreadonlyfields",{"_index":836,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sets",{"_index":734,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["setseverity",{"_index":1547,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setseverity(severity",{"_index":1530,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setstarturl(url",{"_index":1129,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":3956,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(evt",{"_index":3974,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstreet(val",{"_index":894,"title":{},"body":{"classes/Address.html":{}}}],["setstreetaddress(value",{"_index":730,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["settags",{"_index":1548,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["settags(message",{"_index":1536,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["settimeout",{"_index":2309,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["settimestamp",{"_index":1527,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setting",{"_index":2402,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["settings",{"_index":5196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":202,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":4964,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["setuprequest",{"_index":116,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":157,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1495,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["seturl(newurl",{"_index":1446,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setvalue(val",{"_index":1260,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["setyear",{"_index":2204,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setyear(value",{"_index":2240,"title":{},"body":{"components/DateComponent.html":{}}}],["severity",{"_index":1487,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["severitylevels",{"_index":1531,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":2071,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgp",{"_index":2075,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgs",{"_index":2091,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sha1",{"_index":2635,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":2987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2639,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2700,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3356,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":4046,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":358,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":2035,"title":{},"body":{"interfaces/CountryList.html":{}}}],["shouldn't",{"_index":3448,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"contributing.html":{}}}],["show",{"_index":47,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":995,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/RadioComponent.html":{},"todo.html":{}}}],["showfullsizeview",{"_index":3429,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["showline${line",{"_index":751,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline2",{"_index":676,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline3",{"_index":677,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["shown",{"_index":3349,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":3586,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":3939,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1511,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":2073,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sign",{"_index":4217,"title":{},"body":{"components/StreetComponent.html":{},"changelog.html":{}}}],["similar",{"_index":3132,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/StreetComponent.html":{},"directives/YearValidateDirective.html":{},"contributing.html":{}}}],["simple",{"_index":1090,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["simplechanges",{"_index":2417,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["simpledate",{"_index":2215,"title":{"interfaces/SimpleDate.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":5352,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":945,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":3023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{}}}],["simulates",{"_index":4249,"title":{},"body":{"components/StreetComponent.html":{}}}],["sin",{"_index":4151,"title":{},"body":{"components/SinComponent.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":558,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":4153,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":4152,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.directive",{"_index":4116,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["sin.directive.ts",{"_index":4391,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["sin.directive.ts:74",{"_index":4393,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["sin.length",{"_index":4394,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["sin_",{"_index":4158,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":557,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":2076,"title":{},"body":{"interfaces/CountryList.html":{}}}],["single",{"_index":3279,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sint",{"_index":1692,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sit",{"_index":1264,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1623,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["sitereg",{"_index":3558,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["size",{"_index":1353,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["sizetxt",{"_index":1354,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1355,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":2103,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sk",{"_index":3923,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["skiblibcheck",{"_index":5199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":280,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3290,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":5341,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3291,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":248,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":2084,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sle",{"_index":2072,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slightly",{"_index":3318,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1617,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1611,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":2081,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slovenia",{"_index":2083,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slv",{"_index":1781,"title":{},"body":{"interfaces/CountryList.html":{}}}],["small",{"_index":2788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smooth",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{}}}],["smr",{"_index":2056,"title":{},"body":{"interfaces/CountryList.html":{}}}],["social",{"_index":4156,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":5233,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":2085,"title":{},"body":{"interfaces/CountryList.html":{}}}],["solve",{"_index":2881,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":2086,"title":{},"body":{"interfaces/CountryList.html":{}}}],["somalia",{"_index":2087,"title":{},"body":{"interfaces/CountryList.html":{}}}],["something",{"_index":886,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":5076,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortobjectbykeys(obj",{"_index":5177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sorts",{"_index":5178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["south",{"_index":2089,"title":{},"body":{"interfaces/CountryList.html":{}}}],["southern",{"_index":1810,"title":{},"body":{"interfaces/CountryList.html":{}}}],["soutput",{"_index":2960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3332,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3336,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3337,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_acl_maintenance_flag\":\"\",\"spa_env_msp_acl_maintenance_message",{"_index":3419,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3338,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3420,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3339,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3439,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3340,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3341,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3342,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now",{"_index":3422,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2385,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":5379,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":3487,"title":{},"body":{"classes/MaskModel.html":{},"directives/ValidatePhoneDirective.html":{}}}],["spaenvres",{"_index":3413,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":2096,"title":{},"body":{"interfaces/CountryList.html":{}}}],["specfic",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":1252,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["specific",{"_index":650,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":5198,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["specificmember",{"_index":3952,"title":{},"body":{"components/RadioComponent.html":{}}}],["specified",{"_index":133,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["spinner",{"_index":49,"title":{},"body":{"classes/AbstractForm.html":{}}}],["split",{"_index":2892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":3240,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":1393,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["spm",{"_index":2049,"title":{},"body":{"interfaces/CountryList.html":{}}}],["srb",{"_index":2068,"title":{},"body":{"interfaces/CountryList.html":{}}}],["src/version.js",{"_index":5168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sri",{"_index":2098,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ssd",{"_index":2093,"title":{},"body":{"interfaces/CountryList.html":{}}}],["stable",{"_index":3258,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["stack",{"_index":4494,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["standard",{"_index":883,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":4939,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4457,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":5080,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":5083,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":5085,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":5078,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":5087,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":5089,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":5091,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":5093,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start/package",{"_index":5100,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":4522,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":5271,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["starts",{"_index":2901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["starturl",{"_index":1099,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":687,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":5004,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1950,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":850,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["status",{"_index":3983,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{},"todo.html":{}}}],["statuschange",{"_index":3957,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["statustext",{"_index":1481,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["step",{"_index":2852,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4475,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4406,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1588,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["stepper/wizard",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["stepper/wizardprogress",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":2718,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["still",{"_index":2555,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PageSectionComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":857,"title":{},"body":{"classes/Address.html":{},"components/StreetComponent.html":{}}}],["stored",{"_index":766,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stp",{"_index":2059,"title":{},"body":{"interfaces/CountryList.html":{}}}],["str",{"_index":2508,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["street",{"_index":666,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":560,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.html",{"_index":4179,"title":{},"body":{"components/StreetComponent.html":{}}}],["street.component.scss",{"_index":4178,"title":{},"body":{"components/StreetComponent.html":{}}}],["street.component.ts",{"_index":5264,"title":{},"body":{"todo.html":{}}}],["street.directive",{"_index":4124,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["street.directive.ts",{"_index":4397,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["street.directive.ts:25",{"_index":4399,"title":{},"body":{"directives/ValidateStreetDirective.html":{}}}],["street_",{"_index":4190,"title":{},"body":{"components/StreetComponent.html":{}}}],["streetcomponent",{"_index":559,"title":{"components/StreetComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3564,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":3580,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":71,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["stripped",{"_index":4362,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["stripped.length",{"_index":4368,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["structure",{"_index":651,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/YearValidateDirective.html":{}}}],["style",{"_index":937,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageSectionComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["style.width]='strengthpercentage",{"_index":3671,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":3679,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":5323,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styled",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1609,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":5386,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":5381,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":5380,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":5320,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["stylesscss",{"_index":5090,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":476,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":955,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3276,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sub",{"_index":3241,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":1538,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["subfolder",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":4221,"title":{},"body":{"components/StreetComponent.html":{}}}],["submission",{"_index":1461,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["submit",{"_index":269,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3532,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitlabel",{"_index":3120,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["submitted",{"_index":703,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["subscribe",{"_index":1456,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["subscribe(evt",{"_index":2809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3455,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3313,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4442,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscription",{"_index":4426,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["success",{"_index":194,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["success_fetch_img",{"_index":5146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":5149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":2891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":952,"title":{},"body":{"components/ButtonComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":2094,"title":{},"body":{"interfaces/CountryList.html":{}}}],["suggestion",{"_index":3561,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["sum",{"_index":4337,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{}}}],["sumofremainders",{"_index":4338,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["sunhighlight",{"_index":2452,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["super",{"_index":697,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":1442,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["super(message",{"_index":3493,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["supply",{"_index":4491,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["support",{"_index":4569,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sur",{"_index":2101,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sure",{"_index":709,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":2102,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svalbard",{"_index":2104,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svg",{"_index":5245,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":2080,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svn",{"_index":2082,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swaziland",{"_index":2108,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swe",{"_index":2109,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sweden",{"_index":2110,"title":{},"body":{"interfaces/CountryList.html":{}}}],["switch",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4454,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":4229,"title":{},"body":{"components/StreetComponent.html":{}}}],["switchmap(searchphrase",{"_index":4234,"title":{},"body":{"components/StreetComponent.html":{}}}],["switzerland",{"_index":2112,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swz",{"_index":2107,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sxm",{"_index":2077,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syc",{"_index":2070,"title":{},"body":{"interfaces/CountryList.html":{}}}],["symbol",{"_index":4367,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["symlink",{"_index":5325,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":2113,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syrian",{"_index":2114,"title":{},"body":{"interfaces/CountryList.html":{}}}],["system",{"_index":2716,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":130,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":3281,"title":{},"body":{"components/HeaderComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["tabbed",{"_index":284,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":3960,"title":{},"body":{"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5118,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":3039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1534,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["taiwan",{"_index":2117,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":2119,"title":{},"body":{"interfaces/CountryList.html":{}}}],["take",{"_index":3366,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":162,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":2121,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tap",{"_index":168,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["tap(log",{"_index":4236,"title":{},"body":{"components/StreetComponent.html":{}}}],["target",{"_index":137,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["targetpath",{"_index":5190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tca",{"_index":2143,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tcd",{"_index":1733,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tell",{"_index":5319,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":467,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["templates",{"_index":5355,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":478,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":2931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1290,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1296,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":1811,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":1709,"title":{},"body":{"interfaces/CountryList.html":{}}}],["test",{"_index":232,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{}}}],["test(var1",{"_index":2868,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":350,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["tests",{"_index":238,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{},"contributing.html":{}}}],["text",{"_index":300,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["text)).click",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":3485,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":4077,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":2128,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tha",{"_index":2123,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thailand",{"_index":2124,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thanks",{"_index":4864,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1485,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{}}}],["there's",{"_index":2476,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["therefore",{"_index":810,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["theyt",{"_index":3033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":3568,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3453,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._bypassguards",{"_index":1140,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":4020,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this._headers",{"_index":195,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1444,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set",{"_index":1443,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('severity",{"_index":1532,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('tags",{"_index":1537,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('timestamp",{"_index":1528,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._log",{"_index":1451,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._logerror",{"_index":1453,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._onchange",{"_index":819,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this._onchange(event",{"_index":1206,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2488,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(evt",{"_index":3986,"title":{},"body":{"components/RadioComponent.html":{}}}],["this._onchange(null",{"_index":2484,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(this.addr",{"_index":726,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._onchange(this.person",{"_index":3222,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(true",{"_index":3435,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":1016,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this._onchange(value",{"_index":3834,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._onchange(values",{"_index":3219,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":822,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this._ontouched(this.addr",{"_index":728,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._sendlog(errormessage",{"_index":1471,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._sendlog(message",{"_index":1468,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._starturl",{"_index":1139,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._value",{"_index":3982,"title":{},"body":{"components/RadioComponent.html":{}}}],["this.accept.emit(fn",{"_index":3467,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3432,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4443,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addline(2",{"_index":715,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addline(3",{"_index":717,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr",{"_index":660,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline1",{"_index":731,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline2",{"_index":714,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline3",{"_index":716,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.city",{"_index":733,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.country",{"_index":701,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.postal",{"_index":725,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.province",{"_index":707,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.address[addrlookup",{"_index":763,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.addr",{"_index":727,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addressline1",{"_index":903,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":914,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":916,"title":{},"body":{"classes/Address.html":{}}}],["this.addrlabels[x",{"_index":829,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.allowemptyvalue",{"_index":4347,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["this.allowextralines",{"_index":713,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.application",{"_index":2677,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.base_url}/addresses.json",{"_index":3233,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.blurevent.emit",{"_index":1336,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":3094,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":2880,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":3097,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":976,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":1017,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.cancontinue",{"_index":3129,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":3096,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":3098,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4448,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":2312,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":1207,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":2843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":904,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2483,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4498,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4497,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3434,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.commonyearvalidate",{"_index":4512,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.componentlabel",{"_index":3638,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3398,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.continuebutton",{"_index":428,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":427,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2690,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2464,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2468,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1605,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":906,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{}}}],["this.countrylist",{"_index":800,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.countrylist.find",{"_index":801,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.criteriamsg",{"_index":3647,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3465,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":1018,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":1205,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":1015,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":3078,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2299,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.date.day",{"_index":2293,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.month",{"_index":2291,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.year",{"_index":2295,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit",{"_index":2302,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2487,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2451,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":3725,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.day",{"_index":3722,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.month",{"_index":3721,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.year",{"_index":3720,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth[key",{"_index":3726,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2450,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2463,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2466,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2458,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2460,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dayref",{"_index":2303,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.defaultcountry",{"_index":797,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.defaulterrmsg[x",{"_index":1340,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["this.defaulterrormessage",{"_index":1203,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["this.defaultprovince",{"_index":786,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disabled",{"_index":824,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.disabled[x",{"_index":841,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablegeocoder",{"_index":808,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.dobformat",{"_index":3723,"title":{},"body":{"classes/Person.html":{}}}],["this.duplist",{"_index":2552,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["this.email",{"_index":2583,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.errmsg",{"_index":3212,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":3654,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":3652,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":3650,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":3089,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessage",{"_index":1338,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["this.errormessage[x",{"_index":1341,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["this.errormessagerequired",{"_index":1202,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["this.errormessages",{"_index":2288,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":3653,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":3651,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":3649,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.fieldmaxlenghts[x",{"_index":835,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.findcountrycode",{"_index":706,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.firstname",{"_index":3206,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":643,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.controls[this.daylabelforid",{"_index":2310,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls[this.daylabelforid].updatevalueandvalidity",{"_index":2311,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls[this.yearlabelforid",{"_index":2313,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls[this.yearlabelforid].updatevalueandvalidity",{"_index":2314,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.form.get(x).markastouched",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":3217,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3430,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3433,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3431,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3317,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":4235,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.get",{"_index":5287,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":3247,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4447,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4444,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2678,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getnumericvalue",{"_index":2297,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.getpasswordstrength",{"_index":3658,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":1143,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":2835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":2863,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":2865,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":2857,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":2844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":2845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.hasmask",{"_index":4384,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["this.heightfactor",{"_index":1412,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":179,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":1053,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":183,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":1048,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":176,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2689,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4281,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4280,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":2834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":3100,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":3105,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":3080,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":3081,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.inmaintenance",{"_index":3428,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.isbcphn",{"_index":4346,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["this.iscanada",{"_index":722,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.isdate(this.disablesince",{"_index":2462,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2465,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdobempty",{"_index":3719,"title":{},"body":{"classes/Person.html":{}}}],["this.isloading",{"_index":3128,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.ispagelistempty",{"_index":1141,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.isundermaintenance",{"_index":3427,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":1204,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"components/XiconButtonComponent.html":{}}}],["this.labels",{"_index":827,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labels[x",{"_index":830,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labeltext",{"_index":2449,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":3208,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":181,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":3076,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1460,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3444,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":2890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.maintenanceflag",{"_index":3459,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3460,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":3772,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlen",{"_index":3523,"title":{},"body":{"components/NameComponent.html":{}}}],["this.maxlength",{"_index":2586,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.maxlengths",{"_index":832,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.maxlengths[x",{"_index":834,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.middlename",{"_index":3210,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":3640,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":3645,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":3646,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2473,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.monthref",{"_index":2298,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.namestr",{"_index":3522,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2350,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2489,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2492,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2715,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":1226,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":2829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":3221,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(this.phonenumber",{"_index":3833,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.onchange.emit(values",{"_index":3218,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":4239,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.onlyfuturedates",{"_index":2467,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":1149,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":1157,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":1160,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":1163,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":1150,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":1154,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":1152,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.password",{"_index":3656,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":3660,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":3214,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person",{"_index":3205,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":3207,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":3209,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":3211,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.phn",{"_index":3771,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phonenumber",{"_index":3830,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.placeholder",{"_index":3823,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.post()these",{"_index":5288,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1505,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":908,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":909,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":3873,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1602,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4460,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4451,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":907,"title":{},"body":{"classes/Address.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist",{"_index":773,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provincelist.find",{"_index":784,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provlist",{"_index":776,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.pswdstrength",{"_index":3657,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":2908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.readonlyfields[x",{"_index":839,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.required",{"_index":3104,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":3213,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":2836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":2899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":2915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.events.pipe",{"_index":3310,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":4025,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.url",{"_index":1144,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.router.url.includes(url",{"_index":3315,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3327,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4439,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4449,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.samplemodal.hide",{"_index":4035,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.samplemodal.show",{"_index":4033,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.scaledwidth",{"_index":4283,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4445,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.search",{"_index":4241,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":4248,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.searchtext$.pipe",{"_index":4232,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.selectedday",{"_index":4507,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.selectedmonth",{"_index":2505,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["this.selectedyear",{"_index":2504,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["this.selectevent.emit",{"_index":4254,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.sendspaenvserver(headername",{"_index":3454,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":4021,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":4026,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":4024,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setdefaultcountryasoption",{"_index":702,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption",{"_index":721,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption(this.addr.country",{"_index":708,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.seterrormsg",{"_index":1334,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{}}}],["this.setlabels",{"_index":698,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setmaxlengths",{"_index":699,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setpagecomplete",{"_index":4005,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":4004,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setreadonlyfields",{"_index":700,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1470,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1467,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settags(message.event",{"_index":1492,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settimestamp",{"_index":1491,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setuprequest(observable",{"_index":180,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":3082,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.showline2",{"_index":749,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.showline3",{"_index":750,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.sin",{"_index":4176,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2454,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3316,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":431,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3456,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3458,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3461,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3462,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3463,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3464,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.statuschange.emit(evt",{"_index":3984,"title":{},"body":{"components/RadioComponent.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4462,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.street",{"_index":4230,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.strengthpercentage",{"_index":3659,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.triggerdayvalidation",{"_index":2300,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.triggeryearvalidation",{"_index":2301,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.typeaheadlist",{"_index":4231,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.updateprovlist",{"_index":718,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.updateskipcontentlink",{"_index":3314,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1447,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.usecurrentdate",{"_index":2289,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.usegeocoder",{"_index":4240,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.uuid",{"_index":1398,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.value",{"_index":3835,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{}}}],["this.valuechange.emit",{"_index":1335,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.valuechange.emit(evt",{"_index":3985,"title":{},"body":{"components/RadioComponent.html":{}}}],["this.viewcontainerref",{"_index":4277,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1410,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2709,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this[lookup",{"_index":752,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["those",{"_index":5272,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":2948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3449,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["throw",{"_index":146,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/XiconButtonComponent.html":{}}}],["throwerror",{"_index":1430,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('geocoder",{"_index":3267,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1519,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["throwerror(msg",{"_index":1497,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["thumbnail",{"_index":2803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["thumbnail'},{'name",{"_index":562,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":4257,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":4256,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":561,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":2966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tiff",{"_index":2758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":3147,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":2955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":2305,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["times",{"_index":2849,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["timor",{"_index":2126,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tip",{"_index":1072,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3536,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":483,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":2118,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkl",{"_index":2130,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkm",{"_index":2141,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tls",{"_index":2125,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobago",{"_index":2136,"title":{},"body":{"interfaces/CountryList.html":{}}}],["today",{"_index":2224,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["todo",{"_index":34,"title":{"todo.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"todo.html":{}}}],["together",{"_index":3709,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":985,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":564,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4289,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4288,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":563,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":2129,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tohse",{"_index":5384,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tokelau",{"_index":2131,"title":{},"body":{"interfaces/CountryList.html":{}}}],["told",{"_index":2723,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":2061,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2404,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ton",{"_index":2132,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tonga",{"_index":2133,"title":{},"body":{"interfaces/CountryList.html":{}}}],["toobig",{"_index":1375,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":3633,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1374,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":79,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":853,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1489,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["touched",{"_index":1337,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["trace",{"_index":4495,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["track",{"_index":933,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1394,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3353,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":2981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["transformfn",{"_index":5203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translation",{"_index":1029,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["treated",{"_index":4325,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["tree",{"_index":469,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["trigger",{"_index":184,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["triggerdayvalidation",{"_index":2205,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["triggers",{"_index":3103,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["triggeryearvalidation",{"_index":2206,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["trimmed",{"_index":2344,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2348,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2349,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":3250,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":2135,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tristan",{"_index":2038,"title":{},"body":{"interfaces/CountryList.html":{}}}],["true",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3402,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["try/catch",{"_index":4468,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ts",{"_index":5303,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":4942,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsconfig.json",{"_index":5197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tsdoc",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["tslint",{"_index":2643,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3415,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2644,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":2134,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tun",{"_index":2137,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tunisia",{"_index":2138,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tur",{"_index":2139,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkey",{"_index":2140,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":2142,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turks",{"_index":2144,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turn",{"_index":2772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":1146,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":2146,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":2147,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tweak",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["tweaks",{"_index":392,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":2116,"title":{},"body":{"interfaces/CountryList.html":{}}}],["two",{"_index":5371,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeahead",{"_index":4226,"title":{},"body":{"components/StreetComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":4181,"title":{},"body":{"components/StreetComponent.html":{}}}],["typeaheadmatch",{"_index":4207,"title":{},"body":{"components/StreetComponent.html":{}}}],["typeaheadmodule",{"_index":4063,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":4141,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeof",{"_index":837,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["typeoption",{"_index":264,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":403,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":5339,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":419,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"contributing.html":{}}}],["types/pdfjs",{"_index":5124,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4775,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["typetext",{"_index":265,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":413,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":266,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":417,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":3990,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["typically",{"_index":4358,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["typo",{"_index":366,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":2120,"title":{},"body":{"interfaces/CountryList.html":{}}}],["u.s",{"_index":2171,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uga",{"_index":2148,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uganda",{"_index":2149,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ui",{"_index":4246,"title":{},"body":{"components/StreetComponent.html":{}}}],["ukr",{"_index":2150,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ukraine",{"_index":2151,"title":{},"body":{"interfaces/CountryList.html":{}}}],["umi",{"_index":2155,"title":{},"body":{"interfaces/CountryList.html":{}}}],["unable",{"_index":1494,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["unchecked",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":5346,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1276,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":178,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["under",{"_index":2988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlines",{"_index":4364,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["underlying",{"_index":5218,"title":{},"body":{"index.html":{}}}],["underscore",{"_index":4361,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["understand",{"_index":3407,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1401,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":2286,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["united",{"_index":2122,"title":{},"body":{"interfaces/CountryList.html":{}}}],["united_states",{"_index":626,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["unknown",{"_index":1377,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":981,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unreleased",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["unsuccessful",{"_index":1516,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":3020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":2746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["up",{"_index":373,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":5343,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":336,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":5098,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateangularjson(host",{"_index":5193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateappcomponentts",{"_index":5112,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateappcomponentts(tree",{"_index":5162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updated",{"_index":2308,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":5113,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatepackagejson(tree",{"_index":5165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateprovlist",{"_index":772,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updates",{"_index":764,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"miscellaneous/functions.html":{}}}],["updateskipcontentlink",{"_index":3294,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":5099,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatetsconfig(host",{"_index":5194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updating",{"_index":953,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":2669,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploaded",{"_index":1347,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2646,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":528,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":4075,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2647,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2648,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1372,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2600,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":3001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":3077,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2662,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["upper",{"_index":736,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["uppercase",{"_index":3484,"title":{},"body":{"classes/MaskModel.html":{}}}],["uppercasepipe",{"_index":3471,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":3476,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["url",{"_index":80,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/WizardProgressBarComponent.html":{}}}],["url.com/fpcare/example#content",{"_index":3322,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.includes",{"_index":1161,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["url.includes(x.route",{"_index":4461,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["urlbasename",{"_index":3297,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urltree",{"_index":4015,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":2158,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ury",{"_index":2157,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usa",{"_index":1633,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usable",{"_index":5282,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1619,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":239,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["usecurrentdate",{"_index":2209,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["used",{"_index":163,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedropdownlist",{"_index":2190,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":218,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["useful",{"_index":2386,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":807,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{}}}],["user",{"_index":59,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["user's",{"_index":2797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":3569,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["users",{"_index":668,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["uses",{"_index":793,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["using",{"_index":134,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1306,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":934,"title":{},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":1399,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["uuid.uuid().tostring",{"_index":930,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["uzb",{"_index":2159,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":2160,"title":{},"body":{"interfaces/CountryList.html":{}}}],["val",{"_index":659,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["val.country",{"_index":788,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.countrycode",{"_index":802,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.description",{"_index":787,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.label",{"_index":3987,"title":{},"body":{"components/RadioComponent.html":{}}}],["val.provincecode",{"_index":785,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["valid",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"contributing.html":{}}}],["validate",{"_index":2287,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validate(control",{"_index":2502,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validate.directive",{"_index":4071,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validate.directive.ts",{"_index":4500,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["validate.directive.ts:16",{"_index":4503,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:17",{"_index":4504,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:18",{"_index":4505,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:20",{"_index":4506,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validatebcpostaldirective",{"_index":577,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatecitydirective",{"_index":579,"title":{"directives/ValidateCityDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateCityDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validated",{"_index":4997,"title":{},"body":{"contributing.html":{}}}],["validateemaildirective",{"_index":581,"title":{"directives/ValidateEmailDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateEmailDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatenamedirective",{"_index":583,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepc",{"_index":4383,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatepc(control",{"_index":4376,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{}}}],["validatephn",{"_index":4326,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatephn(phn",{"_index":5183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatephndirective",{"_index":585,"title":{"directives/ValidatePhnDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatephonedirective",{"_index":587,"title":{"directives/ValidatePhoneDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepostalcodedirective",{"_index":589,"title":{"directives/ValidatePostalcodeDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateregiondirective",{"_index":591,"title":{"directives/ValidateRegionDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateRegionDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatesindirective",{"_index":593,"title":{"directives/ValidateSinDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatestreetdirective",{"_index":595,"title":{"directives/ValidateStreetDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validation",{"_index":42,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CaptchaDataService.html":{},"components/DatepickerComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validation.directive",{"_index":4067,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validation.directive.ts",{"_index":2494,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["validation.directive.ts:14",{"_index":2500,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validation.directive.ts:15",{"_index":2501,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validation.directive.ts:17",{"_index":2503,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validationerrors",{"_index":4297,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validations",{"_index":3566,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["validator",{"_index":2495,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["validatorfn",{"_index":2543,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":44,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["valuechange",{"_index":1220,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["valuemax=\"100",{"_index":3676,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":3675,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":3673,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":765,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vanuatu",{"_index":2162,"title":{},"body":{"interfaces/CountryList.html":{}}}],["var",{"_index":496,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":757,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["variablescss",{"_index":5092,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":1848,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vatican",{"_index":1850,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vct",{"_index":2052,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ven",{"_index":2163,"title":{},"body":{"interfaces/CountryList.html":{}}}],["venezuela",{"_index":2164,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verde",{"_index":1726,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":1050,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":1025,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":1035,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":5148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":2359,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["version.js",{"_index":5167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versionjs",{"_index":5114,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["versionjs(options",{"_index":5166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versions",{"_index":5208,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":3936,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4421,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":2168,"title":{},"body":{"interfaces/CountryList.html":{}}}],["via",{"_index":396,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":2167,"title":{},"body":{"interfaces/CountryList.html":{}}}],["view",{"_index":4420,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":83,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2653,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":974,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":1013,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2671,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2655,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":1191,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3395,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dayref",{"_index":2255,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('dp",{"_index":2435,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2651,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":38,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3410,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2657,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('monthref",{"_index":2272,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('samplesmodal",{"_index":4031,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2659,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4427,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchild('yearref",{"_index":2275,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchildren",{"_index":4432,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4430,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":4259,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":3544,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["viewencapsulation.none",{"_index":3538,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["viewproviders",{"_index":645,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":2053,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vir",{"_index":2170,"title":{},"body":{"interfaces/CountryList.html":{}}}],["virgin",{"_index":2169,"title":{},"body":{"interfaces/CountryList.html":{}}}],["visibility",{"_index":2383,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["visible",{"_index":711,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vitae",{"_index":1308,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":2166,"title":{},"body":{"interfaces/CountryList.html":{}}}],["void",{"_index":65,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1284,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1329,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1298,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1302,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":5278,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":2161,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":865,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":5308,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":2745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wallis",{"_index":2173,"title":{},"body":{"interfaces/CountryList.html":{}}}],["want",{"_index":402,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":3669,"title":{},"body":{"components/PasswordComponent.html":{}}}],["warnings",{"_index":5248,"title":{},"body":{"todo.html":{}}}],["warranties",{"_index":5236,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5342,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":5309,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":884,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/getting-started.html":{}}}],["waze",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["we'll",{"_index":2491,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["we're",{"_index":4466,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4453,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3364,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":267,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weight",{"_index":4331,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["weights[i",{"_index":4333,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["well",{"_index":5377,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["western",{"_index":2176,"title":{},"body":{"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1411,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":207,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":1114,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"directives/YearValidateDirective.html":{}}}],["white",{"_index":4981,"title":{},"body":{"contributing.html":{}}}],["whole",{"_index":5368,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1435,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["width",{"_index":2751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2456,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1404,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3403,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1440,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["window.location.href",{"_index":3325,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3324,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3326,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4473,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{}}}],["winds",{"_index":2471,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wip",{"_index":4758,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["wish",{"_index":5300,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":345,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":3486,"title":{},"body":{"classes/MaskModel.html":{},"components/StreetComponent.html":{},"components/XiconButtonComponent.html":{},"license.html":{}}}],["wizard",{"_index":566,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":5338,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":565,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1586,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":2172,"title":{},"body":{"interfaces/CountryList.html":{}}}],["won't",{"_index":1523,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["work",{"_index":362,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"contributing.html":{}}}],["workaround",{"_index":2680,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["working",{"_index":2685,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":386,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["wrap",{"_index":2304,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PageSectionComponent.html":{}}}],["wrapped",{"_index":2430,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2354,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper/row",{"_index":3556,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wraps",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":5302,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":817,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["writevalue(obj",{"_index":2424,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":1010,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["writing",{"_index":5232,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":2757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1373,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":2055,"title":{},"body":{"interfaces/CountryList.html":{}}}],["x",{"_index":781,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/StreetComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2448,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":1158,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.route",{"_index":1162,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1601,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":3101,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1600,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":569,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{}}}],["xiconbutton",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":568,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":2753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["y",{"_index":4510,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["year",{"_index":2242,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["year_",{"_index":2274,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yeardistantfuture",{"_index":2281,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yeardistantpast",{"_index":2280,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yearlabelforid",{"_index":2199,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearref",{"_index":2200,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearvalidatedirective",{"_index":597,"title":{"directives/YearValidateDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"overview.html":{}}}],["yellow",{"_index":5251,"title":{},"body":{"todo.html":{}}}],["yem",{"_index":2178,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yemen",{"_index":2179,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yes",{"_index":81,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImageProcessingError.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"classes/MoHCommonLibraryError.html":{},"components/RadioComponent.html":{},"miscellaneous/functions.html":{}}}],["yes/no",{"_index":984,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":2970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":5318,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":938,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":5268,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":5214,"title":{},"body":{"index.html":{}}}],["yt",{"_index":3929,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":1922,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yukon",{"_index":3930,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yyyy",{"_index":2511,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["yyyy/mm/dd",{"_index":2388,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":3702,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":868,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z0",{"_index":4305,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["z])[a",{"_index":4304,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z]/i",{"_index":3482,"title":{},"body":{"classes/MaskModel.html":{}}}],["z][0",{"_index":4378,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["z][a",{"_index":3192,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":870,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["z]\\s?[0",{"_index":4380,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["za",{"_index":3191,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["zabceghj",{"_index":867,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":2088,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zambia",{"_index":2181,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zealand",{"_index":1978,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zero",{"_index":2902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["zeros",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["zib",{"_index":2969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":2183,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zip",{"_index":689,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["zmb",{"_index":2180,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zone",{"_index":2676,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":5134,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1063,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":2182,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":3630,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":3629,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:13\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:10\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:15\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:30\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:17\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:45\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:36\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, Params } from '@angular/router';\n\n/**\n *\n */\nexport abstract class AbstractForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string, queryParams?: Params ) {\n\n    this.router.navigate([url], { queryParams: queryParams })\n      .then((data) => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:16\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:59\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:52\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractPgCheckService.\nYour application's route guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n * \n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AccordionComponent } from 'ngx-bootstrap';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddrLabelList.html":{"url":"interfaces/AddrLabelList.html","title":"interface - AddrLabelList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddrLabelList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address1\n                                \n                                \n                                            Optional\n                                        address2\n                                \n                                \n                                            Optional\n                                        address3\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address3\n                                    \n                                \n                                \n                                    \n                                        address3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    street\n                                \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:11\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:44\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:36\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:23\n                                \n                            \n\n                \n                    \n                        setstreet(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  public addressLine1: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine2: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n  public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n  // For backward compatibilty with applications that use street.\n  get street() {\n    return this.addressLine1;\n  }\n\n  set street( val: string ) {\n    this.addressLine1 = val;\n  }\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.addressLine1}, ${this.city}`;\n  }\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.addressLine1 && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID().toString();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:101\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:93\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:82\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:50\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:72\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:57\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:37\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setCheckboxVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:36\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:41\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:42\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCheckboxVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetCheckboxVal(event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n\n  // TODO: Remove to make custom form control -- possible breaking change\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\nexport class CheckboxComponent extends Base implements  OnInit, ControlValueAccessor {\n  defaultErrorMessage: string = '';\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() required: boolean = false;  // TODO: Remove - breaking change\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() errorMessageRequired: string;\n  @Input() showError: boolean;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    if ( this.errorMessageRequired ) {\n      this.defaultErrorMessage = this.errorMessageRequired;\n    } else {\n      this.defaultErrorMessage = this.label + ' is required.';\n    }\n  }\n\n  setCheckboxVal(event: boolean) {\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n\n    {{defaultErrorMessage}}\n\n\n\n  {{defaultErrorMessage}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}    {{defaultErrorMessage}}  {{defaultErrorMessage}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n            \n                styleUrls\n                ./city.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:26\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../../public_api';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss']\n})\nexport class CityComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlen: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() placeholder: string = 'City name';\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.city = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{label}} {{defaultErrMsg.required}}\n  \n  \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{label}} {{defaultErrMsg.required}}        {{label}} {{defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:179\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonLogger.html":{"url":"injectables/CommonLogger.html","title":"injectable - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                url\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _log\n                            \n                            \n                                    Protected\n                                _logError\n                            \n                            \n                                    Private\n                                _sendLog\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logError\n                            \n                            \n                                    Public\n                                logHttpError\n                            \n                            \n                                    Private\n                                setSeverity\n                            \n                            \n                                    Private\n                                setTags\n                            \n                            \n                                    Private\n                                setTimestamp\n                            \n                            \n                                setURL\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    applicationId\n                                \n                                \n                                    programName\n                                \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _log(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:79\n                \n            \n\n\n            \n                \n                    Log a message to Splunk. This is the main way to send logs and\nautomatically includes meta-data. You do not need to subscribe to the\nresponse, as the service already does that. The input object must have an\n'event' property set, everything else is optional.\nExample:\nthis.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object, nesting is fine, with event property\nset.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _logError(errorMessage: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _sendLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _sendLog(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:110\n                \n            \n\n\n            \n                \n                    Internal method to send logs to Splunk, includes meta-data except that's\nconsistent across all requests, but not specific values like severity\nlevel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object or anything that can be toString()'d,\nlike Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:93\n                \n            \n\n\n            \n                \n                    Log HTTP errors, e.g. when losing network connectivity or receiving an\nerror response code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSeverity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeverity(severity: SeverityLevels)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    severity\n                                    \n                                                SeverityLevels\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTags(message: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:166\n                \n            \n\n\n            \n                \n                    The headers are easier to search in splunk, and we aren't using tags, so\nrepurpose it to event type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setURL\n                        \n                        \n                    \n                \n            \n            \n                \nsetURL(newURL: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  })\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:23\n                            \n                        \n\n                \n                    \n                        The HTTP Headers which go with each request.  These MUST be set if you are\nusing the logger.  Fields include:\n\nprogram (REQUIRED, the application wide code)\napplicationId (REQUIRED, like sessionId)\nrequest_method (REQUIRED, 'POST')\nlogsource: (REQUIRED, window.location.hostname)\nhttp_x_forwarded_host (REQUIRED, window.location.hostname)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        applicationId\n                    \n                \n\n                \n                    \n                        getapplicationId()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:39\n                                \n                            \n\n                \n                    \n                        setapplicationId(id: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        programName\n                    \n                \n\n                \n                    \n                        getprogramName()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:47\n                                \n                            \n\n                \n                    \n                        setprogramName(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:147\n                                \n                            \n                    \n                        \n                                Overwrite the inherited httpOptions so we can set responseType to text.\nThis updates Angular's parsing, and it won't error out due to the server\nnot responding with JSON.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Base functionality for container that is used to display bread crumbs \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:12\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:18\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../models/error-message.interface';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, periods, apostrophes and blank characters.',\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateComponent.html":{"url":"components/DateComponent.html","title":"component - DateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/date/date.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-date\n            \n\n            \n                styleUrls\n                ./date.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dayLabelforId\n                            \n                            \n                                dayRef\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                monthLabelforId\n                            \n                            \n                                    Public\n                                monthList\n                            \n                            \n                                monthRef\n                            \n                            \n                                yearLabelforId\n                            \n                            \n                                yearRef\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getNumericValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDay\n                            \n                            \n                                setMonth\n                            \n                            \n                                setYear\n                            \n                            \n                                    Private\n                                triggerDayValidation\n                            \n                            \n                                    Private\n                                triggerYearValidation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessages\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                restrictDate\n                            \n                            \n                                useCurrentDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(form: NgForm, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/date/date.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                        NgForm\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         SimpleDate\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Date'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        restrictDate\n                    \n                \n                \n                    \n                        Type :     \"future\" | \"past\" | \"any\"\n\n                    \n                \n                \n                    \n                        Default value : 'any'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:44\n                            \n                        \n                \n                    \n                        Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useCurrentDate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getNumericValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumericValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:146\n                \n            \n\n\n            \n                \n                    Convert string to numeric value or null if not \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDay\n                        \n                        \n                    \n                \n            \n            \n                \nsetDay(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:98\n                \n            \n\n\n            \n                \n                    Set the day and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMonth\n                        \n                        \n                    \n                \n            \n            \n                \nsetMonth(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:85\n                \n            \n\n\n            \n                \n                    Set the month and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setYear\n                        \n                        \n                    \n                \n            \n            \n                \nsetYear(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:110\n                \n            \n\n\n            \n                \n                    Set the year and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            triggerDayValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerDayValidation()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:125\n                \n            \n\n\n            \n                \n                    Force the day input to run it's directives again. Important in cases\nwhere user fills fields out of order, e.g. sets days to 31 then month to\nFebrurary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            triggerYearValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerYearValidation()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'day_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dayRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'month_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            monthList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('monthRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'year_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('yearRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { SimpleDate } from '../../models/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n */\n\nexport interface DateErrorMsg {\n  required: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  monthLabelforId: string = 'month_' + this.objectId;\n  dayLabelforId: string = 'day_' + this.objectId;\n  yearLabelforId: string = 'year_' + this.objectId;\n\n  constructor( public form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( !this.errorMessages ) {\n      // Use default messages\n      this.errorMessages = {\n        required: this.label + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.label + '.',\n        yearDistantPast: 'Invalid ' + this.label + '.',\n        yearDistantFuture: 'Invalid ' + this.label + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.label + '.',\n        invalidValue: 'Invalid ' + this.label + '.'\n      };\n    }\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.triggerYearValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.triggerYearValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the year and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.dayLabelforId] ) {\n        this.form.controls[this.dayLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  private triggerYearValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.yearLabelforId] ) {\n        this.form.controls[this.yearLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n\n    Month\n    \n      \n      \n      {{month}}\n    \n\n    Day\n    \n\n    Year\n    \n\n  \n\n\n\n\n  \n      {{errorMessages.required}}\n  \n  \n      {{errorMessages.dayOutOfRange}}\n  \n  \n      {{errorMessages.yearDistantPast}}\n  \n  \n      {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n  \n      {{errorMessages.noFutureDatesAllowed}}\n  \n  \n  \n      {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}      Month                      {{month}}        Day        Year              {{errorMessages.required}}          {{errorMessages.dayOutOfRange}}          {{errorMessages.yearDistantPast}}          {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}          {{errorMessages.noFutureDatesAllowed}}            {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { SimpleDate } from '../../models/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n */\n\nexport interface DateErrorMsg {\n  required: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  monthLabelforId: string = 'month_' + this.objectId;\n  dayLabelforId: string = 'day_' + this.objectId;\n  yearLabelforId: string = 'year_' + this.objectId;\n\n  constructor( public form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( !this.errorMessages ) {\n      // Use default messages\n      this.errorMessages = {\n        required: this.label + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.label + '.',\n        yearDistantPast: 'Invalid ' + this.label + '.',\n        yearDistantFuture: 'Invalid ' + this.label + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.label + '.',\n        invalidValue: 'Invalid ' + this.label + '.'\n      };\n    }\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.triggerYearValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.triggerYearValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the year and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.dayLabelforId] ) {\n        this.form.controls[this.dayLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  private triggerYearValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.yearLabelforId] ) {\n        this.form.controls[this.yearLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:72\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:49\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:46\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:52\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:36\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:86\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:78\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DateErrorMsg } from '../date/date.component';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DayValidationDirective.html":{"url":"directives/DayValidationDirective.html","title":"directive - DayValidationDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DayValidationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/day-validation.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDayValidation][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedMonth\n                            \n                            \n                                selectedYear\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedMonth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/day-validation.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedYear\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/day-validation.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/day-validation.directive.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Directive({\n  selector: '[commonDayValidation][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true}\n  ]\n})\nexport class DayValidationDirective implements Validator {\n\n  @Input() selectedMonth: string;\n  @Input() selectedYear: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const year: number = parseInt( this.selectedYear, 10 );\n    const month: number = parseInt( this.selectedMonth, 10 );\n\n    if ( undefined === control.value || null === control.value ) {\n      return null; // empty value\n    }\n\n    const day: number = parseInt( control.value, 10 );\n\n    if ( !isNaN( day ) && day > 0 ) {\n\n      // Only process of value is numeric\n      if ( !isNaN( month )  && !isNaN( year ) ) {\n\n        // Determine days in month\n        const str = `${year}-${month}`;\n        let daysInMonth: number = moment(str, 'YYYY-MM').daysInMonth();\n\n        if ( isNaN( daysInMonth ) ) {\n          daysInMonth = 31;\n        }\n\n        // Validate days\n        if ( day > daysInMonth || day \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends Base implements ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n\n  {{label}} is required.\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{label}} is required.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DuplicateCheckDirective.html":{"url":"directives/DuplicateCheckDirective.html","title":"directive - DuplicateCheckDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DuplicateCheckDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDuplicateCheck]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dupList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dupList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// Local function\nfunction checkForDuplicates( control: AbstractControl,\n                             dupList: string[] ): { [key: string]: boolean } | null {\n  // Duplicate check\n  if ( dupList && dupList.length ) {\n\n  const duplicate = dupList.find( x => x === control.value );\n  return (duplicate ? { 'duplicate': true } : null);\n  }\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonDuplicateCheck( dupList: string[] ): ValidatorFn {\n\n  console.log( 'function commonDuplicateSin: param = ', dupList );\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    console.log( 'Control value = ', control.value );\n    return checkForDuplicates( control, dupList );\n  };\n}\n\n@Directive({\n  selector: '[commonDuplicateCheck]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true}\n    ]\n})\nexport class DuplicateCheckDirective implements Validator {\n\n  @Input() dupList: string[];\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n  return checkForDuplicates( control, this.dupList );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/email/email.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-email\n            \n\n            \n                styleUrls\n                ./email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Email';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'email_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.email = val;\n    }\n  }\n  get value() {\n    return this.email;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public email: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.email = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlength, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n    Invalid email format.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.        Invalid email format.  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorContainerComponent.html":{"url":"components/ErrorContainerComponent.html","title":"component - ErrorContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/error-container/error-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-error-container\n            \n\n            \n                styleUrls\n                ./error-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'common-error-container',\n  templateUrl: './error-container.component.html',\n  styleUrls: ['./error-container.component.scss']\n})\nexport class ErrorContainerComponent {\n\n  @Input() displayError: boolean = false;\n\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/error-message.interface.ts\n        \n\n            \n                Description\n            \n            \n                In most cases this will be the part of the error message that will appear after the field label.\n{{label}} is required.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/error-message.interface.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorMessage {\n  required?: string;\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['images'] && (\n            (changes['images'].currentValue && changes['images'].currentValue.length === 0)\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    private BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    private ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET,BLOCK,INTERSECTION')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    private processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = 'CAN'; // Default to Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                ADDRESS_URL\n                            \n                            \n                                    Private\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Private\n                                processResponse\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:52\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    private BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    private ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET,BLOCK,INTERSECTION')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    private processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = 'CAN'; // Default to Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, OnInit} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger } from '../../services/logger.service';\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .\n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n\n    // public maintenanceFlag: string ;\n\n\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([['ACL', '{\"SPA_ENV_MSP_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_ACL_MAINTENANCE_MESSAGE\":\"\"}'], ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'], ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\"}']]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaskModel.html":{"url":"classes/MaskModel.html","title":"class - MaskModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaskModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/mask.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/mask.model.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/mask.model.ts:34\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/mask.model.ts:27\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {EventEmitter, Input, Output} from '@angular/core';\nimport { Base } from './base';\n\nexport const LETTER = /[A-Z]/i; // Ignore case here, then upperCase it via pipe.\nexport const NUMBER = /\\d/;\nexport const SPACE = ' ';\n\nexport class MaskModel extends Base {\n\n  @Input() value: string;\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = true;\n\n  public mask: any;\n  public placeholder: string;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  /**\n   * Updates the value\n   */\n  onUpdate( value: string ) {\n\n    // Emit value without spaces\n    this.valueChange.emit( value );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Maxlengths.html":{"url":"interfaces/Maxlengths.html","title":"interface - Maxlengths","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Maxlengths\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoHCommonLibraryError.html":{"url":"classes/MoHCommonLibraryError.html","title":"class - MoHCommonLibraryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoHCommonLibraryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/helpers/library-errorr.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/helpers/library-errorr.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MoHCommonLibraryError extends Error {\n    constructor(message?: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlen: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlen, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n     1; else initInvalid;\">\n        {{label}} must begin with a letter and cannot include special characters except hyphens,\n        periods, apostrophes and blank characters.\n    \n  \n\n\n\n  {{label}} must be with a letter.\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.         1; else initInvalid;\">        {{label}} must begin with a letter and cannot include special characters except hyphens,        periods, apostrophes and blank characters.        {{label}} must be with a letter.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:10\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n// IMPROVEMENT: Add a 'flex' @Input(), that adds display flex.  Importantly, it\n// must set flex on the wrapper/row divs in the html.  There are some cases\n// (like SiteReg) where having flex layout is beneficial.  My first suggestion\n// was to simply style the , but the problem is that we\n// need flex on the child elements of page-section (that still wrap ng-content).\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                            \n                                isDobEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SimpleDate\n\n                        \n                    \n                    \n                        \n                            Default value : { year: null, month: null, day: null }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YYYY/MM/DD'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:85\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDobEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisDobEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:45\n                \n            \n\n\n            \n                \n                    Indicates whether or not the date of birth is empty \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:71\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import * as moment_ from 'moment';\nimport { Base } from './base';\nimport { SimpleDate } from './simple-date.interface';\nconst moment = moment_;\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'YYYY/MM/DD';\n\n  // Initialize dob to nulls\n  public dateOfBirth: SimpleDate = { year: null, month: null, day: null };\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( 'YYYYMMDD' );\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( this.dobFormat );\n  }\n\n  /** Indicates whether or not the date of birth is empty */\n  isDobEmpty(): boolean {\n    return Object.keys( this.dateOfBirth )\n        .map( key => this.dateOfBirth[key] )\n        .filter( x => x ) // Filter out null/undefined\n        .length !== 3;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    const dobDt = new Date( this.dateOfBirth.year, this.dateOfBirth.month, this.dateOfBirth.day );\n    return Math.ceil( moment( ).diff( dobDt, 'year', true ) );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth.month = object.dateOfBirth.month;\n    this.dateOfBirth.day = object.dateOfBirth.day;\n    this.dateOfBirth.year = object.dateOfBirth.year;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhnComponent.html":{"url":"components/PhnComponent.html","title":"component - PhnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phn/phn.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phn\n            \n\n            \n                styleUrls\n                ./phn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                phn\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Personal Health Number (PHN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phn_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:26\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { NUMBER, SPACE } from '../../models/mask.model';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-phn',\n  templateUrl: './phn.component.html',\n  styleUrls: ['./phn.component.scss']\n})\nexport class PhnComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Personal Health Number (PHN)';\n  @Input() maxlen: string = '15';\n  @Input() placeholder: string = '1111 111 111';\n  @Input() labelforId: string = 'phn_' + this.objectId;\n  @Input() disabled: boolean = false;\n\n\n  @Input()\n  set value( val: string ) {\n    if ( val) {\n      this.phn = val;\n    }\n  }\n  get value() {\n    return this.phn;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  phn: string = '';\n  mask: any;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.phn ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.phn = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.phn = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      {{label}} is invalid.\n    \n    \n      {{label}} was already used for another family member.\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              {{label}} is invalid.              {{label}} was already used for another family member.      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneNumberComponent.html":{"url":"components/PhoneNumberComponent.html","title":"component - PhoneNumberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhoneNumberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phone-number/phone-number.component.ts\n\n\n    \n        Description\n    \n    \n        PhoneNumberComponent is a used to show the Phone number.\nMake sure to add the direcive commonValidatePhone\n\n    \n\n    \n        Extends\n    \n    \n                MaskModel\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phone-number\n            \n\n            \n                styleUrls\n                ./phone-number.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-number.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Static\n                                PhoneNumberRegEx\n                            \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setPhoneNumber\n                            \n                            \n                                writeValue\n                            \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                objectID\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                required\n                            \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    phoneNumberString\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/phone-number.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mobile'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phone_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        phoneNumber\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:14\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:11\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:12\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetPhoneNumber(evt)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:34\n\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:27\n\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PhoneNumberRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        phoneNumberString\n                    \n                \n\n                \n                    \n                        getphoneNumberString()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:68\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  Optional,\n  Self\n} from '@angular/core';\nimport { ControlContainer, NgForm, NgControl } from '@angular/forms';\nimport { MaskModel, NUMBER, SPACE } from '../../models/mask.model';\n\nimport {  ControlValueAccessor,  NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * PhoneNumberComponent is a used to show the Phone number.\n *\n * Make sure to add the direcive `commonValidatePhone`\n *\n * @example\n *         \n * @export\n */\n\n\n@Component({\n  selector: 'common-phone-number',\n  templateUrl: './phone-number.component.html',\n  styleUrls: ['./phone-number.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class PhoneNumberComponent extends MaskModel implements ControlValueAccessor {\n\n  static PhoneNumberRegEx = '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$';\n  @Input() displayMask: boolean = true;\n  @Input() required: boolean = false;\n  @Input() label: string = 'Mobile';\n\n  /** @deprecated - use ngModel. */\n  @Input() phoneNumber: string = '';\n\n  /** @deprecate - Do we have any applications that need to use this? */\n  @Input() objectID: string = 'phone_' + this.objectId;\n  @Output() onChange = new EventEmitter();\n  // public mask = ['+','1',SPACE,'(',NUMBER,NUMBER,NUMBER,')',SPACE,NUMBER,NUMBER,NUMBER,'-',NUMBER,NUMBER,NUMBER,NUMBER];\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n\n    this.placeholder = '+1 (555) 555-5555';\n    // Note - we added in the /[2-9]/ regex in order to match MSP's JSON Schema.\n    // Make sure both places match.\n    this.mask = ['+', '1', SPACE, '(', /[2-9]/, NUMBER, NUMBER, ')', SPACE, NUMBER, NUMBER, NUMBER, '-', NUMBER, NUMBER, NUMBER, NUMBER];\n  }\n\n  get phoneNumberString(): string {\n    return this.phoneNumber ? this.phoneNumber : '';\n  }\n\n\n  setPhoneNumber(evt) {\n    console.log('setphonenumber', evt.target.value);\n    const value = evt.target.value;\n    this.phoneNumber = value;\n    this.onChange.emit(this.phoneNumber);\n    this._onChange(value);\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    // phoneNumber is where the actual data is displayed to user for this\n    // component\n    this.phoneNumber = value;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n  \n  \n  \n    \n      {{label}} is required.\n    \n  \n\n\n\n\n  \n          \n  \n    \n      {{label}} is required.\n     \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} is required.                              {{label}} is required.       '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhoneNumberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                mask\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'A1A 1A1'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:102\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:30\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.model';\nimport { Base } from '../../models/base';\nimport { ErrorMessage } from '../../../public_api';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() placeholder: string = 'A1A 1A1';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n     //console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} {{defaultErrMsg.required}}\n    \n    \n      {{defaultErrMsg.pattern}} {{placeholder}}.\n    \n    \n      {{defaultErrMsg.invalidBCPostal}}\n    \n    \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} {{defaultErrMsg.required}}              {{defaultErrMsg.pattern}} {{placeholder}}.              {{defaultErrMsg.invalidBCPostal}}            {{label}} {{defaultErrMsg.invalidChar}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceComponent.html":{"url":"components/ProvinceComponent.html","title":"component - ProvinceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProvinceComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/province/province.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-province\n            \n\n            \n                styleUrls\n                ./province.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./province.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                province\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                provinceList\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/province/province.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'province_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please select a province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provinceList\n                    \n                \n                \n                    \n                        Type :         ProvinceList[]\n\n                    \n                \n                \n                    \n                        Default value : PROVINCE_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:53\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:62\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:58\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:53\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { ErrorMessage } from '../../../public_api';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlen: string = '250';\n  @Input() useDropDownList: boolean = true;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n\n\n\n  \n    {{label}} {{defaultErrMsg.required}}\n  \n  \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{label}} {{defaultErrMsg.required}}        {{label}} {{defaultErrMsg.invalidChar}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { ErrorMessage } from '../../../public_api';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlen: string = '250';\n  @Input() useDropDownList: boolean = true;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n    \n        Description\n    \n    \n        RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value should be passed in the below format\n  [\n         {\n           \"label\": \"Myself only\",\n           \"value\": \"MyselfOnly\"\n         },\n         {\n           \"label\": \"All members on my MSP account\",\n           \"value\": \"AllMembers\"\n         },\n         {\n           \"label\": \"One specific member on my MSP account\",\n           \"value\": \"SpecificMember\"\n         }\n  ];\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                _value\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                display\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                instructionText\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                showError\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                statusChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instructionText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ]\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:59\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        statusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:71\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(evt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport {Base} from '../../models/base';\nimport {ControlValueAccessor, NgControl} from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value should be passed in the below format\n *\n *\n *      [\n *             {\n *               \"label\": \"Myself only\",\n *               \"value\": \"MyselfOnly\"\n *             },\n *             {\n *               \"label\": \"All members on my MSP account\",\n *               \"value\": \"AllMembers\"\n *             },\n *             {\n *               \"label\": \"One specific member on my MSP account\",\n *               \"value\": \"SpecificMember\"\n *             }\n *      ];\n *\n * @example\n *        \n *        \n *\n * @export\n *\n */\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends Base implements OnInit, ControlValueAccessor {\n\n  _value: string = '';\n  defaultErrorMessage: string = '';\n\n  @Input() radioLabels: Array = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() disabled: boolean = false;\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n  @Input() showError: boolean; // TODO: Remove - breaking change\n  @Input() errorMessageRequired: string;\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n  // TODO: remove status change - breaking change\n  @Output() statusChange: EventEmitter = new EventEmitter();\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    if ( this.errorMessageRequired ) {\n      this.defaultErrorMessage = this.errorMessageRequired;\n    } else {\n      this.defaultErrorMessage = (this.label ? this.label : 'Field' ) + ' is required.';\n    }\n  }\n\n  setStatus(evt: string) {\n    this.value = evt;\n    this.statusChange.emit(evt);\n    this.valueChange.emit(evt);\n\n    this._onChange(evt);\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  {{instructionText}}\n  \n    \n      \n      \n      {{val.label}}\n      \n    \n  \n\n  \n  \n      {{defaultErrorMessage}}\n  \n\n  \n    {{defaultErrorMessage}}\n  \n\n\n\n\n  \n    \n  \n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}  {{instructionText}}                        {{val.label}}                      {{defaultErrorMessage}}        {{defaultErrorMessage}}              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyFields.html":{"url":"interfaces/ReadOnlyFields.html","title":"interface - ReadOnlyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyFields\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPgService (\"RegistrationService\")\nSetup AbstractPgCheckService in NgModule providers, to useExisting the service from previous step.\nAdd this RouteGuardService to same providers from previous step.\nConfigure routes to use RouteGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"RegistrationService\")\n\nYou must make sure to setup AbstractPgCheckService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SampleImageInterface.html":{"url":"interfaces/SampleImageInterface.html","title":"interface - SampleImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SampleImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sample-modal/sample-modal.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        desc\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleModalComponent.html":{"url":"components/SampleModalComponent.html","title":"component - SampleModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sample-modal/sample-modal.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sample-modal\n            \n\n            \n                styleUrls\n                ./sample-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sample-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sampleModal\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                    Public\n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :         SampleImageInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sampleModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('samplesModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{title}}\n        \n          \n        \n      \n\n      \n        \n          {{image.title}}\n          \n        \n      \n\n      \n        Close\n      \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                        {{image.title}}                                      Close            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SampleModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateEmailDirective\n\nValidateEmailDirective\n\nSharedCoreModule -->\n\nValidateEmailDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePhnDirective\n\nValidatePhnDirective\n\nSharedCoreModule -->\n\nValidatePhnDirective->SharedCoreModule\n\n\n\n\n\nValidatePhoneDirective\n\nValidatePhoneDirective\n\nSharedCoreModule -->\n\nValidatePhoneDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateSinDirective\n\nValidateSinDirective\n\nSharedCoreModule -->\n\nValidateSinDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateEmailDirective \n\nValidateEmailDirective \n\nValidateEmailDirective  -->\n\nSharedCoreModule->ValidateEmailDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePhnDirective \n\nValidatePhnDirective \n\nValidatePhnDirective  -->\n\nSharedCoreModule->ValidatePhnDirective \n\n\n\n\n\nValidatePhoneDirective \n\nValidatePhoneDirective \n\nValidatePhoneDirective  -->\n\nSharedCoreModule->ValidatePhoneDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateSinDirective \n\nValidateSinDirective \n\nValidateSinDirective  -->\n\nSharedCoreModule->ValidateSinDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateEmailDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePhnDirective\n                        \n                        \n                            ValidatePhoneDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateSinDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateEmailDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePhnDirective\n                        \n                        \n                            ValidatePhoneDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateSinDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DayValidationDirective } from './components/date/day-validation.directive';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\nimport { YearValidateDirective } from './components/date/year-validate.directive';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\nimport { ValidateSinDirective } from './components/sin/validate-sin.directive';\nimport { ValidatePhnDirective } from './components/phn/validate-phn.directive';\nimport { DuplicateCheckDirective } from './components/duplicate-check/duplicate-check.directive';\nimport { ErrorContainerComponent } from './components/error-container/error-container.component';\nimport { ValidateStreetDirective } from './components/street/validate-street.directive';\nimport { ValidateCityDirective } from './components/city/validate-city.directive';\nimport { ValidateRegionDirective } from './components/validate-region/validate-region.directive';\nimport { ValidatePostalcodeDirective } from './components/postal-code/validate-postalcode.directive';\nimport { SampleModalComponent } from './components/sample-modal/sample-modal.component';\nimport { EmailComponent } from './components/email/email.component';\nimport { ValidateEmailDirective } from './components/email/validate-email.directive';\nimport { ValidatePhoneDirective } from './components/phone-number/validate-phone-number.directive';\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  XiconButtonComponent,\n  ErrorContainerComponent,\n  SampleModalComponent,\n  EmailComponent,\n\n  // Directives\n  DayValidationDirective,\n  DateFieldFormatDirective,\n  YearValidateDirective,\n  ValidateNameDirective,\n  ValidateSinDirective,\n  ValidatePhnDirective,\n  DuplicateCheckDirective,\n  ValidateBcPostalDirective,\n  ValidateStreetDirective,\n  ValidateCityDirective,\n  ValidateRegionDirective,\n  ValidatePostalcodeDirective,\n  ValidateEmailDirective,\n  ValidatePhoneDirective,\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:28\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { NUMBER, SPACE } from '../../models/mask.model';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlen: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n  @Input() disabled: boolean = false;\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n\n      console.log( 'value: ', this.sin );\n    }\n  }\n  get value() {\n    console.log( 'get value: ', this.sin );\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  sin: string = '';\n  mask: any;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.sin = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      {{label}} is invalid.\n    \n    \n      {{label}} was already used for another family member.\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              {{label}} is invalid.              {{label}} was already used for another family member.      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StreetComponent.html":{"url":"components/StreetComponent.html","title":"component - StreetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StreetComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/street/street.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-street\n            \n\n            \n                styleUrls\n                ./street.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./street.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                street\n                            \n                            \n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onSelect\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                useGeoCoder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                selectEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/street/street.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Full street address or rural route'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'street_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Street name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useGeoCoder\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:28\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters, and numbers and may include special characters such as hyphen, ' +\n                 'period, apostrophe, number sign, ampersand and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:50\n                            \n                        \n\n                \n                    \n                        Search string to store result from GeoCoder request \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:52\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:47\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list\nResult from GeoCoderService address lookup\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/street/street.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/street/street.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Observable, Subject, of } from 'rxjs';\nimport { GeoAddressResult, GeocoderService } from '../../services/geocoder.service';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\nimport { ErrorMessage } from '../../../public_api';\n\n@Component({\n  selector: 'common-street',\n  templateUrl: './street.component.html',\n  styleUrls: ['./street.component.scss']\n})\nexport class StreetComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Full street address or rural route';\n  @Input() maxlen: string = '250';\n  // TODO - Replace maxlen with maxlength across this and all other components\n  // @Input() maxlength: string = '250';\n  @Input() labelforId: string = 'street_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() useGeoCoder: boolean = false;\n  @Input() placeholder: string = 'Street name';\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.street = val;\n    }\n  }\n  get value() {\n    return this.street;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n  @Output() selectEvent: EventEmitter = new EventEmitter();\n\n  street: string = '';\n\n  /**\n   * The list of results, from API, that is passed to the typeahead list\n   * Result from GeoCoderService address lookup\n   */\n  typeaheadList$: Observable;\n\n  /** Search string to store result from GeoCoder request */\n  private search: string;\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters, and numbers and may include special characters such as hyphen, ' +\n                 'period, apostrophe, number sign, ampersand and blank characters.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl,\n               private geocoderService: GeocoderService ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n\n    this.setErrorMsg();\n\n    // Set up for using GeoCoder\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => {\n        return this.geocoderService.lookup(searchPhrase);\n      }),\n      // tap(log => console.log('taplog', log)),\n      catchError(err => this.onError(err))\n    );\n  }\n\n  onValueChange( value: any ) {\n    if ( this.useGeoCoder ) {\n      // set the search string\n      this.search = value;\n    }\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n        this.street = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n\n  onKeyUp(event: KeyboardEvent): void {\n    /**\n     * Filter out 'enter' and other similar keyboard events that can trigger\n     * when user is selecting a typeahead option instead of entering new text.\n     * Without this filter, we do another HTTP request + force disiplay the UI\n     * for now reason\n     */\n    if (event.keyCode === 13 || event.keyCode === 9) {\n      // enter & tab\n      return;\n    }\n\n    this.searchText$.next(this.search);\n  }\n\n  onError(err: any): Observable {\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n    console.log( 'onSelect: ', event.item );\n    this.street = event.item.street;\n    this.selectEvent.emit( event.item );\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n    \n\n\n\n\n  \n    {{label}} {{defaultErrMsg.required}}\n  \n  \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}          {{label}} {{defaultErrMsg.required}}        {{label}} {{defaultErrMsg.invalidChar}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'StreetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss']\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateCityDirective.html":{"url":"directives/ValidateCityDirective.html","title":"directive - ValidateCityDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateCityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/city/validate-city.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateCity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/validate-city.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateCity: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for  city names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z0-9\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateCity]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true}\n  ]\n})\nexport class ValidateCityDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateCity( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateEmailDirective.html":{"url":"directives/ValidateEmailDirective.html","title":"directive - ValidateEmailDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateEmailDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/email/validate-email.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateEmailDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateEmail]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/validate-email.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\n@Directive({\n  selector: '[commonValidateEmail]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateEmailDirective, multi: true}\n  ]\n})\nexport class ValidateEmailDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateEmail( control );\n  }\n}\n\n\nexport const commonValidateEmail: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const criteria: RegExp = /^(\\S+)@(\\S+)\\.(\\S+)$/;\n\n  if (control.value) {\n    const result = criteria.test(control.value);\n    return result ? null : { invalidEmail: true };\n  }\n  return { invalidEmail: true };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePhnDirective.html":{"url":"directives/ValidatePhnDirective.html","title":"directive - ValidatePhnDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePhnDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/phn/validate-phn.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePhnDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePhn]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowEmptyValue\n                            \n                            \n                                isBCPhn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowEmptyValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:105\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCPhn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:104\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\n\n// Empty value (null, undefined, empty string) are treated as invalid.\n function validatePHN ( phn: string,\n                        isBCPhn: boolean = true,\n                        allowEmptyValue: boolean = false ): { [key: string]: boolean } | null {\n  // pre req checks\n  if (phn === null || phn === undefined || phn.trim().length  0) {\n    // multiply the value against the weight\n    result = num * weights[i];\n\n    // divide by 11 and save the remainder\n    result = result % 11;\n\n    // add it to our sum\n    sumOfRemainders += result;\n    }\n  }\n\n  // mod by 11\n  const checkDigit = 11 - (sumOfRemainders % 11);\n\n  // if the result is 10 or 11, it is an invalid PHN\n  if (checkDigit === 10 || checkDigit === 11) {\n    return { 'invalid': true };\n  }\n\n  // Compare against 10th digit\n  const finalDigit = Number(phn.substring(9, 10));\n  if (checkDigit !== finalDigit) {\n   return { 'invalid': true };\n  }\n\n  // All done!\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonValidatePhn( isBCPhn: boolean = true,\n                                   allowEmptyValue: boolean = false): ValidatorFn {\n\n  console.log( 'function commonValidatePhn: param = ', isBCPhn );\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    console.log( 'Control value = ', control.value );\n    return validatePHN( control.value, isBCPhn, allowEmptyValue );\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePhn]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePhnDirective, multi: true}\n  ]\n})\nexport class ValidatePhnDirective implements Validator {\n\n  @Input() isBCPhn: boolean = true;\n  @Input() allowEmptyValue: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePHN( control.value, this.isBCPhn, this.allowEmptyValue );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePhoneDirective.html":{"url":"directives/ValidatePhoneDirective.html","title":"directive - ValidatePhoneDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePhoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/phone-number/validate-phone-number.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePhoneDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePhone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/validate-phone-number.directive.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/validate-phone-number.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\n\n// TODO: Potentially make this configurable in the directive/function if we ever\n// have different phone lengths.\nconst MIN_PHONE_LENGTH = 11;\n\n@Directive({\n  selector: '[commonValidatePhone]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: ValidatePhoneDirective, multi: true }]\n})\nexport class ValidatePhoneDirective implements Validator {\n\n  constructor() { }\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return commonValidatePhone(control);\n  }\n\n}\n\n/**\n * Deteremines if a phone number is incomplete, typically from\n * PhoneNumberComponent's text-mask having a lot of underscore characters.\n */\nexport const commonValidatePhone: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const value = control.value;\n\n  if (value) {\n    const stripped = value\n      .replace(/_/g, '') // remove underlines\n      .replace(/\\s/g, '') // spaces\n      .replace(/\\+|-/g, '') // + or - symbol\n      .replace('(', '')\n      .replace(')', '');\n\n    const valid = stripped.length === MIN_PHONE_LENGTH;\n\n    console.log({valid, stripped});\n    return valid ? null : { required: true };\n\n  }\n  return null;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePostalcodeDirective.html":{"url":"directives/ValidatePostalcodeDirective.html","title":"directive - ValidatePostalcodeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePostalcodeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePostalcode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasMask\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        hasMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:34\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { calendarFormat } from 'moment';\n\n// local function\nfunction validatePC(control: AbstractControl, hasMask: boolean): { [key: string]: boolean } | null {\n\n  if ( control.value ) {\n    if ( hasMask ) {\n      const cdnFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n      return cdnFormat.test( control.value ) ? null : { 'pattern': true };\n    }\n\n    const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9 ]*$' );\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n}\n\nexport function commonValidatePostalcode( hasMask: boolean ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return validatePC( control, hasMask );\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePostalcode]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true}\n  ]\n})\nexport class ValidatePostalcodeDirective implements Validator {\n  @Input() hasMask: boolean = true;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePC( control, this.hasMask );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateRegionDirective.html":{"url":"directives/ValidateRegionDirective.html","title":"directive - ValidateRegionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateRegionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/validate-region/validate-region.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateRegion]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/validate-region/validate-region.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateRegion: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for country/province/region names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateRegion]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true}\n  ]\n})\nexport class ValidateRegionDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateRegion( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateSinDirective.html":{"url":"directives/ValidateSinDirective.html","title":"directive - ValidateSinDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateSinDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sin/validate-sin.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateSinDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateSin]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/validate-sin.directive.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateSin: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  let sin = control.value;\n\n  // pre req checks\n  if (sin === null || sin === undefined || sin.length  9) {\n      result = result - 9;\n    }\n\n    // add it to our sum\n    sum += result;\n  }\n\n  // The sum must be divisible by 10\n  if (sum % 10 !== 0) {\n    return { 'invalid': true };\n  }\n\n  // All done!\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateSin]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateSinDirective, multi: true}\n  ]\n})\nexport class ValidateSinDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateSin( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateStreetDirective.html":{"url":"directives/ValidateStreetDirective.html","title":"directive - ValidateStreetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateStreetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/street/validate-street.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateStreet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/validate-street.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateStreet: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for street\n  */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9#/&\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateStreet]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true}\n  ]\n})\nexport class ValidateStreetDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateStreet( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n                \n                    \n                        Label to use for accessibility.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MoHCommonLibraryError } from '../../../helpers/library-errorr';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent implements OnInit {\n\n  /**\n   * Label to use for accessibility.\n   * @required\n   */\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.label) {\n      // todo - change to MohCommmonLibraryError -> test in IE10\n      // throw Error('common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.');\n      const msg = `common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.\n      e.g. \n`; // Intentional to create a blank line between our error and stack trace.\n      throw new MoHCommonLibraryError(msg);\n    }\n  }\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/YearValidateDirective.html":{"url":"directives/YearValidateDirective.html","title":"directive - YearValidateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  YearValidateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/year-validate.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonYearValidate][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonYearValidate\n                            \n                            \n                                selectedDay\n                            \n                            \n                                selectedMonth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonYearValidate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDay\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMonth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/year-validate.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n// TODO:  Create a message structure to pass in error messages similar to password module.\n\n@Directive({\n  selector: '[commonYearValidate][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true}\n  ]\n})\nexport class YearValidateDirective implements Validator  {\n\n  @Input() commonYearValidate: string;\n  @Input() selectedDay: string;\n  @Input() selectedMonth: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const day: number = parseInt( this.selectedDay, 10 );\n    const month: number = parseInt( this.selectedMonth, 10 );\n\n    // console.log( 'validate year: control value = ', control.value );\n\n    if ( undefined === control.value || null === control.value ) {\n      return null; // empty value\n    }\n\n    const year: number = parseInt( control.value, 10 );\n\n    // console.log( 'validate year: year = ', year );\n    // console.log( 'validate year: isNaN( year ) = ', isNaN( year ) );\n\n    // Only process if value is numeric\n    if ( !isNaN( year ) && year > 0 ) {\n\n      const currentYear = moment().get( 'y' );\n\n      // console.log( 'validate year: currentYear = ', currentYear );\n\n      if ( currentYear - year > 150 ) {\n        // console.log( 'validate year: yearDistantPast' );\n        return { 'yearDistantPast': true };\n      }\n\n      if ( year - currentYear > 150 ) {\n        // console.log( 'validate year: yearDistantFuture' );\n        return { 'yearDistantFuture': true} ;\n      }\n\n      // console.log( 'validate year: commonYearValidate = ', this.commonYearValidate, day, month );\n\n      // Check whether dates can be present or past\n      if ( this.commonYearValidate && this.commonYearValidate !== 'any' &&\n           !isNaN( day ) && !isNaN( month ) ) {\n\n        // Month - 1, select box adds one to array index\n        const diff = moment( { year: year, month: month - 1, day: day } )\n          .diff( moment(), 'days', true );\n\n       // console.log( 'validate year: diff = ', diff, moment().format( 'YYYY-MM-DD'), moment().isUTC() );\n\n        /**\n        * Validate current date as if it's a future date, and reject it when only\n        * accepting past dates.  We accomplish this by comparing diff against 1.\n        */\n        if ( diff = -1 && this.commonYearValidate === 'past' ) {\n          return { 'noFutureDatesAllowed': true };\n        }\n      }\n\n      return null;\n    }\n\n    return { 'invalidValue': true };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2019-10-09)\n2.21.0 \"moh-common-lib\" (2019-10-09)\nBug Fixes\n\nPhone: Can now use [ngModel] by itself (5910979)\n\nFeatures\n\nemail: Create EmailComponent (based on Name) (27b488b)\n\nStyles\n\nPageSection: Change bullet styles (f541d81)\n\n2.20.1 \"moh-common-lib\" (2019-10-09)\nStyles\n\nHeader: Header text wraps on mobile, no longer breaking mobile (1303722)\n\n2.20.0 \"moh-common-lib\" (2019-10-08)\nFeatures\n\nadded ability to set query parameters on navigate method in abstract form (4f3e59f)\n\n2.19.0 \"moh-common-lib\" (2019-10-01)\nBug Fixes\n\ndate component to check for null, undefined and zero, trigger year validation on month change (0ed3875)\nfile uploader - check to confirm have array to check length in onChange method (c6067fd)\n\n2.18.1 \"moh-common-lib\" (2019-09-27)\nBug Fixes\n\nfixed off by 1 date in year validator (9a38474)\n\n2.18.0 \"moh-common-lib\" (2019-09-26)\nBug Fixes\n\nbug in file uploader - check for null array (cf962bc)\n\nFeatures\n\nadded sample-modal component to display sample doc images (4f8f2e7)\n\n2.17.1 \"moh-common-lib\" (2019-09-25)\nBug Fixes\n\nadded check for errors when component not used as form control (7d274e8)\ncolor-success changed to 83D31D to match color on mockups (c64c066)\nerror in checkbox html check errors exist (29c5160)\n\nDocumentation\n\nTODO: Create TODO file with list of breaking changes for version 3 (9dc5375)\nTODO: Rename todo to a markdown file for GitHub support (496c252)\n\n2.17.0 \"moh-common-lib\" (2019-09-24)\nBug Fixes\n\nadded space in error message (radio) (6427f10)\nbug introduced when try to display errors when field touched (radio/checkbox) (aceb028)\ncheckbox fixed to be custom form control (1c51f01)\nset radio touched on blur, display required message when touched (c78856a)\n\nDocumentation\n\nTweak publishing so it passes markdownlint (901885e)\n\nFeatures\n\nAdded required error message to component (d5dd02f)\n\n2.16.0 \"moh-common-lib\" (2019-09-20)\nBug Fixes\n\nupdate address1 when street updated (29e521c)\n\n2.15.0 \"moh-common-lib\" (2019-09-19)\nBug Fixes\n\nremoved check for US from address component (996cad7)\n\n2.14.0 \"moh-common-lib\" (2019-09-17)\nFeatures\n\nSet label defaults to yes/no in radio component (66e58e7)\n\n2.13.0 \"moh-common-lib\" (2019-09-17)\nBug Fixes\n\nclear province when country changes, placeholders updated (8380850)\n\n2.12.0 \"moh-common-lib\" (2019-09-16)\nBug Fixes\n\nradio buttons working for more than 2 options as custom form control (f2ccfe6)\nRemoved check for undefined (7398e93)\n\nFeatures\n\nAdded ability to disable specfic fields in address component (5965aec)\n\n2.11.0 \"moh-common-lib\" (2019-09-12)\nBug Fixes\n\nPostal code clears when country changes to Canada (2c0b127)\n\nDocumentation\n\nAdd info on publishing new builds (9855d9c)\n\n2.10.0 \"moh-common-lib\" (2019-09-05)\nBug Fixes\n\nPhoneNumber: The first numbers within the brackets must be 2-9 now (5069fe8)\n\n2.9.0 \"moh-common-lib\" (2019-08-30)\nBug Fixes\n\nexport common image elementsgit (483b735)\n\n2.8.1 \"moh-common-lib\" (2019-08-22)\nBug Fixes\n\nDate: Capitalize placeholders (4d39002)\n\n2.8.0 \"moh-common-lib\" (2019-08-20)\nBug Fixes\n\nReorder address fields (cbbfaa8)\n\nFeatures\n\nadded validation for street component (0699178)\nadded validations for postal code, country/province, added abiltiy to update error messages (60befc2)\nvalidation for valid characters in city component (16da113)\n\n2.7.1 \"moh-common-lib\" (2019-08-15)\nBug Fixes\n\nDateComponent: Handles having 00 as day (67b6f78)\nFileUpload: Remove console log on ngchanges (7c99c1e)\n\n2.7.0 \"moh-common-lib\" (2019-08-13)\nBug Fixes\n\nFixed displaying of the error message in name component (1650a23)\nAddress:  Clear out address line data when removing the line (3f1149e)\n\n2.6.0 \"moh-common-lib\" (2019-08-09)\nCode Refactoring\n\nModified address to used MSP label and length defaults (5bb54fc)\n\nFeatures\n\nfunctions to retrieve country, prov descriptions,  maxlengths input for addresss (978250b)\n\n2.5.2 \"moh-common-lib\" (2019-08-02)\n2.5.1 \"moh-common-lib\" (2019-07-31)\nBug Fixes\n\nremoved plus sign used to concatenate string for aria-label (#32) (3a5677b), closes #32\n\n2.5.0 \"moh-common-lib\" (2019-07-31)\nFeatures\n\nAddress: added input to address component to allow users to change default labels on fields. (#31) (ebb6998), closes #31\n\n2.4.0 \"moh-common-lib\" (2019-07-29)\n2.3.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Now has default country/prov behaviour built in (8361a0e)\n\n2.2.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Additional lines must be removed in order (ac9d61c)\nAddress: Now can show 2 extra address lines (previously only one) (af91989)\n\nStyles\n\nXIconButton: Change icon from 'times' to 'times-circle' (aad93b5)\n\n2.1.5 \"moh-common-lib\" (2019-07-18)\nAccessibility\n\nRadio: Hide radio for FireFox but keep tab-focusable. (8f6886f)\nXIconButton: Add label (867f969)\n\n2.1.4 \"moh-common-lib\" (2019-07-16)\nAccessibility\n\nPhone: Fix association of labels for phone component (c122a2a)\n\n2.1.3 \"moh-common-lib\" (2019-07-11)\nAccessibility\n\nRadio: Convert radio to use fieldset. (2c2f322)\nRadio: New focus style for RadioComponent, styled better for mouse (c2fd959)\n\n2.1.2 \"moh-common-lib\" (2019-07-10)\nAccessibility\n\nRadio: Radio is now focusable via tab / screenreader (126d876)\n\nStyles\n\nConsentModal: Backdrop enabled when modal is open. (b901868)\n\n2.1.1 \"moh-common-lib\" (2019-07-09)\nBug Fixes\n\nAddress: Implement allowExtralines to opt-in to new multi-line (5a7c37b)\n\nBREAKING CHANGES\n\nAddress: This reverts an accidentally introduced breaking change in 2.1.0 where all address components would use the new line behaviour.  Now, it is opt-in.\n\n2.1.0 \"moh-common-lib\" (2019-07-09)\nAccessibility\n\nStepper/Wizard: Darken link text by 5% to get AA colour contrast (a27faa9)\n\nBug Fixes\n\nRadio: Fix empty label for RadioComponent for a11y (Waze) (7400a64)\n\nBuild\n\nAdd \"a11y\" type to changelog and commit types (edf0b2e)\n\nCode Refactoring\n\nAddressComponent: Reorganize order of inputs, add AddressLine1 (5d8f61d)\n\nDocumentation\n\nAddressModel: Add TSDOC descriptions on street and addressLine1 (6f093d2)\n\nFeatures\n\nAddressComponent: Add 'disableGeocoder' @Input (a512eb0)\n\n2.0.1 \"moh-common-lib\" (2019-07-04)\nBug Fixes\n\nPhoneNumber: Required @Input works properly (5b18c5f)\n\nCode Refactoring\n\nXIconButton: Add (click) event, @deprecate (clickEvent) (baee5ad)\n\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input) (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nGit Commit Format\nFor changelog generation, all git commits must follow this format:\n(): \n\n\n\nList of valid types:\n\nfeat: A new feature\nfix: A bug fix\ndocs: Documentation only changes\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing\nsemi-colons, etc)\nrefactor: A code change that neither fixes a bug nor adds a feature\nperf: A code change that improves performance\ntest: Adding missing or correcting existing tests\nchore: Does NOT appear in changelog. Use this to hide menial commits that don't need to be in the changelog.\ngeneration\nWIP: Similar to chore, this does NOT appear in changelog. Use this for work-in-progress commits that shouldn't bein changelog.\nbuild: Changes to the build process\n\nScopes may arbitrarily be created.\nRefer to Angular's contributing guide for more details.\nGit commit hooks\nCommits can be automatically validated that they conform to the format, you just need to enable the pre-commit hook.\nnpm run setup:git-hooksThe commit hook itself can be found at build_utils/commit-msg.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/helpers/library-errorr.ts\n            \n            class\n            MoHCommonLibraryError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                18 %\n                (9/48)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            AddrLabelList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            Maxlengths\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            ReadOnlyFields\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                4 %\n                (1/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            directive\n            ValidateCityDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            variable\n            commonValidateCity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                16 %\n                (6/36)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            function\n            getCountryDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                26 %\n                (7/26)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            directive\n            DayValidationDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            directive\n            YearValidateDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            directive\n            DuplicateCheckDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            checkForDuplicates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            commonDuplicateCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/validate-email.directive.ts\n            \n            directive\n            ValidateEmailDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/validate-email.directive.ts\n            \n            variable\n            commonValidateEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/error-container/error-container.component.ts\n            \n            component\n            ErrorContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                24 %\n                (9/37)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            directive\n            ValidatePhnDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            function\n            commonValidatePhn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            function\n            validatePHN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                16 %\n                (4/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/validate-phone-number.directive.ts\n            \n            directive\n            ValidatePhoneDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/validate-phone-number.directive.ts\n            \n            variable\n            commonValidatePhone\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/validate-phone-number.directive.ts\n            \n            variable\n            MIN_PHONE_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                7 %\n                (2/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            directive\n            ValidatePostalcodeDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            commonValidatePostalcode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            validatePC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            function\n            getProvinceDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                8 %\n                (2/24)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            component\n            SampleModalComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            interface\n            SampleImageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/validate-sin.directive.ts\n            \n            directive\n            ValidateSinDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/validate-sin.directive.ts\n            \n            variable\n            commonValidateSin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                12 %\n                (4/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            directive\n            ValidateStreetDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            variable\n            commonValidateStreet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            directive\n            ValidateRegionDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            variable\n            commonValidateRegion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            interface\n            ErrorMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            class\n            MaskModel\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addPackageJsonScript   (projects/.../index.ts)\n                        \n                        \n                            addPackageToPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            checkForDuplicates   (projects/.../duplicate-check.directive.ts)\n                        \n                        \n                            commonDuplicateCheck   (projects/.../duplicate-check.directive.ts)\n                        \n                        \n                            commonValidatePhn   (projects/.../validate-phn.directive.ts)\n                        \n                        \n                            commonValidatePostalcode   (projects/.../validate-postalcode.directive.ts)\n                        \n                        \n                            copyLicense   (projects/.../index.ts)\n                        \n                        \n                            copyVersionFile   (projects/.../index.ts)\n                        \n                        \n                            createIfMissing   (projects/.../index.ts)\n                        \n                        \n                            getCountryDescription   (projects/.../country.component.ts)\n                        \n                        \n                            getPackageVersionFromPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            getProvinceDescription   (projects/.../province.component.ts)\n                        \n                        \n                            installPackageJsonDependencies   (projects/.../index.ts)\n                        \n                        \n                            modifyJSON   (projects/.../json.ts)\n                        \n                        \n                            mohStart   (projects/.../index.ts)\n                        \n                        \n                            overwriteFile   (projects/.../index.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../package-config.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../json.ts)\n                        \n                        \n                            updateAngularJson   (projects/.../index.ts)\n                        \n                        \n                            updateAppComponentTs   (projects/.../index.ts)\n                        \n                        \n                            updatePackageJson   (projects/.../index.ts)\n                        \n                        \n                            updateTsConfig   (projects/.../index.ts)\n                        \n                        \n                            validatePC   (projects/.../validate-postalcode.directive.ts)\n                        \n                        \n                            validatePHN   (projects/.../validate-phn.directive.ts)\n                        \n                        \n                            versionJS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/schematics/src/version-js/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageJsonScript\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageJsonScript(tree, scriptName, script)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scriptName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    script\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyVersionFile\n                        \n                        \n                    \n                \n            \n            \n                \ncopyVersionFile(options: any, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAppComponentTs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAppComponentTs(tree, _context)\n                \n            \n\n\n\n\n            \n                \n                    Updates app.component.ts to console.log out the generated version file \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePackageJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePackageJson(tree, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            versionJS\n                        \n                        \n                    \n                \n            \n            \n                \nversionJS(options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copy over version.js to src/version.js, and update the package.json.\nMust be called with repo, e.g. --repo=https://github.com/bcgov/prime-web/\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/package-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageToPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageToPackageJson(host, pkg, version, forceOverwrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Adds a package to the package.json in the given host tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pkg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forceOverwrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPackageVersionFromPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetPackageVersionFromPackageJson(tree, name)\n                \n            \n\n\n\n\n            \n                \n                    Gets the version of the specified package by looking at the package.json in the given tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            checkForDuplicates\n                        \n                        \n                    \n                \n            \n            \n                \ncheckForDuplicates(control, dupList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dupList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commonDuplicateCheck\n                        \n                        \n                    \n                \n            \n            \n                \ncommonDuplicateCheck(dupList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dupList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/phn/validate-phn.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            commonValidatePhn\n                        \n                        \n                    \n                \n            \n            \n                \ncommonValidatePhn(isBCPhn: boolean, allowEmptyValue: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isBCPhn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    allowEmptyValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePHN\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePHN(phn, isBCPhn: boolean, allowEmptyValue: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phn\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isBCPhn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    allowEmptyValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            commonValidatePostalcode\n                        \n                        \n                    \n                \n            \n            \n                \ncommonValidatePostalcode(hasMask: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hasMask\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePC\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePC(control, hasMask: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hasMask\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/copy-license/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            copyLicense\n                        \n                        \n                    \n                \n            \n            \n                \ncopyLicense(_options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copies over an APACHE-2 License to the top level of a project.  This rule\nwill overwrite any pre-existing LICENSE file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createIfMissing\n                        \n                        \n                    \n                \n            \n            \n                \ncreateIfMissing(host, targetPath, content: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mohStart\n                        \n                        \n                    \n                \n            \n            \n                \nmohStart(_options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            overwriteFile\n                        \n                        \n                    \n                \n            \n            \n                \noverwriteFile(host, targetPath, content)\n                \n            \n\n\n\n\n            \n                \n                    Use a string to overwrite a file. Checks to make sure file does not have content. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAngularJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAngularJson(host)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTsConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTsConfig(host, _context)\n                \n            \n\n\n\n\n            \n                \n                    Configures settings in tsconfig.json that are required to properly import\nfrom moh-common-lib\nSpecifically, skibLibCheck\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/country/country.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getCountryDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetCountryDescription(countryCode)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countryCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/province/province.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getProvinceDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetProvinceDescription(provinceCode)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provinceCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/helpers/json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            modifyJSON\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyJSON(host, fileName, transformFn)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transformFn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateEmailDirective\n\nValidateEmailDirective\n\nSharedCoreModule -->\n\nValidateEmailDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePhnDirective\n\nValidatePhnDirective\n\nSharedCoreModule -->\n\nValidatePhnDirective->SharedCoreModule\n\n\n\n\n\nValidatePhoneDirective\n\nValidatePhoneDirective\n\nSharedCoreModule -->\n\nValidatePhoneDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateSinDirective\n\nValidateSinDirective\n\nSharedCoreModule -->\n\nValidateSinDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateEmailDirective \n\nValidateEmailDirective \n\nValidateEmailDirective  -->\n\nSharedCoreModule->ValidateEmailDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePhnDirective \n\nValidatePhnDirective \n\nValidatePhnDirective  -->\n\nSharedCoreModule->ValidatePhnDirective \n\n\n\n\n\nValidatePhoneDirective \n\nValidatePhoneDirective \n\nValidatePhoneDirective  -->\n\nSharedCoreModule->ValidatePhoneDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateSinDirective \n\nValidateSinDirective \n\nValidateSinDirective  -->\n\nSharedCoreModule->ValidateSinDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    36 Components\n                \n            \n        \n        \n            \n                \n                    \n                    14 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nMoh-Common-Lib:\n- [ ] Security warnings (GitHub)\nBreaking Changes for version 3.0.0:\n\n FormActionBar / FormSubmiBar - make the on load default colour yellow\nThis can fix a \"flash\" of the first colour on macbooks and faster computers (nonVDI)\n\n\n Delete all instances of showError. We never use it as an @Input.\n address.model.ts\n public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n radio.component.ts\n @Input() showError: boolean; // TODO: Remove - breaking change\n // TODO: remove status change - breaking change\n\n\n checkbox.component.ts\n Remove to make custom form control -- possible breaking change\n @Input() required: boolean = false;  // TODO: Remove - breaking change\n Remove the showError\n\n\n xicon-button.component.ts\n Remove clickEvent output. Should be able to just use \"click\", which follows conventional Angular naming.\n\n\n street.component.ts\n Replace \"maxlen\" with \"maxlength\" across this and other components. Maxlength is more semantic / consistent.\n\n\n date.component.ts - Should become a FormControl (NgControl)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocal Development\n\ncomponents\nschematics\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n ~~*High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:*~~ [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/common\nIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nTypeScript\nimport { example } from 'moh-common-lib'\nIf you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
