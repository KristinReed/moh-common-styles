var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractForm.html",[0,0.026,1,3.455]],["body/classes/AbstractForm.html",[0,0.03,1,5.257,2,2.197,3,0.174,4,0.202,5,0.107,6,7.462,7,4.485,8,0.202,9,0.854,10,2.68,11,1.832,12,6.361,13,0.776,14,6.146,15,3.678,16,5.478,17,3.631,18,7.695,19,4.864,20,0.975,21,3.529,22,5.124,23,0.662,24,6.581,25,0.965,26,0.011,27,0.476,28,0.315,29,0.63,30,1.305,31,5.104,32,6.581,33,1.67,34,1.978,35,5.783,36,2.677,37,1.934,38,6.581,39,5.104,40,4.864,41,5.257,42,4.55,43,0.771,44,0.621,45,1.213,46,5.104,47,3.267,48,4.289,49,6.581,50,1.635,51,4.55,52,1.911,53,4.524,54,5.104,55,5.783,56,1.911,57,0.939,58,5.783,59,2.28,60,5.257,61,6.581,62,6.581,63,4.864,64,1.498,65,1.311,66,5.104,67,4.55,68,3.696,69,6.581,70,6.581,71,0.458,72,5.886,73,5.32,74,5.104,75,6.581,76,3.267,77,3.87,78,5.257,79,4.499,80,2.534,81,2.866,82,0.268,83,2.197,84,0.402,85,0.915,86,2.635,87,0.174,88,3.153,89,5.104,90,0.941,91,2.635,92,0.563,93,2.866,94,5.104,95,5.104,96,5.104,97,1.718,98,5.104,99,5.104,100,5.104,101,5.104,102,0.006,103,0.008,104,0.006]],["title/classes/AbstractHttpService.html",[0,0.026,105,2.429]],["body/classes/AbstractHttpService.html",[0,0.041,2,1.992,3,0.158,4,0.183,5,0.097,8,0.183,9,0.801,13,0.873,15,4.024,17,3.917,20,0.619,23,0.648,25,1.206,26,0.011,27,0.558,28,0.333,29,0.739,30,0.988,43,0.699,44,0.563,45,1.137,57,0.909,68,3.466,72,5.703,73,3.2,80,4.022,81,2.599,82,0.256,87,0.158,88,2.859,92,0.817,102,0.005,103,0.007,104,0.005,105,3.466,106,6.657,107,4.137,108,4.067,109,1.453,110,4.68,111,3.415,112,4.289,113,5.546,114,4.801,115,5.28,116,4.93,117,2.748,118,6.163,119,3.697,120,4.355,121,6.172,122,4.827,123,4.628,124,5.487,125,4.561,126,4.93,127,4.93,128,5.703,129,4.628,130,5.546,131,4.561,132,5.084,133,5.121,134,2.338,135,3.812,136,4.93,137,4.561,138,2.268,139,4.687,140,3.812,141,4.827,142,4.628,143,4.561,144,5.546,145,5.029,146,4.267,147,3.812,148,1.333,149,4.93,150,4.267,151,2.57,152,4.93,153,4.93,154,4.93,155,5.335,156,4.628,157,4.93,158,4.628,159,4.067,160,4.628,161,3.629,162,5.423,163,2.268,164,2.061,165,2.599,166,2.212,167,4.067,168,4.067,169,2.599,170,2.134,171,4.067,172,3.016,173,4.628,174,1.176,175,6.172,176,6.172,177,4.628,178,1.992,179,4.628,180,6.172,181,6.172,182,2.134,183,4.628,184,3.42,185,2.859,186,4.628,187,4.628,188,1.927,189,3.697,190,4.067,191,4.628,192,2.338,193,5.423,194,2.859,195,3.42]],["title/injectables/AbstractPgCheckService.html",[196,1.744,197,2.819]],["body/injectables/AbstractPgCheckService.html",[0,0.045,3,0.192,4,0.223,5,0.118,8,0.223,13,0.94,15,4.246,23,0.628,25,0.826,26,0.011,27,0.408,28,0.223,29,0.54,30,1.338,57,0.94,71,0.516,76,3.961,80,3.479,82,0.208,84,0.444,87,0.192,102,0.007,103,0.008,104,0.007,106,6.555,109,1.327,111,3.857,196,2.826,197,5.452,198,3.315,199,5.674,200,4.955,201,4.929,202,4.692,203,3.936,204,2.036,205,7.011,206,7.01,207,7.01,208,7.01,209,0.853,210,3.618,211,5.599,212,5.599,213,3.232,214,4.929,215,2.292,216,6.159,217,2.107,218,1.838,219,6.159,220,1.489,221,6.374,222,6.374,223,6.093,224,6.374,225,5.639,226,5.639,227,4.955,228,5.639,229,5.639]],["title/classes/AbstractTestPage.html",[0,0.026,230,3.197]],["body/classes/AbstractTestPage.html",[0,0.038,2,1.207,3,0.179,4,0.111,5,0.109,8,0.111,9,0.559,11,0.91,13,0.507,15,2.81,16,4.362,19,3.182,23,0.66,25,1.103,26,0.011,27,0.62,28,0.318,29,0.721,34,2.012,43,0.887,44,0.946,53,3.456,56,1.87,57,0.996,59,1.491,60,6.013,64,1.466,65,1.296,71,0.556,78,4.695,79,2.66,80,2.918,82,0.103,87,0.096,92,0.793,102,0.003,103,0.005,104,0.003,109,1.736,133,2.977,135,2.66,138,1.582,151,1.793,170,3.733,174,0.475,192,2.227,210,2.222,215,1.922,220,1.134,230,4.344,231,7.397,232,5.238,233,2.465,234,3.783,235,1.118,236,3.439,237,5.165,238,4.442,239,1.583,240,2.418,241,2.418,242,6.694,243,5.879,244,2.977,245,4.306,246,1.725,247,4.605,248,5.241,249,5.879,250,5.879,251,4.306,252,4.306,253,5.879,254,4.306,255,5.879,256,4.306,257,5.879,258,5.879,259,4.947,260,6.694,261,5.879,262,5.879,263,4.306,264,4.306,265,4.306,266,4.306,267,6.342,268,4.306,269,1.384,270,2.805,271,4.306,272,2.66,273,2.418,274,2.918,275,2.977,276,3.456,277,4.306,278,3.631,279,2.805,280,3.182,281,3.783,282,3.783,283,4.306,284,4.306,285,3.783,286,2.805,287,2.977,288,3.783,289,4.306,290,3.439,291,3.783,292,5.879,293,2.805,294,3.182,295,1.302,296,4.064,297,2.806,298,3.439,299,4.306,300,3.758,301,2.805,302,4.134,303,4.306,304,6.319,305,5.346,306,4.972,307,4.306,308,2.805,309,1.985,310,3.456,311,4.8,312,6.988,313,0.413,314,7.192,315,2.805,316,4.306,317,2.805,318,3.182,319,2.667,320,3.873,321,2.805,322,2.805,323,4.306,324,2.805,325,4.306,326,1.129,327,4.695,328,2.805,329,2.805,330,4.306,331,2.805,332,4.306,333,2.977,334,4.306,335,3.034,336,2.53,337,2.81,338,4.695,339,4.687,340,5.879,341,4.306,342,5.165,343,4.306,344,2.805,345,3.182,346,4.695,347,2.805,348,3.439,349,3.439,350,3.439,351,3.182,352,2.532,353,4.306,354,1.631,355,4.306,356,4.306,357,3.783,358,4.306,359,5.879,360,1.793,361,3.783,362,2.418,363,4.306,364,2.418,365,3.783,366,3.783,367,2.977,368,2.805,369,2.805,370,2.977,371,4.306,372,2.805,373,1.985,374,4.306,375,5.879,376,2.805,377,5.241,378,3.034,379,1.985,380,0.987,381,3.783,382,2.137,383,2.058,384,2.66,385,1.331,386,3.301,387,3.439,388,3.182,389,3.783,390,3.182,391,3.439,392,4.306,393,3.783,394,4.306,395,2.806,396,3.034,397,3.182,398,5.879,399,5.165,400,3.161,401,4.134,402,4.344,403,4.306,404,2.805,405,1.853,406,4.306,407,0.816,408,4.306,409,2.315,410,2.806,411,3.783,412,4.306,413,4.306,414,2.805,415,5.151,416,1.023,417,4.306,418,2.805,419,3.182,420,4.306,421,1.985,422,1.733,423,0.697,424,4.306,425,2.805,426,2.805,427,2.805,428,2.805,429,2.805,430,2.805,431,2.805,432,2.805,433,2.805,434,2.805,435,2.805,436,2.805,437,2.805,438,2.805,439,2.24,440,4.306,441,4.306,442,3.783,443,2.805,444,2.805,445,2.805,446,2.805,447,2.465,448,1.031,449,4.306,450,2.805,451,2.805,452,4.306,453,2.805,454,2.805,455,2.805,456,2.805,457,2.805,458,2.805,459,2.805,460,2.805,461,2.805,462,2.805,463,2.805,464,2.805,465,2.805]],["title/components/AccordionCommonComponent.html",[313,0.22,466,1.046]],["body/components/AccordionCommonComponent.html",[0,0.029,3,0.164,4,0.19,5,0.132,8,0.19,9,0.821,11,1.337,13,0.746,20,0.947,23,0.615,26,0.011,27,0.511,28,0.28,30,1.012,33,1.374,43,0.955,44,0.77,45,1.166,52,1.193,56,1.572,57,0.566,64,1.232,65,0.791,71,0.473,82,0.233,83,2.068,84,0.378,87,0.216,102,0.006,103,0.007,104,0.006,109,1.131,148,0.769,209,0.77,215,2.069,220,1.198,235,1.407,246,1.101,269,1.131,295,1.193,313,0.361,380,1.101,407,1.199,416,1.006,423,1.572,466,1.818,467,1.226,468,1.226,469,1.26,470,4.222,471,7.074,472,1.805,473,0.861,474,1.218,475,6.327,476,1.266,477,6.327,478,1.266,479,6.327,480,7.812,481,1.971,482,7.074,483,4.825,484,4.805,485,4.805,486,4.805,487,4.805,488,4.374,489,6.327,490,4.805,491,2.48,492,2.297,493,1.193,494,1.659,495,0.53,496,2.025,497,1.294,498,1.294,499,1.072,500,1.294,501,1.131,502,1.294,503,1.131,504,1.294,505,1.162,506,1.294,507,1.162,508,1.294,509,1.162,510,1.294,511,1.162,512,1.193,513,1.294,514,1.162,515,1.704,516,1.162,517,1.226,518,1.294,519,1.162,520,1.294,521,1.101,522,1.294,523,1.162,524,1.294,525,1.294,526,1.131,527,1.294,528,1.162,529,1.294,530,1.131,531,1.294,532,1.162,533,1.906,534,1.162,535,1.101,536,1.101,537,1.704,538,1.162,539,1.193,540,1.294,541,1.131,542,1.294,543,1.162,544,1.294,545,1.162,546,1.294,547,1.101,548,1.294,549,1.162,550,1.294,551,1.162,552,1.162,553,1.294,554,1.131,555,1.072,556,1.294,557,1.131,558,1.294,559,1.131,560,1.294,561,1.131,562,1.226,563,1.162,564,1.294,565,1.193,566,1.294,567,1.162,568,1.294,569,1.131,570,1.294,571,1.162,572,1.226,573,1.131,574,1.131,575,1.26,576,0.814,577,1.131,578,1.294,579,1.131,580,1.294,581,1.131,582,1.294,583,1.131,584,1.294,585,1.131,586,1.294,587,1.131,588,1.294,589,1.131,590,1.294,591,1.131,592,1.294,593,1.131,594,1.294,595,1.131,596,1.294,597,1.131,598,1.294,599,1.131,600,1.294,601,1.131,602,1.294,603,1.131,604,1.26,605,1.294]],["title/interfaces/AddrLabelList.html",[606,0.712,607,2.99]],["body/interfaces/AddrLabelList.html",[0,0.018,3,0.103,4,0.12,5,0.063,8,0.12,9,0.592,10,1.019,20,0.405,26,0.011,27,0.219,28,0.283,29,0.773,30,1.303,34,1.371,36,2.018,43,0.689,44,0.973,45,1.488,47,1.503,59,1.049,65,0.904,71,0.555,76,1.503,82,0.263,84,0.238,85,0.543,87,0.208,90,1.127,92,0.847,93,1.7,102,0.004,103,0.005,104,0.004,134,1.147,138,1.113,170,2.104,174,1.168,178,1.303,182,1.396,188,2.287,192,2.08,203,1.7,204,1.164,209,0.369,217,0.91,218,1.196,235,0.471,239,0.815,259,2.237,273,1.7,300,1.303,302,1.87,310,2.683,313,0.312,326,1.196,336,1.303,337,1.447,354,1.147,364,1.7,373,1.396,378,1.563,382,4.147,383,3.822,385,1.697,395,3.579,396,1.563,401,1.87,405,1.303,416,1.158,421,1.396,472,1.164,474,0.405,476,0.606,478,0.606,481,0.794,499,1.018,536,0.694,539,1.133,555,1.018,606,0.904,607,4.227,608,1.113,609,1.535,610,1.535,611,2.237,612,4.848,613,5.239,614,5.239,615,4.13,616,4.912,617,1.103,618,1.401,619,2.683,620,2.018,621,1.783,622,1.581,623,2.181,624,1.074,625,0.91,626,2.562,627,2.237,628,4.264,629,2.237,630,3.579,631,3.256,632,2.093,633,3.155,634,1.973,635,3.776,636,3.392,637,2.974,638,2.237,639,3.984,640,4.535,641,2.093,642,2.237,643,2.418,644,2.418,645,2.418,646,1.447,647,1.7,648,0.936,649,1.78,650,1.563,651,1.261,652,0.694,653,3.372,654,2.265,655,3.645,656,2.562,657,2.683,658,2.093,659,2.418,660,2.418,661,2.237,662,3.372,663,1.973,664,1.808,665,2.418,666,2.731,667,5.716,668,2.237,669,0.498,670,1.78,671,2.237,672,2.237,673,2.683,674,2.418,675,2.237,676,2.418,677,4.054,678,2.237,679,2.418,680,2.237,681,2.093,682,3.645,683,2.418,684,2.418,685,3.645,686,2.818,687,2.418,688,2.418,689,2.418,690,2.418,691,2.418,692,2.445,693,2.834,694,1.973,695,2.823,696,2.418,697,2.237,698,2.418,699,4.227,700,1.78,701,1.08,702,1.628,703,1.08,704,0.861,705,2.237,706,2.418,707,2.418,708,3.645,709,6.134,710,3.645,711,2.418,712,2.974,713,2.445,714,3.645,715,6.02,716,4.386,717,1.563,718,2.237,719,2.093,720,2.418,721,2.418,722,2.418,723,2.418,724,2.418,725,2.418,726,4.883,727,1.303,728,2.418,729,2.418,730,3.645,731,2.974,732,1.503,733,3.645,734,5.239,735,5.507,736,5.239,737,2.418,738,2.418,739,3.645,740,2.418,741,3.645,742,2.562,743,2.418,744,1.973,745,2.418,746,2.418,747,1.78,748,2.418,749,2.418,750,3.579,751,2.418,752,2.418,753,2.418,754,2.274,755,3.372,756,2.562,757,3.645,758,3.645,759,3.645,760,3.645,761,2.418,762,1.261,763,2.418,764,2.418,765,4.058,766,2.093,767,2.237,768,1.113,769,2.418,770,2.418,771,2.418,772,1.78,773,1.628,774,2.418,775,2.418,776,1.08,777,2.418,778,2.093,779,2.276,780,2.418,781,4.883,782,2.418,783,2.418,784,2.418,785,2.418,786,2.418,787,4.058,788,2.093,789,2.563,790,2.418,791,4.227,792,3.645,793,3.155,794,3.645,795,4.386,796,2.093,797,2.418,798,2.418,799,2.093,800,1.87,801,1.78,802,2.093,803,1.628,804,2.418,805,2.418,806,2.418,807,3.372,808,2.418,809,2.418,810,2.237,811,2.418,812,2.237,813,2.181,814,2.418,815,2.418,816,2.237,817,2.418,818,1.78,819,2.418,820,2.237,821,2.237,822,2.418,823,2.418,824,1.147,825,1.147,826,1.08,827,1.628,828,1.147,829,1.08,830,1.447,831,2.625,832,1.348,833,2.418,834,2.418,835,2.418,836,2.418,837,2.418,838,2.418,839,2.418,840,2.418,841,2.418,842,2.418,843,2.418,844,2.237,845,2.418,846,3.645,847,2.418,848,2.418]],["title/classes/Address.html",[0,0.026,628,2.233]],["body/classes/Address.html",[0,0.041,2,1.943,3,0.154,4,0.179,5,0.094,8,0.179,9,0.951,13,0.715,23,0.684,25,0.889,26,0.011,27,0.439,28,0.337,29,0.754,30,1.288,34,1.824,40,4.485,43,0.681,44,0.549,45,0.832,57,0.864,65,0.999,71,0.552,87,0.154,92,0.808,97,1.519,102,0.005,103,0.007,104,0.005,109,1.062,117,2.702,161,4.734,163,3.008,174,0.765,185,3.749,192,1.71,220,1.51,234,5.333,239,1.216,272,3.749,275,4.196,382,3.403,383,3.278,385,2.266,410,3.955,555,1.529,615,3.687,628,4.467,654,3.996,656,3.408,664,1.183,666,2.855,669,0.743,673,4.875,718,5.068,762,2.527,768,2.695,776,1.61,813,2.901,818,4.032,849,3.966,850,2.427,851,3.121,852,2.788,853,7.074,854,6.857,855,6.025,856,6.924,857,5.068,858,6.857,859,5.857,860,7.88,861,6.857,862,4.514,863,4.514,864,7.333,865,6.443,866,4.514,867,4.514,868,4.514,869,4.514,870,4.514,871,4.514,872,6.069,873,6.538,874,6.443,875,3.749,876,4.848,877,4.848,878,4.514,879,4.514,880,5.333,881,4.514,882,4.514,883,6.069,884,6.069,885,4.514,886,5.333,887,4.848,888,4.196,889,6.069,890,6.069,891,4.485,892,6.069,893,6.069,894,5.333,895,6.069,896,6.069,897,6.069,898,3.749,899,4.514,900,4.514,901,4.514,902,4.514,903,4.514,904,4.514,905,3.408,906,1.876,907,4.514,908,4.514,909,3.966,910,7.652,911,6.025,912,2.534,913,5.333,914,4.848,915,6.857,916,4.514,917,3.966,918,4.514,919,4.514,920,4.514,921,4.514,922,4.514,923,4.514,924,4.514,925,4.514,926,4.514,927,4.514,928,4.514]],["title/classes/Base.html",[0,0.026,624,1.018]],["body/classes/Base.html",[0,0.051,2,2.754,3,0.218,4,0.253,5,0.134,8,0.253,9,0.982,20,1.078,23,0.596,26,0.011,28,0.253,43,0.966,44,0.779,71,0.476,82,0.236,87,0.218,102,0.008,103,0.009,104,0.008,109,1.506,161,4.45,220,1.365,407,1.578,624,1.96,648,2.339,852,4.675,929,5.622,930,7.568,931,4.07,932,4.45,933,3.756,934,3.756,935,2.792,936,7.568,937,2.405,938,2.547,939,2.475,940,2.7,941,4.45,942,3.593]],["title/components/ButtonComponent.html",[313,0.22,501,1.018]],["body/components/ButtonComponent.html",[0,0.034,3,0.143,4,0.166,5,0.121,8,0.166,9,0.749,10,2.221,11,1.219,13,0.68,20,0.883,23,0.634,25,0.614,26,0.011,27,0.514,28,0.295,29,0.401,30,0.923,33,1.253,36,2.426,37,1.588,43,1.232,44,0.804,45,1.064,52,1.041,56,2.156,57,0.68,64,1.124,65,0.95,71,0.363,77,3.394,82,0.212,83,1.804,84,0.33,85,0.751,87,0.197,102,0.005,103,0.007,104,0.005,109,0.987,148,0.923,151,1.746,163,2.121,204,1.473,209,0.703,215,1.887,218,1.513,235,1.397,246,0.96,269,0.987,295,1.041,313,0.402,319,2.438,360,2.961,367,2.898,380,0.96,405,2.484,407,1.093,409,3.104,416,1.011,423,1.434,439,3.348,466,1.014,467,1.07,468,1.07,469,1.099,472,1.684,473,0.751,474,1.212,476,1.155,478,1.155,481,1.864,492,2.759,493,1.041,494,1.513,495,0.462,496,1.916,497,1.129,498,1.129,499,0.935,500,1.129,501,1.674,502,1.129,503,0.987,504,1.129,505,1.014,506,1.129,507,1.014,508,1.129,509,1.014,510,1.129,511,1.014,512,1.041,513,1.129,514,1.014,515,1.555,516,1.014,517,1.07,518,1.129,519,1.014,520,1.129,521,0.96,522,1.129,523,1.014,524,1.129,525,1.129,526,0.987,527,1.129,528,1.014,529,1.129,530,0.987,531,1.129,532,1.014,533,1.778,534,1.014,535,0.96,536,0.96,537,1.555,538,1.014,539,1.041,540,1.129,541,0.987,542,1.129,543,1.014,544,1.129,545,1.014,546,1.129,547,0.96,548,1.129,549,1.014,550,1.129,551,1.014,552,1.014,553,1.129,554,0.987,555,0.935,556,1.129,557,0.987,558,1.129,559,0.987,560,1.129,561,0.987,562,1.07,563,1.014,564,1.129,565,1.041,566,1.129,567,1.014,568,1.129,569,0.987,570,1.129,571,1.014,572,1.07,573,0.987,574,0.987,575,1.099,576,0.71,577,0.987,578,1.129,579,0.987,580,1.129,581,0.987,582,1.129,583,0.987,584,1.129,585,0.987,586,1.129,587,0.987,588,1.129,589,0.987,590,1.129,591,0.987,592,1.129,593,0.987,594,1.129,595,0.987,596,1.129,597,0.987,598,1.129,599,0.987,600,1.129,601,0.987,602,1.129,603,0.987,604,1.099,605,1.129,617,1.396,618,1.815,620,2.426,621,2.579,623,2.004,641,3.99,651,2.403,669,0.69,943,3.684,944,4.564,945,4.266,946,5.772,947,2.865,948,4.61,949,3.761,950,5.772,951,5.772,952,5.772,953,5.772,954,5.772,955,5.071,956,3.99,957,3.824,958,4.61,959,3.565,960,5.071,961,4.61,962,5.772,963,5.071,964,5.071,965,5.071,966,6.601,967,1.942,968,5.272,969,5.772,970,7.112,971,4.61,972,4.192,973,4.192,974,4.192,975,4.192,976,4.192,977,5.071,978,4.192,979,1.495,980,4.077,981,5.772,982,6.773,983,3.684]],["title/components/ButtonGroupComponent.html",[313,0.22,503,1.018]],["body/components/ButtonGroupComponent.html",[0,0.022,3,0.129,4,0.149,5,0.112,8,0.149,9,0.696,10,2.099,11,1.133,13,0.632,20,0.835,23,0.669,25,0.996,26,0.011,27,0.554,28,0.327,29,0.65,30,1.254,33,1.164,36,2.293,37,1.43,43,1.204,44,0.971,45,1.252,50,1.782,52,0.938,56,1.947,57,0.846,64,1.044,65,1.291,71,0.427,82,0.197,83,1.625,84,0.297,85,0.677,87,0.183,90,1.252,102,0.004,103,0.006,104,0.004,109,0.889,148,0.604,192,2.363,204,1.733,209,0.653,213,2.473,215,1.754,217,1.612,218,1.781,220,1.263,235,1.389,239,1.445,246,0.865,269,0.889,287,3.708,295,0.938,313,0.318,319,2.346,380,0.865,385,1.658,407,1.016,416,1.091,421,2.473,423,1.332,466,0.913,467,0.963,468,0.963,469,0.99,472,0.963,473,0.677,474,1.207,476,1.073,478,1.073,493,0.938,494,1.406,495,0.416,496,1.83,497,1.017,498,1.017,499,0.842,500,1.017,501,0.889,502,1.017,503,1.845,504,1.017,505,0.913,506,1.017,507,0.913,508,1.017,509,0.913,510,1.017,511,0.913,512,0.938,513,1.017,514,0.913,515,1.445,516,0.913,517,0.963,518,1.017,519,0.913,520,1.017,521,0.865,522,1.017,523,0.913,524,1.017,525,1.017,526,0.889,527,1.017,528,0.913,529,1.017,530,0.889,531,1.017,532,0.913,533,1.681,534,0.913,535,0.865,536,0.865,537,1.445,538,0.913,539,0.938,540,1.017,541,0.889,542,1.017,543,0.913,544,1.017,545,0.913,546,1.017,547,0.865,548,1.017,549,0.913,550,1.017,551,0.913,552,0.913,553,1.017,554,0.889,555,0.842,556,1.017,557,0.889,558,1.017,559,1.468,560,1.017,561,0.889,562,0.963,563,0.913,564,1.017,565,0.938,566,1.017,567,0.913,568,1.017,569,0.889,570,1.017,571,0.913,572,0.963,573,0.889,574,0.889,575,0.99,576,0.64,577,0.889,578,1.017,579,0.889,580,1.017,581,0.889,582,1.017,583,0.889,584,1.017,585,0.889,586,1.017,587,0.889,588,1.017,589,0.889,590,1.017,591,0.889,592,1.017,593,0.889,594,1.017,595,0.889,596,1.017,597,0.889,598,1.017,599,0.889,600,1.017,601,0.889,602,1.017,603,0.889,604,0.99,605,1.017,617,1.297,618,1.733,620,2.637,621,2.438,622,2.161,623,2.983,651,2.234,666,1.572,669,0.622,701,2.226,702,1.347,703,2.226,824,2.032,825,2.032,826,1.347,827,2.423,828,2.032,829,2.226,898,4.196,945,3.964,967,1.805,980,3.854,984,7.497,985,6.815,986,3.317,987,4.066,988,4.713,989,4.713,990,4.284,991,4.713,992,4.284,993,2.096,994,4.713,995,5.364,996,5.364,997,6.239,998,2.234,999,2.234,1000,5.364,1001,5.731,1002,3.854,1003,4.983,1004,5.364,1005,3.775,1006,3.775,1007,3.775,1008,3.775,1009,3.775,1010,3.775,1011,3.775,1012,3.775,1013,3.775,1014,3.775,1015,5.364,1016,3.775,1017,2.309,1018,3.775,1019,3.775,1020,5.364,1021,3.775,1022,3.775,1023,3.775,1024,3.775,1025,3.317,1026,5.364]],["title/injectables/CaptchaDataService.html",[196,1.744,1027,2.819]],["body/injectables/CaptchaDataService.html",[0,0.039,3,0.175,4,0.204,5,0.107,8,0.204,13,0.78,20,0.689,23,0.608,25,1.131,26,0.011,27,0.558,28,0.305,29,0.739,42,5.969,57,0.862,71,0.571,81,2.89,82,0.284,84,0.405,87,0.226,92,0.901,102,0.006,103,0.008,104,0.006,110,4.106,115,4.765,120,4.805,139,4.528,147,3.179,165,2.89,166,2.46,174,0.872,196,2.948,198,3.026,220,1.441,779,1.59,1027,4.312,1028,6.377,1029,4.11,1030,6.616,1031,6.616,1032,6.616,1033,5.146,1034,5.146,1035,6.425,1036,7.016,1037,5.146,1038,6.527,1039,6.425,1040,7.065,1041,5.146,1042,6.425,1043,7.398,1044,7.181,1045,5.146,1046,4.522,1047,4.151,1048,3.803,1049,6.425,1050,3.354,1051,3.803,1052,5.055,1053,4.522,1054,3.558,1055,6.425,1056,6.425,1057,5.813,1058,4.522,1059,5.813,1060,6.425]],["title/modules/CaptchaModule.html",[1061,2.543,1062,2.819]],["body/modules/CaptchaModule.html",[0,0.034,3,0.193,4,0.224,5,0.118,13,0.666,23,0.445,26,0.011,57,0.666,82,0.318,84,0.445,85,1.013,87,0.193,92,0.623,102,0.007,103,0.008,104,0.007,111,3.236,165,3.173,203,4.611,215,1.847,217,2.516,235,1.091,239,1.89,240,3.941,313,0.288,349,5.606,360,2.353,422,3.49,492,2.701,493,1.403,505,2.126,609,1.901,610,1.901,642,5.187,664,1.481,768,2.077,857,5.187,933,2.804,941,3.322,1027,5.53,1038,4.513,1040,4.513,1052,5.278,1061,4.489,1062,5.772,1063,3.49,1064,5.677,1065,6.098,1066,4.965,1067,4.965,1068,4.965,1069,4.965,1070,5.606,1071,4.176,1072,5.65,1073,7.635,1074,5.65,1075,7.635,1076,6.167,1077,5.278,1078,2.804,1079,5.65,1080,4.965,1081,5.65,1082,4.965,1083,5.65,1084,3.906,1085,5.65,1086,4.965,1087,6.167,1088,5.65,1089,4.965,1090,6.167,1091,4.513]],["title/injectables/CheckCompleteBaseService.html",[196,1.744,1092,3.197]],["body/injectables/CheckCompleteBaseService.html",[0,0.044,3,0.136,4,0.158,5,0.083,8,0.29,9,0.723,13,0.657,15,1.905,17,3.468,20,0.746,21,2.755,22,4.687,23,0.67,25,1.073,26,0.011,27,0.529,28,0.314,29,0.701,30,1.362,43,0.97,44,0.847,45,1.282,57,0.983,64,1.547,65,1.249,71,0.535,76,3.634,80,4.059,82,0.237,84,0.314,86,2.057,87,0.19,90,1.282,92,0.876,97,2.162,102,0.005,103,0.007,104,0.005,109,0.938,111,2.569,117,2.481,163,1.465,174,1.179,196,2.247,197,3.632,198,2.343,199,2.755,201,4.298,202,3.276,209,0.485,213,2.963,214,3.969,215,1.303,220,1.487,221,5.558,222,5.558,223,5.132,224,5.558,227,3.502,239,1.501,272,5.329,273,3.129,309,3.208,326,1.461,360,2.321,362,3.129,385,1.722,409,2.997,448,1.465,606,0.918,664,1.461,742,3.907,768,2.048,779,2.345,789,2.177,802,3.853,803,3.742,852,3.442,859,6.06,947,2.766,1092,4.118,1093,6.832,1094,3.183,1095,4.897,1096,3.853,1097,4.118,1098,2.997,1099,5.646,1100,5.646,1101,5.646,1102,5.646,1103,6.114,1104,5.558,1105,5.558,1106,5.646,1107,5.646,1108,5.573,1109,3.985,1110,3.985,1111,3.985,1112,3.985,1113,3.969,1114,2.676,1115,3.853,1116,3.985,1117,4.451,1118,5.142,1119,3.985,1120,4.451,1121,3.632,1122,5.607,1123,3.985,1124,3.985,1125,4.897,1126,3.985,1127,4.897,1128,4.897,1129,4.118,1130,3.985,1131,4.897,1132,4.897,1133,3.985,1134,4.749,1135,3.985,1136,3.985,1137,3.985,1138,3.985,1139,3.985,1140,5.646,1141,3.183,1142,3.502,1143,3.502,1144,2.462,1145,2.462,1146,4.897,1147,4.897,1148,5.646,1149,6.434,1150,5.646,1151,4.897,1152,4.451,1153,4.451,1154,3.853,1155,4.897,1156,3.502,1157,3.502,1158,3.502,1159,3.502,1160,3.183,1161,3.502,1162,3.502,1163,3.502,1164,3.502,1165,3.502,1166,3.502,1167,3.502,1168,3.502,1169,3.502,1170,3.502]],["title/components/CheckboxComponent.html",[313,0.22,507,1.046]],["body/components/CheckboxComponent.html",[0,0.022,3,0.125,4,0.145,5,0.11,8,0.145,9,0.68,10,2.063,11,1.295,13,0.618,20,0.702,23,0.677,25,1.039,26,0.011,27,0.562,28,0.335,29,0.727,30,1.301,33,1.138,34,1.576,36,2.253,37,1.987,43,1.212,44,0.978,45,1.359,50,1.663,52,0.909,56,1.303,57,0.869,64,1.021,65,1.303,71,0.478,82,0.226,83,1.574,84,0.288,85,0.656,87,0.179,102,0.004,103,0.006,104,0.004,109,0.861,138,1.344,148,0.585,192,2.686,204,1.338,209,0.638,215,1.715,218,1.375,220,1.377,235,1.386,239,1.804,244,3.626,246,0.838,269,0.861,287,5.62,295,0.909,313,0.361,319,2.318,380,0.838,407,1.161,409,1.967,416,1.126,423,1.303,466,0.884,467,0.933,468,0.933,469,0.959,472,1.564,473,0.656,474,1.205,476,1.049,478,1.049,481,1.756,493,0.909,494,1.375,495,0.403,496,1.804,497,0.985,498,0.985,499,0.816,500,0.985,501,0.861,502,0.985,503,0.861,504,0.985,505,0.884,506,0.985,507,1.619,508,0.985,509,0.884,510,0.985,511,0.884,512,0.909,513,0.985,514,0.884,515,1.413,516,0.884,517,0.933,518,0.985,519,0.884,520,0.985,521,0.838,522,0.985,523,0.884,524,0.985,525,0.985,526,0.861,527,0.985,528,0.884,529,0.985,530,0.861,531,0.985,532,0.884,533,1.651,534,0.884,535,0.838,536,0.838,537,1.413,538,0.884,539,0.909,540,0.985,541,0.861,542,0.985,543,0.884,544,0.985,545,0.884,546,0.985,547,0.838,548,0.985,549,0.884,550,0.985,551,0.884,552,0.884,553,0.985,554,0.861,555,0.816,556,0.985,557,0.861,558,0.985,559,0.861,560,0.985,561,0.861,562,0.933,563,0.884,564,0.985,565,0.909,566,0.985,567,0.884,568,0.985,569,0.861,570,0.985,571,0.884,572,0.933,573,0.861,574,0.861,575,0.959,576,0.62,577,0.861,578,0.985,579,0.861,580,0.985,581,0.861,582,0.985,583,0.861,584,0.985,585,0.861,586,0.985,587,0.861,588,0.985,589,0.861,590,0.985,591,0.861,592,0.985,593,0.861,594,0.985,595,0.861,596,0.985,597,0.861,598,0.985,599,0.861,600,0.985,601,0.861,602,0.985,603,0.861,604,0.959,605,0.985,617,1.268,618,1.709,620,2.253,621,2.395,622,2.124,623,1.749,624,1.576,625,1.099,648,1.13,651,2.184,652,1.202,669,0.602,701,2.187,702,1.305,703,2.187,704,1.04,762,2.184,824,1.987,825,1.987,826,1.305,827,2.389,828,1.987,829,1.871,898,4.136,905,2.945,906,1.621,935,1.817,937,1.163,938,1.231,939,1.196,940,1.305,967,1.765,979,1.871,980,3.787,998,2.184,999,2.184,1001,4.897,1002,3.787,1003,4.897,1017,2.257,1025,4.608,1171,3.214,1172,5.244,1173,5.244,1174,3.269,1175,6.676,1176,5.244,1177,1.816,1178,3.156,1179,5.244,1180,3.658,1181,5.244,1182,3.239,1183,3.239,1184,3.658,1185,3.658,1186,3.658,1187,3.658,1188,3.658,1189,3.658,1190,3.658,1191,3.658,1192,3.658,1193,3.658,1194,5.244,1195,3.658,1196,3.658,1197,3.658,1198,5.244,1199,3.658,1200,1.816,1201,3.658,1202,3.658,1203,1.231,1204,1.344,1205,2.335,1206,1.344,1207,2.703,1208,1.687,1209,4.608,1210,4.608,1211,2.259,1212,3.658,1213,3.658,1214,3.658]],["title/components/CityComponent.html",[313,0.22,509,1.046]],["body/components/CityComponent.html",[0,0.019,3,0.111,4,0.128,5,0.1,8,0.128,9,0.624,10,1.926,11,1.016,13,0.567,20,0.643,23,0.681,25,1.102,26,0.011,27,0.586,28,0.337,29,0.748,30,1.081,33,1.044,37,1.23,43,1.179,44,1.047,45,0.886,50,1.572,52,0.806,56,1.194,57,0.905,64,0.936,65,1.335,71,0.519,82,0.233,84,0.256,85,0.582,87,0.111,92,0.358,102,0.004,103,0.006,104,0.004,117,2.14,148,0.769,178,1.397,209,0.585,220,1.145,235,1.376,246,0.744,269,0.764,295,0.806,313,0.292,319,2.511,380,0.744,400,3.079,407,1.084,416,1.07,423,1.194,466,0.785,467,0.828,468,0.828,469,0.851,472,1.461,473,0.582,474,1.198,476,0.962,478,0.962,481,1.659,493,0.806,494,1.26,495,0.358,496,1.705,497,0.874,498,0.874,499,0.724,500,0.874,501,0.764,502,0.874,503,0.764,504,0.874,505,0.785,506,0.874,507,0.785,508,0.874,509,1.53,510,0.874,511,0.785,512,0.806,513,0.874,514,0.785,515,1.295,516,0.785,517,0.828,518,0.874,519,0.785,520,0.874,521,0.744,522,0.874,523,0.785,524,0.874,525,0.874,526,0.764,527,0.874,528,0.785,529,0.874,530,0.764,531,0.874,532,0.785,533,1.542,534,0.785,535,0.744,536,0.744,537,1.295,538,0.785,539,0.806,540,0.874,541,0.764,542,0.874,543,0.785,544,0.874,545,0.785,546,0.874,547,0.744,548,0.874,549,0.785,550,0.874,551,0.785,552,0.785,553,0.874,554,0.764,555,0.724,556,0.874,557,0.764,558,0.874,559,0.764,560,0.874,561,0.764,562,0.828,563,0.785,564,0.874,565,0.806,566,0.874,567,0.785,568,0.874,569,0.764,570,0.874,571,0.785,572,0.828,573,0.764,574,0.764,575,0.851,576,0.55,577,0.764,578,0.874,579,0.764,580,0.874,581,0.764,582,0.874,583,0.764,584,0.874,585,0.764,586,0.874,587,0.764,588,0.874,589,0.764,590,0.874,591,0.764,592,0.874,593,0.764,594,0.874,595,0.764,596,0.874,597,0.764,598,0.874,599,0.764,600,0.874,601,0.764,602,0.874,603,0.764,604,0.851,605,0.874,609,1.618,610,1.618,615,4.13,617,1.384,618,1.869,622,1.983,624,1.49,625,0.976,648,1.003,652,1.101,664,0.851,666,2.636,669,0.792,701,2.042,702,1.715,703,2.042,704,0.923,727,2.069,776,1.715,779,1.769,789,1.268,824,2.169,825,1.23,826,1.715,827,2.524,828,1.23,829,1.715,830,2.298,831,1.552,832,2.14,906,1.003,911,5.03,935,1.665,937,1.032,938,1.092,939,1.061,940,1.158,959,2.969,967,1.618,979,2.258,998,2.384,999,2.384,1017,1.397,1078,2.386,1174,3.116,1177,1.611,1178,3.009,1200,1.611,1203,1.092,1204,1.193,1205,2.14,1208,1.497,1215,2.852,1216,4.807,1217,4.807,1218,3.536,1219,3.215,1220,3.215,1221,2.827,1222,3.91,1223,3.732,1224,2.737,1225,3.079,1226,2.955,1227,2.842,1228,4.807,1229,3.246,1230,3.246,1231,3.246,1232,4.807,1233,2.217,1234,3.246,1235,3.133,1236,3.246,1237,3.246,1238,4.807,1239,3.246,1240,3.246,1241,3.246,1242,2.005,1243,3.246,1244,2.005,1245,3.246,1246,3.246,1247,3.246,1248,3.246,1249,3.246,1250,3.246,1251,3.246,1252,3.246,1253,3.246,1254,2.585,1255,3.133,1256,2.7,1257,2.217,1258,3.84,1259,3.133,1260,2.724,1261,3.324,1262,3.324,1263,3.324,1264,3.246,1265,1.909,1266,3.246,1267,1.909,1268,1.309,1269,1.938,1270,1.309,1271,1.938,1272,1.938,1273,1.938,1274,1.309,1275,1.309,1276,1.938,1277,1.938,1278,1.309,1279,1.309,1280,1.309,1281,1.309,1282,1.309,1283,1.938,1284,1.878,1285,1.309,1286,1.938,1287,1.938,1288,1.309,1289,1.938,1290,1.309,1291,1.309,1292,1.309,1293,1.309,1294,2.552,1295,1.309,1296,1.309,1297,1.309,1298,1.309,1299,1.309,1300,1.309,1301,1.309,1302,1.309,1303,1.309,1304,1.309,1305,1.309,1306,1.309,1307,1.309,1308,1.309,1309,1.309,1310,1.309,1311,1.938,1312,1.309,1313,1.309,1314,1.309,1315,1.309,1316,1.309,1317,1.309,1318,1.309,1319,1.309,1320,1.309,1321,1.309,1322,1.309,1323,1.309,1324,1.309,1325,1.938,1326,1.309,1327,1.309,1328,1.309,1329,1.309,1330,1.309,1331,1.092,1332,1.309,1333,1.309,1334,1.309,1335,1.309,1336,1.309,1337,1.309,1338,1.309,1339,1.309,1340,2.399,1341,2.005,1342,1.746,1343,1.676,1344,1.676,1345,2.244,1346,2.244,1347,2.005,1348,2.244,1349,3.553,1350,3.84]],["title/classes/CommonImage.html",[0,0.026,1351,2.429]],["body/classes/CommonImage.html",[0,0.044,2,2.273,3,0.18,4,0.209,5,0.163,8,0.209,9,0.873,17,2.351,20,0.99,23,0.689,26,0.011,27,0.535,28,0.345,29,0.644,43,0.797,44,0.643,59,2.33,71,0.555,82,0.194,87,0.274,92,0.582,97,2.263,102,0.006,103,0.008,104,0.006,109,1.243,148,1.288,209,0.643,220,0.895,238,3.262,309,2.435,326,2.33,354,2,606,0.87,657,3.105,669,0.87,906,1.632,937,1.678,941,4.732,942,2.965,1331,2.49,1351,4.376,1352,3.441,1353,4.572,1354,4.65,1355,5.47,1356,5.47,1357,5.47,1358,5.47,1359,5.47,1360,4.823,1361,5.47,1362,5.47,1363,6.726,1364,5.281,1365,5.281,1366,4.813,1367,5.281,1368,5.281,1369,5.281,1370,5.281,1371,5.281,1372,5.281,1373,5.281,1374,5.281,1375,5.281,1376,3.441,1377,3.955,1378,3.262,1379,3.441,1380,3.651,1381,3.651,1382,3.651,1383,3.651,1384,3.441,1385,3.651,1386,3.651,1387,3.651,1388,3.262,1389,3.903,1390,3.903,1391,3.105,1392,3.903,1393,3.903,1394,3.903,1395,2.621,1396,2.199,1397,3.651,1398,3.262,1399,3.903,1400,3.441,1401,3.903,1402,3.903,1403,3.651,1404,3.651,1405,3.903,1406,3.651,1407,3.903,1408,3.903,1409,4.813,1410,4.971,1411,4.971,1412,4.971,1413,3.955,1414,3.903,1415,4.971,1416,4.971,1417,3.903,1418,4.971,1419,4.65]],["title/classes/CommonImageProcessingError.html",[0,0.026,1388,2.672]],["body/classes/CommonImageProcessingError.html",[0,0.045,2,2.347,3,0.186,4,0.216,5,0.17,8,0.216,9,0.891,17,2.428,20,0.919,23,0.653,25,0.799,26,0.011,27,0.496,28,0.328,29,0.823,59,1.889,71,0.548,81,3.063,82,0.201,87,0.277,92,0.601,97,1.835,102,0.006,103,0.008,104,0.006,148,1.202,209,0.664,220,1.377,238,3.369,309,2.515,326,2.32,354,2.066,606,0.898,657,3.207,669,0.898,906,1.686,937,1.733,941,4.417,942,3.063,1331,1.835,1351,4.658,1352,3.554,1353,4.24,1354,3.771,1355,4.031,1356,4.031,1357,4.031,1358,4.031,1359,4.031,1360,3.554,1361,4.031,1362,4.031,1366,5.124,1376,3.554,1377,4.036,1378,3.369,1379,3.554,1380,3.771,1381,3.771,1382,3.771,1383,3.771,1384,3.554,1385,3.771,1386,3.771,1387,3.771,1388,4.24,1389,5.552,1390,5.552,1391,3.207,1392,4.031,1393,4.031,1394,4.031,1395,2.707,1396,2.271,1397,3.771,1398,3.369,1399,4.031,1400,3.554,1401,4.031,1402,4.031,1403,5.451,1404,5.618,1405,4.031,1406,3.771,1407,4.031,1408,4.031,1409,4.871,1410,5.074,1411,5.074,1412,5.074,1413,4.036,1414,4.031,1415,5.074,1416,5.074,1417,4.031,1418,5.074,1419,4.746,1420,5.454,1421,6.865,1422,5.454,1423,6.865,1424,5.454]],["title/interfaces/CommonImageScaleFactors.html",[606,0.712,1409,2.672]],["body/interfaces/CommonImageScaleFactors.html",[0,0.045,3,0.192,4,0.223,5,0.167,8,0.223,9,0.908,13,0.825,17,2.506,20,0.753,23,0.443,25,0.825,26,0.011,27,0.506,28,0.302,29,0.539,57,0.663,59,1.949,71,0.539,82,0.207,87,0.28,92,0.62,97,1.894,102,0.007,103,0.008,104,0.007,148,1.219,209,0.685,220,0.953,238,3.476,309,2.595,326,2.352,354,2.132,606,0.927,608,2.068,657,3.309,669,0.927,906,1.739,937,1.789,941,4.481,942,3.16,1331,1.894,1351,4.279,1352,3.667,1353,4.324,1354,3.891,1355,4.159,1356,4.159,1357,4.159,1358,4.159,1359,4.159,1360,3.667,1361,4.159,1362,4.159,1366,4.707,1376,3.667,1377,4.116,1378,3.476,1379,3.667,1380,3.891,1381,3.891,1382,3.891,1383,3.891,1384,3.667,1385,3.891,1386,3.891,1387,3.891,1388,3.476,1389,4.159,1390,4.159,1391,3.309,1392,4.159,1393,4.159,1394,4.159,1395,2.793,1396,2.343,1397,3.891,1398,3.476,1399,4.159,1400,3.667,1401,4.159,1402,4.159,1403,3.891,1404,3.891,1405,4.159,1406,3.891,1407,4.159,1408,4.159,1409,5.165,1410,6.062,1411,6.062,1412,5.632,1413,4.116,1414,4.159,1415,5.174,1416,5.174,1417,4.159,1418,5.174,1419,5.269,1425,6.152,1426,5.628]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.026,1413,2.543]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.045,2,2.379,3,0.188,4,0.219,5,0.165,8,0.219,9,0.898,13,0.816,17,2.462,20,0.927,23,0.624,25,1.015,26,0.011,27,0.547,28,0.314,29,0.663,57,0.652,59,1.915,71,0.537,82,0.204,87,0.278,92,0.609,97,1.86,102,0.007,103,0.008,104,0.007,148,1.21,209,0.843,220,0.937,238,3.415,309,2.549,326,2.356,354,2.094,606,0.91,657,3.251,669,0.91,906,1.709,937,1.757,941,4.445,942,3.105,1331,1.86,1351,4.245,1352,3.603,1353,4.277,1354,3.822,1355,4.086,1356,4.086,1357,4.086,1358,4.086,1359,4.086,1360,3.603,1361,4.086,1362,4.086,1366,4.67,1376,3.603,1377,4.071,1378,3.415,1379,3.603,1380,3.822,1381,3.822,1382,3.822,1383,3.822,1384,3.603,1385,3.822,1386,3.822,1387,3.822,1388,3.415,1389,4.086,1390,4.086,1391,3.251,1392,4.086,1393,4.086,1394,4.086,1395,2.744,1396,2.302,1397,3.822,1398,3.415,1399,4.086,1400,3.603,1401,4.086,1402,4.086,1403,3.822,1404,3.822,1405,4.086,1406,3.822,1407,4.086,1408,4.086,1409,5.142,1410,5.856,1411,5.856,1412,5.587,1413,4.445,1414,5.117,1415,5.856,1416,5.117,1417,5.117,1418,5.117,1419,5.227,1425,6.084,1427,6.924,1428,5.529,1429,5.529]],["title/interfaces/CommonLogMessage.html",[606,0.712,1430,3.197]],["body/interfaces/CommonLogMessage.html",[0,0.025,3,0.226,4,0.168,5,0.089,8,0.168,9,0.755,15,2.028,17,3.335,23,0.334,26,0.011,27,0.48,28,0.283,29,0.406,50,1.86,71,0.526,77,2.494,80,2.888,82,0.276,84,0.334,87,0.198,88,2.621,92,0.902,102,0.005,103,0.007,104,0.005,105,3.268,107,2.106,110,3.73,111,2.683,112,2.621,114,2.933,115,3.792,118,4.648,120,3.421,122,4.329,124,4.941,125,4.909,132,3.595,134,2.204,140,2.621,141,4.329,145,2.765,147,2.621,148,1.325,150,2.933,151,1.767,155,4.023,161,3.905,165,2.382,166,2.028,170,2.683,174,1.125,185,2.621,192,2.204,195,5.717,196,2.346,215,1.387,220,1.125,275,2.933,300,2.505,336,1.826,352,2.494,360,1.767,379,2.683,385,1.311,396,2.19,402,3.135,416,0.603,448,2.139,606,0.958,608,1.559,652,0.972,654,2.106,656,2.382,664,2.077,669,0.958,695,3.076,754,1.85,768,1.559,772,2.494,773,2.281,779,2.314,800,2.621,850,2.281,887,4.648,891,3.135,934,2.888,949,2.765,958,3.389,979,2.983,1047,3.844,1050,3.792,1144,2.621,1145,2.621,1183,2.621,1203,1.428,1223,2.888,1257,1.956,1331,1.958,1376,2.765,1377,2.494,1400,4.329,1430,5.855,1431,3.135,1432,3.389,1433,4.243,1434,4.648,1435,5.113,1436,2.933,1437,3.421,1438,2.765,1439,3.389,1440,4.648,1441,3.728,1442,6.581,1443,3.728,1444,5.113,1445,5.113,1446,6.28,1447,5.113,1448,2.933,1449,5.113,1450,5.113,1451,5.113,1452,3.728,1453,5.113,1454,3.728,1455,4.592,1456,4.596,1457,3.728,1458,3.728,1459,5.113,1460,5.305,1461,4.648,1462,5.305,1463,2.621,1464,4.648,1465,3.135,1466,3.389,1467,3.728,1468,3.728,1469,3.421,1470,3.728,1471,3.728,1472,3.728,1473,3.728,1474,3.728,1475,3.728,1476,3.728,1477,3.728,1478,2.494,1479,3.728,1480,3.792,1481,3.728,1482,3.728,1483,3.728,1484,3.728,1485,3.728,1486,3.728,1487,3.728,1488,3.728,1489,3.728,1490,3.135,1491,3.135,1492,3.135,1493,5.113,1494,2.765,1495,3.728,1496,3.728,1497,3.728,1498,3.728,1499,3.135,1500,3.728,1501,3.728,1502,3.728,1503,3.728,1504,3.389,1505,3.595,1506,2.494,1507,3.389,1508,3.135,1509,2.933,1510,3.728,1511,3.389,1512,3.728,1513,3.728,1514,4.648,1515,2.765,1516,3.389,1517,3.135,1518,4.648,1519,3.728,1520,3.389,1521,3.389,1522,3.389,1523,3.728,1524,3.389,1525,3.728,1526,5.113,1527,3.135,1528,3.728,1529,3.389,1530,2.765,1531,3.728,1532,3.389,1533,3.728,1534,3.728,1535,3.728,1536,3.728,1537,4.648,1538,3.728,1539,3.728,1540,3.728,1541,3.728,1542,3.728,1543,3.728,1544,3.728,1545,2.933,1546,3.728,1547,3.135,1548,3.728]],["title/injectables/CommonLogger.html",[196,1.744,1438,2.819]],["body/injectables/CommonLogger.html",[0,0.018,3,0.187,4,0.12,5,0.063,8,0.12,9,0.591,13,0.647,15,3.134,17,3.809,20,0.404,23,0.674,25,1.23,26,0.011,27,0.61,28,0.34,29,0.8,30,0.484,43,0.828,44,0.668,45,0.557,50,1.907,57,0.979,65,1.212,71,0.52,72,3.368,77,2.68,80,3.654,81,1.697,82,0.241,84,0.238,87,0.155,88,1.867,92,0.831,102,0.004,103,0.005,104,0.004,105,4.23,107,1.5,109,1.291,110,4.016,111,2.53,112,4.049,113,3.64,114,4.532,115,4.661,116,3.64,117,2.029,118,5.236,119,2.414,120,3.592,122,4.49,124,5.09,125,5.092,126,2.414,127,2.414,128,3.368,130,4.382,131,2.234,132,4.049,133,3.151,134,2.483,135,1.867,136,2.414,137,2.234,138,1.111,139,3.705,140,3.389,141,4.909,143,2.234,144,2.414,145,3.575,146,2.09,147,3.389,148,1.321,149,2.414,150,3.151,151,2.285,152,2.414,153,2.414,154,2.414,155,4.223,157,2.414,159,2.656,161,4.051,165,1.697,166,1.445,170,2.101,174,0.929,185,2.815,192,2.314,195,5.092,196,1.838,198,1.777,215,1.49,220,1.276,275,3.151,300,2.361,336,1.301,352,2.68,360,1.898,379,2.817,385,1.408,396,1.56,402,2.234,416,0.648,448,1.111,606,0.75,652,1.044,654,2.262,656,2.559,664,2.044,669,1.006,695,2.966,754,1.744,768,1.675,772,2.68,773,2.451,779,2.516,800,2.815,850,2.451,887,4.879,891,3.368,934,2.262,949,2.97,958,3.64,979,2.782,1047,3.705,1050,2.97,1144,1.867,1145,1.867,1183,1.867,1203,2.477,1223,3.032,1257,2.101,1331,1.846,1376,2.97,1377,1.777,1400,4.49,1430,5.84,1431,2.234,1434,2.414,1435,2.656,1436,2.09,1437,2.68,1438,2.97,1439,3.64,1440,4.382,1441,4.004,1442,6.468,1443,4.004,1444,5.368,1445,5.368,1446,6.468,1447,5.368,1448,2.09,1449,4.004,1450,4.004,1451,5.368,1452,4.004,1453,4.004,1454,4.004,1455,4.945,1456,4.532,1457,2.656,1458,4.821,1459,4.004,1460,5.236,1461,4.879,1462,4.879,1463,2.815,1464,4.879,1465,3.368,1466,3.64,1467,4.004,1468,4.004,1469,3.592,1470,4.004,1471,4.004,1472,4.004,1473,2.656,1474,2.656,1475,4.004,1476,2.656,1477,2.656,1478,2.68,1479,4.004,1480,3.575,1481,4.004,1482,4.004,1483,4.004,1484,2.656,1485,2.656,1486,2.656,1487,2.656,1488,2.656,1489,4.004,1490,3.368,1491,3.368,1492,3.368,1493,5.368,1494,2.97,1495,4.004,1496,4.004,1497,2.656,1498,2.656,1499,2.234,1500,2.656,1501,4.821,1502,2.656,1503,2.656,1504,2.414,1505,2.815,1506,1.777,1507,2.414,1508,2.234,1509,2.09,1510,2.656,1511,2.414,1512,2.656,1513,2.656,1514,3.64,1515,1.97,1516,2.414,1517,2.234,1518,3.64,1519,2.656,1520,2.414,1521,2.414,1522,2.414,1523,2.656,1524,2.414,1525,2.656,1526,4.821,1527,3.368,1528,4.004,1529,3.64,1530,2.97,1531,4.004,1532,3.64,1533,5.368,1534,2.656,1535,2.656,1536,4.004,1537,4.879,1538,2.656,1539,4.004,1540,4.004,1541,4.004,1542,4.004,1543,2.656,1544,2.656,1545,2.09,1546,2.656,1547,2.234,1548,2.656,1549,4.558,1550,4.558,1551,4.558,1552,4.558,1553,4.558,1554,4.558,1555,4.558,1556,3.022,1557,3.022,1558,3.022,1559,3.022,1560,3.022,1561,3.022,1562,3.022,1563,3.022,1564,3.022,1565,3.022,1566,3.022,1567,3.022,1568,3.022,1569,2.656,1570,2.656,1571,2.656,1572,2.656,1573,3.022,1574,2.656,1575,2.656,1576,3.022,1577,3.022,1578,3.022,1579,3.022,1580,3.022,1581,3.022,1582,3.022,1583,3.022,1584,3.022]],["title/components/ConfirmTemplateComponent.html",[313,0.22,511,1.046]],["body/components/ConfirmTemplateComponent.html",[0,0.028,3,0.161,4,0.186,5,0.13,8,0.186,9,0.81,11,1.319,20,0.937,23,0.628,26,0.011,27,0.506,28,0.247,33,1.355,43,0.942,44,0.76,52,1.17,56,1.551,64,1.216,71,0.296,82,0.23,84,0.371,87,0.213,92,0.772,97,1.584,102,0.006,103,0.007,104,0.006,117,2.78,148,0.999,194,2.909,220,1.058,235,1.406,246,1.079,269,1.108,295,1.17,313,0.357,380,1.079,407,1.327,416,0.888,423,1.551,466,1.139,467,1.787,468,1.202,469,1.235,473,0.844,474,1.218,476,1.249,478,1.249,493,1.17,494,1.637,495,0.519,496,2.009,497,1.268,498,1.268,499,1.05,500,1.268,501,1.108,502,1.268,503,1.108,504,1.268,505,1.139,506,1.268,507,1.139,508,1.268,509,1.139,510,1.268,511,1.803,512,2.021,513,1.268,514,1.139,515,1.682,516,1.139,517,1.202,518,1.268,519,1.139,520,1.268,521,1.079,522,1.268,523,1.139,524,1.268,525,1.268,526,1.108,527,1.268,528,1.139,529,1.268,530,1.108,531,1.268,532,1.139,533,1.887,534,1.139,535,1.079,536,1.079,537,1.682,538,1.139,539,1.17,540,1.268,541,1.108,542,1.268,543,1.139,544,1.268,545,1.139,546,1.268,547,1.079,548,1.268,549,1.139,550,1.268,551,1.139,552,1.139,553,1.268,554,1.108,555,1.05,556,1.268,557,1.108,558,1.268,559,1.108,560,1.268,561,1.108,562,1.202,563,1.139,564,1.268,565,1.17,566,1.268,567,1.139,568,1.268,569,1.108,570,1.268,571,1.139,572,1.202,573,1.108,574,1.108,575,1.235,576,0.798,577,1.108,578,1.268,579,1.108,580,1.268,581,1.108,582,1.268,583,1.108,584,1.268,585,1.108,586,1.268,587,1.108,588,1.268,589,1.108,590,1.268,591,1.108,592,1.268,593,1.108,594,1.268,595,1.108,596,1.268,597,1.108,598,1.268,599,1.108,600,1.268,601,1.108,602,1.268,603,1.108,604,1.235,605,1.268,624,1.755,625,1.415,648,1.455,652,1.43,692,2.097,704,1.339,935,2.163,937,1.497,938,1.584,939,1.54,940,1.68,1114,1.961,1203,1.584,1204,1.731,1377,2.769,1403,4.842,1585,6.371,1586,5.895,1587,3.761,1588,6.244,1589,6.244,1590,7.004,1591,7.004,1592,7.004,1593,6.244,1594,6.154,1595,7.004,1596,4.709,1597,4.709,1598,4.709,1599,4.709,1600,4.709,1601,4.709,1602,3.761,1603,3.48,1604,4.709,1605,4.709,1606,4.709]],["title/classes/Container.html",[0,0.026,1607,2.672]],["body/classes/Container.html",[0,0.035,2,2.494,3,0.282,4,0.229,5,0.121,8,0.229,9,0.925,13,0.84,17,3.438,23,0.608,25,1.045,26,0.011,27,0.515,28,0.306,29,0.682,57,0.84,59,2.469,65,1.174,71,0.546,76,4.337,82,0.213,86,2.991,87,0.243,92,0.786,102,0.007,103,0.008,104,0.007,109,1.364,151,2.969,163,2.62,236,5.694,305,5.694,364,4.003,483,4.976,572,1.479,573,1.364,606,1.174,624,1.678,713,3.174,788,4.006,789,2.264,1113,4.77,1607,4.976,1608,4.629,1609,6.264,1610,6.264,1611,6.168,1612,7.129,1613,6.785,1614,5.032,1615,5.795,1616,6.264,1617,6.264,1618,5.795,1619,6.264,1620,6.264,1621,5.954,1622,5.795,1623,5.795,1624,5.795,1625,6.264,1626,5.092,1627,5.092,1628,5.092,1629,5.092,1630,5.092,1631,5.092,1632,6.264,1633,5.092]],["title/components/CoreBreadcrumbComponent.html",[313,0.22,516,1.046]],["body/components/CoreBreadcrumbComponent.html",[0,0.027,3,0.156,4,0.182,5,0.128,8,0.182,11,1.297,13,0.723,20,0.925,23,0.483,26,0.011,27,0.5,29,0.588,34,1.38,41,4.903,52,1.14,56,1.525,57,0.541,59,2.126,64,1.195,65,0.756,79,3.792,82,0.169,84,0.362,87,0.209,102,0.005,103,0.007,104,0.005,109,1.08,148,0.734,209,0.747,215,2.261,235,1.404,239,1.653,246,1.052,269,1.08,278,3.792,295,1.14,306,4.244,313,0.352,352,3.609,378,3.168,380,1.052,385,1.897,386,3.447,387,4.903,393,5.394,397,4.536,407,1.163,423,1.834,466,1.11,467,1.171,468,1.171,469,1.203,472,1.765,473,0.823,474,1.216,476,1.228,478,1.228,481,1.936,493,1.14,494,1.609,495,0.506,496,1.989,497,1.236,498,1.236,499,1.024,500,1.236,501,1.08,502,1.236,503,1.08,504,1.236,505,1.11,506,1.236,507,1.11,508,1.236,509,1.11,510,1.236,511,1.11,512,1.14,513,1.236,514,1.11,515,1.653,516,1.785,517,2.063,518,1.236,519,1.11,520,1.236,521,1.052,522,1.236,523,1.11,524,1.236,525,1.236,526,1.08,527,1.236,528,1.11,529,1.236,530,1.08,531,1.236,532,1.11,533,1.863,534,1.11,535,1.052,536,1.052,537,1.653,538,1.11,539,1.14,540,1.236,541,1.08,542,1.236,543,1.11,544,1.236,545,1.11,546,1.236,547,1.052,548,1.236,549,1.11,550,1.236,551,1.11,552,1.11,553,1.236,554,1.08,555,1.024,556,1.236,557,1.08,558,1.236,559,1.08,560,1.236,561,1.08,562,1.171,563,1.11,564,1.236,565,1.14,566,1.236,567,1.11,568,1.236,569,1.08,570,1.236,571,1.11,572,1.171,573,1.08,574,1.08,575,1.203,576,0.778,577,1.08,578,1.236,579,1.08,580,1.236,581,1.08,582,1.236,583,1.08,584,1.236,585,1.08,586,1.236,587,1.08,588,1.236,589,1.08,590,1.236,591,1.08,592,1.236,593,1.08,594,1.236,595,1.08,596,1.236,597,1.08,598,1.236,599,1.08,600,1.236,601,1.08,602,1.236,603,1.08,604,1.203,605,1.236,609,2.065,610,2.065,624,1.738,693,3.168,852,3.792,1494,4,1634,6.077,1635,5.524,1636,4.034,1637,5.456,1638,8.216,1639,7.383,1640,6.138,1641,6.138,1642,6.138,1643,6.138,1644,6.138,1645,6.138,1646,4,1647,6.138,1648,6.138,1649,6.138,1650,6.138,1651,6.138,1652,6.138,1653,6.138,1654,4.591,1655,4.591]],["title/interfaces/CountryList.html",[606,0.712,630,2.819]],["body/interfaces/CountryList.html",[0,0.012,3,0.067,4,0.078,5,0.041,8,0.078,9,0.421,10,0.662,20,0.263,26,0.011,28,0.128,29,0.311,30,0.769,43,0.297,44,0.822,45,0.598,50,1.029,65,0.791,71,0.445,82,0.177,84,0.155,85,0.352,87,0.195,90,0.362,92,0.358,102,0.002,103,0.004,104,0.002,109,2.148,148,0.315,174,0.814,178,0.846,209,0.239,213,0.907,220,0.333,235,0.306,313,0.165,319,0.643,382,2.056,383,0.94,391,1.571,400,1.058,416,0.961,468,0.502,472,0.828,474,0.263,476,0.394,478,0.394,481,0.516,519,0.476,606,0.682,608,0.723,609,1.092,610,1.092,615,1.058,617,1.001,618,1.357,622,1.124,624,0.764,625,0.591,630,3.465,631,1.61,632,1.36,633,2.243,652,0.451,664,0.516,666,2.001,669,0.876,694,2.114,700,1.156,701,0.702,702,1.157,703,0.702,704,0.559,727,0.846,776,1.477,779,0.608,789,0.768,803,1.058,807,2.398,810,1.454,824,0.745,826,1.157,827,1.714,829,1.157,830,0.94,831,0.94,832,0.876,906,0.608,913,4.672,959,1.215,979,1.477,982,1.728,998,0.819,999,0.819,1078,1.61,1174,1.496,1178,1.445,1205,1.445,1208,0.907,1218,1.215,1219,1.104,1220,1.104,1222,1.215,1223,2.385,1224,0.94,1226,1.015,1227,0.976,1233,0.907,1254,1.058,1255,1.282,1256,1.104,1257,0.907,1259,1.282,1260,1.396,1261,1.36,1262,1.36,1263,1.36,1268,0.793,1269,1.308,1270,0.793,1271,1.308,1272,1.308,1273,1.308,1274,0.793,1275,0.793,1276,1.308,1277,1.308,1278,0.793,1279,0.793,1280,0.793,1281,0.793,1282,0.793,1283,1.308,1284,1.268,1285,0.793,1286,1.308,1287,1.308,1288,0.793,1289,1.308,1290,0.793,1291,0.793,1292,0.793,1293,0.793,1294,1.938,1295,0.793,1296,0.793,1297,0.793,1298,0.793,1299,0.793,1300,0.793,1301,0.793,1302,0.793,1303,0.793,1304,0.793,1305,0.793,1306,0.793,1307,0.793,1308,0.793,1309,0.793,1310,0.793,1311,1.308,1312,0.793,1313,0.793,1314,0.793,1315,0.793,1316,0.793,1317,0.793,1318,0.793,1319,0.793,1320,0.793,1321,0.793,1322,0.793,1323,0.793,1324,0.793,1325,1.308,1326,0.793,1327,0.793,1328,0.793,1329,0.793,1330,0.793,1331,0.662,1332,0.793,1333,0.793,1334,0.793,1335,0.793,1336,0.793,1337,0.793,1338,0.793,1339,0.793,1341,1.215,1342,1.058,1343,1.015,1344,1.015,1345,1.36,1346,1.36,1347,1.215,1348,1.36,1656,1.571,1657,4.141,1658,8.021,1659,1.571,1660,1.571,1661,3.245,1662,1.967,1663,1.967,1664,1.967,1665,1.967,1666,7.425,1667,1.967,1668,1.967,1669,1.967,1670,1.967,1671,1.967,1672,1.967,1673,3.245,1674,1.967,1675,1.967,1676,1.967,1677,1.967,1678,1.967,1679,1.967,1680,1.967,1681,1.967,1682,1.967,1683,1.967,1684,1.967,1685,1.967,1686,1.967,1687,1.967,1688,1.967,1689,1.967,1690,1.967,1691,1.967,1692,1.967,1693,1.967,1694,1.967,1695,1.967,1696,1.967,1697,1.967,1698,1.967,1699,1.967,1700,1.967,1701,1.967,1702,1.967,1703,1.967,1704,1.967,1705,1.967,1706,1.967,1707,1.967,1708,1.967,1709,1.967,1710,1.967,1711,1.967,1712,1.967,1713,1.967,1714,1.967,1715,1.967,1716,1.967,1717,1.967,1718,1.967,1719,1.967,1720,3.245,1721,1.967,1722,1.967,1723,1.967,1724,1.967,1725,1.967,1726,1.967,1727,1.967,1728,1.967,1729,1.967,1730,3.838,1731,1.967,1732,1.967,1733,1.967,1734,2.243,1735,1.967,1736,1.967,1737,3.245,1738,1.967,1739,1.967,1740,1.967,1741,1.967,1742,1.967,1743,1.967,1744,1.967,1745,1.967,1746,1.967,1747,1.967,1748,1.967,1749,1.967,1750,1.967,1751,1.967,1752,1.967,1753,1.967,1754,1.967,1755,1.967,1756,1.967,1757,1.728,1758,1.967,1759,1.967,1760,7.206,1761,1.967,1762,1.967,1763,1.967,1764,1.967,1765,1.967,1766,3.245,1767,1.967,1768,1.967,1769,1.967,1770,1.967,1771,1.967,1772,1.967,1773,1.967,1774,1.967,1775,1.967,1776,1.967,1777,3.245,1778,1.967,1779,4.141,1780,1.967,1781,1.967,1782,1.967,1783,1.967,1784,1.967,1785,1.967,1786,1.967,1787,1.967,1788,1.967,1789,1.967,1790,1.967,1791,1.967,1792,1.967,1793,1.967,1794,1.967,1795,1.967,1796,1.967,1797,1.967,1798,1.967,1799,1.967,1800,1.967,1801,1.967,1802,1.967,1803,1.967,1804,1.967,1805,1.967,1806,1.967,1807,1.967,1808,1.967,1809,1.967,1810,1.967,1811,1.967,1812,1.967,1813,1.967,1814,4.806,1815,1.967,1816,1.967,1817,1.967,1818,1.967,1819,1.967,1820,1.967,1821,1.967,1822,1.967,1823,1.967,1824,1.967,1825,1.967,1826,1.967,1827,1.967,1828,1.967,1829,1.967,1830,1.967,1831,1.967,1832,1.967,1833,4.806,1834,1.967,1835,1.967,1836,1.967,1837,1.967,1838,1.967,1839,1.571,1840,1.967,1841,1.967,1842,1.967,1843,1.967,1844,1.967,1845,3.245,1846,1.967,1847,1.967,1848,1.967,1849,1.967,1850,1.728,1851,1.967,1852,1.967,1853,1.967,1854,1.967,1855,1.967,1856,1.967,1857,1.967,1858,1.967,1859,1.967,1860,1.967,1861,1.967,1862,1.967,1863,1.967,1864,1.967,1865,1.967,1866,1.967,1867,1.967,1868,1.967,1869,1.967,1870,1.967,1871,1.967,1872,1.967,1873,1.967,1874,1.967,1875,1.967,1876,1.967,1877,1.967,1878,1.967,1879,1.967,1880,1.967,1881,1.967,1882,1.967,1883,1.967,1884,1.967,1885,1.967,1886,1.967,1887,1.967,1888,1.967,1889,1.967,1890,1.967,1891,1.967,1892,1.967,1893,1.967,1894,1.967,1895,1.967,1896,1.967,1897,1.967,1898,1.967,1899,1.967,1900,1.967,1901,1.967,1902,1.967,1903,1.967,1904,1.967,1905,1.967,1906,1.967,1907,1.967,1908,1.967,1909,1.967,1910,1.967,1911,1.967,1912,1.967,1913,1.967,1914,1.967,1915,1.967,1916,1.967,1917,1.967,1918,1.967,1919,1.967,1920,1.967,1921,3.245,1922,3.245,1923,1.967,1924,1.967,1925,1.967,1926,1.967,1927,1.967,1928,3.245,1929,1.967,1930,1.967,1931,1.967,1932,1.967,1933,1.967,1934,1.967,1935,1.967,1936,1.967,1937,1.967,1938,1.967,1939,1.967,1940,1.967,1941,1.967,1942,1.967,1943,1.967,1944,1.967,1945,1.967,1946,1.967,1947,1.967,1948,1.967,1949,1.967,1950,1.967,1951,1.967,1952,1.967,1953,1.967,1954,1.967,1955,1.967,1956,1.967,1957,1.967,1958,1.967,1959,1.967,1960,1.967,1961,1.967,1962,1.967,1963,1.967,1964,1.967,1965,1.967,1966,1.967,1967,1.967,1968,1.967,1969,1.967,1970,1.967,1971,1.967,1972,1.967,1973,1.967,1974,1.967,1975,1.967,1976,1.967,1977,1.967,1978,3.639,1979,1.967,1980,1.967,1981,1.967,1982,1.967,1983,1.967,1984,1.967,1985,1.967,1986,1.967,1987,1.967,1988,1.967,1989,1.967,1990,1.967,1991,1.967,1992,1.967,1993,1.967,1994,1.967,1995,3.245,1996,1.967,1997,1.967,1998,1.967,1999,1.967,2000,1.967,2001,1.967,2002,1.967,2003,1.967,2004,1.967,2005,1.967,2006,1.967,2007,1.967,2008,1.967,2009,1.967,2010,1.967,2011,1.967,2012,1.967,2013,1.967,2014,1.967,2015,1.967,2016,1.967,2017,1.967,2018,1.967,2019,1.967,2020,1.967,2021,1.967,2022,1.967,2023,1.967,2024,1.967,2025,1.967,2026,1.967,2027,1.967,2028,1.967,2029,1.967,2030,1.967,2031,1.967,2032,1.728,2033,1.967,2034,1.967,2035,1.967,2036,1.967,2037,1.967,2038,1.967,2039,1.967,2040,1.967,2041,1.967,2042,1.967,2043,1.967,2044,1.967,2045,1.967,2046,1.967,2047,1.967,2048,1.967,2049,1.967,2050,1.967,2051,1.967,2052,1.967,2053,1.967,2054,1.967,2055,1.967,2056,1.967,2057,1.967,2058,1.967,2059,1.967,2060,1.967,2061,6.054,2062,1.967,2063,1.967,2064,1.967,2065,1.967,2066,1.967,2067,1.967,2068,1.967,2069,1.967,2070,1.967,2071,1.967,2072,1.967,2073,1.967,2074,1.967,2075,1.967,2076,3.245,2077,1.967,2078,1.967,2079,1.967,2080,1.967,2081,1.967,2082,1.967,2083,1.967,2084,1.967,2085,1.967,2086,1.967,2087,1.967,2088,1.967,2089,1.967,2090,1.967,2091,1.967,2092,1.967,2093,1.967,2094,1.967,2095,1.967,2096,1.967,2097,1.967,2098,1.967,2099,1.967,2100,1.967,2101,1.967,2102,1.967,2103,1.967,2104,1.967,2105,1.967,2106,1.967,2107,1.967,2108,1.967,2109,1.967,2110,1.967,2111,1.967,2112,1.967,2113,1.967,2114,1.967,2115,1.967,2116,1.967,2117,4.806,2118,1.967,2119,1.967,2120,1.967,2121,1.967,2122,3.245,2123,1.967,2124,1.967,2125,1.967,2126,1.967,2127,1.967,2128,1.967,2129,1.967,2130,1.967,2131,1.967,2132,1.967,2133,1.967,2134,1.967,2135,1.967,2136,1.967,2137,1.967,2138,1.967,2139,1.967,2140,1.967,2141,1.967,2142,1.967,2143,3.245,2144,1.967,2145,1.967,2146,1.967,2147,1.967,2148,1.967,2149,1.967,2150,5.317,2151,1.967,2152,1.967,2153,1.967,2154,1.967,2155,1.967,2156,1.967,2157,1.967,2158,1.967,2159,1.967,2160,1.967,2161,1.967,2162,1.967,2163,1.967,2164,1.967,2165,1.967,2166,1.967,2167,1.967,2168,1.967,2169,1.967,2170,1.967,2171,1.967,2172,1.967,2173,1.967,2174,1.967,2175,1.967,2176,1.967,2177,1.967,2178,1.967,2179,1.967,2180,1.967,2181,1.967,2182,1.967,2183,1.967,2184,1.967,2185,1.967,2186,1.967,2187,1.967,2188,1.967,2189,1.967,2190,1.967,2191,1.967,2192,1.967,2193,1.967,2194,1.967,2195,1.967,2196,1.967,2197,3.245,2198,1.967,2199,1.967,2200,1.967,2201,1.967,2202,1.967,2203,1.967,2204,1.967,2205,1.967,2206,1.967,2207,1.967,2208,1.967,2209,1.967,2210,1.967,2211,1.967,2212,1.571,2213,1.967,2214,1.967,2215,1.967,2216,1.967,2217,1.967,2218,1.571]],["title/components/DateComponent.html",[313,0.22,521,0.991]],["body/components/DateComponent.html",[0,0.015,3,0.088,4,0.103,5,0.085,8,0.103,9,0.525,10,1.677,11,1.369,13,0.477,20,0.542,23,0.666,25,0.896,26,0.011,27,0.507,28,0.33,29,0.585,30,1.037,33,0.879,34,0.779,36,2.575,37,1.888,43,1.133,44,1.022,45,1.038,47,1.286,50,1.864,52,0.644,56,1.006,57,0.826,59,1.403,64,0.789,65,1.213,67,2.8,68,2.274,71,0.539,82,0.239,83,2.425,84,0.204,85,0.464,87,0.138,90,0.746,92,0.286,93,1.455,97,1.363,102,0.003,103,0.005,104,0.003,134,1.534,148,0.648,151,1.686,174,1.036,182,1.867,204,1.033,209,0.493,218,1.062,220,1.187,235,1.352,239,0.698,246,0.594,269,0.61,274,2.01,295,0.644,297,1.689,313,0.33,319,2.119,326,1.062,336,1.115,337,2.383,350,2.07,373,1.195,379,1.867,380,0.594,405,1.115,407,0.944,416,1.048,421,1.195,423,1.006,466,0.627,467,0.661,468,0.661,469,0.679,472,1.272,473,0.464,474,1.183,476,0.81,478,0.81,481,1.477,493,0.644,494,1.062,495,0.286,496,1.518,497,0.698,498,0.698,499,0.578,500,0.698,501,0.61,502,0.698,503,0.61,504,0.698,505,0.627,506,0.698,507,0.627,508,0.698,509,0.627,510,0.698,511,0.627,512,0.644,513,0.698,514,0.627,515,1.091,516,0.627,517,0.661,518,0.698,519,0.627,520,0.698,521,1.291,522,0.698,523,0.627,524,0.698,525,0.698,526,0.61,527,0.698,528,0.627,529,0.698,530,0.61,531,0.698,532,0.627,533,1.343,534,0.627,535,0.594,536,0.594,537,1.091,538,0.627,539,0.644,540,0.698,541,0.61,542,0.698,543,0.627,544,0.698,545,0.627,546,0.698,547,0.594,548,0.698,549,0.627,550,0.698,551,0.627,552,0.627,553,0.698,554,0.61,555,0.578,556,0.698,557,0.61,558,0.698,559,0.61,560,0.698,561,0.61,562,0.661,563,0.627,564,0.698,565,0.644,566,0.698,567,0.627,568,0.698,569,0.61,570,0.698,571,0.627,572,0.661,573,0.61,574,0.61,575,0.679,576,0.844,577,0.61,578,0.698,579,0.61,580,0.698,581,0.61,582,0.698,583,0.61,584,0.698,585,0.61,586,0.698,587,0.61,588,0.698,589,0.61,590,0.698,591,0.61,592,0.698,593,0.61,594,0.698,595,0.61,596,0.698,597,0.61,598,0.698,599,0.61,600,0.698,601,0.61,602,0.698,603,0.61,604,0.679,605,0.698,606,0.667,609,1.363,610,1.363,617,0.979,618,1.438,620,1.832,621,1.948,624,1.326,625,0.779,646,1.239,647,1.455,648,1.252,649,1.524,650,1.338,651,1.686,652,0.928,654,2.01,664,1.837,669,0.427,704,0.737,742,2.274,754,1.943,756,2.274,762,1.079,768,1.488,773,2.178,779,2.389,789,1.582,801,1.524,905,1.455,906,2.093,931,1.394,932,1.524,933,1.286,934,2.474,935,1.403,937,0.824,938,0.872,939,0.847,940,0.924,956,4.481,967,1.363,980,1.601,1098,2.178,1182,4.183,1203,0.872,1204,0.952,1207,1.915,1211,1.601,1218,3.079,1222,3.481,1223,3.035,1233,2.988,1268,1.045,1269,1.633,1270,1.045,1271,1.633,1272,1.633,1273,1.633,1274,1.045,1275,1.045,1276,1.633,1277,1.633,1278,1.045,1279,1.045,1280,1.045,1281,1.045,1282,1.045,1283,1.633,1284,1.582,1285,1.045,1286,1.633,1287,1.633,1288,1.045,1289,1.633,1290,1.045,1291,1.045,1292,1.045,1293,1.045,1294,2.272,1295,1.045,1296,1.045,1297,1.045,1298,1.045,1299,1.045,1300,1.045,1301,1.045,1302,1.045,1303,1.045,1304,1.045,1305,1.045,1306,1.045,1307,1.045,1308,1.045,1309,1.045,1310,1.045,1311,1.633,1312,1.045,1313,1.045,1314,1.045,1315,1.045,1316,1.045,1317,1.045,1318,1.045,1319,1.045,1320,1.045,1321,1.045,1322,1.045,1323,1.045,1324,1.045,1325,1.633,1326,1.045,1327,1.045,1328,1.045,1329,1.045,1330,1.045,1331,0.872,1332,1.045,1333,1.045,1334,1.045,1335,1.045,1336,1.045,1337,1.045,1338,1.045,1339,1.045,1341,1.601,1347,3.079,1349,2.993,1395,2.01,1396,3.219,1437,2.381,1469,4.234,1478,2.381,1659,2.07,1660,2.07,2219,2.07,2220,3.558,2221,3.558,2222,4.38,2223,5.372,2224,4.38,2225,4.38,2226,5.372,2227,4.38,2228,4.952,2229,4.38,2230,4.38,2231,4.38,2232,4.38,2233,4.952,2234,4.952,2235,3.672,2236,4.38,2237,4.38,2238,3.982,2239,2.592,2240,3.249,2241,3.481,2242,2.592,2243,3.079,2244,2.592,2245,2.592,2246,3.446,2247,2.592,2248,2.592,2249,2.592,2250,5.177,2251,2.592,2252,3.235,2253,2.592,2254,2.592,2255,2.592,2256,2.592,2257,2.381,2258,2.993,2259,2.592,2260,2.592,2261,2.592,2262,4.12,2263,5.177,2264,5.695,2265,2.592,2266,2.592,2267,2.592,2268,4.331,2269,2.592,2270,2.592,2271,3.639,2272,2.592,2273,2.993,2274,2.502,2275,2.993,2276,3.235,2277,3.558,2278,2.993,2279,2.993,2280,3.558,2281,2.592,2282,3.558,2283,2.592,2284,2.592,2285,2.592,2286,5.842,2287,4.501,2288,4.165,2289,4.165,2290,4.38,2291,4.165,2292,4.519,2293,2.592,2294,2.592,2295,3.558,2296,2.592,2297,3.558,2298,3.558,2299,3.558,2300,3.558,2301,3.558,2302,3.558,2303,3.558,2304,3.558,2305,3.558,2306,3.558,2307,3.558,2308,2.592,2309,2.592,2310,2.592,2311,3.558,2312,2.592,2313,2.592,2314,2.592,2315,2.277,2316,2.07,2317,2.8,2318,2.277,2319,1.915,2320,1.915,2321,3.982,2322,2.277,2323,1.915,2324,1.915,2325,2.07,2326,1.115,2327,2.277,2328,2.07,2329,3.558,2330,2.277,2331,3.558,2332,2.277,2333,3.558,2334,2.277,2335,4.38,2336,2.277,2337,5.177,2338,3.558,2339,3.558,2340,4.38,2341,2.277,2342,3.235,2343,3.558,2344,2.993,2345,2.381,2346,3.558,2347,2.277,2348,2.277,2349,3.235,2350,2.277,2351,2.277,2352,4.38,2353,1.915,2354,1.154,2355,1.915,2356,1.792,2357,2.277,2358,2.277,2359,2.277,2360,4.05,2361,4.05,2362,4.05,2363,4.05,2364,4.05,2365,4.05]],["title/interfaces/DateErrorMsg.html",[606,0.712,2246,2.99]],["body/interfaces/DateErrorMsg.html",[0,0.021,3,0.122,4,0.142,5,0.075,8,0.142,9,0.67,10,1.205,11,0.757,20,0.479,26,0.011,28,0.299,29,0.796,30,0.969,34,1.076,36,2.437,44,0.959,45,0.952,47,1.778,50,2.05,59,1.241,65,0.998,67,3.571,68,2.901,71,0.554,82,0.27,83,2.854,84,0.282,85,0.642,87,0.176,90,0.66,92,0.395,93,2.011,97,1.738,102,0.004,103,0.006,104,0.004,109,0.843,134,2.295,148,0.573,151,1.491,174,1.191,182,2.382,204,0.914,209,0.436,218,0.939,220,0.875,235,0.557,239,0.965,274,1.778,297,2.334,313,0.385,319,1.981,326,0.939,336,1.541,337,2.469,350,2.861,373,1.651,379,1.651,405,1.541,416,1.12,421,2.382,472,1.318,474,0.479,476,0.717,478,0.717,481,0.939,521,0.821,576,0.607,606,0.998,608,1.316,609,1.738,610,1.738,617,1.249,618,1.546,620,1.898,621,2.018,624,1.216,625,1.076,646,1.712,647,2.011,648,1.107,649,2.106,650,1.849,651,1.491,652,0.821,654,1.778,664,1.843,669,0.59,704,1.019,742,2.011,754,1.926,756,2.011,762,1.491,768,1.316,773,2.778,779,2.173,789,2.018,801,2.106,905,2.011,906,2.05,931,2.778,932,3.037,933,2.564,934,3.292,956,4.189,980,2.212,1098,1.926,1182,4.096,1207,2.647,1211,2.212,1218,2.212,1222,2.212,1223,3.007,1233,2.793,1268,1.444,1269,2.083,1270,1.444,1271,2.083,1272,2.083,1273,2.083,1274,1.444,1275,1.444,1276,2.083,1277,2.083,1278,1.444,1279,1.444,1280,1.444,1281,1.444,1282,1.444,1283,2.083,1284,2.018,1285,1.444,1286,2.083,1287,2.083,1288,1.444,1289,2.083,1290,1.444,1291,1.444,1292,1.444,1293,1.444,1294,2.674,1295,1.444,1296,1.444,1297,1.444,1298,1.444,1299,1.444,1300,1.444,1301,1.444,1302,1.444,1303,1.444,1304,1.444,1305,1.444,1306,1.444,1307,1.444,1308,1.444,1309,1.444,1310,1.444,1311,2.083,1312,1.444,1313,1.444,1314,1.444,1315,1.444,1316,1.444,1317,1.444,1318,1.444,1319,1.444,1320,1.444,1321,1.444,1322,1.444,1323,1.444,1324,1.444,1325,2.083,1326,1.444,1327,1.444,1328,1.444,1329,1.444,1330,1.444,1331,1.205,1332,1.444,1333,1.444,1334,1.444,1335,1.444,1336,1.444,1337,1.444,1338,1.444,1339,1.444,1341,2.212,1347,3.742,1395,3.292,1396,3.218,1437,3.037,1469,4.134,1478,3.562,1659,2.861,1660,2.861,2219,2.861,2220,3.147,2221,3.147,2222,3.147,2223,5.323,2224,3.147,2225,3.147,2226,5.323,2227,3.147,2228,4.539,2229,3.147,2230,3.147,2231,3.147,2232,3.147,2233,3.147,2234,3.147,2235,3.948,2236,3.147,2237,3.147,2238,2.861,2240,2.334,2241,3.191,2243,3.191,2246,4.189,2250,4.839,2252,2.861,2257,2.106,2258,2.647,2262,3.899,2263,4.839,2264,5.323,2268,3.899,2271,3.402,2273,2.647,2274,2.212,2275,2.647,2276,2.861,2277,3.147,2278,2.647,2279,2.647,2280,3.147,2282,3.147,2286,5.712,2287,6.031,2288,5.58,2289,5.58,2290,6.178,2291,5.58,2292,5.819,2295,3.147,2297,3.147,2298,3.147,2299,3.147,2300,3.147,2301,3.147,2302,3.147,2303,3.147,2304,3.147,2305,3.147,2306,3.147,2307,3.147,2311,3.147,2315,3.147,2316,2.861,2317,3.571,2318,4.539,2319,3.817,2320,3.817,2321,5.297,2322,4.539,2323,2.647,2324,2.647,2325,2.861,2326,1.541,2327,3.147,2328,2.861,2329,4.539,2330,3.147,2331,4.539,2332,3.147,2333,4.539,2334,3.147,2335,5.323,2336,3.147,2337,5.851,2338,4.539,2339,4.539,2340,5.323,2341,3.147,2342,4.126,2343,4.539,2344,3.817,2345,3.037,2346,4.539,2347,3.147,2348,3.147,2349,4.126,2350,3.147,2351,3.147,2352,5.323,2353,2.647,2354,1.595,2355,2.647,2356,2.476,2357,3.147,2358,3.147,2359,3.147]],["title/directives/DateFieldFormatDirective.html",[495,0.477,577,1.018]],["body/directives/DateFieldFormatDirective.html",[0,0.037,3,0.213,4,0.247,5,0.131,8,0.247,23,0.588,26,0.011,28,0.247,82,0.23,84,0.492,87,0.213,97,2.103,102,0.007,103,0.009,104,0.007,174,1.264,326,1.638,416,1.135,421,3.679,473,1.12,474,0.999,495,0.823,576,1.059,577,1.757,617,1.804,618,2.036,669,1.029,967,2.511,979,2.846,1224,3.568,2366,7.011,2367,5.492,2368,7.463,2369,7.98,2370,6.558,2371,6.25,2372,5.492,2373,6.25,2374,5.961,2375,6.25,2376,4.992,2377,6.25,2378,6.25,2379,6.25,2380,6.25,2381,6.25,2382,6.25,2383,4.619,2384,8.447,2385,6.25,2386,6.25,2387,7.463,2388,6.25,2389,6.25,2390,6.25]],["title/components/DatepickerComponent.html",[313,0.22,523,1.046]],["body/components/DatepickerComponent.html",[0,0.015,3,0.084,4,0.098,5,0.082,8,0.098,9,0.507,10,1.628,11,0.826,13,0.46,20,0.648,23,0.668,25,1.011,26,0.011,27,0.536,28,0.328,29,0.66,30,1.017,33,0.848,36,2.02,37,0.938,42,1.712,43,1.182,44,0.84,45,1.013,47,1.229,50,1.579,51,1.712,52,0.615,56,1.579,57,0.874,59,1.353,64,0.761,65,1.221,71,0.376,77,1.456,82,0.234,83,1.066,84,0.195,85,0.444,87,0.133,90,0.892,91,2.837,92,0.701,93,1.39,97,1.849,102,0.003,103,0.005,104,0.003,109,0.583,134,0.938,135,3.395,138,2.198,148,0.625,162,3.433,163,2.02,172,1.613,174,0.662,178,2.083,184,1.83,188,1.031,192,0.938,204,1.402,209,0.476,213,1.801,217,1.174,218,1.441,220,1.169,235,1.347,239,1.611,246,0.567,269,0.583,274,2.402,288,4.829,295,0.615,313,0.384,336,1.066,337,1.184,339,2.887,354,1.48,360,1.627,361,2.175,370,1.712,373,2.534,380,0.567,385,0.765,401,3.395,402,2.887,405,2.575,407,0.917,416,1.102,423,1.579,447,2.175,466,0.599,467,0.632,468,0.632,469,0.649,472,1.235,473,0.444,474,1.179,476,0.782,478,0.782,481,1.441,491,4.081,493,0.615,494,1.269,495,0.273,496,1.48,497,0.667,498,0.667,499,0.552,500,0.667,501,0.583,502,0.667,503,0.583,504,0.667,505,0.599,506,0.667,507,0.599,508,0.667,509,0.599,510,0.667,511,0.599,512,0.615,513,0.667,514,0.599,515,1.052,516,0.599,517,0.632,518,0.667,519,0.599,520,0.667,521,0.567,522,0.667,523,1.537,524,0.667,525,0.667,526,0.583,527,0.667,528,0.599,529,0.667,530,0.583,531,0.667,532,0.599,533,1.304,534,0.599,535,0.567,536,0.567,537,1.052,538,0.599,539,0.615,540,0.667,541,0.583,542,0.667,543,0.599,544,0.667,545,0.599,546,0.667,547,0.567,548,0.667,549,0.599,550,0.667,551,0.599,552,0.599,553,0.667,554,0.583,555,0.552,556,0.667,557,0.583,558,0.667,559,0.583,560,0.667,561,0.583,562,0.632,563,0.599,564,0.667,565,0.615,566,0.667,567,0.599,568,0.667,569,0.583,570,0.667,571,0.599,572,0.632,573,0.583,574,0.583,575,0.649,576,0.419,577,0.583,578,0.667,579,0.583,580,0.667,581,0.583,582,0.667,583,0.583,584,0.667,585,0.583,586,0.667,587,0.583,588,0.667,589,0.583,590,0.667,591,0.583,592,0.667,593,0.583,594,0.667,595,0.583,596,0.667,597,0.583,598,0.667,599,0.583,600,0.667,601,0.583,602,0.667,603,0.583,604,0.649,605,0.667,606,0.643,609,1.315,610,1.315,617,0.945,618,1.235,619,2.846,620,2.198,621,1.891,622,1.676,623,2.314,624,1.293,625,0.744,646,1.184,647,3.086,648,1.207,649,1.456,650,1.278,651,1.627,652,0.895,664,1.024,669,0.797,692,1.102,701,1.726,702,0.883,703,1.726,704,0.704,713,1.74,717,2.837,719,5.025,731,3.154,747,2.297,754,2.192,778,1.712,789,2.337,801,2.297,824,1.48,825,1.48,826,0.883,827,1.96,828,1.48,829,1.726,844,1.83,906,0.765,912,1.39,934,1.939,935,1.353,937,0.787,938,0.833,939,0.81,940,0.883,957,1.331,959,1.529,967,1.315,979,0.883,993,1.527,998,1.627,999,1.627,1097,1.83,1114,1.627,1115,2.701,1183,1.529,1203,0.833,1204,0.91,1206,1.436,1257,1.801,1268,0.998,1269,1.575,1270,0.998,1271,1.575,1272,1.575,1273,1.575,1274,0.998,1275,0.998,1276,1.575,1277,1.575,1278,0.998,1279,0.998,1280,0.998,1281,0.998,1282,0.998,1283,1.575,1284,1.891,1285,0.998,1286,1.575,1287,1.575,1288,0.998,1289,1.575,1290,0.998,1291,0.998,1292,0.998,1293,0.998,1294,2.216,1295,0.998,1296,0.998,1297,0.998,1298,0.998,1299,0.998,1300,0.998,1301,0.998,1302,0.998,1303,0.998,1304,0.998,1305,0.998,1306,0.998,1307,0.998,1308,0.998,1309,0.998,1310,0.998,1311,1.575,1312,0.998,1313,0.998,1314,0.998,1315,0.998,1316,0.998,1317,0.998,1318,0.998,1319,0.998,1320,0.998,1321,0.998,1322,0.998,1323,0.998,1324,0.998,1325,1.575,1326,0.998,1327,0.998,1328,0.998,1329,0.998,1330,0.998,1331,0.833,1332,0.998,1333,0.998,1334,0.998,1335,0.998,1336,0.998,1337,0.998,1338,0.998,1339,0.998,1360,4.337,1377,2.297,1396,2.491,1434,1.978,1437,2.297,1469,4.975,1506,1.456,1530,2.546,2235,3.154,2238,3.866,2246,3.346,2252,1.978,2257,3.231,2262,2.297,2268,2.297,2271,2.194,2287,1.978,2288,1.83,2289,1.83,2291,1.83,2292,1.83,2323,5.572,2324,2.887,2337,4.39,2345,2.297,2356,2.701,2391,1.978,2392,3.907,2393,3.433,2394,6.805,2395,3.907,2396,3.907,2397,3.907,2398,2.413,2399,2.297,2400,3.907,2401,3.907,2402,4.84,2403,6.514,2404,5.316,2405,4.84,2406,5.496,2407,3.907,2408,3.907,2409,3.907,2410,3.121,2411,4.84,2412,4.84,2413,5.496,2414,5.982,2415,5.982,2416,5.982,2417,4.84,2418,3.907,2419,6.357,2420,4.829,2421,2.476,2422,3.907,2423,4.829,2424,2.017,2425,3.907,2426,2.476,2427,3.433,2428,2.476,2429,2.413,2430,2.476,2431,2.476,2432,4.829,2433,5.496,2434,5.496,2435,7.269,2436,2.476,2437,2.476,2438,2.476,2439,2.476,2440,3.907,2441,3.121,2442,3.907,2443,3.907,2444,2.476,2445,3.907,2446,2.476,2447,3.907,2448,2.476,2449,2.476,2450,3.907,2451,2.476,2452,3.907,2453,2.476,2454,3.907,2455,2.476,2456,4.39,2457,2.476,2458,2.476,2459,3.907,2460,2.476,2461,2.476,2462,2.476,2463,3.907,2464,2.476,2465,2.887,2466,2.476,2467,4.84,2468,2.476,2469,3.907,2470,2.476,2471,2.476,2472,3.907,2473,4.84,2474,3.907,2475,2.476,2476,1.712,2477,2.476,2478,2.175,2479,2.476,2480,2.476,2481,2.476,2482,2.476,2483,2.476,2484,2.476,2485,2.476,2486,2.476,2487,2.476,2488,6.357,2489,2.476,2490,2.476,2491,2.476,2492,2.476,2493,2.476,2494,2.476,2495,2.476,2496,2.476,2497,2.476,2498,2.476,2499,2.476,2500,2.476,2501,2.476,2502,2.476,2503,3.907,2504,2.476,2505,3.907,2506,2.476,2507,2.476,2508,3.121,2509,4.84,2510,2.476,2511,2.476,2512,4.253,2513,2.476,2514,2.476,2515,2.476,2516,1.978,2517,1.712,2518,2.476,2519,2.476,2520,1.978,2521,2.476,2522,2.476,2523,2.476,2524,3.907,2525,2.887,2526,2.476,2527,2.476,2528,2.476,2529,2.476,2530,2.476,2531,2.476,2532,3.907,2533,3.907,2534,3.907,2535,3.907,2536,3.907,2537,3.907,2538,3.907]],["title/directives/DayValidationDirective.html",[495,0.477,579,1.018]],["body/directives/DayValidationDirective.html",[0,0.033,3,0.189,4,0.219,5,0.116,8,0.219,13,0.817,23,0.596,25,0.813,26,0.011,27,0.401,28,0.314,29,0.531,33,1.506,44,0.844,57,0.653,71,0.514,82,0.279,84,0.437,85,0.994,87,0.189,90,1.278,92,0.611,97,1.866,102,0.007,103,0.008,104,0.007,164,2.469,174,1.383,178,2.386,204,1.77,209,0.844,217,2.085,218,1.818,326,2.079,416,1.077,448,2.038,473,0.994,474,0.928,495,0.765,576,0.939,579,1.867,620,2.782,754,2.521,888,3.834,912,3.114,934,3.443,993,2.71,1206,2.549,1437,4.078,2258,4.098,2262,4.802,2268,4.664,2271,4.251,2278,5.126,2279,4.098,2326,3.414,2353,5.594,2354,3.37,2355,5.862,2476,5.484,2539,6.97,2540,4.872,2541,3.49,2542,3.619,2543,6.937,2544,6.651,2545,7.57,2546,5.545,2547,5.545,2548,2.651,2549,5.545,2550,5.545,2551,4.872,2552,3.619,2553,4.429,2554,4.098,2555,7.932,2556,5.545,2557,4.872,2558,5.545]],["title/components/DropdownComponent.html",[313,0.22,380,0.991]],["body/components/DropdownComponent.html",[0,0.024,3,0.139,4,0.161,5,0.118,8,0.161,9,0.734,11,1.195,13,0.667,20,0.757,23,0.679,25,1.029,26,0.011,27,0.566,28,0.336,29,0.731,30,1.222,33,1.228,37,1.542,43,1.24,44,1,45,1.042,50,1.833,52,1.011,56,1.405,57,0.766,64,1.101,65,1.258,71,0.51,82,0.239,84,0.321,85,0.73,87,0.139,90,1.042,102,0.005,103,0.007,104,0.005,148,0.651,188,2.355,209,0.689,220,1.438,235,1.395,246,0.933,269,0.958,295,1.011,313,0.331,319,2.653,327,4.518,380,1.609,407,1.231,416,1.154,423,1.405,466,0.984,467,1.039,468,1.039,469,1.067,472,1.039,473,0.73,474,1.211,476,1.132,478,1.132,493,1.011,494,1.483,495,0.449,496,1.892,497,1.097,498,1.097,499,0.908,500,1.097,501,0.958,502,1.097,503,0.958,504,1.097,505,0.984,506,1.097,507,0.984,508,1.097,509,0.984,510,1.097,511,0.984,512,1.011,513,1.097,514,0.984,515,1.524,516,0.984,517,1.039,518,1.097,519,0.984,520,1.097,521,0.933,522,1.097,523,0.984,524,1.097,525,1.097,526,0.958,527,1.097,528,0.984,529,1.097,530,0.958,531,1.097,532,0.984,533,1.751,534,0.984,535,0.933,536,0.933,537,1.524,538,0.984,539,1.011,540,1.097,541,0.958,542,1.097,543,0.984,544,1.097,545,0.984,546,1.097,547,0.933,548,1.097,549,0.984,550,1.097,551,0.984,552,0.984,553,1.097,554,0.958,555,0.908,556,1.097,557,0.958,558,1.097,559,0.958,560,1.097,561,0.958,562,1.039,563,0.984,564,1.097,565,1.011,566,1.097,567,0.984,568,1.097,569,0.958,570,1.097,571,0.984,572,1.039,573,0.958,574,0.958,575,1.067,576,0.69,577,0.958,578,1.097,579,0.958,580,1.097,581,0.958,582,1.097,583,0.958,584,1.097,585,0.958,586,1.097,587,0.958,588,1.097,589,0.958,590,1.097,591,0.958,592,1.097,593,0.958,594,1.097,595,0.958,596,1.097,597,0.958,598,1.097,599,0.958,600,1.097,601,0.958,602,1.097,603,0.958,604,1.067,605,1.097,620,1.496,622,2.251,623,1.946,624,1.653,625,1.224,648,1.258,652,1.296,701,2.318,702,1.452,703,2.318,704,1.158,824,2.143,825,2.143,826,1.452,827,2.505,828,2.143,829,1.452,935,1.959,937,1.294,938,1.37,939,1.331,940,1.452,998,2.355,999,2.355,1017,2.434,1113,4.015,1174,3.403,1177,2.021,1178,3.286,1200,2.021,1203,1.37,1204,1.496,1205,2.518,1208,1.877,1225,3.495,2404,5.191,2512,3.577,2559,3.577,2560,5.656,2561,5.656,2562,6.5,2563,6.5,2564,6.5,2565,5.711,2566,5.656,2567,4.072,2568,4.072,2569,4.072,2570,4.072,2571,4.072,2572,4.072,2573,4.072,2574,4.072,2575,4.072,2576,4.072,2577,4.072,2578,4.072,2579,4.072,2580,4.072]],["title/directives/DuplicateCheckDirective.html",[495,0.477,581,1.018]],["body/directives/DuplicateCheckDirective.html",[0,0.033,3,0.191,4,0.222,5,0.117,8,0.222,13,0.823,23,0.55,25,0.821,26,0.011,27,0.405,28,0.301,29,0.536,30,1.117,33,1.515,34,1.683,44,0.682,57,0.66,71,0.533,82,0.257,84,0.441,85,1.004,87,0.238,90,1.401,92,0.903,102,0.007,103,0.008,104,0.007,164,2.493,170,2.582,174,0.949,182,3.218,204,1.781,209,0.85,217,2.098,218,1.83,309,2.582,333,5.503,385,1.731,386,3.145,416,0.993,448,2.795,473,1.004,474,0.934,495,0.769,512,1.391,576,0.949,581,1.873,754,2.654,776,2.839,789,2.727,993,2.727,1206,3.113,2326,3.273,2541,3.506,2542,3.635,2548,2.677,2552,3.337,2581,6.074,2582,5.62,2583,4.473,2584,6.074,2585,7.523,2586,5.6,2587,4.31,2588,5.6,2589,3.464,2590,3.649,2591,6.074,2592,5.6,2593,5.6,2594,3.872,2595,3.872,2596,5.6,2597,5.6]],["title/components/EmailComponent.html",[313,0.22,526,1.018]],["body/components/EmailComponent.html",[0,0.021,3,0.123,4,0.142,5,0.108,8,0.142,9,0.673,10,2.044,11,1.095,13,0.611,20,0.694,23,0.681,25,1.134,26,0.011,27,0.586,28,0.337,29,0.766,30,1.127,33,1.125,34,1.558,37,1.364,43,1.168,44,1.052,45,0.955,50,1.651,52,0.894,56,1.288,57,0.891,64,1.009,65,1.334,71,0.52,82,0.224,84,0.283,85,0.645,87,0.123,92,0.572,102,0.004,103,0.006,104,0.004,109,0.847,117,2.308,148,0.576,209,0.631,213,2.39,220,1.311,232,3.202,235,1.385,239,1.396,246,0.825,269,0.847,295,0.894,313,0.31,319,2.473,326,0.944,362,2.911,380,0.825,385,1.602,400,3.267,407,1.151,416,1.044,423,1.288,466,0.87,467,0.919,468,0.919,469,0.944,473,0.645,474,1.204,476,1.037,478,1.037,493,0.894,494,1.359,495,0.397,496,1.791,497,0.97,498,0.97,499,0.803,500,0.97,501,0.847,502,0.97,503,0.847,504,0.97,505,0.87,506,0.97,507,0.87,508,0.97,509,0.87,510,0.97,511,0.87,512,0.894,513,0.97,514,0.87,515,1.396,516,0.87,517,0.919,518,0.97,519,0.87,520,0.97,521,0.825,522,0.97,523,0.87,524,0.97,525,0.97,526,1.565,527,0.97,528,0.87,529,0.97,530,0.847,531,0.97,532,0.87,533,1.637,534,0.87,535,0.825,536,0.825,537,1.396,538,0.87,539,0.894,540,0.97,541,0.847,542,0.97,543,0.87,544,0.97,545,0.87,546,0.97,547,0.825,548,0.97,549,0.87,550,0.97,551,0.87,552,0.87,553,0.97,554,0.847,555,0.803,556,0.97,557,0.847,558,0.97,559,0.847,560,0.97,561,0.847,562,0.919,563,0.87,564,0.97,565,0.894,566,0.97,567,0.87,568,0.97,569,0.847,570,0.97,571,0.87,572,0.919,573,0.847,574,0.847,575,0.944,576,0.61,577,0.847,578,0.97,579,0.847,580,0.97,581,0.847,582,0.97,583,0.847,584,0.97,585,0.847,586,0.97,587,0.847,588,0.97,589,0.847,590,0.97,591,0.847,592,0.97,593,0.847,594,0.97,595,0.847,596,0.97,597,0.847,598,0.97,599,0.847,600,0.97,601,0.847,602,0.97,603,0.847,604,0.944,605,0.97,617,1.469,618,1.93,622,2.105,624,1.565,625,1.082,648,1.112,652,1.188,664,0.944,666,2.768,669,0.854,701,2.167,702,1.849,703,2.167,704,1.024,776,1.849,824,2.302,825,1.364,826,1.849,827,2.617,828,1.364,829,1.849,830,2.478,831,1.721,832,2.308,906,1.112,935,1.796,937,1.144,938,1.211,939,1.177,940,1.284,967,1.744,979,2.167,998,2.53,999,2.53,1017,1.549,1078,2.573,1174,3.248,1177,1.787,1178,3.137,1182,3.202,1200,1.787,1203,1.211,1204,1.323,1205,2.308,1208,1.66,1219,3.412,1220,3.412,1221,3.048,1226,3.136,1227,3.016,1233,2.39,1242,2.223,1244,2.223,1265,2.116,1267,2.116,1342,1.936,1343,1.858,1344,1.858,1396,2.159,2354,1.603,2383,4.49,2429,3.202,2594,3.584,2595,3.584,2598,3.163,2599,3.831,2600,3.048,2601,4.555,2602,6.927,2603,5.184,2604,5.184,2605,5.339,2606,5.184,2607,3.6,2608,3.6,2609,5.184,2610,3.6,2611,4.141,2612,3.6,2613,5.184,2614,3.6,2615,3.6,2616,3.6,2617,3.6,2618,3.6,2619,3.6,2620,3.6,2621,3.6,2622,3.6,2623,3.6,2624,3.6,2625,3.6,2626,3.163,2627,3.6,2628,6.076,2629,3.163,2630,3.163,2631,3.6]],["title/components/ErrorContainerComponent.html",[313,0.22,528,1.046]],["body/components/ErrorContainerComponent.html",[0,0.03,3,0.173,4,0.201,5,0.137,8,0.201,11,1.386,20,0.972,23,0.517,26,0.01,27,0.525,28,0.201,30,1.049,33,1.424,43,0.766,44,0.618,45,1.208,52,1.261,56,1.629,64,1.277,82,0.187,84,0.4,87,0.173,102,0.006,103,0.008,104,0.006,148,1.326,235,1.41,246,1.163,269,1.195,295,1.261,313,0.37,380,1.163,407,1.242,416,0.933,423,1.629,466,1.228,467,1.295,468,1.295,469,1.331,473,0.91,474,1.221,476,1.312,478,1.312,493,1.261,494,1.719,495,0.56,496,2.068,497,1.367,498,1.367,499,1.132,500,1.367,501,1.195,502,1.367,503,1.195,504,1.367,505,1.228,506,1.367,507,1.228,508,1.367,509,1.228,510,1.367,511,1.228,512,1.261,513,1.367,514,1.228,515,1.767,516,1.228,517,1.295,518,1.367,519,1.228,520,1.367,521,1.163,522,1.367,523,1.228,524,1.367,525,1.367,526,1.195,527,1.367,528,1.857,529,1.367,530,1.195,531,1.367,532,1.228,533,1.957,534,1.228,535,1.163,536,1.163,537,1.767,538,1.228,539,1.261,540,1.367,541,1.195,542,1.367,543,1.228,544,1.367,545,1.228,546,1.367,547,1.163,548,1.367,549,1.228,550,1.367,551,1.228,552,1.228,553,1.367,554,1.195,555,1.132,556,1.367,557,1.195,558,1.367,559,1.195,560,1.367,561,1.195,562,1.295,563,1.228,564,1.367,565,1.261,566,1.367,567,1.228,568,1.367,569,1.195,570,1.367,571,1.228,572,1.295,573,1.195,574,1.195,575,1.331,576,0.86,577,1.195,578,1.367,579,1.195,580,1.367,581,1.195,582,1.367,583,1.195,584,1.367,585,1.195,586,1.367,587,1.195,588,1.367,589,1.195,590,1.367,591,1.195,592,1.367,593,1.195,594,1.367,595,1.195,596,1.367,597,1.195,598,1.367,599,1.195,600,1.367,601,1.195,602,1.367,603,1.195,604,1.331,605,1.367,1607,4.051,2632,6.384,2633,5.803,2634,4.461,2635,6.559,2636,6.559,2637,7.265,2638,6.559]],["title/interfaces/ErrorMessage.html",[606,0.712,1223,2.147]],["body/interfaces/ErrorMessage.html",[3,0.224,4,0.26,5,0.137,8,0.26,9,0.998,23,0.518,26,0.011,28,0.26,29,0.736,44,0.936,50,2.087,71,0.557,87,0.278,92,0.725,102,0.008,103,0.009,104,0.008,163,2.417,174,1.114,319,2.151,448,2.827,606,1.083,608,2.417,776,2.744,1223,3.818,1432,5.253,2286,5.684,2317,4.547,2399,3.867,2554,4.861,2639,6.144,2640,5.253,2641,6.577,2642,6.577]],["title/interfaces/FileUploaderMsg.html",[606,0.712,2643,3.455]],["body/interfaces/FileUploaderMsg.html",[0,0.011,3,0.138,4,0.076,5,0.17,8,0.207,9,0.68,11,0.67,12,4.185,20,0.256,22,2.51,26,0.011,27,0.379,28,0.187,29,0.183,30,0.838,34,1.42,36,1.493,40,3.003,45,1.153,50,1.613,58,1.682,59,2.072,60,1.529,64,0.373,65,0.93,71,0.408,82,0.284,83,0.824,84,0.151,85,0.343,86,0.988,87,0.108,90,1.293,92,0.89,97,2.31,102,0.004,103,0.004,104,0.002,107,0.95,111,1.873,124,2.193,134,1.202,138,0.703,139,1.706,140,1.182,146,2.193,148,1.27,151,0.797,166,1.942,169,1.075,170,0.883,171,4.604,172,1.247,174,1.41,185,1.182,188,0.797,189,2.534,190,1.682,192,1.202,193,1.682,204,0.488,209,0.233,210,0.988,213,0.883,218,0.502,235,0.493,241,2.282,272,1.182,273,1.075,276,1.125,298,1.529,302,1.182,304,1.682,309,1.463,313,0.207,326,1.481,333,1.323,335,0.988,337,2.7,345,1.415,348,1.529,354,1.539,360,0.797,362,1.782,364,1.075,367,2.809,370,4.135,384,1.182,385,0.98,386,1.075,396,0.988,410,1.247,415,1.415,416,0.952,419,1.415,422,1.96,423,1.301,442,1.682,467,0.488,468,0.488,472,0.81,473,0.728,474,0.256,476,0.383,478,0.383,481,0.502,488,2.193,491,0.988,492,0.915,530,0.451,606,0.315,608,0.703,609,1.068,610,1.068,617,0.982,618,1.337,619,1.865,620,1.166,621,1.847,624,0.747,625,0.575,646,0.915,647,1.075,650,1.638,651,0.797,652,0.439,654,0.95,669,1.214,677,2.389,678,1.415,686,1.182,692,0.852,695,0.824,704,0.544,712,1.247,713,1.413,747,1.125,756,1.782,762,1.321,766,1.323,776,2.134,779,2.006,789,0.748,801,1.125,803,1.029,818,2.389,850,1.029,857,1.415,906,1.619,934,1.575,938,0.644,939,1.329,941,1.125,947,1.575,971,1.529,979,2.387,980,3.866,987,2.068,1002,1.182,1047,1.706,1071,2.345,1084,1.323,1089,1.682,1114,2.491,1122,1.415,1183,1.96,1205,1.809,1206,0.703,1235,1.247,1255,2.068,1259,1.247,1268,0.772,1269,1.279,1270,0.772,1271,1.279,1272,1.279,1273,1.279,1274,0.772,1275,0.772,1276,1.279,1277,1.279,1278,0.772,1279,0.772,1280,0.772,1281,0.772,1282,0.772,1283,1.279,1284,1.24,1285,0.772,1286,1.279,1287,1.279,1288,0.772,1289,1.279,1290,0.772,1291,0.772,1292,0.772,1293,0.772,1294,1.906,1295,0.772,1296,0.772,1297,0.772,1298,0.772,1299,0.772,1300,0.772,1301,0.772,1302,0.772,1303,0.772,1304,0.772,1305,0.772,1306,0.772,1307,0.772,1308,0.772,1309,0.772,1310,0.772,1311,1.279,1312,0.772,1313,0.772,1314,0.772,1315,0.772,1316,0.772,1317,0.772,1318,0.772,1319,0.772,1320,0.772,1321,0.772,1322,0.772,1323,0.772,1324,0.772,1325,1.279,1326,0.772,1327,0.772,1328,0.772,1329,0.772,1330,0.772,1331,1.367,1332,0.772,1333,0.772,1334,0.772,1335,0.772,1336,0.772,1337,0.772,1338,0.772,1339,0.772,1351,4.015,1353,5.252,1354,2.809,1360,4.474,1366,1.96,1379,1.247,1384,1.247,1388,3.489,1391,1.125,1396,0.797,1397,1.323,1404,2.193,1406,3.268,1409,1.96,1413,1.125,1419,1.323,1455,4.135,1461,2.534,1462,2.534,1463,2.919,1478,3.321,1505,1.96,1506,2.389,1508,1.415,1509,1.323,1515,1.247,1530,1.247,1850,1.682,2032,1.682,2235,1.247,2240,1.247,2241,1.96,2257,1.865,2263,2.534,2273,2.345,2275,3.003,2320,2.345,2324,1.415,2344,1.415,2345,1.125,2354,0.852,2374,1.529,2399,1.125,2456,2.534,2508,1.529,2600,1.865,2643,3.245,2644,1.682,2645,1.529,2646,2.788,2647,1.914,2648,3.173,2649,1.914,2650,1.415,2651,1.323,2652,4.063,2653,3.775,2654,3.003,2655,1.914,2656,3.57,2657,2.648,2658,2.648,2659,3.173,2660,3.173,2661,1.914,2662,3.173,2663,1.682,2664,3.173,2665,1.914,2666,3.173,2667,1.914,2668,1.914,2669,1.914,2670,1.914,2671,1.914,2672,1.914,2673,1.182,2674,1.914,2675,1.914,2676,1.914,2677,1.914,2678,3.57,2679,1.914,2680,4.185,2681,3.245,2682,1.914,2683,3.173,2684,2.788,2685,3.173,2686,1.914,2687,3.173,2688,1.125,2689,1.529,2690,1.682,2691,1.247,2692,1.529,2693,1.914,2694,1.914,2695,1.415,2696,1.415,2697,1.914,2698,4.063,2699,1.914,2700,1.914,2701,1.914,2702,1.914,2703,1.914,2704,1.914,2705,1.914,2706,1.914,2707,1.914,2708,1.914,2709,1.914,2710,1.914,2711,3.493,2712,2.809,2713,1.914,2714,1.914,2715,1.682,2716,1.323,2717,4.726,2718,1.914,2719,1.914,2720,7.15,2721,1.914,2722,1.914,2723,1.682,2724,1.914,2725,1.914,2726,1.914,2727,1.529,2728,2.534,2729,1.914,2730,4.063,2731,1.914,2732,1.914,2733,1.529,2734,1.914,2735,1.914,2736,1.914,2737,1.914,2738,3.173,2739,1.914,2740,1.914,2741,1.914,2742,1.914,2743,1.914,2744,3.173,2745,1.914,2746,1.914,2747,4.063,2748,4.063,2749,1.914,2750,3.173,2751,1.914,2752,2.788,2753,1.914,2754,1.914,2755,1.914,2756,1.914,2757,1.914,2758,1.914,2759,1.914,2760,1.914,2761,1.914,2762,1.914,2763,4.063,2764,1.682,2765,1.914,2766,1.682,2767,2.788,2768,3.173,2769,3.173,2770,1.914,2771,1.914,2772,1.682,2773,3.173,2774,1.914,2775,1.914,2776,3.57,2777,1.914,2778,1.323,2779,3.173,2780,1.682,2781,2.809,2782,1.182,2783,4.185,2784,3.57,2785,1.682,2786,1.529,2787,1.914,2788,1.914,2789,1.529,2790,1.914,2791,4.726,2792,1.415,2793,3.173,2794,2.788,2795,1.914,2796,1.075,2797,1.914,2798,4.063,2799,4.174,2800,4.963,2801,4.726,2802,1.914,2803,1.914,2804,1.323,2805,1.914,2806,1.914,2807,1.914,2808,1.415,2809,1.914,2810,1.914,2811,3.173,2812,1.914,2813,1.914,2814,1.914,2815,1.914,2816,1.914,2817,1.914,2818,1.914,2819,1.415,2820,1.914,2821,4.063,2822,3.173,2823,3.493,2824,1.529,2825,1.682,2826,5.982,2827,1.914,2828,1.415,2829,1.914,2830,1.914,2831,1.529,2832,1.914,2833,1.914,2834,1.682,2835,1.914,2836,3.173,2837,1.914,2838,1.914,2839,1.914,2840,3.003,2841,1.914,2842,1.415,2843,1.914,2844,1.682,2845,1.415,2846,1.914,2847,1.914,2848,1.914,2849,1.914,2850,1.682,2851,1.529,2852,1.914,2853,3.173,2854,4.063,2855,1.914,2856,1.914,2857,1.914,2858,1.914,2859,1.914,2860,1.914,2861,1.914,2862,1.914,2863,4.063,2864,1.914,2865,1.914,2866,1.914,2867,1.914,2868,1.914,2869,1.914,2870,1.914,2871,1.914,2872,1.914,2873,1.914,2874,2.345,2875,3.173,2876,3.173,2877,1.914,2878,1.914,2879,7.374,2880,5.648,2881,3.173,2882,4.063,2883,3.173,2884,5.239,2885,1.529,2886,1.914,2887,1.914,2888,1.914,2889,3.173,2890,4.063,2891,1.914,2892,1.914,2893,1.914,2894,4.153,2895,5.239,2896,1.914,2897,2.534,2898,5.982,2899,1.682,2900,1.415,2901,1.529,2902,1.529,2903,4.726,2904,1.914,2905,1.914,2906,5.239,2907,1.914,2908,1.914,2909,1.914,2910,1.914,2911,1.914,2912,1.914,2913,1.914,2914,1.914,2915,3.173,2916,1.914,2917,1.914,2918,1.914,2919,3.173,2920,3.173,2921,4.063,2922,1.914,2923,3.173,2924,1.914,2925,1.914,2926,1.682,2927,1.914,2928,3.173,2929,3.173,2930,1.914,2931,1.914,2932,1.914,2933,1.914,2934,1.914,2935,1.914,2936,1.914,2937,1.914,2938,4.726,2939,1.914,2940,3.173,2941,1.914,2942,1.682,2943,1.529,2944,1.914,2945,3.173,2946,1.914,2947,1.914,2948,4.726,2949,1.914,2950,1.914,2951,6.492,2952,1.914,2953,1.682,2954,2.788,2955,3.173,2956,1.914,2957,1.914,2958,4.063,2959,1.914,2960,5.239,2961,4.063,2962,4.063,2963,5.239,2964,1.914,2965,1.914,2966,1.914,2967,1.323,2968,1.529,2969,1.914,2970,1.914,2971,1.415,2972,1.914,2973,1.914,2974,1.914,2975,3.173,2976,4.726,2977,4.726,2978,1.914,2979,5.648,2980,1.914,2981,1.914,2982,1.415,2983,1.682,2984,1.914,2985,1.914,2986,3.173,2987,1.914,2988,3.173,2989,1.914,2990,1.914,2991,1.914,2992,3.173,2993,2.788,2994,1.914,2995,1.914,2996,1.914,2997,1.914,2998,1.914,2999,1.914,3000,1.914,3001,1.914,3002,1.914,3003,4.726,3004,1.914,3005,1.529,3006,1.914,3007,4.726,3008,3.173,3009,4.063,3010,4.726,3011,1.914,3012,1.914,3013,1.914,3014,1.914,3015,1.914,3016,1.914,3017,1.914,3018,1.914,3019,1.914,3020,1.914,3021,3.173,3022,4.063,3023,3.173,3024,1.914,3025,3.173,3026,1.914,3027,1.914,3028,1.914,3029,1.914,3030,1.914,3031,1.914,3032,4.063,3033,1.415,3034,1.914,3035,1.914,3036,1.914,3037,1.914,3038,1.247,3039,5.239,3040,4.726,3041,1.914,3042,1.914,3043,2.788,3044,1.914,3045,1.914,3046,1.914,3047,1.914,3048,1.914,3049,1.914,3050,1.914,3051,1.914,3052,1.914,3053,1.914,3054,1.914,3055,1.914,3056,1.914,3057,1.914,3058,1.914,3059,1.914,3060,1.914,3061,1.914,3062,3.173,3063,1.914,3064,1.914,3065,1.914,3066,3.173,3067,3.173,3068,4.726,3069,5.239,3070,1.682,3071,1.529,3072,1.914,3073,1.682,3074,1.682,3075,3.173,3076,1.914,3077,1.914,3078,1.914,3079,1.914,3080,1.914,3081,1.914,3082,1.914,3083,1.914,3084,1.914,3085,1.914,3086,4.063,3087,3.173,3088,1.914,3089,3.173,3090,1.914,3091,1.914,3092,1.914,3093,3.173,3094,1.914,3095,1.914,3096,1.914,3097,4.726,3098,1.914,3099,1.914,3100,1.914,3101,3.173,3102,1.914,3103,1.914,3104,1.914,3105,1.914,3106,1.914,3107,1.914,3108,1.914,3109,1.914,3110,1.529,3111,1.914,3112,1.914,3113,1.914,3114,1.914,3115,3.173,3116,1.914,3117,1.914,3118,1.914,3119,1.914,3120,1.914,3121,1.914,3122,1.914,3123,1.914,3124,1.914,3125,1.914,3126,3.173,3127,3.173,3128,3.173,3129,1.914,3130,1.914,3131,3.173,3132,1.914,3133,1.914,3134,1.914,3135,1.914,3136,1.914,3137,1.914,3138,1.914,3139,1.914,3140,1.415,3141,1.914,3142,1.914,3143,1.914,3144,1.914,3145,1.914,3146,1.914,3147,1.914,3148,1.914,3149,1.914,3150,1.914,3151,1.914,3152,1.914,3153,1.682,3154,1.914,3155,1.914,3156,3.173,3157,3.173,3158,1.914,3159,1.914,3160,1.914,3161,1.914,3162,1.914]],["title/components/FormActionBarComponent.html",[313,0.22,532,1.046]],["body/components/FormActionBarComponent.html",[0,0.024,3,0.14,4,0.162,5,0.119,8,0.162,11,1.69,13,0.669,14,5.207,16,3.701,20,0.872,23,0.63,25,0.6,26,0.011,27,0.509,28,0.293,29,0.392,30,1.256,33,1.233,36,2.396,43,1.063,44,0.857,45,1.201,52,2.19,53,3.339,56,1.411,57,0.669,64,1.106,65,0.674,71,0.357,82,0.209,84,0.323,85,0.734,87,0.14,90,1.297,92,0.451,102,0.005,103,0.007,104,0.005,148,0.909,204,1.449,209,0.691,218,1.489,235,1.395,246,0.938,269,0.964,295,1.017,313,0.332,380,0.938,407,1.076,416,1.052,423,1.411,466,0.99,467,1.045,468,1.045,469,1.074,472,1.664,473,0.734,474,1.211,476,1.136,478,1.136,481,1.846,493,1.017,494,1.489,495,0.451,496,1.896,497,1.103,498,1.103,499,0.913,500,1.103,501,0.964,502,1.103,503,0.964,504,1.103,505,0.99,506,1.103,507,0.99,508,1.103,509,0.99,510,1.103,511,0.99,512,1.017,513,1.103,514,0.99,515,1.53,516,0.99,517,1.045,518,1.103,519,0.99,520,1.103,521,0.938,522,1.103,523,0.99,524,1.103,525,1.103,526,0.964,527,1.103,528,0.99,529,1.103,530,0.964,531,1.103,532,1.702,533,1.756,534,0.99,535,0.938,536,0.938,537,1.53,538,0.99,539,1.017,540,1.103,541,0.964,542,1.103,543,0.99,544,1.103,545,0.99,546,1.103,547,0.938,548,1.103,549,0.99,550,1.103,551,0.99,552,0.99,553,1.103,554,0.964,555,0.913,556,1.103,557,0.964,558,1.103,559,0.964,560,1.103,561,0.964,562,1.045,563,0.99,564,1.103,565,1.017,566,1.103,567,0.99,568,1.103,569,0.964,570,1.103,571,0.99,572,1.045,573,0.964,574,0.964,575,1.074,576,0.694,577,0.964,578,1.103,579,0.964,580,1.103,581,0.964,582,1.103,583,0.964,584,1.103,585,0.964,586,1.103,587,0.964,588,1.103,589,0.964,590,1.103,591,0.964,592,1.103,593,0.964,594,1.103,595,0.964,596,1.103,597,0.964,598,1.103,599,0.964,600,1.103,601,0.964,602,1.103,603,0.964,604,1.074,605,1.103,609,1.911,610,1.911,617,1.373,618,1.797,620,2.396,621,2.547,651,2.365,669,0.674,965,4.99,967,1.911,968,5.207,977,4.99,979,1.461,983,3.598,1268,1.651,1269,2.29,1270,1.651,1271,2.29,1272,2.29,1273,2.29,1274,1.651,1275,1.651,1276,2.29,1277,2.29,1278,1.651,1279,1.651,1280,1.651,1281,1.651,1282,1.651,1283,2.29,1284,2.219,1285,1.651,1286,2.29,1287,2.29,1288,1.651,1289,2.29,1290,1.651,1291,1.651,1292,1.651,1293,1.651,1294,2.839,1295,1.651,1296,1.651,1297,1.651,1298,1.651,1299,1.651,1300,1.651,1301,1.651,1302,1.651,1303,1.651,1304,1.651,1305,1.651,1306,1.651,1307,1.651,1308,1.651,1309,1.651,1310,1.651,1311,2.29,1312,1.651,1313,1.651,1314,1.651,1315,1.651,1316,1.651,1317,1.651,1318,1.651,1319,1.651,1320,1.651,1321,1.651,1322,1.651,1323,1.651,1324,1.651,1325,2.29,1326,1.651,1327,1.651,1328,1.651,1329,1.651,1330,1.651,1331,1.378,1332,1.651,1333,1.651,1334,1.651,1335,1.651,1336,1.651,1337,1.651,1338,1.651,1339,1.651,3163,6.488,3164,6.003,3165,3.026,3166,4.536,3167,4.536,3168,5.729,3169,5.729,3170,6.498,3171,5.679,3172,4.095,3173,4.095,3174,4.095,3175,4.095,3176,3.598,3177,3.598,3178,4.095,3179,4.095,3180,4.095]],["title/components/FormSubmitBarComponent.html",[313,0.22,534,1.046]],["body/components/FormSubmitBarComponent.html",[0,0.023,2,2.337,3,0.131,4,0.152,5,0.113,8,0.152,11,1.778,13,0.64,14,5.031,16,3.539,20,0.843,23,0.62,26,0.011,27,0.455,28,0.312,30,1.26,33,1.179,36,2.315,43,1.09,44,0.879,45,1.262,52,0.954,53,3.193,56,1.349,57,0.453,64,1.46,65,0.633,71,0.342,82,0.2,84,0.303,85,0.688,87,0.131,90,1.262,102,0.005,103,0.006,104,0.005,109,0.904,138,1.996,148,0.869,163,1.996,188,2.261,204,1.386,209,0.661,210,2.803,218,1.424,235,1.39,246,0.88,269,2.063,295,0.954,297,3.539,306,4.734,313,0.368,380,0.88,385,1.678,386,3.05,407,1.029,416,1.066,423,1.349,466,0.929,467,0.98,468,0.98,469,1.007,472,1.607,473,0.688,474,1.208,476,1.087,478,1.087,481,1.795,493,0.954,494,1.424,495,0.424,496,1.844,497,1.035,498,1.035,499,0.857,500,1.035,501,0.904,502,1.035,503,0.904,504,1.035,505,0.929,506,1.035,507,0.929,508,1.035,509,0.929,510,1.035,511,0.929,512,0.954,513,1.035,514,0.929,515,1.463,516,0.929,517,0.98,518,1.035,519,0.929,520,1.035,521,0.88,522,1.035,523,0.929,524,1.035,525,1.035,526,0.904,527,1.035,528,0.929,529,1.035,530,0.904,531,1.035,532,0.929,533,1.697,534,1.655,535,0.88,536,1.443,537,1.463,538,0.929,539,0.954,540,1.035,541,0.904,542,1.035,543,0.929,544,1.035,545,0.929,546,1.035,547,0.88,548,1.035,549,0.929,550,1.035,551,0.929,552,0.929,553,1.035,554,0.904,555,0.857,556,1.035,557,0.904,558,1.035,559,0.904,560,1.035,561,0.904,562,0.98,563,0.929,564,1.035,565,0.954,566,1.035,567,0.929,568,1.035,569,0.904,570,1.035,571,0.929,572,0.98,573,0.904,574,0.904,575,1.007,576,0.651,577,0.904,578,1.035,579,0.904,580,1.035,581,0.904,582,1.035,583,0.904,584,1.035,585,0.904,586,1.035,587,0.904,588,1.035,589,0.904,590,1.035,591,0.904,592,1.035,593,0.904,594,1.035,595,0.904,596,1.035,597,0.904,598,1.035,599,0.904,600,1.035,601,0.904,602,1.035,603,0.904,604,1.007,605,1.035,609,1.827,610,1.827,617,1.313,618,1.747,620,2.315,621,2.461,651,2.261,669,0.633,717,2.803,727,2.337,768,1.996,852,3.355,967,1.827,968,5.031,1268,1.549,1269,2.19,1270,1.549,1271,2.19,1272,2.19,1273,2.19,1274,1.549,1275,1.549,1276,2.19,1277,2.19,1278,1.549,1279,1.549,1280,1.549,1281,1.549,1282,1.549,1283,2.19,1284,2.122,1285,1.549,1286,2.19,1287,2.19,1288,1.549,1289,2.19,1290,1.549,1291,1.549,1292,1.549,1293,1.549,1294,2.761,1295,1.549,1296,1.549,1297,1.549,1298,1.549,1299,1.549,1300,1.549,1301,1.549,1302,1.549,1303,1.549,1304,1.549,1305,1.549,1306,1.549,1307,1.549,1308,1.549,1309,1.549,1310,1.549,1311,2.19,1312,1.549,1313,1.549,1314,1.549,1315,1.549,1316,1.549,1317,1.549,1318,1.549,1319,1.549,1320,1.549,1321,1.549,1322,1.549,1323,1.549,1324,1.549,1325,2.19,1326,1.549,1327,1.549,1328,1.549,1329,1.549,1330,1.549,1331,1.293,1332,1.549,1333,1.549,1334,1.549,1335,1.549,1336,1.549,1337,1.549,1338,1.549,1339,1.549,1646,3.539,2424,2.803,2799,4.014,3163,6.395,3164,5.917,3165,2.839,3166,4.338,3167,4.338,3168,5.535,3169,5.535,3170,6.347,3176,3.376,3181,6.847,3182,4.014,3183,4.338,3184,5.431,3185,5.431,3186,5.431,3187,5.431,3188,6.299,3189,5.431,3190,3.842,3191,3.842,3192,4.772,3193,3.539,3194,5.469,3195,6.847,3196,5.431,3197,5.431,3198,4.338,3199,5.431,3200,3.842,3201,3.842,3202,3.842]],["title/components/FullNameComponent.html",[313,0.22,535,0.991]],["body/components/FullNameComponent.html",[0,0.019,3,0.111,4,0.129,5,0.1,8,0.129,9,0.624,10,1.928,11,1.017,13,0.567,20,0.767,23,0.673,25,0.84,26,0.011,27,0.6,28,0.332,29,0.548,30,1.013,33,1.044,34,1.446,36,1.194,43,1.197,44,1.004,45,0.887,50,1.868,52,0.807,56,1.195,57,0.746,64,0.937,65,1.239,71,0.535,82,0.249,83,1.399,84,0.256,85,0.582,87,0.195,90,0.887,102,0.004,103,0.006,104,0.004,109,0.765,148,0.52,169,1.825,204,1.228,209,0.586,213,2.218,215,1.573,217,1.446,218,1.261,220,1.386,235,1.376,246,1.313,269,0.765,295,0.807,313,0.345,335,3.269,354,1.823,379,2.218,380,0.745,385,1.487,407,1.085,416,1.042,421,2.92,423,1.195,466,0.786,467,0.829,468,0.829,469,0.852,472,1.462,473,0.582,474,1.198,476,0.963,478,0.963,481,1.66,493,0.807,494,1.261,495,0.358,496,1.706,497,0.875,498,0.875,499,0.725,500,0.875,501,0.765,502,0.875,503,0.765,504,0.875,505,0.786,506,0.875,507,0.786,508,0.875,509,0.786,510,0.875,511,0.786,512,0.807,513,0.875,514,0.786,515,1.296,516,0.786,517,0.829,518,0.875,519,0.786,520,0.875,521,0.745,522,0.875,523,0.786,524,0.875,525,0.875,526,0.765,527,0.875,528,0.786,529,0.875,530,0.765,531,0.875,532,0.786,533,1.543,534,0.786,535,1.723,536,1.678,537,1.296,538,0.786,539,0.807,540,0.875,541,0.765,542,0.875,543,0.786,544,0.875,545,0.786,546,0.875,547,0.745,548,0.875,549,0.786,550,0.875,551,0.786,552,0.786,553,0.875,554,0.765,555,0.725,556,0.875,557,0.765,558,0.875,559,0.765,560,0.875,561,0.765,562,0.829,563,0.786,564,0.875,565,0.807,566,0.875,567,0.786,568,0.875,569,0.765,570,0.875,571,0.786,572,0.829,573,0.765,574,0.765,575,0.852,576,0.551,577,0.765,578,0.875,579,0.765,580,0.875,581,0.765,582,0.875,583,0.765,584,0.875,585,0.765,586,0.875,587,0.765,588,0.875,589,0.765,590,0.875,591,0.765,592,0.875,593,0.765,594,0.875,595,0.765,596,0.875,597,0.765,598,0.875,599,0.765,600,0.875,601,0.765,602,0.875,603,0.765,604,0.852,605,0.875,606,0.535,617,1.163,618,1.462,620,2.105,621,1.27,622,1.984,623,2.739,624,1.491,625,0.977,648,1.004,652,1.102,669,0.535,701,2.044,702,1.159,703,2.044,704,0.924,727,2.071,779,2.188,824,1.823,825,1.823,826,1.159,827,2.259,828,1.823,829,2.411,875,2.972,935,1.667,937,1.033,938,1.094,939,1.063,940,1.159,967,1.619,993,1.88,998,2.004,999,2.004,1002,3.539,1017,2.071,1084,3.327,1154,3.327,1203,1.094,1204,1.194,1256,2.702,1395,1.613,2241,2.007,2673,4.373,2781,3.327,3193,3.136,3203,6.824,3204,6.314,3205,2.596,3206,4.68,3207,5.058,3208,4.228,3209,3.843,3210,3.843,3211,3.843,3212,3.961,3213,4.576,3214,4.576,3215,4.576,3216,5.034,3217,4.996,3218,4.234,3219,6.437,3220,6.437,3221,6.437,3222,5.034,3223,4.812,3224,3.25,3225,3.25,3226,3.25,3227,3.25,3228,3.25,3229,3.25,3230,3.25,3231,3.25,3232,3.25,3233,3.25,3234,3.25,3235,3.25,3236,4.234,3237,3.25,3238,3.25,3239,3.25,3240,3.25,3241,3.912,3242,3.843,3243,3.25,3244,3.843,3245,3.136,3246,4.228,3247,4.228,3248,4.228,3249,4.228,3250,4.228,3251,3.25,3252,3.25,3253,2.856,3254,2.596,3255,4.228,3256,2.596,3257,5.034,3258,2.596,3259,5.034,3260,2.596,3261,5.034,3262,2.402,3263,2.402,3264,2.856,3265,2.856,3266,2.856,3267,2.856,3268,2.856,3269,2.856,3270,2.856,3271,5.034,3272,5.034,3273,2.856,3274,2.856,3275,6.22,3276,7.079]],["title/interfaces/FullNameErrorMsg.html",[606,0.712,3236,3.197]],["body/interfaces/FullNameErrorMsg.html",[0,0.029,3,0.169,4,0.196,5,0.103,8,0.196,9,0.836,10,1.663,20,0.662,26,0.011,27,0.57,28,0.255,29,0.728,30,1.031,34,1.486,36,1.817,43,0.746,44,0.925,45,0.911,50,2.074,65,1.252,71,0.551,82,0.29,83,2.128,84,0.389,85,0.886,87,0.244,90,0.911,102,0.006,103,0.008,104,0.006,169,2.776,204,1.261,209,0.602,213,2.279,215,1.616,217,1.486,218,1.296,220,1.288,235,0.768,246,1.133,313,0.366,335,3.327,354,1.873,379,2.279,385,1.528,416,1.171,421,2.972,472,1.645,474,0.662,476,0.989,478,0.989,481,1.296,535,1.643,536,1.643,606,0.814,608,1.817,617,1.559,618,1.645,620,2.369,621,1.932,622,2.233,623,3.082,624,1.517,625,1.486,652,1.133,669,0.814,701,1.763,702,1.763,703,1.763,704,1.406,727,2.128,779,1.992,825,1.873,826,1.763,827,2.299,828,1.873,829,2.812,875,3.054,993,1.932,1002,3.054,1017,2.128,1084,3.418,1154,3.418,1256,2.776,1395,2.454,2241,3.054,2673,4.431,2781,3.418,3193,3.222,3203,3.949,3204,3.654,3205,3.949,3206,4.764,3207,5.149,3208,4.344,3209,3.949,3210,3.949,3211,3.949,3212,3.418,3213,3.949,3214,3.949,3215,3.949,3216,4.344,3217,5.975,3218,3.654,3219,4.344,3220,4.344,3221,4.344,3222,4.344,3236,5.301,3241,3.982,3242,3.949,3244,3.949,3245,3.222,3246,4.344,3247,4.344,3248,4.344,3249,4.344,3250,4.344,3253,4.344,3254,3.949,3255,5.664,3256,3.949,3257,6.303,3258,3.949,3259,6.303,3260,3.949,3261,6.303,3262,3.654,3263,3.654,3264,4.344,3265,4.344,3266,4.344,3267,4.344,3268,4.344,3269,4.344,3270,4.344,3271,6.303,3272,6.303,3273,4.344,3274,4.344]],["title/interfaces/GeoAddressResult.html",[606,0.712,626,2.429]],["body/interfaces/GeoAddressResult.html",[0,0.031,3,0.177,4,0.206,5,0.108,8,0.206,9,0.863,15,2.483,17,3.565,26,0.011,27,0.375,28,0.317,45,1.226,71,0.56,73,3.591,82,0.302,84,0.409,87,0.227,88,3.208,90,0.957,92,0.883,102,0.006,103,0.008,104,0.006,105,3.737,107,3.974,110,2.916,111,2.395,112,3.208,120,3.913,122,4.786,128,4.918,139,3.579,140,3.208,141,4.337,145,3.384,148,1.239,165,2.916,166,2.483,169,2.916,170,2.395,172,3.384,174,1.411,196,2.683,210,2.681,373,2.395,379,3.068,382,4.187,383,4.033,384,3.208,386,2.916,405,2.235,606,0.855,608,1.909,615,4.649,626,4.124,628,3.435,631,3.645,652,1.19,654,2.578,664,1.745,669,1.096,673,5.05,750,3.384,768,1.909,1047,3.949,1113,3.208,1144,3.208,1145,3.208,1436,3.591,1448,3.591,1465,3.838,1480,3.384,2345,3.054,2354,2.312,2465,3.838,2657,3.384,2823,3.838,3277,4.148,3278,7.035,3279,4.148,3280,3.208,3281,4.563,3282,4.563,3283,6.453,3284,4.563,3285,4.563,3286,4.563,3287,4.563,3288,4.563,3289,4.563,3290,4.563,3291,4.563,3292,4.563,3293,4.563,3294,4.563,3295,4.563,3296,4.563,3297,4.563,3298,4.563,3299,4.563,3300,4.563,3301,5.847,3302,4.563,3303,4.563,3304,4.563,3305,4.563,3306,4.563,3307,4.563,3308,4.563,3309,4.563,3310,4.148,3311,4.563,3312,5.847,3313,4.563,3314,4.563,3315,4.563,3316,4.563,3317,4.563,3318,4.563]],["title/components/GeocoderInputComponent.html",[313,0.22,538,1.046]],["body/components/GeocoderInputComponent.html",[0,0.016,3,0.092,4,0.106,5,0.087,8,0.106,9,0.541,11,0.881,12,3.329,13,0.491,20,0.36,23,0.671,25,1.128,26,0.011,27,0.576,28,0.33,29,0.746,30,1.231,33,0.905,37,1.019,43,1.161,44,0.96,45,1.396,48,1.752,51,2.881,52,0.668,56,1.035,57,0.907,59,2.378,63,1.987,64,0.811,65,1.343,71,0.501,82,0.274,84,0.212,85,0.482,87,0.092,90,0.495,92,0.634,97,0.905,102,0.006,103,0.005,104,0.009,107,3.266,109,0.633,110,1.51,132,3.551,139,3.345,148,0.92,151,1.12,161,1.581,166,1.285,167,2.363,168,2.363,169,1.51,174,1.054,184,3.08,192,1.019,209,0.507,215,1.669,220,1.418,235,1.357,239,0.724,246,0.616,269,0.633,295,0.668,300,2.474,310,2.45,313,0.26,319,2.034,336,1.794,354,1.579,367,3.528,380,0.616,382,1.335,383,1.285,385,0.831,388,1.987,395,3.326,401,1.661,407,0.967,410,1.752,411,2.363,415,3.08,416,1.009,423,1.035,466,0.65,467,0.686,468,0.686,469,0.705,472,1.302,473,0.482,474,1.186,476,0.834,478,0.834,481,1.507,491,1.388,492,1.285,493,0.668,494,1.093,495,0.296,496,1.548,497,0.724,498,0.724,499,0.6,500,0.724,501,0.633,502,0.724,503,0.633,504,0.724,505,0.65,506,0.724,507,0.65,508,0.724,509,0.65,510,0.724,511,0.65,512,0.668,513,0.724,514,0.65,515,1.123,516,0.65,517,0.686,518,0.724,519,0.65,520,0.724,521,0.616,522,0.724,523,0.65,524,0.724,525,0.724,526,0.633,527,0.724,528,0.65,529,0.724,530,0.633,531,0.724,532,0.65,533,1.375,534,0.65,535,0.616,536,0.616,537,1.123,538,1.39,539,1.911,540,0.724,541,0.633,542,0.724,543,0.65,544,0.724,545,0.65,546,0.724,547,0.616,548,0.724,549,0.65,550,0.724,551,0.65,552,0.65,553,0.724,554,0.633,555,0.6,556,0.724,557,0.633,558,0.724,559,0.633,560,0.724,561,0.633,562,0.686,563,0.65,564,0.724,565,0.668,566,0.724,567,0.65,568,0.724,569,0.633,570,0.724,571,0.65,572,0.686,573,1.201,574,0.633,575,0.705,576,0.456,577,0.633,578,0.724,579,0.633,580,0.724,581,0.633,582,0.724,583,0.633,584,0.724,585,0.633,586,0.724,587,0.633,588,0.724,589,0.633,590,0.724,591,0.633,592,0.724,593,0.633,594,0.724,595,0.633,596,0.724,597,0.633,598,0.724,599,0.633,600,0.724,601,0.633,602,0.724,603,0.633,604,0.705,605,0.724,617,1.234,618,1.302,619,3.001,622,1.768,624,1.353,625,0.808,626,2.34,627,1.987,628,4.26,629,1.987,631,2.533,634,1.752,636,2.574,638,1.987,646,1.285,648,0.831,652,0.955,664,0.705,666,2.59,668,4.597,669,1.199,681,2.881,701,1.82,702,1.487,703,1.82,704,0.765,731,1.752,747,2.45,754,1.622,768,1.532,773,1.446,776,1.487,779,2.192,800,3.551,803,3.091,813,1.992,816,3.08,820,1.987,821,1.987,824,1.933,825,1.019,826,0.959,827,2.347,828,1.019,829,1.487,906,0.831,912,2.866,935,1.444,937,0.855,938,0.905,939,0.879,940,0.959,957,2.241,967,1.402,979,1.82,998,2.125,999,2.125,1017,1.157,1047,1.446,1050,2.716,1078,2.069,1174,2.868,1177,1.335,1178,2.77,1200,1.335,1203,0.905,1204,0.988,1205,1.856,1208,1.24,1344,1.388,1478,1.581,1480,2.716,2240,3.326,2241,3.551,2273,1.987,2354,1.197,2374,4.076,2383,4.597,2410,3.329,2456,4.592,2476,1.859,2525,1.987,2554,1.987,2600,2.45,2611,3.329,2658,2.716,2712,3.528,2752,2.363,2796,1.51,2819,1.987,2901,2.148,3153,3.662,3182,3.772,3254,2.148,3280,4.382,3319,7.484,3320,6.803,3321,2.363,3322,4.168,3323,5.103,3324,4.168,3325,4.168,3326,5.103,3327,5.103,3328,5.103,3329,5.103,3330,5.103,3331,6.22,3332,3.329,3333,5.103,3334,4.168,3335,4.168,3336,4.168,3337,4.168,3338,4.168,3339,4.168,3340,2.689,3341,2.689,3342,2.689,3343,2.689,3344,2.689,3345,2.689,3346,4.168,3347,2.689,3348,4.168,3349,2.689,3350,2.689,3351,4.168,3352,2.689,3353,4.168,3354,2.689,3355,4.168,3356,2.689,3357,4.168,3358,5.749,3359,2.689,3360,2.689,3361,2.689,3362,4.168,3363,2.689,3364,2.689,3365,2.689,3366,2.689,3367,2.689,3368,2.689,3369,2.689,3370,2.689,3371,4.168,3372,6.22,3373,2.689,3374,3.662,3375,2.689,3376,4.168,3377,4.168,3378,2.689,3379,5.051,3380,4.168,3381,2.689,3382,2.689,3383,2.689,3384,2.689,3385,2.689,3386,2.689,3387,2.689,3388,2.689,3389,2.689,3390,2.689,3391,2.689,3392,2.689,3393,2.689,3394,4.484,3395,2.689,3396,4.168,3397,4.168,3398,5.103,3399,5.103,3400,2.689,3401,4.168,3402,2.689,3403,2.689,3404,2.689,3405,2.689,3406,2.363,3407,2.689,3408,2.689,3409,2.689,3410,2.689,3411,2.689,3412,2.689,3413,2.689,3414,2.689,3415,2.689,3416,2.148,3417,2.689,3418,2.689,3419,2.689,3420,2.689,3421,2.689,3422,2.689,3423,1.987,3424,2.689,3425,2.689,3426,4.168,3427,2.148,3428,2.689,3429,2.689,3430,2.689,3431,2.689,3432,2.689,3433,5.749,3434,4.168]],["title/injectables/GeocoderService.html",[196,1.744,3280,2.672]],["body/injectables/GeocoderService.html",[0,0.026,3,0.146,4,0.17,5,0.09,8,0.17,9,0.76,13,0.787,15,3.594,17,3.954,20,0.574,23,0.67,25,1.228,26,0.011,27,0.593,28,0.337,29,0.774,30,0.686,43,1.084,44,0.874,45,1.231,57,0.936,71,0.527,72,4.332,73,2.964,80,3.563,81,2.408,82,0.286,84,0.338,87,0.2,88,2.648,90,0.79,92,0.829,102,0.005,103,0.007,104,0.005,105,4.607,107,3.731,109,1.38,110,3.75,111,1.977,112,4.643,113,4.682,114,4.963,115,4.352,116,4.682,119,3.425,120,4.221,122,5.058,124,4.052,125,3.169,126,3.425,127,3.425,128,5.306,130,5.335,131,3.169,132,3.621,133,4.052,134,1.624,135,2.648,136,3.425,137,3.169,138,1.576,139,4.412,140,4.125,141,5.058,143,3.169,144,3.425,145,4.352,146,2.964,147,2.648,148,1.313,149,3.425,150,2.964,151,1.785,152,3.425,153,3.425,154,3.425,155,4.052,157,3.425,165,2.408,166,2.05,169,2.408,170,1.977,172,2.794,174,1.346,196,2.363,198,2.521,210,2.213,373,1.977,379,1.977,382,3.563,383,3.432,384,2.648,386,3.291,395,3.82,405,2.523,606,0.706,615,4.272,626,3.75,628,3.447,631,3.315,652,1.343,654,2.909,664,1.751,669,1.1,673,4.563,750,2.794,768,2.154,1047,4.042,1113,3.621,1144,2.648,1145,2.648,1203,2.611,1436,2.964,1448,2.964,1465,3.169,1480,2.794,1569,3.767,1570,3.767,1571,3.767,1572,3.767,1574,3.767,1575,3.767,2345,2.521,2354,1.909,2465,4.332,2657,2.794,2823,3.169,3277,3.425,3278,5.15,3279,3.425,3280,3.621,3281,5.868,3282,5.15,3283,6.981,3284,5.15,3285,3.767,3286,5.15,3287,3.767,3288,3.767,3289,3.767,3290,3.767,3291,3.767,3292,3.767,3293,3.767,3294,3.767,3295,3.767,3296,3.767,3297,3.767,3298,3.767,3299,3.767,3300,5.15,3301,5.868,3302,5.15,3303,5.15,3304,5.15,3305,3.767,3306,3.767,3307,3.767,3308,3.767,3309,3.767,3310,3.425,3311,3.767,3312,5.15,3313,3.767,3314,3.767,3315,3.767,3316,3.767,3317,3.767,3318,3.767,3435,5.862,3436,5.862,3437,4.288,3438,4.288,3439,4.288,3440,4.288,3441,4.288]],["title/components/HeaderComponent.html",[313,0.22,541,1.018]],["body/components/HeaderComponent.html",[0,0.025,3,0.141,4,0.163,5,0.119,8,0.163,9,0.741,11,1.207,13,0.673,20,0.553,21,2.856,22,4.74,23,0.649,25,0.837,26,0.011,27,0.536,28,0.304,29,0.547,30,0.914,33,1.24,43,1.067,44,0.86,52,1.026,56,1.419,57,0.833,64,1.112,65,0.941,71,0.528,79,3.529,80,2.05,82,0.241,84,0.325,86,2.132,87,0.141,92,0.722,102,0.005,103,0.007,104,0.005,109,0.972,148,0.661,169,2.32,188,1.72,209,0.696,220,1.11,235,1.396,246,0.946,269,0.972,278,4.952,280,5.223,281,5.02,282,5.02,295,1.026,313,0.334,333,2.856,360,2.379,362,3.208,380,0.946,407,1.082,416,1.005,423,1.906,466,0.999,467,1.054,468,1.054,469,1.083,472,1.671,473,0.74,474,1.211,476,1.143,478,1.143,481,1.853,493,1.026,494,1.498,495,0.455,496,1.904,497,1.113,498,1.113,499,0.921,500,1.113,501,0.972,502,1.113,503,0.972,504,1.113,505,0.999,506,1.113,507,0.999,508,1.113,509,0.999,510,1.113,511,0.999,512,1.026,513,1.113,514,0.999,515,1.539,516,0.999,517,1.054,518,1.113,519,0.999,520,1.113,521,0.946,522,1.113,523,0.999,524,1.113,525,1.113,526,0.972,527,1.113,528,0.999,529,1.113,530,0.972,531,1.113,532,0.999,533,1.764,534,0.999,535,0.946,536,0.946,537,1.539,538,0.999,539,1.026,540,1.113,541,1.806,542,1.113,543,0.999,544,1.113,545,0.999,546,1.113,547,0.946,548,1.113,549,0.999,550,1.113,551,0.999,552,0.999,553,1.113,554,0.972,555,0.921,556,1.113,557,0.972,558,1.113,559,0.972,560,1.113,561,0.972,562,1.054,563,0.999,564,1.113,565,1.026,566,1.113,567,0.999,568,1.113,569,0.972,570,1.113,571,0.999,572,1.054,573,0.972,574,0.972,575,1.083,576,0.7,577,0.972,578,1.113,579,0.972,580,1.113,581,0.972,582,1.113,583,0.972,584,1.113,585,0.972,586,1.113,587,0.972,588,1.113,589,0.972,590,1.113,591,0.972,592,1.113,593,0.972,594,1.113,595,0.972,596,1.113,597,0.972,598,1.113,599,0.972,600,1.113,601,0.972,602,1.113,603,0.972,604,1.083,605,1.113,695,1.778,779,2.371,947,2.836,949,3.723,957,2.221,1054,2.856,1114,1.72,1183,2.552,1257,1.905,1491,4.222,1515,2.692,2393,5.02,2478,5.02,2517,2.856,2658,2.692,3427,4.564,3442,3.63,3443,5.714,3444,5.714,3445,6.21,3446,4.564,3447,4.564,3448,3.95,3449,7.067,3450,7.067,3451,5.714,3452,5.714,3453,5.714,3454,5.714,3455,5.714,3456,6.55,3457,6.55,3458,7.067,3459,5.714,3460,7.067,3461,6.55,3462,7.419,3463,6.55,3464,5.714,3465,5.714,3466,4.131,3467,4.131,3468,4.131,3469,4.131,3470,4.131,3471,5.714,3472,4.131,3473,4.131,3474,4.131,3475,5.02,3476,3.63,3477,3.63,3478,3.63,3479,4.131,3480,4.131,3481,4.131,3482,4.131,3483,4.131,3484,4.131,3485,4.131,3486,5.714,3487,4.131,3488,4.131,3489,4.131,3490,4.131,3491,4.131,3492,4.131,3493,4.131]],["title/interfaces/ISpaEnvResponse.html",[606,0.712,3494,3.455]],["body/interfaces/ISpaEnvResponse.html",[0,0.03,3,0.2,4,0.134,5,0.071,8,0.134,9,0.645,11,1.242,16,3.831,17,2.213,26,0.011,28,0.294,30,1.035,34,1.021,36,1.827,43,0.513,45,1.325,51,2.348,55,2.984,59,1.722,65,1.065,71,0.552,77,1.997,80,1.686,82,0.28,83,1.462,84,0.267,85,0.609,87,0.2,88,2.098,90,1.325,92,0.648,102,0.004,103,0.006,104,0.004,105,2.791,107,3.211,109,0.799,110,1.907,111,1.566,112,2.098,120,2.922,122,4.216,131,3.673,132,2.098,134,2.45,138,1.248,139,3.161,140,2.098,141,3.239,147,3.996,148,1.264,150,2.348,155,4.472,163,2.53,165,1.907,166,1.624,174,0.575,185,2.098,188,1.414,192,1.883,194,2.098,195,2.51,204,1.268,209,0.605,211,6.467,213,2.292,215,1.922,217,1.021,218,1.303,220,1.218,235,0.528,247,2.984,269,1.522,272,3.07,273,1.907,276,1.997,278,2.098,287,2.348,290,5.167,291,5.165,295,1.892,296,5.266,297,2.213,306,2.348,313,0.33,337,1.624,351,2.51,352,1.997,360,3.172,396,1.753,409,1.826,415,3.673,416,1.123,422,3.07,423,0.844,448,1.248,472,1.268,474,0.455,476,0.68,478,0.68,481,1.303,483,2.098,491,1.753,492,1.624,514,1.564,606,0.559,608,1.248,617,1.564,618,1.757,620,2.16,621,1.942,622,1.722,623,2.376,641,2.348,651,1.414,652,0.778,664,1.303,669,1.184,677,2.922,686,3.07,695,2.784,701,1.212,702,1.212,703,1.212,713,1.512,754,1.08,762,1.414,779,1.536,813,3.092,825,1.287,826,1.212,827,1.773,828,1.287,829,1.773,888,4.064,939,1.625,979,1.212,993,1.327,1017,1.462,1047,3.702,1048,2.51,1050,3.239,1098,1.826,1129,3.673,1154,2.348,1378,2.098,1436,2.348,1438,3.239,1448,2.348,1455,2.348,1456,2.791,1466,2.713,1480,2.213,1505,3.631,1506,1.997,1507,3.97,1511,2.713,1514,3.97,1515,2.213,1516,2.713,1517,2.51,1518,2.713,1520,2.713,1521,3.97,1522,2.713,1524,2.713,1621,4.781,1757,4.367,2345,1.997,2399,2.922,2420,2.984,2517,3.436,2646,2.984,2651,3.436,2657,2.213,2689,2.713,2690,2.984,2691,3.239,2716,3.436,2723,2.984,2764,2.984,2772,2.984,2783,2.713,2785,4.367,2794,4.367,2844,4.367,2845,3.673,2894,2.984,2954,2.984,2968,2.713,3038,4.216,3140,3.673,3212,2.348,3448,3.436,3494,4.695,3495,2.984,3496,2.713,3497,2.51,3498,7.192,3499,7.192,3500,4.97,3501,6.884,3502,6.469,3503,6.469,3504,6.469,3505,6.469,3506,6.469,3507,6.469,3508,6.469,3509,3.396,3510,3.396,3511,3.396,3512,2.713,3513,3.396,3514,3.396,3515,3.396,3516,3.396,3517,3.396,3518,2.984,3519,3.396,3520,4.97,3521,4.97,3522,4.367,3523,6.469,3524,6.469,3525,4.97,3526,3.97,3527,4.97,3528,4.97,3529,6.049,3530,4.781,3531,4.97,3532,4.97,3533,4.367,3534,4.367,3535,3.97,3536,4.367,3537,4.97,3538,4.97,3539,4.97,3540,6.319,3541,4.97,3542,4.97,3543,4.97,3544,4.97,3545,4.97,3546,4.97,3547,4.97,3548,4.97,3549,4.97,3550,4.97,3551,4.97,3552,4.97,3553,4.97,3554,4.97,3555,4.97,3556,4.367,3557,3.396,3558,3.396,3559,3.396,3560,2.713,3561,3.396,3562,2.984,3563,2.713,3564,3.396,3565,2.713,3566,3.396,3567,4.97,3568,2.713,3569,3.396,3570,3.396,3571,3.396,3572,3.396,3573,3.396,3574,4.97,3575,3.396,3576,2.984,3577,2.984,3578,3.396,3579,2.984,3580,3.396,3581,2.984,3582,3.396,3583,4.97,3584,2.984,3585,3.396,3586,3.396,3587,3.396,3588,3.396,3589,3.396,3590,3.396,3591,3.396,3592,3.396,3593,3.396,3594,3.396,3595,3.396,3596,3.396,3597,3.396,3598,2.713,3599,3.396,3600,3.396,3601,2.984,3602,3.396,3603,3.396,3604,3.396,3605,3.396,3606,3.396,3607,3.396,3608,3.396,3609,4.97,3610,3.396,3611,3.396,3612,3.396,3613,3.396,3614,3.396,3615,3.396,3616,3.396,3617,2.51,3618,3.396,3619,3.396,3620,2.984,3621,3.396,3622,3.396,3623,3.396,3624,3.396,3625,3.396,3626,3.396,3627,3.396,3628,3.396,3629,3.396,3630,4.97,3631,4.97,3632,3.396,3633,3.396,3634,3.396,3635,3.396,3636,3.396,3637,4.97,3638,3.396,3639,3.396,3640,3.396,3641,3.396]],["title/classes/MaskModel.html",[0,0.026,3642,3.197]],["body/classes/MaskModel.html",[0,0.033,2,2.361,3,0.187,4,0.217,5,0.115,8,0.217,9,0.894,10,2.535,13,0.812,20,1.008,23,0.682,25,1.01,26,0.011,27,0.498,28,0.34,29,0.66,30,1.264,33,1.496,43,1.137,44,1.066,45,1.27,50,1.871,57,0.812,65,0.903,71,0.553,82,0.254,84,0.432,87,0.269,90,1.27,92,0.605,102,0.006,103,0.008,104,0.006,174,1.276,220,1.445,300,2.361,326,1.438,364,3.08,396,2.831,407,1.039,416,1.124,617,1.666,618,2.016,624,1.916,648,1.695,652,1.579,669,0.903,704,1.56,732,3.739,744,4.49,772,4.051,935,2.387,937,1.744,938,1.846,939,1.794,940,1.957,967,2.318,1098,3.705,1203,1.846,1204,2.016,1225,4.051,1227,3.739,1256,3.869,1342,2.95,1506,3.225,2424,2.831,2525,4.054,2926,4.82,3043,4.82,3245,3.575,3423,4.054,3642,5.092,3643,4.82,3644,6.619,3645,5.503,3646,6.89,3647,5.486,3648,4.82,3649,5.486,3650,5.503,3651,5.486,3652,5.486,3653,5.486,3654,5.486,3655,5.486,3656,5.486,3657,5.486,3658,5.486,3659,4.82,3660,4.82]],["title/interfaces/Maxlengths.html",[606,0.712,639,2.819]],["body/interfaces/Maxlengths.html",[0,0.018,3,0.104,4,0.121,5,0.064,8,0.121,9,0.596,10,1.029,20,0.409,26,0.011,27,0.221,28,0.261,29,0.737,30,1.305,34,1.381,36,2.03,43,0.694,44,0.975,45,1.49,47,1.517,59,1.059,65,0.91,71,0.553,76,1.517,82,0.264,84,0.241,85,0.548,87,0.209,90,1.132,92,0.849,93,1.716,102,0.004,103,0.005,104,0.004,134,1.158,138,1.123,170,2.119,174,1.172,178,1.316,182,1.409,188,2.3,192,2.093,203,1.716,204,1.173,209,0.372,217,0.919,218,1.205,235,0.475,239,0.823,259,2.259,273,1.716,300,1.316,302,1.888,310,2.702,313,0.313,326,1.205,336,1.316,337,1.461,354,1.158,364,1.716,373,1.409,378,1.578,382,4.153,383,3.829,385,1.707,395,3.6,396,1.578,401,1.888,405,1.316,416,1.16,421,1.409,472,1.173,474,0.409,476,0.612,478,0.612,481,0.801,499,1.025,536,0.7,539,1.142,555,1.025,606,0.91,607,3.819,608,1.123,609,1.547,610,1.547,611,2.259,612,3.397,613,3.671,614,3.671,615,4.14,616,4.925,617,1.111,618,1.41,619,2.702,620,2.03,621,1.796,622,1.592,623,2.197,624,1.082,625,0.919,626,2.581,627,2.259,628,4.34,629,2.259,630,3.6,631,3.269,632,2.113,633,3.178,634,1.992,635,3.795,636,3.412,637,2.995,638,2.259,639,4.293,640,4.554,641,2.113,642,2.259,643,2.442,644,2.442,645,2.442,646,1.461,647,1.716,648,0.945,649,1.797,650,1.578,651,1.273,652,0.7,653,3.397,654,2.281,655,3.671,656,2.581,657,2.702,658,2.113,659,2.442,660,2.442,661,2.259,662,3.397,663,1.992,664,1.814,665,2.442,666,2.743,667,5.734,668,2.259,669,0.503,670,1.797,671,2.259,672,2.259,673,2.702,674,2.442,675,2.259,676,2.442,677,4.069,678,2.259,679,2.442,680,2.259,681,2.113,682,3.671,683,2.442,684,2.442,685,3.671,686,2.839,687,2.442,688,2.442,689,2.442,690,2.442,691,2.442,692,2.459,693,2.851,694,1.992,695,2.835,696,2.442,697,2.259,698,2.442,699,4.247,700,1.797,701,1.09,702,1.64,703,1.09,704,0.869,705,2.259,706,2.442,707,2.442,708,3.671,709,6.149,710,3.671,711,2.442,712,2.995,713,2.459,714,3.671,715,6.036,716,4.412,717,1.578,718,2.259,719,2.113,720,2.442,721,2.442,722,2.442,723,2.442,724,2.442,725,2.442,726,4.907,727,1.316,728,2.442,729,2.442,730,3.671,731,2.995,732,1.517,733,3.671,734,5.261,735,5.527,736,5.261,737,2.442,738,2.442,739,3.671,740,2.442,741,3.671,742,2.581,743,2.442,744,1.992,745,2.442,746,2.442,747,1.797,748,2.442,749,2.442,750,3.6,751,2.442,752,2.442,753,2.442,754,2.282,755,3.397,756,2.581,757,3.671,758,3.671,759,3.671,760,3.671,761,2.442,762,1.273,763,2.442,764,2.442,765,4.082,766,2.113,767,2.259,768,1.123,769,2.442,770,2.442,771,2.442,772,1.797,773,1.644,774,2.442,775,2.442,776,1.09,777,2.442,778,2.113,779,2.283,780,2.442,781,4.907,782,2.442,783,2.442,784,2.442,785,2.442,786,2.442,787,4.082,788,2.113,789,2.574,790,2.442,791,4.247,792,3.671,793,3.178,794,3.671,795,4.412,796,2.113,797,2.442,798,2.442,799,2.113,800,1.888,801,1.797,802,2.113,803,1.644,804,2.442,805,2.442,806,2.442,807,3.397,808,2.442,809,2.442,810,2.259,811,2.442,812,2.259,813,2.197,814,2.442,815,2.442,816,2.259,817,2.442,818,1.797,819,2.442,820,2.259,821,2.259,822,2.442,823,2.442,824,1.158,825,1.158,826,1.09,827,1.64,828,1.158,829,1.09,830,1.461,831,2.641,832,1.361,833,2.442,834,2.442,835,2.442,836,2.442,837,2.442,838,2.442,839,2.442,840,2.442,841,2.442,842,2.442,843,2.442,844,2.259,845,2.442,846,3.671,847,2.442,848,2.442]],["title/classes/MoHCommonLibraryError.html",[0,0.026,3661,3.197]],["body/classes/MoHCommonLibraryError.html",[0,0.04,2,2.874,3,0.228,4,0.264,5,0.139,20,0.894,23,0.526,25,0.979,26,0.01,27,0.483,28,0.264,29,0.639,71,0.516,81,3.75,87,0.228,102,0.008,103,0.009,104,0.008,148,1.313,652,1.778,1456,3.75,1506,3.926,3661,5.735,3662,6.819,3663,5.868,3664,7.76,3665,6.678,3666,6.678,3667,6.678,3668,7.76,3669,7.76,3670,6.678,3671,6.678,3672,6.678]],["title/components/NameComponent.html",[246,0.991,313,0.22]],["body/components/NameComponent.html",[0,0.021,3,0.121,4,0.14,5,0.107,8,0.14,9,0.665,10,2.026,11,1.083,13,0.604,20,0.686,23,0.68,25,1.129,26,0.011,27,0.604,28,0.336,29,0.763,30,1.12,33,1.113,34,1.541,37,1.342,43,1.163,44,1.05,45,0.944,50,1.639,52,0.88,56,1.273,57,0.887,64,0.998,65,1.33,71,0.518,82,0.222,84,0.279,85,0.635,87,0.121,92,0.565,102,0.004,103,0.006,104,0.004,109,0.834,117,2.282,148,0.567,209,0.624,213,2.363,220,1.306,232,3.166,235,1.384,239,1.381,246,1.512,269,0.834,295,0.88,313,0.307,319,2.641,326,0.929,362,2.878,380,0.812,385,1.584,400,3.238,407,1.141,416,1.038,423,1.273,466,0.857,467,0.904,468,0.904,469,0.929,473,0.635,474,1.203,476,1.026,478,1.026,493,0.88,494,1.344,495,0.391,496,1.777,497,0.954,498,0.954,499,0.79,500,0.954,501,0.834,502,0.954,503,0.834,504,0.954,505,0.857,506,0.954,507,0.857,508,0.954,509,0.857,510,0.954,511,0.857,512,0.88,513,0.954,514,0.857,515,1.381,516,0.857,517,0.904,518,0.954,519,0.857,520,0.954,521,0.812,522,0.954,523,0.857,524,0.954,525,0.954,526,0.834,527,0.954,528,0.857,529,0.954,530,0.834,531,0.954,532,0.857,533,1.622,534,0.857,535,0.812,536,0.812,537,1.381,538,0.857,539,0.88,540,0.954,541,0.834,542,0.954,543,0.857,544,0.954,545,0.857,546,0.954,547,0.812,548,0.954,549,0.857,550,0.954,551,0.857,552,0.857,553,0.954,554,0.834,555,0.79,556,0.954,557,0.834,558,0.954,559,0.834,560,0.954,561,0.834,562,0.904,563,0.857,564,0.954,565,0.88,566,0.954,567,0.857,568,0.954,569,0.834,570,0.954,571,0.857,572,0.904,573,0.834,574,0.834,575,0.929,576,0.6,577,0.834,578,0.954,579,0.834,580,0.954,581,0.834,582,0.954,583,0.834,584,0.954,585,0.834,586,0.954,587,0.834,588,0.954,589,0.834,590,0.954,591,0.834,592,0.954,593,0.834,594,0.954,595,0.834,596,0.954,597,0.834,598,0.954,599,0.834,600,0.954,601,0.834,602,0.954,603,0.834,604,0.929,605,0.954,617,1.456,618,1.92,622,2.086,624,1.553,625,1.065,648,1.095,652,1.174,664,0.929,666,2.748,669,0.844,701,2.148,702,1.828,703,2.148,704,1.008,727,2.206,776,1.828,824,2.281,825,1.342,826,1.828,827,2.603,828,1.342,829,1.828,830,2.45,831,1.694,832,2.282,906,1.095,935,1.775,937,1.126,938,1.192,939,1.159,940,1.264,967,1.725,979,2.148,998,2.508,999,2.508,1017,1.525,1078,2.544,1114,2.134,1174,3.228,1177,1.759,1178,3.117,1182,3.166,1200,1.759,1203,1.192,1204,1.302,1205,2.282,1208,1.634,1219,3.382,1220,3.382,1221,3.014,1224,2.879,1226,3.108,1227,2.989,1233,2.363,1242,2.189,1244,2.189,1257,2.363,1259,3.34,1260,2.84,1261,3.544,1262,3.544,1263,3.544,1265,2.083,1267,2.083,1342,1.905,1343,1.829,1344,1.829,1490,3.788,2354,1.578,2594,3.544,2595,3.544,2599,3.788,2600,3.014,2601,4.504,2605,5.291,2611,4.094,2626,3.113,2629,3.113,2630,3.113,3210,4.094,3211,4.094,3244,4.094,3245,4.3,3673,3.113,3674,6.022,3675,5.126,3676,3.543,3677,3.543,3678,5.126,3679,3.543,3680,3.543,3681,5.126,3682,3.543,3683,3.543,3684,3.543,3685,3.543,3686,3.543,3687,3.543,3688,3.543,3689,3.543,3690,3.543,3691,3.543,3692,3.543,3693,3.543,3694,3.543,3695,6.022,3696,3.543,3697,5.126]],["title/components/PageFrameworkComponent.html",[313,0.22,543,1.046]],["body/components/PageFrameworkComponent.html",[0,0.026,3,0.146,4,0.17,5,0.123,8,0.17,11,1.24,13,0.691,23,0.462,26,0.011,27,0.483,28,0.17,33,1.274,43,1.135,44,0.523,52,1.067,56,1.457,57,0.506,64,1.645,65,0.707,82,0.158,84,0.338,87,0.2,102,0.005,103,0.007,104,0.005,109,1.011,148,0.939,163,2.64,209,0.714,215,1.919,235,1.399,246,0.984,269,1.011,295,1.067,306,4.057,313,0.341,352,4.224,354,2.223,380,0.984,407,1.111,416,0.835,423,1.784,466,1.038,467,1.706,468,1.096,469,1.126,472,1.706,473,0.77,474,1.213,476,1.174,478,1.174,481,1.883,493,1.067,494,1.538,495,0.473,496,1.935,497,1.157,498,1.157,499,0.958,500,1.157,501,1.011,502,1.157,503,1.011,504,1.157,505,1.038,506,1.157,507,1.038,508,1.157,509,1.038,510,1.157,511,1.038,512,1.067,513,1.157,514,1.038,515,1.58,516,1.038,517,1.096,518,1.157,519,1.038,520,1.157,521,0.984,522,1.157,523,1.038,524,1.157,525,1.157,526,1.011,527,1.157,528,1.038,529,1.157,530,1.011,531,1.157,532,1.038,533,1.8,534,1.038,535,0.984,536,0.984,537,1.58,538,1.038,539,1.067,540,1.157,541,1.011,542,1.157,543,1.737,544,1.157,545,1.038,546,1.157,547,0.984,548,1.157,549,1.038,550,1.157,551,1.038,552,1.038,553,1.157,554,1.011,555,0.958,556,1.157,557,1.011,558,1.157,559,1.011,560,1.157,561,1.011,562,1.096,563,1.038,564,1.157,565,1.067,566,1.157,567,1.038,568,1.157,569,1.011,570,1.157,571,1.038,572,1.096,573,1.011,574,1.011,575,1.126,576,0.727,577,1.011,578,1.157,579,1.011,580,1.157,581,1.011,582,1.157,583,1.011,584,1.157,585,1.011,586,1.157,587,1.011,588,1.157,589,1.011,590,1.157,591,1.011,592,1.157,593,1.011,594,1.157,595,1.011,596,1.157,597,1.011,598,1.157,599,1.011,600,1.157,601,1.011,602,1.157,603,1.011,604,1.126,605,1.157,609,1.974,610,1.974,727,2.525,988,5.156,1118,4.336,1268,1.731,1269,2.366,1270,1.731,1271,2.366,1272,2.366,1273,2.366,1274,1.731,1275,1.731,1276,2.366,1277,2.366,1278,1.731,1279,1.731,1280,1.731,1281,1.731,1282,1.731,1283,2.366,1284,2.292,1285,1.731,1286,2.366,1287,2.366,1288,1.731,1289,2.366,1290,1.731,1291,1.731,1292,1.731,1293,1.731,1294,2.897,1295,1.731,1296,1.731,1297,1.731,1298,1.731,1299,1.731,1300,1.731,1301,1.731,1302,1.731,1303,1.731,1304,1.731,1305,1.731,1306,1.731,1307,1.731,1308,1.731,1309,1.731,1310,1.731,1311,2.366,1312,1.731,1313,1.731,1314,1.731,1315,1.731,1316,1.731,1317,1.731,1318,1.731,1319,1.731,1320,1.731,1321,1.731,1322,1.731,1323,1.731,1324,1.731,1325,2.366,1326,1.731,1327,1.731,1328,1.731,1329,1.731,1330,1.731,1331,1.445,1332,1.731,1333,1.731,1334,1.731,1335,1.731,1336,1.731,1337,1.731,1338,1.731,1339,1.731,1492,4.336,1508,4.336,1517,4.336,2398,3.624,2650,3.174,2695,4.336,2696,4.336,3194,6.007,3198,5.738,3206,4.336,3446,4.687,3534,5.156,3698,5.339,3699,5.339,3700,3.773,3701,5.156,3702,5.156,3703,5.868,3704,5.868,3705,5.868,3706,5.156,3707,4.336,3708,7.184,3709,5.156,3710,5.868,3711,5.868,3712,4.687,3713,4.294,3714,4.294]],["title/interfaces/PageListInterface.html",[606,0.712,1134,3.197]],["body/interfaces/PageListInterface.html",[0,0.042,3,0.165,4,0.191,5,0.101,8,0.298,9,0.825,15,2.313,17,3.16,20,0.647,22,4.384,23,0.381,26,0.011,28,0.252,30,1.345,44,0.589,45,1.308,57,0.57,64,1.468,65,1.047,71,0.534,76,3.989,80,3.989,82,0.261,84,0.381,86,2.497,87,0.217,90,1.389,92,0.916,97,2.388,102,0.006,103,0.007,104,0.006,109,1.139,111,2.231,163,2.336,174,1.277,196,2.563,197,4.142,199,3.345,201,3.926,202,2.845,209,0.589,213,2.931,214,3.926,220,1.408,221,3.864,222,3.864,223,3.864,224,3.864,239,1.303,272,4.384,273,2.717,309,3.273,326,1.268,360,2.015,362,2.717,385,1.495,409,2.602,448,2.336,606,1.169,608,1.778,664,1.666,742,3.569,768,1.778,779,1.964,789,2.483,802,4.907,803,3.418,852,2.988,859,6.419,947,2.401,1092,3.575,1093,5.077,1094,3.864,1095,4.251,1096,3.345,1097,3.575,1098,2.602,1099,4.251,1100,4.251,1101,4.251,1102,4.251,1103,4.251,1104,3.864,1105,3.864,1106,4.251,1107,4.251,1113,3.926,1114,2.647,1115,3.345,1117,3.864,1118,4.697,1120,3.864,1121,3.153,1122,5.246,1125,4.251,1127,4.251,1128,4.251,1129,3.575,1131,4.251,1132,4.251,1134,5.246,1140,5.585,1141,3.864,1142,5.585,1143,5.585,1144,2.988,1145,2.988,1146,5.585,1147,5.585,1148,6.237,1149,6.879,1150,6.237,1151,5.585,1152,5.077,1153,5.077,1154,4.394,1155,5.585,1156,4.251,1157,4.251,1158,4.251,1159,4.251,1160,3.864,1161,4.251,1162,4.251,1163,4.251,1164,4.251,1165,4.251,1166,4.251,1167,4.251,1168,4.251,1169,4.251,1170,4.251,1432,3.864,3715,4.838]],["title/components/PageSectionComponent.html",[313,0.22,545,1.046]],["body/components/PageSectionComponent.html",[0,0.026,3,0.151,4,0.175,5,0.125,8,0.175,11,1.264,13,0.705,20,0.908,23,0.534,26,0.011,27,0.49,28,0.175,33,1.299,41,3.529,43,0.667,44,0.538,52,1.097,56,1.486,57,0.521,64,1.607,65,0.728,82,0.163,84,0.348,87,0.151,102,0.005,103,0.007,104,0.005,148,0.957,188,1.84,209,0.728,235,1.401,246,1.012,269,1.04,278,2.729,295,1.097,311,2.729,313,0.346,335,2.28,380,1.012,385,1.365,407,1.133,416,0.965,423,1.486,466,1.068,467,1.127,468,1.127,469,1.158,472,1.731,473,0.792,474,1.215,476,1.197,478,1.197,481,1.906,493,1.097,494,1.778,495,0.487,496,1.958,497,1.19,498,1.19,499,0.985,500,1.19,501,1.04,502,1.19,503,1.04,504,1.19,505,1.068,506,1.19,507,1.068,508,1.19,509,1.068,510,1.19,511,1.068,512,1.097,513,1.19,514,1.068,515,1.611,516,1.068,517,1.127,518,1.19,519,1.068,520,1.19,521,1.012,522,1.19,523,1.068,524,1.19,525,1.19,526,1.04,527,1.19,528,1.068,529,1.19,530,1.04,531,1.19,532,1.068,533,1.827,534,1.068,535,1.012,536,1.012,537,1.611,538,1.068,539,1.097,540,1.19,541,1.04,542,1.19,543,1.068,544,1.19,545,1.758,546,1.19,547,1.012,548,1.19,549,1.068,550,1.19,551,1.068,552,1.068,553,1.19,554,1.04,555,0.985,556,1.19,557,1.04,558,1.19,559,1.04,560,1.19,561,1.04,562,1.127,563,1.068,564,1.19,565,1.097,566,1.19,567,1.068,568,1.19,569,1.04,570,1.19,571,1.068,572,1.127,573,1.04,574,1.04,575,1.158,576,0.749,577,1.04,578,1.19,579,1.04,580,1.19,581,1.04,582,1.19,583,1.04,584,1.19,585,1.04,586,1.19,587,1.04,588,1.19,589,1.04,590,1.19,591,1.04,592,1.19,593,1.04,594,1.19,595,1.04,596,1.19,597,1.04,598,1.19,599,1.04,600,1.19,601,1.04,602,1.19,603,1.04,604,1.158,605,1.19,609,2.013,610,2.013,664,1.158,670,2.598,713,1.967,944,3.055,1098,2.376,1268,1.781,1269,2.412,1270,1.781,1271,2.412,1272,2.412,1273,2.412,1274,1.781,1275,1.781,1276,2.412,1277,2.412,1278,1.781,1279,1.781,1280,1.781,1281,1.781,1282,1.781,1283,2.412,1284,2.337,1285,1.781,1286,2.412,1287,2.412,1288,1.781,1289,2.412,1290,1.781,1291,1.781,1292,1.781,1293,1.781,1294,2.931,1295,1.781,1296,1.781,1297,1.781,1298,1.781,1299,1.781,1300,1.781,1301,1.781,1302,1.781,1303,1.781,1304,1.781,1305,1.781,1306,1.781,1307,1.781,1308,1.781,1309,1.781,1310,1.781,1311,2.412,1312,1.781,1313,1.781,1314,1.781,1315,1.781,1316,1.781,1317,1.781,1318,1.781,1319,1.781,1320,1.781,1321,1.781,1322,1.781,1323,1.781,1324,1.781,1325,2.412,1326,1.781,1327,1.781,1328,1.781,1329,1.781,1330,1.781,1331,1.487,1332,1.781,1333,1.781,1334,1.781,1335,1.781,1336,1.781,1337,1.781,1338,1.781,1339,1.781,2342,3.529,2600,2.598,2650,3.265,2695,4.421,2696,4.421,3073,3.882,3194,5.806,3448,4.689,3518,3.882,3698,5.806,3709,6.387,3712,4.778,3716,5.806,3717,3.882,3718,5.983,3719,5.983,3720,5.983,3721,5.983,3722,4.418,3723,4.418,3724,7.596,3725,4.418,3726,4.418,3727,4.418,3728,4.418,3729,3.529,3730,4.418,3731,4.418,3732,4.418]],["title/components/PasswordComponent.html",[313,0.22,547,0.991]],["body/components/PasswordComponent.html",[0,0.016,3,0.091,4,0.106,5,0.087,8,0.106,9,0.54,11,1.077,13,0.49,20,0.682,23,0.671,25,0.842,26,0.011,27,0.496,28,0.33,29,0.55,30,1.052,33,1.106,34,0.807,36,2.284,43,1.222,44,0.992,45,1.145,47,2.066,48,1.749,50,1.633,52,0.667,53,2.447,56,1.034,57,0.732,59,0.93,64,0.81,65,0.946,71,0.539,82,0.211,84,0.211,85,0.481,87,0.174,90,1.058,92,0.459,93,1.507,97,1.932,102,0.003,103,0.005,104,0.003,109,0.979,134,1.017,148,0.816,170,1.237,174,0.705,182,1.237,192,1.017,194,3.547,204,1.062,209,0.507,215,1.667,218,1.091,220,1.335,235,1.356,239,0.723,246,0.615,269,0.632,276,1.578,295,0.667,300,3.133,309,2.35,310,1.578,313,0.361,319,2.032,320,1.983,326,1.629,336,1.155,337,1.283,351,3.076,354,1.577,360,1.733,373,1.237,379,1.919,380,0.615,405,1.155,407,0.966,409,1.443,416,1.108,423,1.034,439,4.587,466,0.649,467,0.685,468,0.685,469,0.704,472,1.301,473,0.481,474,1.186,476,0.833,478,0.833,481,1.505,493,0.667,494,1.091,495,0.459,496,1.547,497,0.723,498,0.723,499,0.599,500,0.723,501,0.632,502,0.723,503,0.632,504,0.723,505,0.649,506,0.723,507,0.649,508,0.723,509,0.649,510,0.723,511,0.649,512,0.667,513,0.723,514,0.649,515,1.121,516,0.649,517,0.685,518,0.723,519,0.649,520,0.723,521,0.615,522,0.723,523,0.649,524,0.723,525,0.723,526,0.632,527,0.723,528,0.649,529,0.723,530,0.632,531,0.723,532,0.649,533,1.373,534,0.649,535,0.615,536,0.615,537,1.121,538,0.649,539,0.667,540,0.723,541,0.632,542,0.723,543,0.649,544,0.723,545,0.649,546,0.723,547,1.506,548,0.723,549,0.649,550,0.723,551,0.649,552,0.649,553,0.723,554,0.632,555,0.599,556,0.723,557,0.632,558,0.723,559,0.632,560,0.723,561,0.632,562,0.685,563,0.649,564,0.723,565,0.667,566,0.723,567,0.649,568,0.723,569,0.632,570,0.723,571,0.649,572,0.685,573,0.632,574,0.632,575,0.704,576,0.455,577,0.632,578,0.723,579,0.632,580,0.723,581,0.632,582,0.723,583,0.632,584,0.723,585,0.632,586,0.723,587,0.632,588,0.723,589,0.632,590,0.723,591,0.632,592,0.723,593,0.632,594,0.723,595,0.632,596,0.723,597,0.632,598,0.723,599,0.632,600,0.723,601,0.632,602,0.723,603,0.632,604,0.704,605,0.723,606,0.685,609,1.4,610,1.4,617,1.388,618,1.678,619,2.997,620,1.873,621,1.991,624,1.352,625,0.807,646,1.283,647,1.507,648,1.286,649,1.578,650,1.385,651,1.733,652,0.953,658,3.524,664,0.704,669,0.685,693,2.964,704,0.763,747,2.447,762,1.118,779,2.46,832,2.269,935,2.153,937,0.853,938,0.903,939,0.878,940,0.957,942,1.507,957,1.443,967,1.4,979,2.345,990,3.324,1114,1.118,1203,0.903,1204,0.986,1206,0.986,1211,3.148,1224,2.437,1226,2.631,1233,1.919,1235,1.749,1260,2.675,1268,1.082,1269,1.678,1270,1.082,1271,1.678,1272,1.678,1273,1.678,1274,1.082,1275,1.082,1276,1.678,1277,1.678,1278,1.082,1279,1.082,1280,1.082,1281,1.082,1282,1.082,1283,1.678,1284,1.626,1285,1.082,1286,1.678,1287,1.678,1288,1.082,1289,1.678,1290,1.082,1291,1.082,1292,1.082,1293,1.082,1294,2.316,1295,1.082,1296,1.082,1297,1.082,1298,1.082,1299,1.082,1300,1.082,1301,1.082,1302,1.082,1303,1.082,1304,1.082,1305,1.082,1306,1.082,1307,1.082,1308,1.082,1309,1.082,1310,1.082,1311,1.678,1312,1.082,1313,1.082,1314,1.082,1315,1.082,1316,1.082,1317,1.082,1318,1.082,1319,1.082,1320,1.082,1321,1.082,1322,1.082,1323,1.082,1324,1.082,1325,1.678,1326,1.082,1327,1.082,1328,1.082,1329,1.082,1330,1.082,1331,0.903,1332,1.082,1333,1.082,1334,1.082,1335,1.082,1336,1.082,1337,1.082,1338,1.082,1339,1.082,1343,1.385,1395,2.53,1396,1.733,1398,5.26,1456,1.507,1530,1.749,1602,4.587,2235,3.742,2257,1.578,2356,1.855,2370,3.657,2372,2.358,2376,3.324,2410,3.324,2691,3.742,2728,2.144,2778,3.97,2782,1.658,2792,3.076,2845,3.076,2967,1.855,3110,3.324,3212,3.524,3218,3.767,3262,1.983,3263,1.983,3275,3.657,3332,2.144,3526,4.587,3535,3.324,3617,1.983,3733,2.144,3734,5.778,3735,3.657,3736,3.324,3737,3.324,3738,3.657,3739,3.657,3740,3.324,3741,3.657,3742,5.461,3743,3.657,3744,3.657,3745,4.479,3746,4.479,3747,4.479,3748,4.479,3749,6.027,3750,4.479,3751,4.479,3752,4.162,3753,4.479,3754,4.479,3755,4.479,3756,4.479,3757,4.479,3758,4.162,3759,4.593,3760,2.684,3761,2.684,3762,2.684,3763,2.684,3764,3.076,3765,2.684,3766,2.684,3767,3.657,3768,2.684,3769,2.684,3770,2.337,3771,2.684,3772,2.684,3773,2.684,3774,2.684,3775,2.684,3776,2.684,3777,2.684,3778,2.684,3779,3.657,3780,3.657,3781,3.657,3782,3.657,3783,3.657,3784,2.684,3785,2.684,3786,3.657,3787,2.684,3788,2.684,3789,2.684,3790,3.324,3791,3.657,3792,2.684,3793,2.684,3794,2.684,3795,2.684,3796,2.684,3797,2.684,3798,2.684,3799,3.657,3800,4.071,3801,2.358,3802,1.749,3803,2.358,3804,2.358,3805,2.358,3806,2.358,3807,2.358,3808,4.479,3809,4.479,3810,3.657,3811,3.225,3812,2.358,3813,2.358,3814,2.358,3815,2.358,3816,2.358,3817,2.358,3818,1.855,3819,3.657,3820,2.358,3821,3.657,3822,2.358,3823,3.657,3824,2.358,3825,2.358,3826,3.657,3827,3.657,3828,2.358,3829,2.358,3830,2.358,3831,2.358,3832,2.358,3833,2.358,3834,2.144,3835,2.358,3836,2.358,3837,6.575,3838,4.162,3839,2.684,3840,4.162,3841,4.162,3842,5.046,3843,4.162,3844,4.162,3845,4.162,3846,4.162,3847,2.684]],["title/interfaces/PasswordErrorMsg.html",[606,0.712,3759,3.197]],["body/interfaces/PasswordErrorMsg.html",[0,0.024,3,0.135,4,0.157,5,0.083,8,0.157,9,0.719,11,1.172,20,0.53,26,0.011,28,0.253,29,0.725,30,1.024,33,0.859,34,1.667,36,2.684,43,0.966,44,0.675,45,1.18,47,2.752,48,2.579,50,1.97,53,2.327,59,1.371,71,0.548,82,0.255,84,0.312,85,0.709,87,0.218,90,1.022,92,0.611,93,2.222,97,1.866,102,0.005,103,0.007,104,0.005,109,0.931,134,1.499,148,0.887,170,1.825,174,0.939,182,1.825,192,1.499,204,1.01,209,0.482,215,1.813,218,1.037,220,1.175,235,0.615,239,1.066,276,2.327,300,2.387,309,2.557,310,2.327,313,0.386,319,1.294,320,2.925,326,1.454,336,1.703,337,1.892,351,2.925,354,1.499,360,1.648,373,1.825,379,1.825,405,1.703,409,2.982,416,1.185,472,1.415,474,0.53,476,0.792,478,0.792,481,1.037,495,0.436,547,1.27,606,0.913,608,1.454,609,1.866,610,1.866,617,1.677,618,1.77,619,3.26,620,2.038,621,2.167,624,1.305,625,1.189,646,1.892,647,2.222,648,1.223,649,2.327,650,2.043,651,1.648,652,0.907,658,2.736,664,1.037,669,0.913,704,1.126,747,2.327,762,2.309,779,2.257,832,1.762,935,1.371,942,2.222,979,2.474,990,3.161,1114,1.648,1206,2.038,1211,3.954,1224,1.892,1226,2.043,1233,1.825,1235,2.579,1260,2.755,1268,1.596,1269,2.236,1270,1.596,1271,2.236,1272,2.236,1273,2.236,1274,1.596,1275,1.596,1276,2.236,1277,2.236,1278,1.596,1279,1.596,1280,1.596,1281,1.596,1282,1.596,1283,2.236,1284,2.167,1285,1.596,1286,2.236,1287,2.236,1288,1.596,1289,2.236,1290,1.596,1291,1.596,1292,1.596,1293,1.596,1294,2.797,1295,1.596,1296,1.596,1297,1.596,1298,1.596,1299,1.596,1300,1.596,1301,1.596,1302,1.596,1303,1.596,1304,1.596,1305,1.596,1306,1.596,1307,1.596,1308,1.596,1309,1.596,1310,1.596,1311,2.236,1312,1.596,1313,1.596,1314,1.596,1315,1.596,1316,1.596,1317,1.596,1318,1.596,1319,1.596,1320,1.596,1321,1.596,1322,1.596,1323,1.596,1324,1.596,1325,2.236,1326,1.596,1327,1.596,1328,1.596,1329,1.596,1330,1.596,1331,1.332,1332,1.596,1333,1.596,1334,1.596,1335,1.596,1336,1.596,1337,1.596,1338,1.596,1339,1.596,1343,2.043,1395,3.177,1396,1.648,1398,5.302,1456,2.222,1530,2.579,2235,3.614,2257,3.26,2356,2.736,2376,4.429,2691,3.614,2728,3.161,2782,2.444,2792,2.925,2845,2.925,2967,2.736,3110,3.161,3212,2.736,3218,2.925,3262,2.925,3263,2.925,3332,3.161,3526,4.429,3535,3.161,3617,2.925,3733,3.161,3734,6.095,3735,3.477,3736,3.161,3737,3.161,3738,3.477,3739,3.477,3740,3.161,3741,3.477,3742,4.872,3743,3.477,3744,3.477,3745,3.477,3746,3.477,3747,3.477,3748,3.477,3749,3.477,3750,3.477,3751,3.477,3753,3.477,3754,3.477,3755,3.477,3756,3.477,3757,3.477,3759,5.127,3764,2.925,3767,3.477,3770,2.222,3779,3.477,3780,3.477,3781,3.477,3782,3.477,3783,3.477,3786,3.477,3790,3.161,3791,3.477,3799,4.872,3800,5.113,3801,3.477,3802,2.579,3803,3.477,3804,3.477,3805,3.477,3806,3.477,3807,3.477,3808,5.625,3809,6.652,3810,4.872,3811,4.365,3812,3.477,3813,3.477,3814,3.477,3815,3.477,3816,3.477,3817,3.477,3818,2.736,3819,4.872,3820,3.477,3821,4.872,3822,3.477,3823,4.872,3824,3.477,3825,3.477,3826,4.872,3827,4.872,3828,3.477,3829,3.477,3830,3.477,3831,3.477,3832,3.477,3833,3.477,3834,3.161,3835,3.477,3836,3.477]],["title/classes/Person.html",[0,0.026,2673,2.672]],["body/classes/Person.html",[0,0.039,2,1.81,3,0.143,4,0.166,5,0.088,8,0.166,9,0.75,13,0.682,23,0.668,25,0.848,26,0.011,27,0.604,28,0.319,29,0.554,30,0.925,43,1.127,44,0.805,57,0.984,65,0.952,71,0.544,82,0.243,87,0.143,90,0.775,92,0.823,102,0.005,103,0.007,104,0.005,107,2.871,109,0.99,117,2.575,161,3.4,163,2.126,174,1.12,192,2.191,220,1.465,238,3.572,326,1.516,335,3.675,354,2.191,407,0.796,448,1.545,536,1.325,624,1.757,648,1.299,652,1.325,664,1.102,669,0.692,692,1.872,693,2.985,713,3.17,742,3.248,754,2.597,767,3.107,768,1.545,776,1.5,789,2.26,818,4.186,850,3.11,851,3.999,852,3.572,880,3.695,912,3.248,931,3.11,932,3.4,933,2.871,934,3.923,935,2.003,937,1.336,938,1.415,939,1.375,940,1.5,1097,3.107,1114,2.408,1120,4.62,1121,3.769,1203,1.415,1204,1.545,1437,3.4,1469,4.389,2243,4.084,2262,4.186,2268,4.186,2271,4.192,2316,3.358,2325,4.62,2427,6.256,2429,4.765,2657,2.74,2658,3.769,2673,5.157,2691,2.74,2982,4.886,3206,4.274,3207,5.687,3213,5.28,3214,5.28,3215,5.28,3256,5.687,3258,6.162,3260,4.62,3848,3.695,3849,6.611,3850,7.466,3851,7.121,3852,7.121,3853,6.611,3854,6.611,3855,4.205,3856,4.205,3857,5.784,3858,4.205,3859,4.205,3860,4.205,3861,4.205,3862,4.205,3863,5.784,3864,5.784,3865,7.121,3866,4.205,3867,4.205,3868,4.205,3869,7.466,3870,6.611,3871,4.205,3872,4.205,3873,5.784,3874,4.205,3875,4.205,3876,5.784,3877,5.784,3878,4.205,3879,4.205,3880,3.769,3881,5.784,3882,5.082,3883,3.695,3884,4.205,3885,4.205,3886,4.205,3887,5.784,3888,7.121,3889,7.121,3890,7.121,3891,4.205,3892,4.205,3893,4.205,3894,4.205,3895,7.466,3896,4.205,3897,4.205,3898,4.205,3899,5.784,3900,5.784,3901,4.205,3902,5.784,3903,4.205,3904,3.695,3905,4.205,3906,4.205,3907,4.205,3908,4.205,3909,4.205,3910,4.205]],["title/components/PhnComponent.html",[313,0.22,549,1.046]],["body/components/PhnComponent.html",[0,0.021,3,0.12,4,0.14,5,0.107,8,0.14,9,0.663,10,2.021,11,1.079,13,0.602,20,0.683,23,0.681,25,1.128,26,0.011,27,0.583,28,0.339,29,0.763,30,1.118,33,1.109,37,1.336,43,1.184,44,1.059,45,0.941,50,1.491,52,0.876,56,1.268,57,0.886,63,3.774,64,0.994,65,1.328,71,0.526,82,0.242,84,0.278,85,0.632,87,0.12,92,0.389,102,0.004,103,0.006,104,0.004,117,2.274,148,0.817,163,1.877,178,1.517,209,0.622,220,1.184,235,1.383,246,0.808,269,0.83,295,0.876,313,0.306,319,2.638,326,2.158,380,0.808,400,3.229,407,1.137,416,1.069,423,1.268,466,0.852,467,0.9,468,0.9,469,0.924,473,0.632,474,1.203,476,1.022,478,1.022,493,0.876,494,1.339,495,0.389,496,1.773,497,0.95,498,0.95,499,0.786,500,0.95,501,0.83,502,0.95,503,0.83,504,0.95,505,0.852,506,0.95,507,0.852,508,0.95,509,0.852,510,0.95,511,0.852,512,0.876,513,0.95,514,0.852,515,1.376,516,0.852,517,0.9,518,0.95,519,0.852,520,0.95,521,0.808,522,0.95,523,0.852,524,0.95,525,0.95,526,0.83,527,0.95,528,0.852,529,0.95,530,0.83,531,0.95,532,0.852,533,1.617,534,0.852,535,0.808,536,0.808,537,1.376,538,0.852,539,0.876,540,0.95,541,0.83,542,0.95,543,0.852,544,0.95,545,0.852,546,0.95,547,0.808,548,0.95,549,1.592,550,0.95,551,0.852,552,0.852,553,0.95,554,0.83,555,0.786,556,0.95,557,0.83,558,0.95,559,0.83,560,0.95,561,0.83,562,0.9,563,0.852,564,0.95,565,0.876,566,0.95,567,0.852,568,0.95,569,0.83,570,0.95,571,0.852,572,0.9,573,0.83,574,0.83,575,0.924,576,0.597,577,0.83,578,0.95,579,0.83,580,0.95,581,0.83,582,0.95,583,0.83,584,0.95,585,0.83,586,0.95,587,0.83,588,0.95,589,0.83,590,0.95,591,0.83,592,0.95,593,0.83,594,0.95,595,0.83,596,0.95,597,0.83,598,0.95,599,0.83,600,0.95,601,0.83,602,0.95,603,0.83,604,0.924,605,0.95,617,1.452,618,1.918,622,2.08,624,1.55,625,1.06,648,1.09,652,1.17,664,0.924,666,2.741,669,0.841,701,2.142,702,1.822,703,2.142,704,1.003,713,1.57,732,2.98,776,1.258,824,2.275,825,1.336,826,1.822,827,2.599,828,1.336,829,1.822,830,2.441,831,1.685,832,2.274,898,2.178,906,1.09,935,1.769,937,1.121,938,1.186,939,1.153,940,1.258,967,1.718,979,2.348,998,2.5,999,2.5,1017,1.517,1078,2.535,1174,3.222,1177,1.75,1178,3.111,1200,1.75,1203,1.186,1204,1.296,1205,2.274,1208,1.626,1219,3.372,1220,3.372,1221,3.003,1224,2.871,1225,3.229,1226,3.099,1227,2.98,1233,2.355,1242,2.178,1244,2.178,1265,2.073,1267,2.073,1342,1.896,1343,1.82,1344,1.82,1396,2.127,1463,3.155,1621,3.774,2424,3.099,2688,2.073,2828,3.774,3540,4.487,3911,3.098,3912,5.554,3913,5.107,3914,5.107,3915,5.107,3916,3.526,3917,3.526,3918,5.107,3919,3.526,3920,3.526,3921,5.107,3922,5.785,3923,3.526,3924,5.107,3925,3.526,3926,3.526,3927,3.526,3928,3.526,3929,3.526,3930,3.526,3931,3.526,3932,3.526,3933,3.526,3934,3.526,3935,3.526,3936,3.526,3937,3.526,3938,2.606,3939,6.988,3940,2.606,3941,2.437,3942,2.816,3943,4.487,3944,4.079]],["title/components/PhoneNumberComponent.html",[313,0.22,551,1.046]],["body/components/PhoneNumberComponent.html",[0,0.019,3,0.111,4,0.129,5,0.101,8,0.129,9,0.626,10,1.624,11,1.02,13,0.569,20,0.646,23,0.679,25,1.075,26,0.011,27,0.566,28,0.337,29,0.749,30,1.134,33,1.048,36,2.11,37,1.236,43,1.198,44,1.037,45,1.058,47,2.395,50,1.91,52,0.811,56,1.199,57,0.835,59,1.13,64,0.94,65,1.24,71,0.523,82,0.234,84,0.257,85,0.865,87,0.164,90,1.058,92,0.36,102,0.004,103,0.006,104,0.004,109,0.768,117,2.149,134,1.236,138,2.11,148,0.522,163,1.774,174,0.553,188,2.01,192,1.236,204,1.231,209,0.588,215,1.578,218,1.265,220,1.407,235,1.376,239,1.3,244,2.256,246,0.748,269,0.768,295,0.811,298,2.606,300,1.404,313,0.323,319,2.515,326,2.146,354,1.236,380,0.748,385,1.008,407,1.088,416,1.008,423,1.199,466,0.789,467,0.833,468,0.833,469,0.855,473,0.585,474,1.199,476,0.966,478,0.966,493,0.811,494,1.265,495,0.36,496,1.709,497,0.879,498,0.879,499,0.728,500,0.879,501,0.768,502,0.879,503,0.768,504,0.879,505,0.789,506,0.879,507,0.789,508,0.879,509,0.789,510,0.879,511,0.789,512,0.811,513,0.879,514,0.789,515,1.3,516,0.789,517,0.833,518,0.879,519,0.789,520,0.879,521,0.748,522,0.879,523,0.789,524,0.879,525,0.879,526,0.768,527,0.879,528,0.789,529,0.879,530,0.768,531,0.879,532,0.789,533,1.547,534,0.789,535,0.748,536,0.748,537,1.3,538,0.789,539,0.811,540,0.879,541,0.768,542,0.879,543,0.789,544,0.879,545,0.789,546,0.879,547,0.748,548,0.879,549,0.789,550,0.879,551,1.714,552,1.859,553,0.879,554,0.768,555,0.728,556,0.879,557,0.768,558,0.879,559,0.768,560,0.879,561,0.768,562,0.833,563,0.789,564,0.879,565,0.811,566,0.879,567,0.789,568,0.879,569,0.768,570,0.879,571,0.789,572,0.833,573,0.768,574,0.768,575,0.855,576,0.553,577,0.768,578,0.879,579,0.768,580,0.879,581,0.768,582,0.879,583,0.768,584,0.879,585,0.768,586,0.879,587,0.768,588,0.879,589,0.768,590,0.879,591,0.768,592,0.879,593,0.768,594,0.879,595,0.768,596,0.879,597,0.768,598,0.879,599,0.768,600,0.879,601,0.768,602,0.879,603,0.768,604,0.855,605,0.879,617,1.167,618,1.619,620,2.11,621,2.244,622,2.198,623,1.56,624,0.768,648,1.008,651,2.01,652,1.106,669,0.537,692,2.825,701,2.048,702,1.164,703,2.048,704,0.928,717,2.964,732,2.85,744,2.127,756,1.832,772,1.919,824,1.828,825,1.828,826,1.164,827,2.263,828,1.828,829,1.721,857,4.244,909,2.867,917,2.867,935,2.346,937,1.037,938,1.098,939,1.067,940,1.164,967,1.624,987,2.127,998,2.01,999,2.01,1017,2.077,1098,1.755,1114,2.01,1174,3.122,1177,1.62,1178,3.015,1182,2.016,1200,1.62,1203,2.588,1204,1.199,1205,2.149,1208,1.505,1225,2.595,1227,2.395,1233,2.225,1256,1.832,1391,1.919,1532,2.606,2424,2.964,2516,2.606,2796,2.71,3033,2.412,3642,5.864,3644,4.24,3645,3.855,3648,2.867,3650,2.606,3938,2.412,3940,2.412,3945,6.675,3946,6.675,3947,2.867,3948,4.826,3949,3.566,3950,4.826,3951,4.826,3952,5.743,3953,4.826,3954,5.046,3955,5.575,3956,5.046,3957,5.743,3958,4.826,3959,3.263,3960,3.855,3961,3.263,3962,4.826,3963,3.263,3964,3.263,3965,3.263,3966,3.263,3967,3.263,3968,3.263,3969,3.263,3970,3.263,3971,3.263,3972,3.263,3973,4.826,3974,3.263,3975,3.263,3976,3.263,3977,3.263,3978,3.263,3979,3.263,3980,4.826,3981,4.826,3982,4.826,3983,3.263,3984,3.263,3985,3.263,3986,3.263,3987,3.263,3988,4.24,3989,3.263,3990,2.867,3991,2.867,3992,3.263,3993,3.263,3994,3.263,3995,4.826,3996,3.263,3997,4.24,3998,3.263,3999,3.263,4000,2.867,4001,6.345,4002,3.263,4003,4.826,4004,3.263,4005,3.263,4006,2.867]],["title/components/PostalCodeComponent.html",[313,0.22,554,1.018]],["body/components/PostalCodeComponent.html",[0,0.018,3,0.1,4,0.117,5,0.093,8,0.117,9,0.58,10,1.817,11,0.944,13,0.526,20,0.598,23,0.679,25,1.096,26,0.011,27,0.568,28,0.336,29,0.742,30,1.134,33,0.97,37,1.115,43,1.17,44,1.052,45,0.823,50,1.609,52,0.731,56,1.11,57,0.899,64,0.87,65,1.309,71,0.526,82,0.239,84,0.232,85,0.528,87,0.1,90,0.823,92,0.493,102,0.003,103,0.005,104,0.003,117,1.989,148,0.864,178,1.267,182,2.489,209,0.544,220,1.098,235,1.366,246,0.674,269,0.693,295,0.731,300,1.267,313,0.275,319,2.445,326,1.58,380,0.674,400,2.903,407,1.023,416,1.064,423,1.11,466,0.712,467,0.751,468,0.751,469,0.772,472,1.378,473,0.528,474,1.192,476,0.894,478,0.894,481,1.58,493,0.731,494,1.171,495,0.325,496,1.624,497,0.793,498,0.793,499,0.657,500,0.793,501,0.693,502,0.793,503,0.693,504,0.793,505,0.712,506,0.793,507,0.712,508,0.793,509,0.712,510,0.793,511,0.712,512,0.731,513,0.793,514,0.712,515,1.203,516,0.712,517,0.751,518,0.793,519,0.712,520,0.793,521,0.674,522,0.793,523,0.712,524,0.793,525,0.793,526,0.693,527,0.793,528,0.712,529,0.793,530,0.693,531,0.793,532,0.712,533,1.454,534,0.712,535,0.674,536,0.674,537,1.203,538,0.712,539,0.731,540,0.793,541,0.693,542,0.793,543,0.712,544,0.793,545,0.712,546,0.793,547,0.674,548,0.793,549,0.712,550,0.793,551,0.712,552,0.712,553,0.793,554,1.419,555,1.728,556,0.793,557,0.693,558,0.793,559,0.693,560,0.793,561,0.693,562,0.751,563,0.712,564,0.793,565,0.731,566,0.793,567,0.712,568,0.793,569,0.693,570,0.793,571,0.712,572,0.751,573,0.693,574,0.693,575,0.772,576,0.499,577,0.693,578,0.793,579,0.693,580,0.793,581,0.693,582,0.793,583,0.693,584,0.793,585,0.693,586,0.793,587,0.693,588,0.793,589,0.693,590,0.793,591,0.693,592,0.793,593,0.693,594,0.793,595,0.693,596,0.793,597,0.693,598,0.793,599,0.693,600,0.793,601,0.693,602,0.793,603,0.693,604,0.772,605,0.793,609,1.503,610,1.503,616,3.518,617,1.305,618,1.809,622,1.87,624,1.419,625,0.885,648,0.91,652,1.024,664,1.171,666,2.698,669,0.736,695,2.936,700,2.627,701,1.926,702,1.594,703,1.926,704,0.837,713,1.311,727,1.923,732,2.68,744,2.911,776,1.05,779,1.668,789,1.15,824,2.045,825,1.115,826,1.594,827,2.433,828,1.115,829,1.594,830,2.136,831,1.407,832,1.989,898,1.818,906,0.91,935,1.547,937,0.936,938,0.991,939,0.963,940,1.05,967,1.503,979,2.15,998,2.248,999,2.248,1017,1.267,1078,2.217,1098,2.402,1174,2.988,1177,1.461,1178,2.885,1200,1.461,1203,0.991,1204,1.082,1205,1.989,1208,1.357,1218,3.335,1219,3.032,1220,3.385,1221,2.627,1222,3.723,1223,3.624,1224,2.581,1225,3.485,1226,2.787,1227,2.68,1233,2.06,1242,1.818,1244,1.818,1254,2.402,1255,2.911,1256,3.385,1257,2.06,1258,3.568,1260,1.923,1265,1.731,1267,1.731,1268,1.187,1269,1.801,1270,1.187,1271,1.801,1272,1.801,1273,1.801,1274,1.187,1275,1.187,1276,1.801,1277,1.801,1278,1.187,1279,1.187,1280,1.187,1281,1.187,1282,1.187,1283,1.801,1284,1.745,1285,1.187,1286,1.801,1287,1.801,1288,1.187,1289,1.801,1290,1.187,1291,1.187,1292,1.187,1293,1.187,1294,2.43,1295,1.187,1296,1.187,1297,1.187,1298,1.187,1299,1.187,1300,1.187,1301,1.187,1302,1.187,1303,1.187,1304,1.187,1305,1.187,1306,1.187,1307,1.187,1308,1.187,1309,1.187,1310,1.187,1311,1.801,1312,1.187,1313,1.187,1314,1.187,1315,1.187,1316,1.187,1317,1.187,1318,1.187,1319,1.187,1320,1.187,1321,1.187,1322,1.187,1323,1.187,1324,1.187,1325,1.801,1326,1.187,1327,1.187,1328,1.187,1329,1.187,1330,1.187,1331,0.991,1332,1.187,1333,1.187,1334,1.187,1335,1.187,1336,1.187,1337,1.187,1338,1.187,1339,1.187,1340,2.176,1341,1.818,1342,1.583,1343,1.519,1344,1.519,1345,2.035,1346,2.035,1347,1.818,1348,2.035,1349,3.302,1350,3.568,1396,1.86,1734,3.089,2424,2.306,2429,2.759,2688,1.731,3217,3.302,3245,3.928,3645,3.568,3650,3.568,3659,2.587,3938,2.176,3940,2.176,3941,2.035,3942,2.351,3954,4.744,4007,5.962,4008,6.887,4009,2.587,4010,4.467,4011,4.467,4012,4.467,4013,2.944,4014,2.944,4015,2.944,4016,2.944,4017,4.467,4018,2.944,4019,2.944,4020,4.467,4021,4.467,4022,2.944,4023,4.467,4024,2.944,4025,2.944,4026,2.944,4027,2.944,4028,2.944,4029,2.944,4030,2.944,4031,2.944,4032,2.944,4033,2.944,4034,2.944,4035,2.944,4036,2.944,4037,4.467,4038,3.568,4039,3.302,4040,2.944,4041,2.944,4042,2.944,4043,2.944,4044,7.088,4045,4.467,4046,4.467]],["title/components/ProvinceComponent.html",[313,0.22,557,1.018]],["body/components/ProvinceComponent.html",[0,0.017,3,0.098,4,0.114,5,0.092,8,0.114,9,0.571,10,1.794,11,0.93,13,0.518,20,0.589,23,0.678,25,1.063,26,0.011,27,0.558,28,0.336,29,0.726,30,1.19,33,0.955,37,1.093,43,1.181,44,1.045,45,1.099,50,1.748,52,0.717,56,1.093,57,0.876,64,0.857,65,1.303,71,0.522,82,0.236,84,0.227,85,0.517,87,0.219,90,0.811,92,0.485,102,0.003,103,0.005,104,0.003,109,1.883,117,1.959,148,0.704,174,0.903,178,1.242,209,0.536,220,1.088,235,1.364,246,0.661,269,0.679,295,0.717,313,0.272,319,2.431,378,2.271,380,0.661,382,3.97,383,3.555,400,2.868,407,1.01,416,1.097,423,1.093,466,0.698,467,0.736,468,0.736,469,0.756,472,1.361,473,0.517,474,1.191,476,0.88,478,0.88,481,1.564,493,0.717,494,1.153,495,0.318,496,1.607,497,0.777,498,0.777,499,0.643,500,0.777,501,0.679,502,0.777,503,0.679,504,0.777,505,0.698,506,0.777,507,0.698,508,0.777,509,0.698,510,0.777,511,0.698,512,0.717,513,0.777,514,0.698,515,1.185,516,0.698,517,0.736,518,0.777,519,0.698,520,0.777,521,0.661,522,0.777,523,0.698,524,0.777,525,0.777,526,0.679,527,0.777,528,0.698,529,0.777,530,0.679,531,0.777,532,0.698,533,1.436,534,0.698,535,0.661,536,0.661,537,1.185,538,0.698,539,0.717,540,0.777,541,0.679,542,0.777,543,0.698,544,0.777,545,0.698,546,0.777,547,0.661,548,0.777,549,0.698,550,0.777,551,0.698,552,0.698,553,0.777,554,0.679,555,0.643,556,0.777,557,1.404,558,0.777,559,0.679,560,0.777,561,0.679,562,0.736,563,0.698,564,0.777,565,0.717,566,0.777,567,0.698,568,0.777,569,0.679,570,0.777,571,0.698,572,0.736,573,0.679,574,0.679,575,0.756,576,0.489,577,0.679,578,0.777,579,0.679,580,0.777,581,0.679,582,0.777,583,0.679,584,0.777,585,0.679,586,0.777,587,0.679,588,0.777,589,0.679,590,0.777,591,0.679,592,0.777,593,0.679,594,0.777,595,0.679,596,0.777,597,0.679,598,0.777,599,0.679,600,0.777,601,0.679,602,0.777,603,0.679,604,0.756,605,0.777,606,0.475,609,1.48,610,1.48,617,1.289,618,1.796,622,1.847,624,1.404,625,0.867,631,4.006,634,1.88,635,4.348,636,1.782,637,3.475,648,0.892,652,1.008,664,0.756,666,2.674,669,0.878,700,2.587,701,1.902,702,1.569,703,1.902,704,0.821,727,1.894,776,1.902,779,1.648,789,1.127,791,3.042,793,1.995,796,1.995,799,1.995,813,2.103,824,2.02,825,1.093,826,1.569,827,2.414,828,1.093,829,1.569,830,2.103,831,1.379,832,1.959,906,0.892,914,5.13,935,1.524,937,0.917,938,0.971,939,0.943,940,1.029,959,2.718,967,1.48,979,2.128,998,2.221,999,2.221,1017,1.242,1078,2.184,1174,2.961,1177,1.432,1178,2.86,1200,1.432,1203,0.971,1204,1.06,1205,1.959,1208,1.33,1218,3.294,1219,2.995,1220,2.995,1221,2.587,1222,3.685,1223,3.602,1224,2.549,1225,2.868,1226,2.752,1227,2.647,1233,2.029,1242,1.782,1244,1.782,1254,2.366,1255,2.867,1256,2.471,1257,2.029,1259,2.867,1260,2.567,1261,3.042,1262,3.042,1263,3.042,1265,1.696,1267,1.696,1268,1.163,1269,1.774,1270,1.163,1271,1.774,1272,1.774,1273,1.774,1274,1.163,1275,1.163,1276,1.774,1277,1.774,1278,1.163,1279,1.163,1280,1.163,1281,1.163,1282,1.163,1283,1.774,1284,1.719,1285,1.163,1286,1.774,1287,1.774,1288,1.163,1289,1.774,1290,1.163,1291,1.163,1292,1.163,1293,1.163,1294,2.405,1295,1.163,1296,1.163,1297,1.163,1298,1.163,1299,1.163,1300,1.163,1301,1.163,1302,1.163,1303,1.163,1304,1.163,1305,1.163,1306,1.774,1307,1.163,1308,1.163,1309,1.163,1310,1.163,1311,1.774,1312,1.163,1313,1.163,1314,1.163,1315,1.163,1316,1.163,1317,1.163,1318,1.163,1319,1.163,1320,1.163,1321,1.163,1322,1.163,1323,1.163,1324,1.163,1325,1.774,1326,1.163,1327,1.163,1328,1.163,1329,1.163,1330,1.163,1331,0.971,1332,1.163,1333,1.163,1334,1.163,1335,1.163,1336,1.163,1337,1.163,1338,1.163,1339,1.163,1340,2.132,1341,1.782,1342,1.552,1343,1.489,1344,1.489,1345,1.995,1346,1.995,1347,1.782,1348,1.995,1349,3.251,1350,3.514,1730,2.304,1734,1.995,1839,2.304,2218,4.259,2716,3.042,2902,2.304,4039,2.132,4047,2.132,4048,3.866,4049,3.866,4050,4.4,4051,2.885,4052,2.885,4053,2.885,4054,3.866,4055,2.885,4056,2.885,4057,2.885,4058,2.885,4059,2.885,4060,2.885,4061,4.4,4062,2.885,4063,2.885,4064,2.885,4065,2.885,4066,2.885,4067,2.885,4068,2.885,4069,2.885,4070,2.885,4071,2.885,4072,2.885,4073,2.885,4074,2.885,4075,2.885,4076,2.885,4077,6.546,4078,2.535,4079,2.535,4080,2.535,4081,2.535,4082,2.535,4083,2.535,4084,2.535,4085,2.535,4086,2.535,4087,2.535,4088,2.535,4089,2.535,4090,2.535,4091,2.535,4092,2.535,4093,2.535,4094,2.535,4095,2.535,4096,2.535,4097,2.535,4098,2.535,4099,2.535,4100,2.535,4101,2.535,4102,2.132,4103,2.535]],["title/interfaces/ProvinceList.html",[606,0.712,635,2.672]],["body/interfaces/ProvinceList.html",[0,0.025,3,0.141,4,0.164,5,0.086,8,0.164,9,0.742,10,1.392,20,0.554,26,0.011,28,0.259,29,0.548,30,1.131,44,1.003,45,1.054,50,1.628,65,1.164,71,0.541,82,0.273,84,0.326,85,0.741,87,0.253,90,0.762,92,0.631,102,0.005,103,0.007,104,0.005,109,2.032,148,0.662,174,1.11,178,1.781,209,0.504,220,0.701,235,0.643,313,0.291,319,1.353,378,2.135,382,4.285,383,3.381,400,2.225,416,1.184,472,1.459,474,0.554,476,0.828,478,0.828,481,1.085,557,0.974,606,0.681,608,1.52,609,1.924,610,1.924,617,1.585,618,1.894,622,1.981,624,1.346,625,1.243,631,4.246,634,2.696,635,4.585,636,2.555,637,3.727,652,0.948,664,1.085,666,2.945,669,1.079,700,2.432,701,1.476,702,2.04,703,1.476,704,1.177,727,1.781,776,2.338,779,1.279,789,1.616,791,3.954,793,2.86,796,2.86,799,2.86,813,2.734,824,1.567,826,2.04,827,2.522,829,2.04,830,1.978,831,1.978,832,1.842,906,1.279,914,5.929,959,2.555,979,2.338,998,1.723,999,1.723,1078,2.839,1174,2.637,1178,2.546,1205,2.546,1208,1.908,1218,2.555,1219,2.323,1220,2.323,1222,2.555,1223,3.51,1224,1.978,1225,2.225,1226,2.135,1227,2.053,1233,1.908,1254,2.225,1255,2.696,1256,2.323,1257,1.908,1259,2.696,1260,2.461,1261,2.86,1262,2.86,1263,2.86,1268,1.668,1269,2.306,1270,1.668,1271,2.306,1272,2.306,1273,2.306,1274,1.668,1275,1.668,1276,2.306,1277,2.306,1278,1.668,1279,1.668,1280,1.668,1281,1.668,1282,1.668,1283,2.306,1284,2.235,1285,1.668,1286,2.306,1287,2.306,1288,1.668,1289,2.306,1290,1.668,1291,1.668,1292,1.668,1293,1.668,1294,2.851,1295,1.668,1296,1.668,1297,1.668,1298,1.668,1299,1.668,1300,1.668,1301,1.668,1302,1.668,1303,1.668,1304,1.668,1305,1.668,1306,2.306,1307,1.668,1308,1.668,1309,1.668,1310,1.668,1311,2.306,1312,1.668,1313,1.668,1314,1.668,1315,1.668,1316,1.668,1317,1.668,1318,1.668,1319,1.668,1320,1.668,1321,1.668,1322,1.668,1323,1.668,1324,1.668,1325,2.306,1326,1.668,1327,1.668,1328,1.668,1329,1.668,1330,1.668,1331,1.392,1332,1.668,1333,1.668,1334,1.668,1335,1.668,1336,1.668,1337,1.668,1338,1.668,1339,1.668,1340,3.057,1341,2.555,1342,2.225,1343,2.135,1344,2.135,1345,2.86,1346,2.86,1347,2.555,1348,2.86,1730,3.304,1734,2.86,1839,3.304,2218,3.304,2716,2.86,2902,3.304,4039,3.057,4047,3.057,4048,3.635,4049,3.635,4054,3.635,4077,6.966,4078,3.635,4079,3.635,4080,3.635,4081,3.635,4082,3.635,4083,3.635,4084,3.635,4085,3.635,4086,3.635,4087,3.635,4088,3.635,4089,3.635,4090,3.635,4091,3.635,4092,3.635,4093,3.635,4094,3.635,4095,3.635,4096,3.635,4097,3.635,4098,3.635,4099,3.635,4100,3.635,4101,3.635,4102,3.057,4103,3.635]],["title/components/RadioComponent.html",[313,0.22,559,1.018]],["body/components/RadioComponent.html",[0,0.019,3,0.11,4,0.128,5,0.1,8,0.128,9,0.62,10,1.919,11,1.011,13,0.564,20,0.64,23,0.679,25,1.071,26,0.011,27,0.564,28,0.337,29,0.734,30,1.169,33,1.038,34,1.438,37,1.221,43,1.177,44,1.061,45,1.162,50,0.801,51,3.307,52,0.801,56,1.188,57,0.861,64,0.931,65,1.303,71,0.528,81,2.686,82,0.21,84,0.254,85,0.578,87,0.163,90,0.881,92,0.355,102,0.004,103,0.006,104,0.004,109,0.759,117,2.13,148,0.516,163,1.758,209,0.582,215,1.564,220,1.341,235,1.375,239,1.288,246,0.739,269,0.759,274,2.374,295,0.801,302,3.896,313,0.291,319,2.757,326,1.254,380,0.739,407,1.08,416,1.09,421,1.487,423,1.188,466,0.78,467,0.823,468,0.823,469,0.845,472,1.455,473,0.578,474,1.198,476,0.957,478,0.957,481,1.654,493,0.801,494,1.254,495,0.355,496,1.699,497,0.868,498,0.868,499,0.719,500,0.868,501,0.759,502,0.868,503,0.759,504,0.868,505,0.78,506,0.868,507,0.78,508,0.868,509,0.78,510,0.868,511,0.78,512,0.801,513,0.868,514,0.78,515,1.288,516,0.78,517,0.823,518,0.868,519,0.78,520,0.868,521,0.739,522,0.868,523,0.78,524,0.868,525,0.868,526,0.759,527,0.868,528,0.78,529,0.868,530,0.759,531,0.868,532,0.78,533,1.536,534,0.78,535,0.739,536,0.739,537,1.288,538,0.78,539,0.801,540,0.868,541,0.759,542,0.868,543,0.78,544,0.868,545,0.78,546,0.868,547,0.739,548,0.868,549,0.78,550,0.868,551,0.78,552,0.78,553,0.868,554,0.759,555,0.719,556,0.868,557,0.759,558,0.868,559,1.661,560,0.868,561,0.759,562,0.823,563,0.78,564,0.868,565,0.801,566,0.868,567,0.78,568,0.868,569,0.759,570,0.868,571,0.78,572,0.823,573,0.759,574,0.759,575,0.845,576,0.546,577,0.759,578,0.868,579,0.759,580,0.868,581,0.759,582,0.868,583,0.759,584,0.868,585,0.759,586,0.868,587,0.759,588,0.868,589,0.759,590,0.868,591,0.759,592,0.868,593,0.759,594,0.868,595,0.759,596,0.868,597,0.759,598,0.868,599,0.759,600,0.868,601,0.759,602,0.868,603,0.759,604,0.845,605,0.868,617,1.379,618,1.864,622,1.975,624,1.485,625,0.969,648,0.996,652,1.096,656,2.686,664,0.845,666,2.374,669,0.788,686,3.896,693,2.469,701,2.034,702,1.15,703,2.034,704,0.917,713,3.253,762,1.992,773,2.572,824,1.812,825,1.812,826,1.15,827,2.25,828,1.812,829,1.706,830,2.287,831,1.541,832,2.13,905,2.686,906,1.762,935,1.657,937,1.025,938,1.085,939,1.054,940,1.15,944,3.307,948,3.82,967,1.609,994,5.543,998,1.992,999,1.992,1001,4.554,1002,3.522,1017,2.059,1174,3.107,1175,6.42,1177,1.6,1178,3,1200,1.6,1203,1.085,1204,1.185,1205,2.13,1208,1.487,1209,4.203,1210,4.203,1211,2.954,1221,2.812,1227,2.83,1265,1.896,1267,1.896,1545,3.307,1603,2.383,2429,2.954,2712,3.307,2715,5.92,3033,3.535,3446,3.82,3512,3.82,3944,3.82,4006,4.203,4104,2.833,4105,7.039,4106,4.783,4107,4.203,4108,4.783,4109,6.308,4110,4.203,4111,4.783,4112,7.058,4113,4.783,4114,7.058,4115,4.783,4116,4.783,4117,6.738,4118,4.783,4119,4.783,4120,4.783,4121,6.308,4122,4.783,4123,4.783,4124,4.783,4125,4.783,4126,5.702,4127,4.783,4128,5.01,4129,4.783,4130,3.224,4131,4.203,4132,3.224,4133,3.224,4134,3.224,4135,3.224,4136,3.224,4137,3.224,4138,4.783,4139,3.224,4140,3.224,4141,3.224,4142,3.224,4143,3.224,4144,3.224,4145,4.783,4146,3.224,4147,3.224,4148,3.224,4149,3.224,4150,3.224,4151,3.224,4152,3.224,4153,4.783,4154,3.224,4155,3.224,4156,3.224,4157,4.783]],["title/interfaces/ReadOnlyFields.html",[606,0.712,640,2.99]],["body/interfaces/ReadOnlyFields.html",[0,0.018,3,0.104,4,0.121,5,0.064,8,0.121,9,0.596,10,1.029,20,0.409,26,0.011,27,0.221,28,0.261,29,0.737,30,1.371,34,1.381,36,2.03,43,0.694,44,0.975,45,1.49,47,1.517,59,1.059,65,0.91,71,0.543,76,1.517,82,0.264,84,0.241,85,0.548,87,0.209,90,1.132,92,0.849,93,1.716,102,0.004,103,0.005,104,0.004,134,1.158,138,1.123,170,2.119,174,1.172,178,1.316,182,1.409,188,2.3,192,2.093,203,1.716,204,1.173,209,0.372,217,0.919,218,1.205,235,0.475,239,0.823,259,2.259,273,1.716,300,1.316,302,1.888,310,2.702,313,0.313,326,1.205,336,1.316,337,1.461,354,1.158,364,1.716,373,1.409,378,1.578,382,4.153,383,3.829,385,1.707,395,3.6,396,1.578,401,1.888,405,1.316,416,1.16,421,1.409,472,1.173,474,0.409,476,0.612,478,0.612,481,0.801,499,1.025,536,0.7,539,1.142,555,1.025,606,0.91,607,3.819,608,1.123,609,1.547,610,1.547,611,2.259,612,3.397,613,3.671,614,3.671,615,4.14,616,4.925,617,1.111,618,1.41,619,2.702,620,2.03,621,1.796,622,1.592,623,2.197,624,1.082,625,0.919,626,2.581,627,2.259,628,4.34,629,2.259,630,3.6,631,3.269,632,2.113,633,3.178,634,1.992,635,3.795,636,3.412,637,2.995,638,2.259,639,4.004,640,4.784,641,2.113,642,2.259,643,2.442,644,2.442,645,2.442,646,1.461,647,1.716,648,0.945,649,1.797,650,1.578,651,1.273,652,0.7,653,3.397,654,2.281,655,3.671,656,2.581,657,2.702,658,2.113,659,2.442,660,2.442,661,2.259,662,3.397,663,1.992,664,1.814,665,2.442,666,2.743,667,5.734,668,2.259,669,0.503,670,1.797,671,2.259,672,2.259,673,2.702,674,2.442,675,2.259,676,2.442,677,4.069,678,2.259,679,2.442,680,2.259,681,2.113,682,3.671,683,2.442,684,2.442,685,3.671,686,2.839,687,2.442,688,2.442,689,2.442,690,2.442,691,2.442,692,2.459,693,2.851,694,1.992,695,2.835,696,2.442,697,2.259,698,2.442,699,4.247,700,1.797,701,1.09,702,1.64,703,1.09,704,0.869,705,2.259,706,2.442,707,2.442,708,3.671,709,6.149,710,3.671,711,2.442,712,2.995,713,2.459,714,3.671,715,6.036,716,4.412,717,1.578,718,2.259,719,2.113,720,2.442,721,2.442,722,2.442,723,2.442,724,2.442,725,2.442,726,4.907,727,1.316,728,2.442,729,2.442,730,3.671,731,2.995,732,1.517,733,3.671,734,5.261,735,5.527,736,5.261,737,2.442,738,2.442,739,3.671,740,2.442,741,3.671,742,2.581,743,2.442,744,1.992,745,2.442,746,2.442,747,1.797,748,2.442,749,2.442,750,3.6,751,2.442,752,2.442,753,2.442,754,2.282,755,3.397,756,2.581,757,3.671,758,3.671,759,3.671,760,3.671,761,2.442,762,1.273,763,2.442,764,2.442,765,4.082,766,2.113,767,2.259,768,1.123,769,2.442,770,2.442,771,2.442,772,1.797,773,1.644,774,2.442,775,2.442,776,1.09,777,2.442,778,2.113,779,2.283,780,2.442,781,4.907,782,2.442,783,2.442,784,2.442,785,2.442,786,2.442,787,4.082,788,2.113,789,2.574,790,2.442,791,4.247,792,3.671,793,3.178,794,3.671,795,4.412,796,2.113,797,2.442,798,2.442,799,2.113,800,1.888,801,1.797,802,2.113,803,1.644,804,2.442,805,2.442,806,2.442,807,3.397,808,2.442,809,2.442,810,2.259,811,2.442,812,2.259,813,2.197,814,2.442,815,2.442,816,2.259,817,2.442,818,1.797,819,2.442,820,2.259,821,2.259,822,2.442,823,2.442,824,1.158,825,1.158,826,1.09,827,1.64,828,1.158,829,1.09,830,1.461,831,2.641,832,1.361,833,2.442,834,2.442,835,2.442,836,2.442,837,2.442,838,2.442,839,2.442,840,2.442,841,2.442,842,2.442,843,2.442,844,2.259,845,2.442,846,3.671,847,2.442,848,2.442]],["title/guards/RouteGuardService.html",[201,2.672,214,2.672]],["body/guards/RouteGuardService.html",[0,0.026,3,0.15,4,0.175,5,0.092,8,0.175,11,1.535,13,0.856,15,3.241,16,4.736,20,0.591,21,3.052,22,4.836,23,0.572,25,1.065,26,0.011,27,0.525,28,0.288,29,0.696,30,1.253,45,1.339,57,0.799,59,2.071,64,1.524,71,0.427,76,3.607,82,0.268,84,0.348,86,2.279,87,0.15,90,1.102,92,0.863,102,0.005,103,0.007,104,0.005,109,1.039,111,3.806,138,2.197,139,4.084,166,2.111,174,1.013,188,2.49,196,2.411,197,5.438,199,3.052,202,4.603,203,3.358,204,1.526,209,0.537,214,5.155,215,1.955,216,5.254,217,2.353,218,1.905,219,6.879,239,1.957,273,4.396,274,2.968,342,6.385,360,2.49,405,2.573,481,1.568,692,3.019,693,3.5,694,5.102,717,3.086,779,2.246,850,3.215,888,4.134,947,2.968,1054,3.052,1096,4.134,1104,4.776,1105,4.776,1114,1.838,1121,3.897,1122,3.263,1129,4.419,1141,3.526,1144,2.727,1145,2.727,1152,5.416,1160,5.804,1504,4.776,1505,3.693,1547,4.419,2778,4.688,2782,4.188,2900,6.271,3071,4.776,4158,6.673,4159,3.879,4160,5.979,4161,5.979,4162,5.979,4163,5.979,4164,5.979,4165,7.829,4166,8.254,4167,8.254,4168,5.979,4169,5.979,4170,5.979,4171,5.979,4172,4.134,4173,5.979,4174,5.979,4175,5.979,4176,5.979,4177,4.415,4178,5.979,4179,4.415,4180,4.415,4181,4.415,4182,8.006,4183,8.006,4184,4.415,4185,6.78,4186,4.415,4187,4.415,4188,4.415,4189,4.415,4190,5.979,4191,4.415,4192,3.052,4193,4.415,4194,4.415,4195,4.415,4196,4.415]],["title/interfaces/SampleImageInterface.html",[606,0.712,4197,3.197]],["body/interfaces/SampleImageInterface.html",[0,0.037,3,0.213,4,0.247,5,0.13,8,0.247,9,0.968,20,0.835,26,0.011,28,0.316,29,0.714,65,1.228,71,0.556,82,0.294,83,2.687,84,0.492,87,0.254,102,0.007,103,0.009,104,0.007,220,1.351,235,0.97,296,4.316,313,0.38,416,1.134,474,0.835,476,1.249,478,1.249,483,5.216,491,3.222,492,2.984,561,1.469,562,2.035,606,1.028,608,2.294,624,1.755,625,1.876,652,1.43,704,1.776,1378,3.856,2651,5.156,2711,4.614,3497,4.614,3563,4.986,3565,4.986,4172,5.712,4197,5.894,4198,4.986,4199,4.614,4200,7.26,4201,5.485,4202,5.485,4203,5.485,4204,5.485,4205,5.485]],["title/components/SampleModalComponent.html",[313,0.22,561,1.018]],["body/components/SampleModalComponent.html",[0,0.027,3,0.156,4,0.181,5,0.128,8,0.181,9,0.795,11,1.296,13,0.723,20,0.925,23,0.637,26,0.011,27,0.5,28,0.292,33,1.331,37,1.736,43,0.926,44,0.746,52,1.138,56,1.523,57,0.723,64,1.194,65,1.215,71,0.498,82,0.254,83,1.972,84,0.361,87,0.209,102,0.005,103,0.007,104,0.005,148,0.733,220,1.436,235,1.404,246,1.05,269,1.079,295,1.138,296,4.239,313,0.352,380,1.05,407,1.309,416,0.983,423,1.523,466,1.108,467,1.169,468,1.169,469,1.201,473,0.821,474,1.216,476,1.227,478,1.227,483,4.889,491,2.366,492,2.191,493,1.138,494,1.607,495,0.505,496,1.987,497,1.234,498,1.234,499,1.022,500,1.234,501,1.079,502,1.234,503,1.079,504,1.234,505,1.108,506,1.234,507,1.108,508,1.234,509,1.108,510,1.234,511,1.108,512,1.138,513,1.234,514,1.108,515,1.652,516,1.108,517,1.169,518,1.234,519,1.108,520,1.234,521,1.05,522,1.234,523,1.108,524,1.234,525,1.234,526,1.079,527,1.234,528,1.108,529,1.234,530,1.079,531,1.234,532,1.108,533,1.861,534,1.108,535,1.05,536,1.05,537,1.652,538,1.108,539,1.138,540,1.234,541,1.079,542,1.234,543,1.108,544,1.234,545,1.108,546,1.234,547,1.05,548,1.234,549,1.108,550,1.234,551,1.108,552,1.108,553,1.234,554,1.079,555,1.022,556,1.234,557,1.079,558,1.234,559,1.079,560,1.234,561,1.737,562,2.062,563,1.108,564,1.234,565,1.138,566,1.234,567,1.108,568,1.234,569,1.079,570,1.234,571,1.108,572,1.169,573,1.079,574,1.079,575,1.201,576,0.776,577,1.079,578,1.234,579,1.079,580,1.234,581,1.079,582,1.234,583,1.079,584,1.234,585,1.079,586,1.234,587,1.079,588,1.234,589,1.079,590,1.234,591,1.079,592,1.234,593,1.079,594,1.234,595,1.079,596,1.234,597,1.079,598,1.234,599,1.079,600,1.234,601,1.079,602,1.234,603,1.079,604,1.201,605,1.234,606,0.755,624,1.737,625,1.377,648,1.416,652,1.405,704,1.304,935,2.124,937,1.457,938,1.542,939,1.499,940,1.635,1203,1.542,1204,1.684,1378,3.787,2651,4.777,2711,5.107,3497,3.387,3529,5.388,3563,5.893,3565,4.898,4172,3.169,4197,5.107,4198,6.456,4199,5.973,4200,4.027,4201,5.388,4202,6.072,4203,4.027,4204,6.483,4205,4.027,4206,6.132,4207,4.583,4208,4.583,4209,4.583,4210,4.583,4211,6.132]],["title/injectables/ServerPayload.html",[196,1.744,1051,3.197]],["body/injectables/ServerPayload.html",[0,0.041,3,0.186,4,0.216,5,0.114,8,0.216,9,0.891,23,0.621,26,0.011,28,0.312,42,6.021,71,0.567,82,0.29,84,0.43,87,0.234,92,0.915,102,0.006,103,0.008,104,0.006,110,4.219,115,4.896,120,4.417,139,4.461,147,3.369,165,3.063,166,2.607,174,0.924,196,3.029,198,3.207,220,1.273,779,1.686,1027,3.554,1028,6.491,1029,4.356,1035,6.032,1036,6.601,1038,6.001,1039,6.032,1040,7.068,1042,6.032,1043,7.289,1044,6.928,1046,4.792,1047,4.24,1048,4.031,1049,6.601,1050,3.554,1051,5.074,1052,5.618,1053,6.601,1054,3.771,1055,6.601,1056,6.601,1057,6.032,1058,4.792,1059,6.032,1060,6.601,4212,5.454,4213,5.454,4214,5.454,4215,5.454]],["title/modules/SharedCoreModule.html",[1061,2.543,4216,2.819]],["body/modules/SharedCoreModule.html",[0,0.017,3,0.096,4,0.112,5,0.059,26,0.011,36,1.592,52,1.076,82,0.328,84,0.223,85,0.506,86,1.459,87,0.096,102,0.003,103,0.005,104,0.003,174,0.479,203,2.432,217,1.302,246,1.758,269,1.019,300,1.216,311,1.746,378,1.459,380,1.758,421,1.303,466,1.855,491,2.717,492,2.07,493,0.702,499,1.711,501,1.806,503,1.806,507,1.855,509,1.855,511,1.855,514,1.855,516,1.855,519,1.855,521,1.758,523,1.855,526,1.806,528,1.855,530,1.806,532,1.855,534,1.855,535,1.758,538,1.855,541,1.806,543,1.855,545,1.855,547,1.758,549,1.855,551,1.855,552,0.683,554,1.806,557,1.806,559,1.806,561,1.806,563,1.855,565,1.906,567,1.855,569,1.806,571,1.855,573,1.019,574,1.806,576,0.479,577,1.806,579,1.806,581,1.806,583,1.806,585,1.806,587,1.806,589,1.806,591,1.806,593,1.806,595,1.806,597,1.806,599,1.806,601,1.806,603,1.806,732,1.403,768,1.039,813,1.351,933,1.403,942,1.587,985,2.257,1061,1.662,1063,1.746,1064,3.64,1065,4.205,1070,3.459,1071,2.089,1077,1.954,1087,3.805,1090,3.805,1091,2.257,1586,2.089,1635,2.257,2394,2.483,2582,2.089,2633,2.257,2645,2.257,3164,3.2,3204,2.089,3279,2.257,3320,2.257,3496,2.257,3699,2.257,3716,2.257,3946,2.257,4008,2.257,4199,2.089,4216,5.949,4217,2.483,4218,2.483,4219,2.483,4220,2.483,4221,2.483,4222,2.826,4223,2.826,4224,4.331,4225,5.265,4226,4.331,4227,2.826,4228,2.826,4229,2.826,4230,2.257,4231,2.826,4232,2.826,4233,2.826,4234,4.331,4235,2.826,4236,2.826,4237,2.826,4238,2.826,4239,2.826,4240,2.826,4241,2.826,4242,2.826,4243,2.826,4244,2.826,4245,2.826,4246,2.826,4247,4.331,4248,5.265,4249,2.826,4250,2.826,4251,2.826,4252,4.331,4253,2.483,4254,2.826,4255,2.826,4256,2.826,4257,2.826,4258,2.826,4259,2.826,4260,2.826,4261,2.826,4262,2.826,4263,2.826,4264,4.331,4265,2.826,4266,4.331,4267,2.826,4268,2.826,4269,2.826,4270,2.826,4271,2.826,4272,2.826,4273,2.826,4274,2.826,4275,2.826,4276,2.826,4277,2.826,4278,2.826,4279,2.994,4280,2.826,4281,2.826,4282,2.257,4283,2.826,4284,2.826,4285,2.826,4286,2.826,4287,2.826,4288,2.826,4289,2.826,4290,2.826,4291,2.826,4292,2.826,4293,2.826,4294,2.826,4295,2.826,4296,2.826,4297,2.257,4298,2.826,4299,2.826,4300,2.826,4301,2.826,4302,2.826,4303,2.826,4304,2.257,4305,2.826,4306,2.826,4307,2.826,4308,2.826,4309,2.826,4310,4.626,4311,2.826,4312,2.826,4313,2.826,4314,2.826,4315,2.826]],["title/interfaces/SimpleDate.html",[606,0.712,2243,2.672]],["body/interfaces/SimpleDate.html",[3,0.227,4,0.263,5,0.139,8,0.263,9,1.005,26,0.01,28,0.324,87,0.227,102,0.008,103,0.009,104,0.008,109,1.566,163,2.446,326,2.327,606,1.275,608,2.446,2243,4.784,2262,4.959,2268,4.959,2271,4.737,2319,4.918,4316,5.847,4317,5.847,4318,6.654,4319,6.654,4320,5.847,4321,5.847]],["title/components/SinComponent.html",[313,0.22,563,1.046]],["body/components/SinComponent.html",[0,0.021,3,0.119,4,0.138,5,0.106,8,0.138,9,0.658,10,2.011,11,1.072,13,0.598,20,0.679,23,0.681,25,1.125,26,0.011,27,0.582,28,0.339,29,0.761,30,1.114,33,1.102,37,1.324,43,1.181,44,1.065,45,0.935,50,1.484,52,0.868,56,1.261,57,0.883,63,3.751,64,0.988,65,1.326,71,0.525,82,0.241,84,0.275,85,0.626,87,0.119,92,0.385,102,0.004,103,0.006,104,0.004,117,2.26,148,0.812,163,1.865,182,2.755,209,0.618,220,1.18,235,1.382,246,0.801,269,0.823,295,0.868,313,0.304,319,2.633,326,2.134,380,0.801,400,3.213,407,1.132,416,1.066,423,1.261,466,0.845,467,0.892,468,0.892,469,0.916,473,0.626,474,1.203,476,1.016,478,1.016,493,0.868,494,1.33,495,0.385,496,1.766,497,0.941,498,0.941,499,0.779,500,0.941,501,0.823,502,0.941,503,0.823,504,0.941,505,0.845,506,0.941,507,0.845,508,0.941,509,0.845,510,0.941,511,0.845,512,0.868,513,0.941,514,0.845,515,1.367,516,0.845,517,0.892,518,0.941,519,0.845,520,0.941,521,0.801,522,0.941,523,0.845,524,0.941,525,0.941,526,0.823,527,0.941,528,0.845,529,0.941,530,0.823,531,0.941,532,0.845,533,1.609,534,0.845,535,0.801,536,0.801,537,1.367,538,0.845,539,0.868,540,0.941,541,0.823,542,0.941,543,0.845,544,0.941,545,0.845,546,0.941,547,0.801,548,0.941,549,0.845,550,0.941,551,0.845,552,0.845,553,0.941,554,0.823,555,0.779,556,0.941,557,0.823,558,0.941,559,0.823,560,0.941,561,0.823,562,0.892,563,1.585,564,0.941,565,0.868,566,0.941,567,0.845,568,0.941,569,0.823,570,0.941,571,0.845,572,0.892,573,0.823,574,0.823,575,0.916,576,0.592,577,0.823,578,0.941,579,0.823,580,0.941,581,0.823,582,0.941,583,0.823,584,0.941,585,0.823,586,0.941,587,0.823,588,0.941,589,0.823,590,0.941,591,0.823,592,0.941,593,0.823,594,0.941,595,0.823,596,0.941,597,0.823,598,0.941,599,0.823,600,0.941,601,0.823,602,0.941,603,0.823,604,0.916,605,0.941,617,1.445,618,1.912,622,2.07,624,1.543,625,1.05,648,1.08,652,1.163,664,1.33,666,2.9,669,0.836,701,2.131,702,1.81,703,2.131,704,0.994,713,1.556,732,2.966,776,1.247,824,2.264,825,1.324,826,1.81,827,2.591,828,1.324,829,1.81,830,2.426,831,1.671,832,2.26,898,2.159,906,1.08,935,1.758,937,1.111,938,1.176,939,1.143,940,1.247,967,1.708,979,2.339,998,2.488,999,2.488,1017,1.504,1078,2.519,1174,3.211,1177,1.735,1178,3.1,1200,1.735,1203,1.176,1204,1.284,1205,2.26,1208,1.612,1219,3.355,1220,3.355,1221,2.984,1224,2.857,1225,3.213,1226,3.084,1227,2.966,1233,2.34,1242,2.159,1244,2.159,1265,2.055,1267,2.055,1342,1.88,1343,1.804,1344,1.804,1396,2.113,1463,3.135,2424,3.084,2688,2.055,2828,3.751,3556,4.459,3922,6.383,3938,2.583,3940,2.583,3941,2.416,3942,2.792,3943,4.459,3944,4.054,4322,3.071,4323,5.986,4324,5.075,4325,5.075,4326,5.075,4327,3.495,4328,5.075,4329,3.495,4330,5.075,4331,3.495,4332,3.495,4333,3.495,4334,5.075,4335,3.495,4336,3.495,4337,3.495,4338,3.495,4339,3.495,4340,3.495,4341,3.495,4342,3.495,4343,3.495,4344,3.495,4345,3.495,4346,3.495,4347,3.495,4348,7.495]],["title/components/ThumbnailComponent.html",[313,0.22,567,1.046]],["body/components/ThumbnailComponent.html",[0,0.024,3,0.139,4,0.161,5,0.118,8,0.161,9,0.734,11,1.195,13,0.667,20,0.545,23,0.654,25,0.829,26,0.011,27,0.534,28,0.316,29,0.541,30,0.905,33,1.228,37,1.542,43,0.854,44,0.689,45,1.042,52,1.011,56,1.405,57,0.828,64,1.101,65,1.156,71,0.256,82,0.239,83,1.752,84,0.321,87,0.139,102,0.005,103,0.007,104,0.005,148,0.905,174,0.69,209,0.689,220,1.101,235,1.395,246,0.933,269,0.958,295,1.011,313,0.331,326,1.483,370,2.815,380,0.933,407,1.071,416,0.924,423,1.405,466,0.984,467,1.039,468,1.039,469,1.067,472,1.658,473,0.73,474,1.211,476,1.132,478,1.132,481,1.841,491,2.101,492,1.946,493,1.011,494,1.483,495,0.449,496,1.892,497,1.097,498,1.097,499,0.908,500,1.097,501,0.958,502,1.097,503,0.958,504,1.097,505,0.984,506,1.097,507,0.984,508,1.097,509,0.984,510,1.097,511,0.984,512,1.011,513,1.097,514,0.984,515,1.524,516,0.984,517,1.039,518,1.097,519,0.984,520,1.097,521,0.933,522,1.097,523,0.984,524,1.097,525,1.097,526,0.958,527,1.097,528,0.984,529,1.097,530,0.958,531,1.097,532,0.984,533,1.751,534,0.984,535,0.933,536,0.933,537,1.524,538,0.984,539,1.011,540,1.097,541,0.958,542,1.097,543,0.984,544,1.097,545,0.984,546,1.097,547,0.933,548,1.097,549,0.984,550,1.097,551,0.984,552,0.984,553,1.097,554,0.958,555,0.908,556,1.097,557,0.958,558,1.097,559,0.958,560,1.097,561,0.958,562,1.039,563,0.984,564,1.097,565,1.011,566,1.097,567,1.698,568,1.097,569,0.958,570,1.097,571,0.984,572,1.039,573,0.958,574,0.958,575,1.067,576,0.69,577,0.958,578,1.097,579,0.958,580,1.097,581,0.958,582,1.097,583,0.958,584,1.097,585,0.958,586,1.097,587,0.958,588,1.097,589,0.958,590,1.097,591,0.958,592,1.097,593,0.958,594,1.097,595,0.958,596,1.097,597,0.958,598,1.097,599,0.958,600,1.097,601,0.958,602,1.097,603,0.958,604,1.067,605,1.097,609,1.903,610,1.903,617,1.368,618,1.792,669,0.67,700,4.129,762,2.355,779,2.009,967,1.903,1268,1.642,1269,2.281,1270,1.642,1271,2.281,1272,2.281,1273,2.281,1274,1.642,1275,1.642,1276,2.281,1277,2.281,1278,1.642,1279,1.642,1280,1.642,1281,1.642,1282,1.642,1283,2.281,1284,2.21,1285,1.642,1286,2.281,1287,2.281,1288,1.642,1289,2.281,1290,1.642,1291,1.642,1292,1.642,1293,1.642,1294,2.832,1295,1.642,1296,1.642,1297,1.642,1298,1.642,1299,1.642,1300,1.642,1301,1.642,1302,1.642,1303,1.642,1304,1.642,1305,1.642,1306,1.642,1307,1.642,1308,1.642,1309,1.642,1310,1.642,1311,2.281,1312,1.642,1313,1.642,1314,1.642,1315,1.642,1316,1.642,1317,1.642,1318,1.642,1319,1.642,1320,1.642,1321,1.642,1322,1.642,1323,1.642,1324,1.642,1325,2.281,1326,1.642,1327,1.642,1328,1.642,1329,1.642,1330,1.642,1331,1.37,1332,1.642,1333,1.642,1334,1.642,1335,1.642,1336,1.642,1337,1.642,1338,1.642,1339,1.642,1351,3.65,2354,1.813,2650,3.009,2651,4.494,2663,3.577,2695,4.18,2696,4.18,2776,3.577,2799,4.18,2851,4.518,2897,3.252,3033,3.009,3140,4.18,3576,4.97,3577,5.711,3601,5.711,4349,3.577,4350,5.656,4351,5.656,4352,6.5,4353,8.3,4354,6.5,4355,6.5,4356,6.5,4357,6.5,4358,5.656,4359,5.656,4360,4.072,4361,4.072,4362,4.072,4363,4.072,4364,4.072,4365,4.072,4366,4.072,4367,4.072,4368,4.072,4369,7.023,4370,4.072,4371,4.072,4372,5.656,4373,4.072,4374,4.072,4375,4.072,4376,5.656,4377,7.023,4378,4.072,4379,5.656,4380,5.656]],["title/components/ToggleComponent.html",[313,0.22,569,1.018]],["body/components/ToggleComponent.html",[0,0.027,3,0.152,4,0.177,5,0.126,8,0.177,9,0.782,11,1.273,13,0.71,20,0.913,23,0.619,26,0.01,27,0.493,28,0.289,30,0.964,33,1.308,43,0.674,44,0.544,52,1.11,56,1.497,57,0.526,64,1.174,65,0.736,71,0.429,82,0.222,84,0.352,87,0.152,102,0.005,103,0.007,104,0.005,148,0.964,192,2.584,209,0.734,220,1.021,235,1.402,246,1.023,269,1.051,295,1.11,313,0.348,319,2.23,380,1.023,407,1.292,416,0.97,423,1.497,466,1.08,467,1.14,468,1.14,469,1.171,472,1.741,473,0.801,474,1.215,476,1.206,478,1.206,481,1.914,493,1.11,494,1.58,495,0.492,496,1.967,497,1.203,498,1.203,499,0.996,500,1.203,501,1.051,502,1.203,503,1.051,504,1.203,505,1.08,506,1.203,507,1.08,508,1.203,509,1.08,510,1.203,511,1.08,512,1.11,513,1.203,514,1.08,515,1.623,516,1.08,517,1.14,518,1.203,519,1.08,520,1.203,521,1.023,522,1.203,523,1.08,524,1.203,525,1.203,526,1.051,527,1.203,528,1.08,529,1.203,530,1.051,531,1.203,532,1.08,533,1.837,534,1.08,535,1.023,536,1.023,537,1.623,538,1.08,539,1.11,540,1.203,541,1.051,542,1.203,543,1.08,544,1.203,545,1.08,546,1.203,547,1.023,548,1.203,549,1.08,550,1.203,551,1.08,552,1.08,553,1.203,554,1.051,555,0.996,556,1.203,557,1.051,558,1.203,559,1.051,560,1.203,561,1.051,562,1.14,563,1.08,564,1.203,565,1.11,566,1.203,567,1.08,568,1.203,569,1.719,570,1.203,571,1.08,572,1.14,573,1.051,574,1.051,575,1.171,576,0.757,577,1.051,578,1.203,579,1.051,580,1.203,581,1.051,582,1.203,583,1.051,584,1.203,585,1.051,586,1.203,587,1.051,588,1.203,589,1.051,590,1.203,591,1.051,592,1.203,593,1.051,594,1.203,595,1.051,596,1.203,597,1.051,598,1.203,599,1.051,600,1.203,601,1.051,602,1.203,603,1.051,604,1.171,605,1.203,609,2.028,610,2.028,617,1.457,618,1.863,624,1.719,625,1.343,648,1.381,652,1.381,669,0.736,704,1.271,935,2.088,937,1.42,938,1.503,939,1.461,940,1.593,967,2.028,992,4.814,1003,5.448,1203,1.503,1204,1.642,1268,1.801,1269,2.43,1270,1.801,1271,2.43,1272,2.43,1273,2.43,1274,1.801,1275,1.801,1276,2.43,1277,2.43,1278,1.801,1279,1.801,1280,1.801,1281,1.801,1282,1.801,1283,2.43,1284,2.355,1285,1.801,1286,2.43,1287,2.43,1288,1.801,1289,2.43,1290,1.801,1291,1.801,1292,1.801,1293,1.801,1294,2.944,1295,1.801,1296,1.801,1297,1.801,1298,1.801,1299,1.801,1300,1.801,1301,1.801,1302,1.801,1303,1.801,1304,1.801,1305,1.801,1306,1.801,1307,1.801,1308,1.801,1309,1.801,1310,1.801,1311,2.43,1312,1.801,1313,1.801,1314,1.801,1315,1.801,1316,1.801,1317,1.801,1318,1.801,1319,1.801,1320,1.801,1321,1.801,1322,1.801,1323,1.801,1324,1.801,1325,2.43,1326,1.801,1327,1.801,1328,1.801,1329,1.801,1330,1.801,1331,1.503,1332,1.801,1333,1.801,1334,1.801,1335,1.801,1336,1.801,1337,1.801,1338,1.801,1339,1.801,4381,3.925,4382,6.027,4383,6.027,4384,6.027,4385,4.467,4386,4.467,4387,4.467]],["title/directives/ValidateBcPostalDirective.html",[495,0.477,583,1.018]],["body/directives/ValidateBcPostalDirective.html",[0,0.035,3,0.2,4,0.232,5,0.123,8,0.232,13,0.847,23,0.462,25,0.86,26,0.011,27,0.424,28,0.284,29,0.562,34,1.763,57,0.691,71,0.369,82,0.264,84,0.462,85,1.051,87,0.245,90,1.431,91,3.028,92,0.856,102,0.007,103,0.008,104,0.007,163,2.156,164,2.612,174,1.217,204,1.833,209,0.875,217,2.159,218,1.883,239,1.58,448,2.156,473,1.051,474,0.961,495,0.856,555,1.308,576,0.994,583,1.904,616,3.824,695,2.525,754,2.638,813,3.712,873,6.463,874,6.312,875,3.624,876,4.686,877,4.686,888,4.056,987,3.824,993,2.807,1096,4.056,1121,3.824,1206,2.974,1260,2.525,1391,3.45,2326,3.482,2541,3.58,2542,3.712,2548,2.805,2552,3.434,2587,4.284,2589,3.565,2885,4.686,3770,3.295,3811,3.295,4007,4.966,4038,4.686,4279,4.966,4388,5.155,4389,7.109,4390,5.867,4391,4.224,4392,5.867,4393,5.155,4394,3.824]],["title/directives/ValidateCityDirective.html",[495,0.477,585,1.018]],["body/directives/ValidateCityDirective.html",[0,0.036,3,0.204,4,0.236,5,0.125,8,0.236,13,0.856,23,0.47,25,0.875,26,0.011,27,0.432,28,0.287,29,0.572,57,0.704,71,0.376,82,0.267,84,0.47,85,1.07,87,0.248,90,1.442,91,3.083,92,0.863,102,0.009,103,0.009,104,0.007,164,2.659,174,1.326,204,1.853,209,0.884,217,2.183,218,1.904,448,2.195,473,1.07,474,0.972,495,0.801,576,1.012,585,1.916,615,3.212,754,2.652,993,2.837,1206,2.992,1254,3.212,1260,2.571,2326,3.368,2541,3.608,2542,3.741,2548,2.855,2552,3.472,2587,4.306,2589,3.604,2796,3.354,2982,4.414,3241,4.486,3770,4.078,3811,3.354,4391,4.27,4394,3.892,4395,6.381,4396,5.248,4397,7.153,4398,5.973,4399,5.248,4400,4.77]],["title/directives/ValidateEmailDirective.html",[495,0.477,587,1.018]],["body/directives/ValidateEmailDirective.html",[0,0.036,3,0.207,4,0.24,5,0.127,8,0.24,13,0.865,23,0.478,25,0.89,26,0.011,27,0.439,28,0.29,29,0.582,57,0.716,71,0.382,82,0.27,84,0.478,85,1.089,87,0.25,90,1.509,92,0.869,102,0.009,103,0.009,104,0.007,164,2.705,174,1.335,204,1.872,209,0.893,217,2.205,218,1.924,448,2.233,473,1.089,474,0.982,495,0.809,576,1.029,587,1.927,754,2.602,993,2.867,1206,3.009,2326,3.393,2541,3.635,2542,3.769,2548,2.904,2552,2.904,2587,4.326,2589,3.642,3770,3.411,3811,3.411,4391,4.314,4401,6.447,4402,5.338,4403,7.194,4404,6.075,4405,6.075,4406,6.075,4407,7.337]],["title/directives/ValidateNameDirective.html",[495,0.477,589,1.018]],["body/directives/ValidateNameDirective.html",[0,0.036,3,0.205,4,0.238,5,0.126,8,0.238,13,0.859,23,0.473,25,0.881,26,0.011,27,0.527,28,0.289,29,0.575,57,0.708,71,0.378,82,0.268,84,0.473,85,1.077,87,0.248,90,1.446,91,3.102,92,0.865,102,0.007,103,0.009,104,0.007,164,2.676,174,1.235,204,1.86,209,0.887,217,2.191,218,1.911,448,2.209,473,1.077,474,0.976,495,0.804,576,1.018,589,1.92,754,2.656,875,3.713,993,2.848,1206,2.998,1254,3.232,1260,2.587,2326,3.377,2541,3.618,2542,3.751,2548,2.873,2552,3.485,2587,4.314,2589,3.618,3241,4.503,3242,4.801,3770,4.094,3811,3.375,4391,4.286,4394,3.917,4408,6.405,4409,5.281,4410,7.168,4411,6.011]],["title/directives/ValidatePhnDirective.html",[495,0.477,591,1.018]],["body/directives/ValidatePhnDirective.html",[0,0.03,3,0.173,4,0.201,5,0.106,8,0.201,13,0.772,23,0.572,25,0.743,26,0.011,27,0.366,28,0.304,29,0.485,30,1.369,33,1.422,34,1.523,43,0.989,44,0.967,45,1.414,57,0.597,71,0.5,82,0.241,84,0.399,85,0.908,87,0.223,90,1.547,92,0.897,97,1.705,102,0.01,103,0.008,104,0.006,164,2.256,170,2.337,174,1.11,178,2.819,182,3.02,188,2.11,204,1.672,209,0.798,217,1.969,218,1.717,294,3.745,385,1.566,386,2.846,416,1.032,448,2.668,473,0.908,474,0.877,495,0.722,512,1.259,576,0.859,591,1.806,754,2.632,776,2.589,912,3.679,993,2.559,1206,2.82,1396,3.195,2326,3.124,2354,3.232,2541,3.347,2542,3.47,2548,2.423,2552,3.47,2587,4.101,2589,3.251,2594,3.504,2595,3.504,2804,5.726,2840,3.745,3416,4.048,3912,5.671,4192,3.504,4412,6.129,4413,4.048,4414,6.129,4415,7.151,4416,6.615,4417,5.068,4418,5.068,4419,5.068,4420,5.068,4421,5.798,4422,4.453,4423,5.068,4424,5.068,4425,5.756,4426,5.068,4427,5.068,4428,5.068,4429,5.068,4430,5.068,4431,4.453,4432,6.551,4433,5.068,4434,7.674,4435,5.068,4436,5.068,4437,5.068,4438,6.551,4439,5.068,4440,5.068,4441,5.068]],["title/directives/ValidatePhoneDirective.html",[495,0.477,593,1.018]],["body/directives/ValidatePhoneDirective.html",[0,0.034,3,0.194,4,0.225,5,0.119,8,0.225,13,0.83,20,1.024,23,0.554,25,0.832,26,0.011,27,0.411,28,0.279,29,0.544,34,1.707,44,0.932,50,1.41,57,0.669,71,0.357,82,0.259,84,0.447,85,1.018,87,0.24,90,1.41,91,3.634,92,0.844,102,0.007,103,0.008,104,0.007,138,2.087,164,2.528,174,1.393,204,1.796,209,0.857,217,2.116,218,1.846,300,2.444,326,1.489,448,2.087,473,1.018,474,0.942,495,0.776,552,1.988,576,0.962,593,1.883,697,4.197,732,2.819,754,2.614,762,2.365,993,2.751,1117,4.536,1206,2.587,1260,2.444,2326,3.03,2541,3.528,2542,3.658,2548,3.366,2552,2.715,2587,4.245,2589,3.494,2804,3.926,3394,6.186,3660,4.99,3729,4.536,3818,5.29,3945,6.112,3949,5.655,4304,6.112,4391,4.139,4442,4.99,4443,5.679,4444,5.679,4445,4.99,4446,4.99,4447,5.679,4448,4.99,4449,6.186,4450,5.679,4451,5.679,4452,5.679,4453,5.679,4454,5.679,4455,5.679,4456,5.679,4457,5.679,4458,5.679,4459,4.99,4460,5.679,4461,5.679,4462,5.679]],["title/directives/ValidatePostalcodeDirective.html",[495,0.477,595,1.018]],["body/directives/ValidatePostalcodeDirective.html",[0,0.031,3,0.178,4,0.207,5,0.109,8,0.207,13,0.787,23,0.58,25,0.765,26,0.011,27,0.378,28,0.307,29,0.5,30,1.375,33,1.45,43,1.008,44,0.813,45,1.231,57,0.615,71,0.463,82,0.246,84,0.411,85,0.936,87,0.228,90,1.537,91,2.695,92,0.919,102,0.006,103,0.008,104,0.006,164,2.325,174,1.247,204,1.704,209,0.813,217,2.007,218,1.751,416,1.047,448,2.706,473,0.936,474,0.894,495,0.736,555,1.165,576,0.885,595,1.827,663,5.435,695,2.248,705,3.859,754,2.549,776,2.626,813,2.497,873,5.334,875,3.226,876,4.171,877,4.171,993,2.609,1206,2.948,1254,2.808,1260,2.248,2326,3.169,2541,3.395,2542,3.52,2548,2.497,2552,3.71,2587,4.234,2589,3.315,2590,3.403,2796,3.75,3217,3.859,3241,4.954,3770,4.358,3811,2.932,4007,5.365,4038,4.171,4279,5.365,4393,4.589,4394,3.403,4400,5.334,4463,4.171,4464,5.881,4465,7.328,4466,5.222,4467,5.222,4468,5.222,4469,4.589,4470,5.222,4471,6.679,4472,6.679,4473,5.222,4474,5.222,4475,4.589,4476,5.222,4477,5.222,4478,5.334,4479,5.222]],["title/directives/ValidateRegionDirective.html",[495,0.477,597,1.018]],["body/directives/ValidateRegionDirective.html",[0,0.036,3,0.203,4,0.236,5,0.125,8,0.236,13,0.855,23,0.47,25,0.874,26,0.011,27,0.431,28,0.287,29,0.571,57,0.703,71,0.375,82,0.267,84,0.47,85,1.069,87,0.247,90,1.441,91,3.079,92,0.862,102,0.009,103,0.009,104,0.007,164,2.656,174,1.325,204,1.852,209,0.883,217,2.181,218,1.903,448,2.193,473,1.069,474,0.971,495,0.8,576,1.011,597,1.915,754,2.651,875,3.685,993,2.835,1206,2.991,1254,3.208,1260,2.568,2326,3.366,2541,3.606,2542,3.739,2548,2.852,2552,3.469,2587,4.305,2589,3.602,2982,4.409,3241,4.483,3770,4.075,3811,3.35,4297,5.797,4391,4.267,4394,3.888,4399,5.242,4480,6.377,4481,5.242,4482,7.15,4483,5.966,4484,5.966]],["title/directives/ValidateSinDirective.html",[495,0.477,599,1.018]],["body/directives/ValidateSinDirective.html",[0,0.035,3,0.202,4,0.234,5,0.124,8,0.234,13,0.851,23,0.466,25,0.868,26,0.011,27,0.428,28,0.286,29,0.567,57,0.698,71,0.373,82,0.266,84,0.466,85,1.061,87,0.246,90,1.437,92,0.859,97,1.993,102,0.01,103,0.009,104,0.007,164,2.637,174,1.003,178,2.549,188,2.466,204,1.844,209,0.88,217,2.171,218,1.894,294,4.377,448,2.177,473,1.061,474,0.967,495,0.796,576,1.003,599,1.91,754,2.645,993,2.823,1206,2.983,1396,2.466,2326,3.355,2354,3.217,2541,3.595,2542,3.727,2548,2.831,2552,2.831,2587,4.296,2589,3.586,2796,4.057,2840,4.377,4192,4.095,4323,6.227,4391,4.248,4422,5.204,4431,7.132,4485,6.348,4486,5.204,4487,7.132,4488,5.923,4489,5.923,4490,5.923]],["title/directives/ValidateStreetDirective.html",[495,0.477,601,1.018]],["body/directives/ValidateStreetDirective.html",[0,0.036,3,0.204,4,0.236,5,0.125,8,0.236,13,0.856,23,0.47,25,0.875,26,0.011,27,0.432,28,0.287,29,0.572,57,0.704,71,0.376,82,0.267,84,0.47,85,1.07,87,0.248,90,1.442,91,3.083,92,0.863,102,0.009,103,0.009,104,0.007,164,2.659,174,1.326,204,1.853,209,0.884,217,2.183,218,1.904,448,2.195,473,1.07,474,0.972,495,0.801,576,1.012,601,1.916,673,3.512,754,2.652,993,2.837,1206,2.992,1254,3.212,1260,2.571,2326,3.368,2541,3.608,2542,3.741,2548,2.855,2552,3.472,2587,4.306,2589,3.604,2796,3.354,3241,4.486,3770,4.078,3811,3.354,4391,4.27,4394,3.892,4400,5.8,4475,5.248,4491,6.381,4492,5.248,4493,7.153,4494,5.973]],["title/components/WizardProgressBarComponent.html",[313,0.22,571,1.046]],["body/components/WizardProgressBarComponent.html",[0,0.02,3,0.117,4,0.136,5,0.105,8,0.136,9,0.651,11,1.06,13,0.591,20,0.46,21,2.378,22,4.462,23,0.632,25,0.735,26,0.011,27,0.5,28,0.286,29,0.48,33,1.089,37,1.9,43,0.519,44,0.419,52,0.854,53,3.826,56,1.246,57,0.815,64,0.977,65,0.975,68,3.325,76,2.49,78,4.007,80,1.707,82,0.255,83,1.48,84,0.271,86,1.775,87,0.117,92,0.653,97,1.157,102,0.004,103,0.006,104,0.004,109,0.81,134,1.303,137,2.542,148,1.041,166,2.831,169,1.932,174,1.172,209,0.611,220,1.003,235,1.381,246,0.788,269,0.81,280,2.542,295,0.854,313,0.302,326,1.894,335,1.775,336,1.48,354,1.9,380,0.788,407,0.95,416,0.713,422,3.099,423,1.246,466,0.832,467,0.878,468,0.878,469,0.902,472,1.511,473,0.616,474,1.202,476,1.004,478,1.004,481,1.706,491,2.589,492,2.398,493,0.854,494,1.315,495,0.379,496,1.753,497,0.927,498,0.927,499,0.767,500,0.927,501,0.81,502,0.927,503,0.81,504,0.927,505,0.832,506,0.927,507,0.832,508,0.927,509,0.832,510,0.927,511,0.832,512,0.854,513,0.927,514,0.832,515,1.351,516,0.832,517,0.878,518,0.927,519,0.832,520,0.927,521,0.788,522,0.927,523,0.832,524,0.927,525,0.927,526,0.81,527,0.927,528,0.832,529,0.927,530,0.81,531,0.927,532,0.832,533,1.595,534,0.832,535,0.788,536,0.788,537,1.351,538,0.832,539,0.854,540,0.927,541,0.81,542,0.927,543,0.832,544,0.927,545,0.832,546,0.927,547,0.788,548,0.927,549,0.832,550,0.927,551,0.832,552,0.832,553,0.927,554,0.81,555,0.767,556,0.927,557,0.81,558,0.927,559,0.81,560,0.927,561,0.81,562,0.878,563,0.832,564,0.927,565,0.854,566,0.927,567,0.832,568,0.927,569,0.81,570,0.927,571,1.573,572,1.903,573,2.07,574,0.81,575,0.902,576,0.583,577,0.81,578,0.927,579,0.81,580,0.927,581,0.81,582,0.927,583,0.81,584,0.927,585,0.81,586,0.927,587,0.81,588,0.927,589,0.81,590,0.927,591,0.81,592,0.927,593,0.81,594,0.927,595,0.81,596,0.927,597,0.81,598,0.927,599,0.81,600,0.927,601,0.81,602,0.927,603,0.81,604,0.902,605,0.927,609,1.688,610,1.688,664,0.902,670,2.022,692,2.234,768,1.264,776,1.789,779,2.305,886,4.408,905,1.932,906,1.063,931,2.698,933,2.49,957,2.698,980,3.657,1054,2.378,1114,2.466,1235,3.269,1268,1.387,1269,2.023,1270,1.387,1271,2.023,1272,2.023,1273,2.023,1274,1.387,1275,1.387,1276,2.023,1277,2.023,1278,1.387,1279,1.387,1280,1.387,1281,1.387,1282,1.387,1283,2.023,1284,1.96,1285,1.387,1286,2.023,1287,2.023,1288,1.387,1289,2.023,1290,1.387,1291,1.387,1292,1.387,1293,1.387,1294,2.624,1295,1.387,1296,1.387,1297,1.387,1298,1.387,1299,1.387,1300,1.387,1301,1.387,1302,1.387,1303,1.387,1304,1.387,1305,1.387,1306,1.387,1307,1.387,1308,1.387,1309,1.387,1310,1.387,1311,2.023,1312,1.387,1313,1.387,1314,1.387,1315,1.387,1316,1.387,1317,1.387,1318,1.387,1319,1.387,1320,1.387,1321,1.387,1322,1.387,1323,1.387,1324,1.387,1325,2.023,1326,1.387,1327,1.387,1328,1.387,1329,1.387,1330,1.387,1331,1.157,1332,1.387,1333,1.387,1334,1.387,1335,1.387,1336,1.387,1337,1.387,1338,1.387,1339,1.387,1463,2.125,1505,3.099,1506,2.022,1515,2.242,1527,2.542,1529,2.748,1607,3.099,1611,4.729,1614,3.859,2240,3.859,2241,4.02,2274,2.125,2344,2.542,2349,2.748,2424,3.359,2517,3.468,2657,2.242,2658,2.242,2766,6.08,2781,2.378,2900,3.707,3165,2.542,3166,4.007,3167,4.007,3177,3.022,3209,4.007,3475,5.203,3476,3.022,3477,3.022,3478,3.022,3568,4.007,3941,2.378,3960,4.007,3990,3.022,4230,6.483,4320,4.408,4495,7.132,4496,5.921,4497,5.921,4498,5.016,4499,5.921,4500,5.921,4501,5.921,4502,6.508,4503,5.016,4504,6.508,4505,6.508,4506,5.016,4507,3.44,4508,5.016,4509,3.44,4510,3.44,4511,3.44,4512,3.44,4513,5.016,4514,5.016,4515,5.203,4516,4.408,4517,5.016,4518,5.016,4519,3.707,4520,3.44,4521,5.921,4522,5.016,4523,3.44,4524,5.921,4525,5.016,4526,3.44,4527,3.44,4528,3.44,4529,3.44,4530,3.44,4531,3.44,4532,3.44,4533,3.44,4534,3.44,4535,3.44,4536,3.44,4537,3.44,4538,5.921,4539,3.44,4540,3.44,4541,3.44,4542,3.44,4543,3.44,4544,3.44,4545,6.919,4546,3.44,4547,5.016,4548,3.44,4549,3.44,4550,3.44,4551,3.44,4552,3.44,4553,5.016,4554,3.44,4555,3.44,4556,3.44,4557,3.44,4558,3.44,4559,3.44,4560,3.44,4561,3.44,4562,3.44,4563,3.44,4564,3.44,4565,3.44,4566,3.44,4567,3.44,4568,3.44,4569,5.016]],["title/interfaces/WizardProgressItem.html",[606,0.712,1614,2.819]],["body/interfaces/WizardProgressItem.html",[0,0.037,3,0.27,4,0.243,5,0.128,8,0.243,9,0.957,17,2.731,26,0.011,28,0.292,59,2.125,65,1.01,71,0.551,76,4.35,82,0.226,86,3.166,87,0.252,92,0.814,102,0.007,103,0.009,104,0.007,151,2.554,163,2.255,236,4.9,305,4.9,364,3.445,483,5.273,572,1.565,573,1.444,606,1.215,608,2.255,624,1.444,713,2.731,788,4.241,789,2.397,1113,4.559,1607,4.559,1608,4.9,1609,5.39,1610,5.39,1611,4.9,1613,5.39,1614,5.159,1616,5.39,1617,5.39,1619,5.39,1620,5.39,1621,5.454,1625,5.39,1626,5.39,1627,5.39,1628,5.39,1629,5.39,1630,5.39,1631,5.39,1632,6.485,1633,5.39]],["title/components/XiconButtonComponent.html",[313,0.22,574,1.018]],["body/components/XiconButtonComponent.html",[0,0.027,3,0.154,4,0.179,5,0.127,8,0.179,11,1.283,13,0.716,20,0.918,23,0.621,26,0.011,27,0.496,28,0.271,33,1.318,34,1.358,50,1.122,52,1.122,56,1.958,57,0.716,64,1.182,65,1,71,0.382,82,0.224,84,0.356,87,0.154,102,0.005,103,0.007,104,0.005,146,4.198,148,0.972,151,1.881,174,0.765,209,0.739,232,2.79,235,1.404,239,1.636,246,1.035,269,1.063,295,1.122,313,0.35,319,2.712,352,2.656,380,1.035,397,4.488,407,1.15,416,0.864,423,1.508,466,1.092,467,1.153,468,1.153,469,1.184,472,1.75,473,0.81,474,1.216,476,1.215,478,1.215,481,1.923,488,5.071,493,1.122,494,1.592,495,0.498,496,1.976,497,1.217,498,1.217,499,1.007,500,1.217,501,1.063,502,1.217,503,1.063,504,1.217,505,1.092,506,1.217,507,1.092,508,1.217,509,1.092,510,1.217,511,1.092,512,1.122,513,1.217,514,1.092,515,1.636,516,1.092,517,1.153,518,1.217,519,1.092,520,1.217,521,1.035,522,1.217,523,1.092,524,1.217,525,1.217,526,1.063,527,1.217,528,1.092,529,1.217,530,1.063,531,1.217,532,1.092,533,1.848,534,1.092,535,1.035,536,1.035,537,1.636,538,1.092,539,1.122,540,1.217,541,1.063,542,1.217,543,1.092,544,1.217,545,1.092,546,1.217,547,1.035,548,1.217,549,1.092,550,1.217,551,1.092,552,1.092,553,1.217,554,1.063,555,1.007,556,1.217,557,1.063,558,1.217,559,1.063,560,1.217,561,1.063,562,1.153,563,1.092,564,1.217,565,1.122,566,1.217,567,1.092,568,1.217,569,1.063,570,1.217,571,1.092,572,1.153,573,1.063,574,1.726,575,2.174,576,0.765,577,1.063,578,1.217,579,1.063,580,1.217,581,1.063,582,1.217,583,1.063,584,1.217,585,1.063,586,1.217,587,1.063,588,1.217,589,1.063,590,1.217,591,1.063,592,1.217,593,1.063,594,1.217,595,1.063,596,1.217,597,1.063,598,1.217,599,1.063,600,1.217,601,1.063,602,1.217,603,1.063,604,1.184,605,1.217,617,1.659,618,2.055,669,1.13,677,2.656,727,1.944,762,1.881,905,2.537,906,1.877,947,2.242,963,5.336,964,5.336,967,2.043,987,2.944,1211,2.79,1499,3.338,3423,4.488,3598,4.85,3661,3.338,4282,6.432,4570,7.076,4571,3.608,4572,7.335,4573,5.479,4574,6.073,4575,4.517,4576,6.445,4577,4.517,4578,4.517,4579,4.517,4580,4.517,4581,4.517,4582,4.517,4583,4.517,4584,4.517,4585,6.073,4586,4.517,4587,4.517,4588,4.517,4589,4.517,4590,4.517,4591,4.517,4592,4.517]],["title/directives/YearValidateDirective.html",[495,0.477,603,1.018]],["body/directives/YearValidateDirective.html",[0,0.028,3,0.16,4,0.186,5,0.098,8,0.247,13,0.735,23,0.587,25,0.689,26,0.011,27,0.34,28,0.307,29,0.45,33,1.354,34,1.413,44,0.852,57,0.554,71,0.512,82,0.258,84,0.37,85,0.842,87,0.16,90,1.499,92,0.879,97,1.582,102,0.006,103,0.007,104,0.006,148,0.752,164,2.093,174,1.351,178,2.023,182,3.808,204,1.591,209,0.759,217,1.874,218,1.635,274,2.333,309,2.168,310,2.764,326,1.835,337,2.247,367,3.25,378,2.427,416,1.06,448,1.728,473,0.842,474,0.835,495,0.688,576,0.796,603,1.754,604,1.635,620,2.572,657,2.764,670,2.764,754,2.465,912,2.64,934,3.7,947,2.333,956,3.25,993,2.437,1061,2.764,1114,3.104,1121,3.064,1206,2.572,1395,2.333,1398,2.904,1437,3.667,1456,2.64,1469,3.667,2250,5.59,2258,3.474,2262,4.56,2268,4.687,2271,4.948,2278,3.474,2288,4.609,2289,4.609,2291,3.474,2292,3.474,2326,3.688,2328,3.755,2353,5.172,2354,3.116,2355,5.732,2432,5.48,2476,5.153,2541,3.227,2542,3.346,2544,6.149,2548,2.247,2551,4.131,2552,3.563,2553,3.755,2557,4.131,2712,3.25,3182,3.474,3740,3.755,3904,7.005,4425,4.131,4593,6.815,4594,4.131,4595,7.454,4596,6.998,4597,4.701,4598,4.701,4599,4.701,4600,4.701,4601,4.701,4602,7.757,4603,4.701,4604,4.701,4605,6.237,4606,7.454,4607,4.701,4608,4.701,4609,4.701,4610,4.701,4611,4.701,4612,4.701,4613,4.701,4614,4.701]],["title/changelog.html",[4615,2.03,4616,2.03,4617,2.888]],["body/changelog.html",[0,0.012,2,0.855,3,0.068,5,0.127,11,1.343,13,0.386,15,1.565,19,1.469,23,0.157,25,0.291,26,0.006,27,0.459,28,0.079,33,0.431,34,1.454,35,1.746,42,3.697,43,0.959,44,0.242,47,1.624,48,1.295,50,1.429,53,1.924,56,0.813,59,0.688,64,0.812,71,0.304,76,0.986,82,0.12,87,0.165,91,1.026,92,0.219,102,0.002,103,0.004,104,0.002,107,2.071,111,0.916,134,1.24,135,1.228,138,0.73,143,1.469,148,0.973,163,1.965,172,1.295,178,1.796,184,1.469,185,2.022,188,3.437,189,3.332,192,1.24,194,1.228,201,1.228,210,1.689,214,1.228,215,1.07,220,0.554,230,1.469,232,1.228,235,1.375,237,2.876,239,1.44,240,4.964,241,4.955,244,1.374,274,0.986,276,1.169,278,1.228,280,1.469,285,1.746,287,4.393,295,1.036,296,3.977,300,1.409,302,1.228,309,3.036,311,1.228,313,0.409,318,3.083,319,1.989,320,2.419,326,0.858,327,3.863,333,1.374,335,2.153,336,3.054,338,1.588,339,1.469,345,1.469,348,1.588,360,0.828,362,1.116,366,1.746,370,1.374,373,0.916,378,1.026,379,0.916,380,0.455,382,2.071,383,2.312,386,1.116,388,5.341,389,1.746,390,2.419,391,1.588,396,1.689,397,1.469,401,2.022,405,1.409,407,1.152,409,2.601,410,1.295,416,0.988,419,1.469,421,1.509,467,0.835,488,2.263,494,0.521,495,0.219,499,1.417,501,0.77,503,1.138,505,0.481,512,0.494,521,0.455,526,0.468,530,0.468,535,0.455,536,0.75,541,0.468,547,0.75,552,1.391,554,0.468,555,1.417,559,1.354,562,0.835,569,0.982,574,0.468,608,0.73,609,1.101,610,1.101,612,1.469,615,1.76,616,1.295,622,1.134,623,1.994,628,4.008,631,0.986,639,1.295,646,1.565,650,2.153,653,1.469,654,2.071,661,1.469,662,3.083,663,1.295,664,1.094,666,0.828,669,1.001,671,1.469,672,1.469,673,2.844,675,1.469,677,2.844,680,1.469,686,1.228,692,1.858,693,1.026,695,2.991,699,3.697,713,1.858,719,1.374,727,0.855,731,3.152,732,0.986,742,1.116,750,3.152,754,1.04,755,2.419,756,2.343,762,2.395,768,0.73,773,1.069,787,1.469,789,0.777,801,1.169,803,1.069,813,1.565,850,1.069,853,2.876,865,2.876,898,1.228,905,3.003,906,1.964,912,1.838,931,3.27,932,1.169,939,1.364,941,1.169,944,1.374,947,3.695,948,1.588,949,2.133,957,3.27,960,1.746,961,1.588,979,0.709,987,1.295,991,2.876,992,3.332,993,0.777,1047,1.76,1052,3.977,1061,1.169,1062,2.133,1077,1.374,1080,2.876,1084,2.884,1096,1.374,1114,0.828,1115,1.374,1118,3.083,1153,1.588,1182,1.228,1206,1.533,1224,0.95,1225,2.876,1257,1.509,1258,1.588,1260,0.855,1344,2.496,1353,2.022,1391,4.377,1395,1.624,1396,1.363,1438,2.719,1439,1.588,1455,1.374,1456,2.716,1460,3.332,1464,1.588,1469,3.382,1478,2.453,1545,1.374,1547,1.469,1603,1.469,1607,1.228,1614,1.295,1637,4.251,1646,2.133,2243,2.022,2257,1.169,2262,1.169,2268,1.169,2271,1.838,2274,1.228,2279,3.574,2320,3.574,2321,3.332,2323,3.952,2326,0.855,2354,3.315,2398,2.577,2424,1.026,2429,1.228,2441,1.588,2520,2.614,2525,1.469,2541,0.916,2565,2.876,2590,1.295,2594,2.263,2595,2.263,2599,2.419,2602,1.746,2654,1.469,2656,1.746,2658,1.295,2688,3.736,2689,1.588,2691,2.133,2692,3.332,2711,3.083,2712,2.884,2733,1.588,2780,2.876,2781,1.374,2782,1.228,2796,1.116,2799,3.574,2800,1.746,2804,2.263,2808,2.419,2819,3.083,2828,3.083,2831,4.858,2834,4.698,2842,2.419,2850,4.698,2851,1.588,2874,1.469,2885,4.595,2897,2.614,2899,1.746,2942,1.746,2943,1.588,2953,1.746,2967,5.949,2971,1.469,2983,1.746,2993,1.746,3005,2.614,3038,1.295,3071,3.332,3074,1.746,3183,4.271,3193,3.485,3198,1.588,3280,2.022,3379,1.746,3427,2.614,3445,4.25,3447,2.614,3448,1.374,3530,1.469,3533,1.746,3560,5.551,3562,5.344,3568,1.588,3579,1.746,3584,1.746,3598,1.588,3617,1.469,3701,1.746,3706,1.746,3729,1.588,3736,1.588,3764,2.419,3790,2.614,3802,4.625,3818,1.374,3842,1.746,3880,1.295,3882,1.746,3912,3.574,3941,1.374,3949,1.469,3955,2.876,3956,1.746,3960,2.614,3988,1.746,3991,2.876,3997,2.876,4105,6.696,4107,1.746,4110,2.876,4128,1.746,4172,1.374,4323,4.595,4416,1.588,4519,1.469,4573,1.588,4576,4.698,4615,1.116,4616,1.116,4617,4.858,4618,1.988,4619,7.749,4620,1.988,4621,7.525,4622,1.988,4623,1.988,4624,1.988,4625,1.988,4626,8.502,4627,3.273,4628,1.988,4629,1.988,4630,1.988,4631,1.988,4632,1.988,4633,4.912,4634,3.332,4635,1.988,4636,1.746,4637,1.988,4638,1.988,4639,1.988,4640,1.988,4641,1.746,4642,2.876,4643,1.988,4644,3.273,4645,1.988,4646,1.988,4647,1.988,4648,1.988,4649,1.988,4650,1.988,4651,1.988,4652,7.621,4653,1.988,4654,1.988,4655,1.746,4656,1.988,4657,1.988,4658,1.988,4659,1.988,4660,1.988,4661,1.746,4662,1.988,4663,1.988,4664,1.988,4665,1.988,4666,6.584,4667,3.273,4668,1.988,4669,1.988,4670,1.988,4671,3.273,4672,1.988,4673,1.988,4674,1.988,4675,1.746,4676,6.082,4677,1.988,4678,1.988,4679,1.746,4680,1.988,4681,1.988,4682,1.988,4683,1.988,4684,1.988,4685,3.273,4686,1.988,4687,1.988,4688,1.988,4689,1.988,4690,1.988,4691,4.172,4692,1.746,4693,1.988,4694,1.988,4695,3.273,4696,1.988,4697,3.273,4698,1.988,4699,1.988,4700,1.988,4701,3.273,4702,1.988,4703,1.988,4704,1.988,4705,1.988,4706,1.988,4707,1.988,4708,3.666,4709,1.988,4710,1.988,4711,1.988,4712,1.988,4713,1.988,4714,1.988,4715,3.273,4716,1.988,4717,1.988,4718,1.988,4719,1.988,4720,1.988,4721,1.988,4722,1.988,4723,1.988,4724,1.988,4725,1.588,4726,1.988,4727,1.988,4728,5.347,4729,1.988,4730,1.988,4731,1.988,4732,1.988,4733,1.988,4734,1.988,4735,1.746,4736,1.988,4737,1.988,4738,1.988,4739,1.988,4740,1.988,4741,1.988,4742,1.988,4743,1.988,4744,1.988,4745,1.988,4746,1.988,4747,1.988,4748,1.988,4749,1.988,4750,1.988,4751,1.988,4752,1.988,4753,3.273,4754,1.988,4755,1.988,4756,1.988,4757,4.836,4758,1.988,4759,1.988,4760,1.988,4761,3.273,4762,1.988,4763,1.988,4764,1.988,4765,3.273,4766,1.988,4767,7.445,4768,1.988,4769,1.988,4770,1.988,4771,5.347,4772,1.988,4773,1.988,4774,1.988,4775,1.988,4776,1.988,4777,1.988,4778,3.273,4779,1.988,4780,1.988,4781,1.374,4782,1.988,4783,1.988,4784,4.836,4785,1.988,4786,1.988,4787,1.988,4788,1.988,4789,3.273,4790,1.988,4791,1.988,4792,1.988,4793,1.988,4794,1.988,4795,1.988,4796,1.988,4797,1.988,4798,1.988,4799,1.988,4800,1.988,4801,1.988,4802,1.988,4803,1.988,4804,1.988,4805,1.988,4806,1.988,4807,1.988,4808,1.988,4809,3.273,4810,1.988,4811,1.988,4812,1.988,4813,3.273,4814,1.988,4815,1.988,4816,1.988,4817,1.988,4818,1.988,4819,3.273,4820,1.988,4821,1.988,4822,4.25,4823,1.988,4824,1.988,4825,1.988,4826,1.988,4827,1.988,4828,1.988,4829,1.988,4830,1.988,4831,7.227,4832,1.988,4833,1.988,4834,6.823,4835,4.25,4836,1.988,4837,1.988,4838,1.988,4839,4.172,4840,1.988,4841,1.988,4842,1.988,4843,1.988,4844,1.746,4845,1.988,4846,4.836,4847,1.988,4848,1.988,4849,1.988,4850,1.988,4851,1.988,4852,1.988,4853,1.988,4854,1.988,4855,1.988,4856,1.988,4857,1.988,4858,1.988,4859,1.988,4860,1.988,4861,1.988,4862,1.988,4863,1.988,4864,1.588,4865,1.988,4866,5.347,4867,1.746,4868,1.988,4869,1.988,4870,1.988,4871,1.988,4872,1.988,4873,1.988,4874,1.988,4875,1.988,4876,1.988,4877,1.988,4878,1.988,4879,1.988,4880,3.332,4881,1.746,4882,1.988,4883,1.988,4884,1.988,4885,1.988,4886,1.988,4887,1.988,4888,1.988,4889,1.988,4890,1.988,4891,1.988,4892,1.988,4893,1.988,4894,1.988,4895,1.988,4896,1.988,4897,1.988,4898,1.588,4899,1.988,4900,1.988,4901,3.273,4902,1.988,4903,1.988,4904,1.988,4905,3.273,4906,1.988,4907,1.746,4908,1.988,4909,1.988,4910,1.988,4911,3.273,4912,1.988,4913,1.988,4914,3.863,4915,1.988,4916,1.988,4917,1.988,4918,4.25,4919,1.988,4920,1.988,4921,1.988,4922,1.988,4923,1.988,4924,1.988,4925,1.988,4926,2.876,4927,1.988,4928,1.988,4929,1.988,4930,1.988,4931,1.988,4932,1.746,4933,1.746,4934,1.746,4935,1.746,4936,1.988,4937,1.988,4938,1.988,4939,1.988,4940,3.666,4941,1.988,4942,1.988,4943,1.988,4944,1.988,4945,1.988,4946,1.988,4947,3.666,4948,2.614,4949,1.988,4950,1.988,4951,1.988,4952,1.988,4953,1.988,4954,1.988,4955,1.988,4956,1.988,4957,1.988,4958,1.988,4959,1.988,4960,1.988,4961,1.988,4962,1.988,4963,1.988,4964,1.988,4965,1.988,4966,1.988,4967,1.988,4968,1.988,4969,1.988,4970,1.988,4971,1.988,4972,1.988,4973,1.988,4974,1.988,4975,1.988,4976,1.988,4977,1.988,4978,1.988,4979,1.988,4980,1.988,4981,1.988,4982,1.988,4983,1.988,4984,1.988,4985,1.988,4986,1.988,4987,1.746,4988,1.988,4989,1.988,4990,1.988,4991,1.988,4992,1.988,4993,1.988,4994,1.988,4995,1.988,4996,1.988,4997,1.988,4998,1.988,4999,1.988,5000,1.988,5001,1.746,5002,1.746,5003,1.988,5004,1.988,5005,1.746,5006,1.988,5007,1.988,5008,1.988,5009,1.746,5010,1.988,5011,1.988,5012,1.746,5013,1.988,5014,1.988,5015,4.25,5016,1.988,5017,2.614,5018,1.988,5019,1.988,5020,1.469,5021,1.988,5022,1.988,5023,1.988,5024,1.746,5025,1.988,5026,1.988,5027,1.988,5028,1.746,5029,1.746,5030,1.988,5031,3.273,5032,1.988,5033,1.988,5034,1.988,5035,1.588,5036,1.988,5037,1.746,5038,1.988,5039,1.988,5040,1.746,5041,1.469,5042,1.988,5043,1.988,5044,3.666,5045,1.988,5046,1.988,5047,1.988,5048,1.988,5049,1.988,5050,1.988,5051,1.988,5052,1.988,5053,1.988,5054,1.988,5055,1.988,5056,1.988,5057,1.988,5058,1.988,5059,1.988,5060,1.374,5061,1.746,5062,1.746,5063,1.988,5064,1.746,5065,1.988,5066,1.988,5067,1.988,5068,3.273,5069,1.988,5070,1.988,5071,1.988,5072,1.988,5073,1.988,5074,1.988,5075,2.876,5076,1.988,5077,1.988,5078,1.988,5079,1.988,5080,1.988,5081,1.988,5082,1.988,5083,1.988,5084,1.988,5085,1.988,5086,1.746,5087,1.746,5088,1.988,5089,1.746,5090,1.988,5091,1.988,5092,1.988,5093,1.988,5094,1.988,5095,1.988,5096,1.988]],["title/contributing.html",[4615,2.03,4616,2.03,4880,2.888]],["body/contributing.html",[26,0.009,48,4.042,77,3.646,91,3.201,102,0.007,103,0.009,104,0.007,210,3.201,212,4.954,232,3.831,238,3.831,239,2.001,362,3.483,384,3.831,385,2.296,419,4.583,573,1.46,669,1.021,670,3.646,695,3.423,778,4.288,803,3.335,906,2.296,931,3.335,944,4.288,957,4.277,1183,3.831,1499,4.583,1527,4.583,1646,4.042,2274,3.831,2424,3.201,2429,4.913,2520,4.954,2553,4.954,2688,4.368,2727,4.954,2967,5.136,3182,4.583,3560,4.954,3620,5.449,3802,4.841,4192,4.288,4617,6.733,4621,5.449,4633,4.042,4655,5.449,4822,7.244,4880,5.934,4881,5.449,5001,6.527,5015,5.449,5017,5.934,5024,6.988,5086,5.449,5097,8.245,5098,6.202,5099,6.202,5100,7.429,5101,6.202,5102,6.202,5103,6.202,5104,6.202,5105,6.202,5106,6.202,5107,6.202,5108,6.202,5109,6.202,5110,5.449,5111,7.429,5112,6.527,5113,6.202,5114,6.202,5115,6.202,5116,6.202,5117,6.202,5118,5.449,5119,6.202,5120,6.202,5121,6.202,5122,6.202,5123,7.429,5124,6.202,5125,6.202]],["title/coverage.html",[5126,5.181]],["body/coverage.html",[0,0.047,1,2.338,5,0.061,6,2.572,7,2.572,26,0.011,28,0.116,52,1.105,97,3.043,102,0.003,103,0.005,104,0.003,105,1.644,106,3.553,107,1.453,108,2.572,194,1.808,196,2.744,197,1.907,199,2.024,200,2.572,201,1.808,214,1.808,230,2.163,231,2.572,232,1.808,233,2.572,246,0.671,269,1.047,272,2.748,313,0.447,326,0.767,380,0.671,421,1.35,466,0.708,470,2.572,495,0.884,499,0.653,501,0.689,503,0.689,505,0.708,507,0.708,509,0.708,511,0.708,514,0.708,516,0.708,519,0.708,521,0.671,523,0.708,526,0.689,528,0.708,530,0.689,532,0.708,534,0.708,535,0.671,538,0.708,541,0.689,543,0.708,545,0.708,547,0.671,549,0.708,551,0.708,552,1.301,554,0.689,557,0.689,559,0.689,561,0.689,563,0.708,565,0.727,567,0.708,569,0.689,571,0.708,573,1.047,574,0.689,577,0.689,579,0.689,581,0.689,583,0.689,585,0.689,587,0.689,589,0.689,591,0.689,593,0.689,595,0.689,597,0.689,599,0.689,601,0.689,603,0.689,606,1.361,607,2.024,611,4.441,624,0.689,626,1.644,628,1.511,630,1.907,631,1.453,632,2.024,633,2.024,635,1.808,636,1.808,637,1.907,639,1.907,640,2.024,669,0.482,693,2.296,699,4.155,765,6.537,776,3.05,813,2.126,849,2.572,929,2.572,934,3.378,938,0.985,943,2.572,984,2.572,985,2.338,986,2.572,1027,1.907,1028,3.553,1029,3.553,1051,2.163,1092,2.163,1093,3.553,1094,3.553,1134,2.163,1171,2.572,1215,2.572,1223,1.453,1235,5.274,1351,1.644,1352,3.916,1379,4.212,1388,1.808,1409,1.808,1413,1.721,1430,2.163,1431,3.976,1438,1.907,1456,1.644,1585,2.338,1586,2.163,1587,2.338,1607,1.808,1608,3.553,1614,1.907,1634,2.572,1635,2.338,1636,2.572,1656,5.436,2212,2.338,2219,4.297,2243,1.808,2246,2.024,2271,1.644,2286,2.163,2317,2.024,2354,2.395,2366,2.572,2367,2.572,2391,3.553,2424,1.511,2539,3.908,2540,3.908,2559,2.572,2581,4.297,2582,3.976,2583,4.297,2584,2.338,2591,2.338,2598,2.572,2632,2.572,2633,2.338,2634,2.572,2639,4.297,2640,4.297,2643,2.338,2644,5.679,2645,5.163,2653,2.338,2673,1.808,2678,2.572,2681,2.338,2778,3.72,2782,2.748,2789,3.553,2792,3.287,2796,1.644,2804,2.024,2808,4.441,2819,2.163,2823,4.441,2824,4.297,2831,4.8,2842,3.287,3163,3.553,3164,3.287,3165,3.976,3203,3.553,3204,3.287,3205,3.553,3236,2.163,3245,1.907,3277,3.553,3280,1.808,3319,2.572,3320,2.338,3321,2.572,3442,2.572,3494,2.338,3495,3.908,3496,3.553,3497,4.441,3642,2.163,3643,5.281,3661,2.163,3662,2.572,3663,2.572,3673,2.572,3698,3.553,3699,2.338,3700,2.572,3716,2.338,3717,2.572,3733,4.297,3759,2.163,3764,2.163,3800,2.338,3848,3.908,3911,2.572,3945,4.8,3946,2.338,3947,2.572,3949,2.163,4007,4.706,4008,2.338,4009,2.572,4047,4.777,4102,2.163,4104,2.572,4131,2.572,4158,2.572,4159,2.572,4197,2.163,4198,3.553,4199,3.287,4220,2.572,4221,2.572,4230,2.338,4279,4.469,4282,2.338,4297,3.553,4304,4.297,4310,2.572,4316,2.572,4317,2.572,4322,2.572,4349,2.572,4381,2.572,4388,3.908,4389,2.572,4395,3.908,4396,3.908,4397,2.572,4401,3.908,4402,3.908,4403,2.572,4408,3.908,4409,3.908,4410,2.572,4412,4.297,4413,4.297,4414,2.338,4421,2.338,4442,4.727,4449,2.572,4463,4.297,4464,2.338,4478,2.338,4480,3.908,4481,3.908,4482,2.572,4485,3.908,4486,3.908,4487,2.572,4491,3.908,4492,3.908,4493,2.572,4495,2.572,4570,2.572,4571,2.338,4593,3.908,4594,3.908,4633,1.907,4675,2.572,4679,2.572,4708,2.572,4735,2.572,4835,2.572,5126,2.572,5127,2.927,5128,6.01,5129,2.572,5130,2.927,5131,2.927,5132,2.927,5133,7.614,5134,4.448,5135,2.927,5136,2.927,5137,4.448,5138,2.927,5139,2.927,5140,2.927,5141,2.927,5142,8.922,5143,5.38,5144,2.927,5145,5.38,5146,6.01,5147,6.01,5148,2.927,5149,8.094,5150,6.806,5151,2.927,5152,7.074,5153,2.927,5154,2.927,5155,4.448,5156,2.927,5157,2.927,5158,2.927,5159,2.927,5160,2.927,5161,2.927,5162,2.927,5163,4.448,5164,2.927,5165,2.927,5166,2.927,5167,2.927,5168,2.927,5169,2.927,5170,2.927,5171,4.448,5172,2.927,5173,2.927,5174,2.927,5175,2.927,5176,2.927,5177,2.927,5178,2.927,5179,2.927,5180,2.927,5181,2.927,5182,2.927,5183,2.927,5184,2.927,5185,2.927,5186,2.927,5187,2.927,5188,2.927,5189,2.927,5190,2.572,5191,2.927,5192,2.927,5193,2.927,5194,2.927,5195,4.727,5196,4.727,5197,2.572,5198,2.163,5199,3.908,5200,2.572,5201,3.908,5202,7.219,5203,2.927,5204,2.927,5205,4.448,5206,2.927,5207,2.927,5208,2.927,5209,2.927,5210,2.927,5211,2.927,5212,2.927,5213,2.927,5214,2.927,5215,2.927,5216,2.927,5217,2.927,5218,5.98,5219,2.572,5220,2.572,5221,2.572,5222,2.572,5223,2.572,5224,2.572,5225,4.727,5226,4.727,5227,2.572,5228,2.572,5229,6.69,5230,6.464,5231,2.927,5232,2.927,5233,2.927,5234,5.679,5235,2.572,5236,2.572,5237,2.572,5238,2.572,5239,2.572,5240,4.448,5241,2.927,5242,2.927,5243,2.927]],["title/dependencies.html",[932,2.126,933,2.581]],["body/dependencies.html",[26,0.011,84,0.508,85,1.156,86,3.329,102,0.008,103,0.009,104,0.008,166,3.083,300,2.776,311,3.984,378,3.329,422,4.697,491,3.329,492,3.635,517,1.646,732,3.201,933,3.201,934,3.201,942,3.622,1048,4.766,1086,6.681,1091,5.151,1353,3.984,2653,5.151,2654,5.619,2680,5.151,2681,5.151,2684,5.667,4253,5.667,4641,5.667,4661,5.667,4907,5.667,5244,6.45,5245,8.833,5246,6.45,5247,6.45,5248,6.45,5249,6.45,5250,6.45,5251,6.45,5252,6.45,5253,5.667,5254,6.45,5255,6.45,5256,6.45,5257,6.45,5258,6.45,5259,6.45]],["title/miscellaneous/enumerations.html",[5260,2.672,5261,4.569]],["body/miscellaneous/enumerations.html",[3,0.256,8,0.25,26,0.011,43,1.134,44,1.088,97,2.126,102,0.007,103,0.009,104,0.007,148,1.283,194,3.904,274,3.137,346,5.048,349,5.048,692,3.345,693,3.262,694,4.118,1114,3.128,1352,4.118,1366,4.641,1380,4.369,1381,4.369,1382,4.369,1383,4.369,1384,4.118,1385,4.369,1386,4.369,1387,4.369,1431,4.67,1440,5.048,1537,6.001,1585,5.048,1586,4.67,1587,6.001,1594,6.601,1602,5.048,1978,5.553,2391,5.048,2403,6.601,2423,6.601,2778,4.369,2782,3.904,2786,5.048,2789,5.048,5129,5.553,5260,4.67,5261,5.553,5262,6.32,5263,7.513,5264,6.32,5265,6.32,5266,6.32,5267,6.32,5268,6.32,5269,6.32,5270,6.32,5271,6.32,5272,6.32,5273,6.32,5274,6.32,5275,6.32]],["title/miscellaneous/functions.html",[4519,3.843,5260,2.672]],["body/miscellaneous/functions.html",[5,0.152,8,0.176,25,1.301,26,0.011,27,0.644,28,0.338,29,0.85,30,1.397,44,0.731,50,1.103,57,1.022,71,0.378,79,2.742,81,2.493,82,0.163,102,0.005,103,0.007,104,0.005,133,3.069,135,3.707,138,1.631,151,1.848,161,3.529,164,3.027,182,2.047,235,0.69,239,1.196,240,2.493,241,2.493,275,4.149,278,4.7,294,3.281,336,1.911,346,5.817,469,2.21,663,4.746,670,2.61,692,1.976,717,2.291,754,2.315,768,1.631,772,2.61,818,2.61,851,3.069,932,3.529,1206,2.206,1494,2.893,1656,3.546,1658,3.9,2212,4.794,2317,4.149,2398,4.499,2465,4.435,2554,3.281,2581,3.546,2582,3.281,2583,5.431,2584,4.794,2585,5.974,2589,3.375,2591,4.794,2639,3.546,2640,4.794,2784,5.273,2901,4.794,2968,3.546,3193,2.893,3310,3.546,3374,3.9,3530,3.281,3912,3.281,4007,3.069,4047,3.281,4077,3.546,4102,4.435,4192,3.069,4279,3.069,4412,3.546,4413,5.431,4414,4.794,4415,6.4,4416,5.431,4421,4.794,4463,5.431,4464,4.794,4465,5.974,4469,3.9,4478,4.794,4519,3.281,5020,5.025,5087,5.273,5110,3.9,5195,3.9,5196,3.9,5197,5.273,5198,4.435,5199,3.9,5200,5.273,5201,6.4,5202,5.273,5218,3.9,5219,5.273,5220,5.974,5221,5.273,5222,5.273,5223,5.273,5224,5.273,5225,3.9,5226,6.4,5227,5.273,5228,5.273,5229,3.9,5234,3.9,5235,5.273,5236,5.273,5237,5.273,5238,5.273,5239,5.273,5260,3.281,5276,8.492,5277,6.799,5278,6.002,5279,7.283,5280,4.439,5281,4.439,5282,6.002,5283,4.439,5284,4.439,5285,6.002,5286,4.439,5287,8.154,5288,4.439,5289,4.439,5290,4.439,5291,4.439,5292,4.439,5293,4.439,5294,4.439,5295,4.439,5296,4.439,5297,7.608,5298,4.439,5299,6.002,5300,6.002,5301,8.017,5302,4.439,5303,6.002,5304,6.002,5305,6.002,5306,4.439,5307,4.439,5308,4.439,5309,4.439,5310,4.439,5311,4.439,5312,4.439,5313,3.9,5314,6.002,5315,4.439,5316,7.283,5317,4.439,5318,4.439,5319,4.439,5320,4.439,5321,4.439,5322,4.439,5323,4.439,5324,3.9,5325,4.439,5326,4.439,5327,4.439,5328,4.439,5329,6.002,5330,4.439]],["title/index.html",[8,0.143,4615,2.03,4616,2.03]],["body/index.html",[26,0.011,82,0.235,102,0.008,103,0.009,104,0.008,134,2.421,145,4.165,202,3.758,203,3.589,210,3.299,217,1.921,235,1.294,240,4.523,241,3.589,269,1.504,390,4.723,407,1.433,712,4.165,931,4.067,945,4.723,1064,4.419,1077,4.419,1637,5.589,2399,4.447,2600,3.758,2673,3.948,2716,4.419,2783,5.105,2971,4.723,3416,5.105,3522,6.645,3737,5.105,3834,5.105,4216,4.929,4516,5.616,4615,3.589,4616,3.589,4633,5.426,4636,6.645,4844,6.645,4987,5.616,5041,4.723,5118,5.616,5331,6.391,5332,6.391,5333,6.391,5334,7.563,5335,6.391,5336,6.391,5337,6.391,5338,7.563,5339,6.391,5340,6.391,5341,6.391,5342,6.391,5343,6.391,5344,6.391,5345,6.391,5346,6.391,5347,6.391]],["title/license.html",[4615,2.03,4616,2.03,5198,2.672]],["body/license.html",[5,0.139,26,0.01,50,1.653,102,0.008,103,0.009,104,0.008,213,3.068,239,1.792,383,3.181,631,3.303,656,3.737,812,4.918,818,3.912,1490,4.918,1734,4.601,2398,4.11,3038,5.338,3423,4.918,4039,4.918,5198,6.482,5313,5.847,5348,6.654,5349,6.654,5350,6.654,5351,6.654,5352,6.654,5353,6.654,5354,6.654,5355,6.654,5356,6.654,5357,6.654,5358,5.847,5359,6.654,5360,7.744,5361,6.654,5362,6.654,5363,6.654,5364,6.654,5365,6.654,5366,6.654,5367,6.654,5368,6.654,5369,6.654,5370,6.654]],["title/modules.html",[1063,3.642]],["body/modules.html",[26,0.009,102,0.008,103,0.009,104,0.008,422,4.915,1062,4.545,1063,4.308,2767,6.991,4216,4.545,4692,6.991,5371,7.957]],["title/overview.html",[5372,5.181]],["body/overview.html",[2,1.659,26,0.011,102,0.005,103,0.006,104,0.005,198,2.267,201,2.381,217,1.159,246,1.768,380,1.768,407,0.73,466,1.865,492,1.843,493,0.957,499,1.721,501,1.816,503,1.816,505,1.865,507,1.865,509,1.865,511,1.865,514,1.865,516,1.865,519,1.865,521,1.768,523,1.865,526,1.816,528,1.865,530,1.816,532,1.865,534,1.865,535,1.768,538,1.865,541,1.816,543,1.865,545,1.865,547,1.768,549,1.865,551,1.865,554,1.816,557,1.816,559,1.816,561,1.816,563,1.865,565,1.916,567,1.865,569,1.816,571,1.865,574,1.816,576,0.653,577,1.816,579,1.816,581,1.816,583,1.816,585,1.816,587,1.816,589,1.816,591,1.816,593,1.816,595,1.816,597,1.816,599,1.816,601,1.816,603,1.816,608,1.417,692,1.716,768,1.417,933,1.913,1027,4.113,1061,2.267,1062,5.028,1063,2.381,1064,2.665,1065,3.079,1066,3.387,1067,3.387,1068,3.387,1069,3.387,1070,4.348,1071,2.849,1114,1.605,2786,3.079,2808,2.849,2824,3.079,2842,2.849,4216,5.981,4217,3.387,4218,3.387,4219,3.387,5190,3.387,5372,3.387]],["title/todo.html",[34,1.087,4615,2.03,4616,2.03]],["body/todo.html",[11,1.303,26,0.01,30,1.317,34,2.53,43,0.931,45,1.137,50,1.532,68,3.464,102,0.007,103,0.009,104,0.007,138,2.721,210,3.184,220,1.254,235,0.959,239,1.994,240,3.464,241,3.464,335,3.184,385,2.288,390,4.558,407,1.168,409,3.317,416,1.129,488,4.264,575,1.617,617,1.491,762,3.629,800,3.81,855,5.42,856,5.42,905,4.853,906,2.671,957,3.317,961,5.914,1002,4.901,1178,2.746,1206,2.267,1207,4.558,1224,2.949,1492,4.558,1509,4.264,1603,4.558,2383,5.472,2398,3.81,2476,4.264,2680,4.927,2688,3.627,3140,4.558,3183,4.927,3818,4.264,4000,5.42,4321,5.42,4571,4.927,4573,4.927,4926,5.42,5373,6.168,5374,6.168,5375,6.168,5376,6.168,5377,6.168,5378,6.168,5379,6.168,5380,6.168,5381,6.168,5382,6.168,5383,6.168,5384,6.168,5385,6.168,5386,6.168,5387,6.168,5388,6.168,5389,6.168,5390,6.168,5391,6.168]],["title/additional-documentation/getting-started.html",[64,0.605,4615,1.744,4616,1.744,4781,2.147]],["body/additional-documentation/getting-started.html",[0,0.031,2,3.629,5,0.108,13,0.611,15,3.178,26,0.011,40,4.912,68,2.911,77,3.048,82,0.32,87,0.25,102,0.006,103,0.008,104,0.006,105,4.12,107,3.299,111,3.568,112,3.202,114,3.584,132,3.202,134,1.964,138,1.905,151,2.159,174,0.878,196,2.09,198,3.908,202,3.908,203,3.733,204,1.696,212,5.309,215,1.695,217,1.998,235,1.376,239,1.396,240,4.957,241,4.346,274,2.573,297,3.378,309,2.39,352,3.048,354,1.964,360,2.159,365,4.555,373,2.39,379,2.39,381,4.555,384,3.202,385,1.602,396,2.676,407,1.516,416,0.737,517,1.323,608,2.443,626,2.911,628,3.787,650,2.676,652,1.188,656,3.733,669,0.854,681,3.584,695,2.231,712,3.378,717,2.676,850,3.575,891,3.831,947,3.299,959,3.202,971,4.141,989,4.555,1052,5.073,1061,3.908,1062,4.332,1064,4.596,1076,4.555,1077,5.351,1078,2.573,1098,2.788,1257,2.39,1284,2.025,1351,2.911,1366,3.202,1413,3.048,1463,3.202,1494,3.378,1509,3.584,1646,3.378,2399,3.048,2404,5.309,2516,4.141,2600,3.048,2692,4.141,2733,4.141,3038,4.332,3193,3.378,3280,4.106,3448,4.596,3512,4.141,3702,4.555,3707,3.831,3712,4.141,3880,3.378,4216,5.044,4515,4.555,4615,2.911,4616,2.911,4633,3.378,4642,6.447,4867,4.555,4898,4.141,4932,5.841,4933,6.8,4934,4.555,4935,4.555,4948,4.141,5009,6.8,5029,5.841,5392,5.184,5393,4.555,5394,4.555,5395,8.002,5396,5.184,5397,5.184,5398,5.184,5399,5.184,5400,5.184,5401,5.184,5402,5.184,5403,5.184,5404,5.184,5405,5.184,5406,5.184,5407,5.184,5408,5.184,5409,5.184,5410,5.184,5411,5.184,5412,5.184,5413,5.184,5414,4.141,5415,5.184,5416,5.184,5417,4.555,5418,5.184,5419,6.647,5420,5.184,5421,5.184]],["title/additional-documentation/local-development.html",[64,0.605,2590,2.024,3880,2.024,4781,2.147]],["body/additional-documentation/local-development.html",[26,0.009,102,0.008,103,0.009,104,0.008,407,1.331,2590,4.579,3880,4.579,5060,5.524]],["title/additional-documentation/local-development/schematics.html",[64,0.704,4781,2.499,5060,2.499]],["body/additional-documentation/local-development/schematics.html",[5,0.105,26,0.01,27,0.524,36,1.854,50,1.253,64,0.982,67,3.488,68,3.668,73,3.488,79,3.116,90,0.93,102,0.006,103,0.008,104,0.006,138,2.815,151,3.016,188,3.016,202,3.84,215,1.65,235,1.286,239,1.951,240,4.833,241,2.833,244,3.488,274,2.504,276,2.966,311,4.035,313,0.257,318,5.662,335,3.371,336,3.297,337,3.123,384,3.116,385,2.019,387,4.03,405,2.171,407,1.237,410,3.288,483,3.116,621,1.971,646,3.123,651,2.101,669,1.307,695,2.811,717,3.739,727,2.171,766,3.488,850,2.713,851,5.008,906,1.559,931,4.596,933,2.504,947,2.504,955,4.433,956,3.488,957,4.12,1063,4.035,1082,4.433,1257,2.326,1478,2.966,1505,3.116,1545,3.488,1637,3.729,1646,3.288,2240,4.257,2257,2.966,2274,5.179,2275,3.729,2276,4.03,2345,3.84,2398,4.035,2399,2.966,2508,4.03,2517,3.488,2599,3.729,2600,2.966,2688,2.966,2825,4.433,2840,3.729,2874,5.353,2943,4.03,2971,3.729,3005,4.03,3070,4.433,3192,4.433,3536,4.433,3581,4.433,3707,4.827,3802,4.992,4172,3.488,4445,4.433,4446,4.433,4459,5.739,4619,4.433,4634,5.217,4725,4.03,4834,4.433,4864,4.03,4914,4.03,4940,4.433,4947,5.739,5017,4.03,5020,5.662,5028,4.433,5035,5.786,5040,6.365,5041,4.827,5044,4.433,5060,6.103,5061,6.972,5062,6.731,5064,4.433,5089,4.433,5253,5.739,5358,4.433,5394,4.433,5414,6.827,5417,4.433,5422,4.433,5423,4.433,5424,5.045,5425,6.532,5426,4.433,5427,5.045,5428,5.045,5429,5.045,5430,7.661,5431,6.532,5432,5.045,5433,5.045,5434,5.045,5435,5.045,5436,5.045,5437,5.045,5438,5.045,5439,5.045,5440,4.433,5441,5.739,5442,5.045,5443,5.045,5444,5.045,5445,6.532,5446,5.045,5447,5.045,5448,5.045,5449,5.045,5450,5.045,5451,5.045,5452,5.045,5453,5.045,5454,5.045,5455,5.045,5456,5.045,5457,5.045,5458,5.045,5459,5.045,5460,5.045,5461,5.045,5462,5.045,5463,5.045,5464,5.045,5465,5.045,5466,5.045,5467,5.045,5468,5.045,5469,5.045,5470,5.045,5471,5.045,5472,5.045,5473,5.045,5474,5.045,5475,5.045,5476,5.045,5477,5.045,5478,5.045,5479,5.045,5480,5.045,5481,5.045,5482,5.045,5483,5.045,5484,4.433,5485,4.433]],["title/additional-documentation/local-development/components.html",[64,0.704,407,0.685,4781,2.499]],["body/additional-documentation/local-development/components.html",[5,0.106,19,4.853,23,0.401,26,0.01,27,0.475,47,2.524,50,1.263,67,3.516,68,4.467,79,3.142,82,0.242,90,0.937,102,0.006,103,0.008,104,0.006,134,1.927,138,2.924,151,2.734,163,2.413,202,4.275,205,4.469,210,2.625,211,4.062,213,3.028,215,1.663,235,1.369,239,1.37,240,4.867,241,4.766,274,2.524,276,2.99,290,4.062,311,4.056,312,4.469,313,0.259,318,5.679,335,2.625,338,5.245,339,4.853,345,3.759,357,4.469,360,3.313,364,2.856,373,3.028,379,2.345,388,4.853,399,4.469,405,2.189,407,1.244,617,1.588,646,2.431,664,1.333,669,0.837,677,2.99,692,2.923,695,2.189,717,4.106,756,2.856,850,3.531,851,5.807,894,4.469,912,2.856,931,4.564,932,2.99,933,2.524,945,3.759,947,2.524,949,3.314,1063,3.142,1115,3.516,1257,2.345,1491,3.759,1494,3.314,2274,4.491,2319,4.853,2399,5.163,2441,5.245,2590,5.008,2654,3.759,2727,4.062,2874,3.759,2900,3.759,3038,3.314,3406,5.769,3447,5.245,3530,3.759,3707,3.759,3802,5.402,3880,4.739,3883,4.469,4448,5.769,4633,3.314,4634,4.062,4725,5.245,4864,4.062,4898,4.062,4914,4.062,4918,4.469,4948,4.062,5002,4.469,5005,5.769,5012,4.469,5020,5.679,5035,5.245,5037,4.469,5041,4.853,5060,5.917,5075,4.469,5112,5.769,5324,4.469,5393,4.469,5414,6.836,5422,4.469,5423,5.769,5426,4.469,5440,5.769,5441,5.769,5484,4.469,5485,4.469,5486,5.086,5487,5.086,5488,5.086,5489,5.086,5490,6.566,5491,6.566,5492,5.086,5493,5.086,5494,5.086,5495,5.086,5496,5.086,5497,5.086,5498,5.086,5499,5.086,5500,5.086,5501,6.566,5502,7.272,5503,6.566,5504,5.086,5505,7.272,5506,5.086,5507,5.086,5508,5.086,5509,5.086,5510,5.086,5511,5.086,5512,5.086,5513,5.086,5514,5.086,5515,5.086,5516,5.086,5517,5.086,5518,5.086,5519,5.086,5520,5.086]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.17",{"_index":5051,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":5250,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3054,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":5259,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":2934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":5142,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5170,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5133,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5150,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5152,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5128,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5137,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5182,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5136,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":5157,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":5081,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":5091,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["02cb2c5",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":5044,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4834,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["0699178",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["0ed3875",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1114,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1',space,'(',number,number,number,')',space,number,number,number",{"_index":3992,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["1.0.0",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":4907,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":5149,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5161,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5181,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":5138,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5154,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":5192,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":5163,"title":{},"body":{"coverage.html":{}}}],["1/25",{"_index":5141,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":5148,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":5166,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5147,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5143,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5187,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5134,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5171,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5145,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5139,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2354,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["10.256s",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":5153,"title":{},"body":{"coverage.html":{}}}],["10/38",{"_index":5156,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1235,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1024",{"_index":3023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":3041,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["10^10",{"_index":3782,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["10th",{"_index":4436,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["11",{"_index":2804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["111",{"_index":3922,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["1111",{"_index":3921,"title":{},"body":{"components/PhnComponent.html":{}}}],["12",{"_index":2808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1251212",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["126d876",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["1303722",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"overview.html":{}}}],["15",{"_index":2828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["150",{"_index":4605,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["151f173",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1650a23",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["16be24b",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["16da113",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["18",{"_index":2842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["180",{"_index":4373,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2498,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2850,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["19/23",{"_index":5132,"title":{},"body":{"coverage.html":{}}}],["1].iscomplete",{"_index":1162,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":4021,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":5088,"title":{},"body":{"changelog.html":{}}}],["1c51f01",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["1f1a0f9",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":692,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":5351,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3706,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.1",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["2.0.550",{"_index":5256,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":5355,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["2.1.4",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["2.10.0",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["2.11.0",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["2.12.0",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["2.13.0",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["2.14.0",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["2.15.0",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["2.16.0",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["2.16.2",{"_index":5248,"title":{},"body":{"dependencies.html":{}}}],["2.17.0",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["2.17.1",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["2.18.0",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["2.18.1",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["2.19.0",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["2.20.0",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["2.20.1",{"_index":4661,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.21.0",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["2.22.0",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["2.23.0",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["2.24.0",{"_index":4641,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.26.0",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["2.27.0",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["2.5.2",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":5254,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["2.7.0",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["2.7.1",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["2.8.0",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["2.9.0",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["2/12",{"_index":5172,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":5155,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":5159,"title":{},"body":{"coverage.html":{}}}],["2/24",{"_index":5167,"title":{},"body":{"coverage.html":{}}}],["2/28",{"_index":5165,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5178,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5194,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":5158,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4708,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":5349,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4619,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2500,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["22",{"_index":4735,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2235059",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["224e362",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["22710b7",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":699,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":700,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":2611,"title":{},"body":{"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{}}}],["26",{"_index":4679,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26(a",{"_index":3541,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":3056,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":5080,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4675,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["27b488b",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4835,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["29",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["29c5160",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["29e521c",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["2a511e7",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["2c0b127",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["2c2f322",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":5078,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":693,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":5374,"title":{},"body":{"todo.html":{}}}],["3.2.0",{"_index":5255,"title":{},"body":{"dependencies.html":{}}}],["3/21",{"_index":5140,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5180,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":5184,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["300",{"_index":4369,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":2279,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"changelog.html":{}}}],["32",{"_index":3764,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["33",{"_index":5146,"title":{},"body":{"coverage.html":{}}}],["3300",{"_index":3059,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["34f0a40",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":5175,"title":{},"body":{"coverage.html":{}}}],["355945207",{"_index":3806,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":5090,"title":{},"body":{"changelog.html":{}}}],["36476f8",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":5190,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["3868c50",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["3a06f99",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["3a5677b",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["3f1149e",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"guards/RouteGuardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":5252,"title":{},"body":{"dependencies.html":{}}}],["4/14",{"_index":5189,"title":{},"body":{"coverage.html":{}}}],["4/25",{"_index":5164,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":5162,"title":{},"body":{"coverage.html":{}}}],["4/33",{"_index":5169,"title":{},"body":{"coverage.html":{}}}],["4/40",{"_index":5130,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2496,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["4/8",{"_index":5186,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5193,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":149,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["41f5609",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":5183,"title":{},"body":{"coverage.html":{}}}],["4295b03",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["4766a2b",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":5067,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["483b735",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":5074,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":5065,"title":{},"body":{"changelog.html":{}}}],["496c252",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":5083,"title":{},"body":{"changelog.html":{}}}],["4d39002",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["4f3e59f",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["4f8f2e7",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5/10",{"_index":5185,"title":{},"body":{"coverage.html":{}}}],["5/14",{"_index":5176,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["5069fe8",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["510ad9e",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["51bfe3b",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":3995,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5555",{"_index":3996,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5910979",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["5965aec",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["5a7c37b",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["5b18c5f",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["5b88093",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["5bb54fc",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["5d8f61d",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":2786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.4.0",{"_index":5257,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":5335,"title":{},"body":{"index.html":{}}}],["60befc2",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["6242bea",{"_index":5058,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["6427f10",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":5059,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":5038,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":5177,"title":{},"body":{"coverage.html":{}}}],["66e58e7",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["66f9608",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["67b6f78",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":5093,"title":{},"body":{"changelog.html":{}}}],["6f093d2",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":5245,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":5188,"title":{},"body":{"coverage.html":{}}}],["7/28",{"_index":5151,"title":{},"body":{"coverage.html":{}}}],["7/38",{"_index":5144,"title":{},"body":{"coverage.html":{}}}],["7226b37",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["730f9c7",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["7355610",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["7398e93",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["7400a64",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":5179,"title":{},"body":{"coverage.html":{}}}],["7c99c1e",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["7d274e8",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["7d2e7cd",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":5032,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":5030,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["8.9.4",{"_index":5333,"title":{},"body":{"index.html":{}}}],["8/21",{"_index":5191,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":5160,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":5174,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":5085,"title":{},"body":{"changelog.html":{}}}],["82",{"_index":5131,"title":{},"body":{"coverage.html":{}}}],["8361a0e",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["8380850",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["83d31d",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["85eab15",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["867f969",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["88",{"_index":5173,"title":{},"body":{"coverage.html":{}}}],["88bc3f3",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["8a22405",{"_index":5072,"title":{},"body":{"changelog.html":{}}}],["8aa41ec",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["8f6886f",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["9.0.0",{"_index":5251,"title":{},"body":{"dependencies.html":{}}}],["9/49",{"_index":5135,"title":{},"body":{"coverage.html":{}}}],["901885e",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["96a58b1",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["978250b",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["9855d9c",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["996cad7",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["9])[a",{"_index":4475,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["9][a",{"_index":4472,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["9]{1}\\\\d{2",{"_index":3980,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["9a38474",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["9dc5375",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["9f5a04e",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":702,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["_applicationheadermap",{"_index":3589,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_bypassguards",{"_index":1099,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_context",{"_index":5287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_continue",{"_index":4176,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":4178,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_headers",{"_index":112,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_log",{"_index":1549,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_log(message",{"_index":1472,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_logerror",{"_index":1550,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_logerror(errormessage",{"_index":1475,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_name",{"_index":3895,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":3896,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":425,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":701,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["_only_",{"_index":4530,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":703,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["_options",{"_index":5314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_sendlog",{"_index":1551,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_sendlog(message",{"_index":1496,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_starturl",{"_index":1100,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_value",{"_index":4126,"title":{},"body":{"components/RadioComponent.html":{}}}],["a11y",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["a1a",{"_index":4020,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a27faa9",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["a512eb0",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["a702d6d",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["aa",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["aa2b7f9",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["aad93b5",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1306,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ability",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["abiltiy",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["abilty",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["abort",{"_index":2807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3707,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":5084,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":15,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractcontrol",{"_index":2587,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["abstractform",{"_index":1,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstracthttpservice",{"_index":105,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:11",{"_index":1575,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:16",{"_index":1574,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:22",{"_index":1569,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:30",{"_index":1571,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:38",{"_index":1572,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:59",{"_index":1570,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstractpgcheckservice",{"_index":197,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":4164,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstracttestpage",{"_index":230,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":1688,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["ac9d61c",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":3069,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":2772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["accepting",{"_index":4612,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["access",{"_index":40,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":775,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["accessibility",{"_index":4576,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["accessible",{"_index":2478,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":117,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["accidentally",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["accomplish",{"_index":4613,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["accordion",{"_index":475,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":498,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":479,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":477,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":466,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":471,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":4269,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":4315,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["account",{"_index":4121,"title":{},"body":{"components/RadioComponent.html":{}}}],["accusamus",{"_index":1307,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aceb028",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["acl",{"_index":3637,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3547,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":52,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":4182,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["activeindex",{"_index":4499,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2516,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":605,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":5346,"title":{},"body":{"index.html":{}}}],["add",{"_index":188,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":1391,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["adding",{"_index":1646,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["addition",{"_index":3383,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["additional",{"_index":4781,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"changelog.html":{}}}],["additionaldocumentation",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["addline(line",{"_index":753,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addpackagejsonscript",{"_index":5235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagejsonscript(tree",{"_index":5284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addpackagetopackagejson",{"_index":5227,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagetopackagejson(host",{"_index":5298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addr",{"_index":681,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/getting-started.html":{}}}],["addr.city",{"_index":3411,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.country",{"_index":3412,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.province",{"_index":3414,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.street",{"_index":3415,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["address",{"_index":628,"title":{"classes/Address.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":500,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":5415,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address(val",{"_index":665,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.addressline2",{"_index":679,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.html",{"_index":644,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.scss",{"_index":645,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.model.ts",{"_index":5383,"title":{},"body":{"todo.html":{}}}],["address1",{"_index":612,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["address2",{"_index":613,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address3",{"_index":614,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address_url",{"_index":3283,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":668,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addresscomponent",{"_index":499,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":816,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline${line",{"_index":770,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline1",{"_index":853,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["addressline2",{"_index":718,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline3",{"_index":854,"title":{},"body":{"classes/Address.html":{}}}],["addressmodel",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["addresss",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["addrlabellist",{"_index":607,"title":{"interfaces/AddrLabelList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["addrlabels",{"_index":687,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addrlookup",{"_index":769,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["adds",{"_index":670,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["addtag",{"_index":2562,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2563,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1274,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3551,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":950,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":5073,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["af91989",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["affect",{"_index":5101,"title":{},"body":{"contributing.html":{}}}],["afg",{"_index":1662,"title":{},"body":{"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":1663,"title":{},"body":{"interfaces/CountryList.html":{}}}],["africa",{"_index":2118,"title":{},"body":{"interfaces/CountryList.html":{}}}],["african",{"_index":1759,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2646,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":2649,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["again",{"_index":2275,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["against",{"_index":4425,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{}}}],["age",{"_index":3864,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":1675,"title":{},"body":{"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3595,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":249,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":5357,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3572,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":289,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":1677,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aka",{"_index":3513,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":1664,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alb",{"_index":1667,"title":{},"body":{"interfaces/CountryList.html":{}}}],["albania",{"_index":1668,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alberta",{"_index":4078,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":1670,"title":{},"body":{"interfaces/CountryList.html":{}}}],["algorithm",{"_index":2833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1332,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allmembers",{"_index":4122,"title":{},"body":{"components/RadioComponent.html":{}}}],["allow",{"_index":1547,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["allowed",{"_index":3044,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["allowemptyvalue",{"_index":4415,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"miscellaneous/functions.html":{}}}],["allowextralines",{"_index":680,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["allowing",{"_index":1127,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["alone",{"_index":3571,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":126,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1463,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1383,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":172,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["american",{"_index":1672,"title":{},"body":{"interfaces/CountryList.html":{}}}],["amet",{"_index":1272,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["amultiples",{"_index":3013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":3025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["and/or",{"_index":4037,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["andorra",{"_index":1674,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angola",{"_index":1676,"title":{},"body":{"interfaces/CountryList.html":{}}}],["anguilla",{"_index":1678,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angular",{"_index":68,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1527,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{},"contributing.html":{}}}],["angular.json",{"_index":5484,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":5244,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1091,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":165,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":5246,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":85,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1048,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1086,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":86,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":942,"title":{},"body":{"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1319,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":63,"title":{},"body":{"classes/AbstractForm.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["answer",{"_index":1043,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":1026,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":1680,"title":{},"body":{"interfaces/CountryList.html":{}}}],["antigua",{"_index":1682,"title":{},"body":{"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":3123,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1376,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["anywhere",{"_index":5436,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":5313,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["aperiam",{"_index":1295,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":107,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":1038,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apiservice",{"_index":5411,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apistatuscodes",{"_index":1594,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"miscellaneous/enumerations.html":{}}}],["apistatuscodes.error",{"_index":1605,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.success",{"_index":1595,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.warning",{"_index":1606,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apostrophe",{"_index":3249,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["apostrophes",{"_index":1263,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["app",{"_index":3500,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["app.component.ts",{"_index":5289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appcomponentcss",{"_index":5206,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":5207,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2698,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":5112,"title":{},"body":{"contributing.html":{},"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":283,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2492,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["applicable",{"_index":812,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["applicant",{"_index":1128,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":1131,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":360,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":205,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3537,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2675,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1442,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["applications",{"_index":909,"title":{},"body":{"classes/Address.html":{},"components/PhoneNumberComponent.html":{}}}],["appropriate",{"_index":766,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":3012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["april",{"_index":2300,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["arab",{"_index":2143,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arabia",{"_index":2093,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arbitrarily",{"_index":5116,"title":{},"body":{"contributing.html":{}}}],["architecto",{"_index":1281,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1539,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["arg",{"_index":1684,"title":{},"body":{"interfaces/CountryList.html":{}}}],["argentina",{"_index":1685,"title":{},"body":{"interfaces/CountryList.html":{}}}],["args",{"_index":3097,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":2838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2372,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":3842,"title":{},"body":{"components/PasswordComponent.html":{},"changelog.html":{}}}],["arm",{"_index":1686,"title":{},"body":{"interfaces/CountryList.html":{}}}],["armenia",{"_index":1687,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aroud",{"_index":3453,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":3209,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["array",{"_index":2712,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/RadioComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["array(0",{"_index":2713,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["artifacts",{"_index":5505,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":1689,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ascension",{"_index":2065,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ask",{"_index":5345,"title":{},"body":{"index.html":{}}}],["asm",{"_index":1671,"title":{},"body":{"interfaces/CountryList.html":{}}}],["assets",{"_index":5478,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3465,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assistance",{"_index":3553,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":332,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["association",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["assuming",{"_index":5513,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":5392,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":259,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ata",{"_index":1679,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atf",{"_index":1837,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atg",{"_index":1681,"title":{},"body":{"interfaces/CountryList.html":{}}}],["attachmentorder",{"_index":1355,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attr",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":3840,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":397,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":3293,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":5066,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":2303,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["aus",{"_index":1690,"title":{},"body":{"interfaces/CountryList.html":{}}}],["australia",{"_index":1691,"title":{},"body":{"interfaces/CountryList.html":{}}}],["austria",{"_index":1693,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aut",{"_index":1692,"title":{},"body":{"interfaces/CountryList.html":{}}}],["autem",{"_index":1301,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":650,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2564,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":77,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":2803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":363,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["awkward",{"_index":3801,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":1694,"title":{},"body":{"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":1695,"title":{},"body":{"interfaces/CountryList.html":{}}}],["b",{"_index":4320,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b555787",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["b901868",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3535,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backdrop",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1521,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3557,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["backward",{"_index":907,"title":{},"body":{"classes/Address.html":{}}}],["bad",{"_index":5405,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["baee5ad",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["bahamas",{"_index":1697,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bahrain",{"_index":1699,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":1701,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bar",{"_index":53,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":533,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":4225,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":3167,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":3166,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":3165,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":3175,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:12",{"_index":3172,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:13",{"_index":3174,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":3173,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":3171,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":3200,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3190,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3176,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3191,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3201,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":3177,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":4523,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4526,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":4520,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4506,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3189,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4511,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3202,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4510,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4507,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4509,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4512,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":3164,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":4230,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":1703,"title":{},"body":{"interfaces/CountryList.html":{}}}],["barbuda",{"_index":1683,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bars",{"_index":5092,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":2062,"title":{},"body":{"interfaces/CountryList.html":{}}}],["base",{"_index":624,"title":{"classes/Base.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["base.component",{"_index":2669,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2677,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":1094,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:10",{"_index":3715,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:101",{"_index":1112,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:105",{"_index":1123,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:26",{"_index":1135,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:28",{"_index":1133,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:29",{"_index":1108,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:33",{"_index":1137,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:37",{"_index":1139,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:41",{"_index":1109,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:45",{"_index":1110,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:50",{"_index":1124,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:57",{"_index":1130,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:72",{"_index":1126,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:82",{"_index":1119,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:93",{"_index":1116,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":5480,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":1204,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":3281,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2668,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":302,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["basic",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":5361,"title":{},"body":{"license.html":{}}}],["bc",{"_index":813,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bcformat",{"_index":4476,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bcformat.test",{"_index":4477,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bclogobase64",{"_index":5211,"title":{},"body":{"coverage.html":{}}}],["bconly",{"_index":663,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["bdi",{"_index":1746,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beatae",{"_index":1325,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["become",{"_index":5391,"title":{},"body":{"todo.html":{}}}],["befc319",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2345,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":3244,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3516,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behavior",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{}}}],["behaviour",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["bein",{"_index":5114,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":1434,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":1706,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belarus",{"_index":1705,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belgium",{"_index":1707,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belize",{"_index":1709,"title":{},"body":{"interfaces/CountryList.html":{}}}],["below",{"_index":3512,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":1710,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beneficial",{"_index":3730,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["benefits",{"_index":3550,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":1711,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bermuda",{"_index":1713,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bes",{"_index":1718,"title":{},"body":{"interfaces/CountryList.html":{}}}],["best",{"_index":3449,"title":{},"body":{"components/HeaderComponent.html":{}}}],["better",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4587,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["bf3cf23",{"_index":5077,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":1743,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bg",{"_index":3837,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":1700,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bgr",{"_index":1741,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhr",{"_index":1698,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhs",{"_index":1696,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhutan",{"_index":1714,"title":{},"body":{"interfaces/CountryList.html":{}}}],["big",{"_index":3081,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":1723,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bind",{"_index":1181,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2731,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":678,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["birth",{"_index":3865,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":3857,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":1868,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1310,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":727,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":2060,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blob",{"_index":2826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":3004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":4114,"title":{},"body":{"components/RadioComponent.html":{}}}],["blr",{"_index":1704,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blue",{"_index":3444,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2684,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["blurevent",{"_index":1226,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["blz",{"_index":1708,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bmu",{"_index":1712,"title":{},"body":{"interfaces/CountryList.html":{}}}],["body",{"_index":155,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1512,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["boilerplate",{"_index":3517,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":1715,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":2193,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivia",{"_index":1716,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bonaire",{"_index":1719,"title":{},"body":{"interfaces/CountryList.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["bootstrap",{"_index":492,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":4270,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":1724,"title":{},"body":{"interfaces/CountryList.html":{}}}],["both",{"_index":244,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":1727,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bottom",{"_index":371,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":5341,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":1729,"title":{},"body":{"interfaces/CountryList.html":{}}}],["box",{"_index":310,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/YearValidateDirective.html":{}}}],["bps",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":1731,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brackets",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["brazil",{"_index":1732,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brb",{"_index":1702,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bread",{"_index":1609,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1638,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":518,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":4223,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1653,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1652,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1636,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1654,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1655,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1635,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3533,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":905,"title":{},"body":{"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/RadioComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["breaks",{"_index":3667,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["british",{"_index":1734,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":636,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["brn",{"_index":1738,"title":{},"body":{"interfaces/CountryList.html":{}}}],["broken",{"_index":5489,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":3143,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":2767,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2702,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":2865,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":422,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":446,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":429,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":368,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":426,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3531,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":1085,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":1739,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brunswick",{"_index":4081,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["btn",{"_index":982,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":968,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":2967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"contributing.html":{}}}],["buiding",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3802,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":5434,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["build_utils/commit",{"_index":5125,"title":{},"body":{"contributing.html":{}}}],["building",{"_index":5423,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":4725,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":5231,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3447,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":1742,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bullet",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["burkina",{"_index":1744,"title":{},"body":{"interfaces/CountryList.html":{}}}],["burundi",{"_index":1747,"title":{},"body":{"interfaces/CountryList.html":{}}}],["button",{"_index":56,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":502,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":4283,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":964,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":963,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4571,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{},"todo.html":{}}}],["button.component.ts:15",{"_index":4575,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4577,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4574,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:24",{"_index":4578,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":4579,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":4282,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":501,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":997,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":503,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":948,"title":{},"body":{"components/ButtonComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["buttontype",{"_index":966,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":1728,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bwa",{"_index":1726,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bypass",{"_index":1140,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bypassguards",{"_index":1107,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1406,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3542,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":5056,"title":{},"body":{"changelog.html":{}}}],["c122a2a",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["c2fd959",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["c6067fd",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["c64c066",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["c78856a",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":5096,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":1757,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":2173,"title":{},"body":{"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4502,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":3863,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":2004,"title":{},"body":{"interfaces/CountryList.html":{}}}],["call",{"_index":1505,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":3110,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":3098,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":2968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"miscellaneous/functions.html":{}}}],["caller",{"_index":2264,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["calling",{"_index":351,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3608,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":5475,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":1749,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cameroon",{"_index":1751,"title":{},"body":{"interfaces/CountryList.html":{}}}],["can't",{"_index":2730,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":4166,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":4181,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":4167,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":4186,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canada",{"_index":631,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":221,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":2855,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":14,"title":{},"body":{"classes/AbstractForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["canda",{"_index":3413,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["cannotopen",{"_index":1385,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1387,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2720,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":3119,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":3002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":1753,"title":{},"body":{"interfaces/CountryList.html":{}}}],["capitalize",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["captcha",{"_index":1052,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":506,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":1088,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":1059,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":5263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":505,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":1027,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":1062,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":3145,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2704,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":2867,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1507,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4517,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":364,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1098,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":4568,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":167,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["catcherror(err",{"_index":3390,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["categories",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":3072,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":1756,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["cbbfaa8",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":1769,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cd",{"_index":2240,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["cdnformat",{"_index":4470,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["cdnformat.test",{"_index":4474,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["center",{"_index":1643,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":1758,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cf962bc",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["chaange",{"_index":4531,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":1762,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chain",{"_index":3669,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["chanfges",{"_index":5519,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":906,"title":{},"body":{"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2320,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["changedetection",{"_index":4497,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4528,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4498,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":2241,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4617,"title":{"changelog.html":{}},"body":{"changelog.html":{},"contributing.html":{}}}],["changelog.md",{"_index":5055,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":957,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.address",{"_index":3392,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue",{"_index":3400,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue._geocoderfulladdress",{"_index":3393,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.password",{"_index":3825,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":748,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['countrylist'].currentvalue",{"_index":749,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['images",{"_index":2758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue",{"_index":2759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":751,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['provincelist'].currentvalue",{"_index":752,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changing",{"_index":2529,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["character",{"_index":3250,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["characters",{"_index":1260,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["che",{"_index":2139,"title":{},"body":{"interfaces/CountryList.html":{}}}],["check",{"_index":309,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["check.directive",{"_index":4289,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["check.directive.ts",{"_index":2583,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["check.directive.ts:35",{"_index":2586,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.directive.ts:37",{"_index":2588,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.service",{"_index":1141,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":200,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:24",{"_index":225,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:25",{"_index":228,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":229,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":226,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check/duplicate",{"_index":2582,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":287,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":508,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":1173,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1172,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":5385,"title":{},"body":{"todo.html":{}}}],["checkboxcomponent",{"_index":507,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":1092,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":250,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkdigit",{"_index":4434,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["checkforduplicates",{"_index":2591,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkforduplicates(control",{"_index":5306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkimagedimensions(file",{"_index":3161,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":1142,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":294,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"miscellaneous/functions.html":{}}}],["checksum",{"_index":1408,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3518,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{}}}],["chile",{"_index":1764,"title":{},"body":{"interfaces/CountryList.html":{}}}],["china",{"_index":1766,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chl",{"_index":1763,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chn",{"_index":1765,"title":{},"body":{"interfaces/CountryList.html":{}}}],["choice",{"_index":412,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["chore",{"_index":5111,"title":{},"body":{"contributing.html":{}}}],["christmas",{"_index":1768,"title":{},"body":{"interfaces/CountryList.html":{}}}],["circle",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["city",{"_index":615,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateCityDirective.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":510,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":1217,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.scss",{"_index":1216,"title":{},"body":{"components/CityComponent.html":{}}}],["city.directive",{"_index":4295,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["city.directive.ts",{"_index":4396,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["city.directive.ts:26",{"_index":4398,"title":{},"body":{"directives/ValidateCityDirective.html":{}}}],["city/country/province",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":1232,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":509,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3312,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":1785,"title":{},"body":{"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":303,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":5034,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":731,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["clearable",{"_index":2565,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2412,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleardate",{"_index":2406,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2482,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["clears",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":5452,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":488,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["click)=\"showfullsizeview",{"_index":4379,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":251,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":299,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":252,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":307,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":253,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4573,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["clicking",{"_index":271,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":254,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":316,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":60,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":255,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":150,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":5455,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3529,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SampleModalComponent.html":{}}}],["closemodal",{"_index":4204,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["closes",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":1066,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":1067,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":1068,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":1069,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":4217,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":4218,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":4219,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmr",{"_index":1750,"title":{},"body":{"interfaces/CountryList.html":{}}}],["coard",{"_index":5347,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":1770,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cod",{"_index":1778,"title":{},"body":{"interfaces/CountryList.html":{}}}],["code",{"_index":695,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":556,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":4249,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":4011,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":4010,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":4009,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:102",{"_index":4033,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:106",{"_index":4032,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":4016,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":4014,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":4019,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":4022,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":4018,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:20",{"_index":4013,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:21",{"_index":4015,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:24",{"_index":4023,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:30",{"_index":4043,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:35",{"_index":4025,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:36",{"_index":4024,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":4042,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:39",{"_index":4041,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:41",{"_index":4040,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:48",{"_index":4035,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:49",{"_index":4012,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:51",{"_index":4036,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:60",{"_index":4026,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:64",{"_index":4028,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:74",{"_index":4027,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:79",{"_index":4034,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:86",{"_index":4029,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:91",{"_index":4030,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:95",{"_index":4031,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":4008,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":4279,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["codes",{"_index":1604,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["cog",{"_index":1776,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cok",{"_index":1780,"title":{},"body":{"interfaces/CountryList.html":{}}}],["col",{"_index":1772,"title":{},"body":{"interfaces/CountryList.html":{}}}],["collected",{"_index":3538,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":290,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":1773,"title":{},"body":{"interfaces/CountryList.html":{}}}],["colons",{"_index":5106,"title":{},"body":{"contributing.html":{}}}],["color",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["colour",{"_index":961,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["colours",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":4039,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3708,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":1774,"title":{},"body":{"interfaces/CountryList.html":{}}}],["come",{"_index":3534,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":5035,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":3311,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":4822,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["commits",{"_index":5097,"title":{},"body":{"contributing.html":{}}}],["committed",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":5005,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":235,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commondatefieldformat",{"_index":2368,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":578,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commondayvalidation][ngmodel",{"_index":2543,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["commondayvalidation][ngmodel]'},{'name",{"_index":580,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatecheck",{"_index":2584,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonduplicatecheck(duplist",{"_index":5307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonduplicatecheck]'},{'name",{"_index":582,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatesin",{"_index":2596,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["commonformactionbar",{"_index":3704,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commongeocoderinput",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["commonimage",{"_index":1351,"title":{"classes/CommonImage.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1366,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":2907,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":2912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":3134,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":2904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1388,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":3104,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":2956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":3046,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1409,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1413,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":2878,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogger",{"_index":1438,"title":{"injectables/CommonLogger.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1430,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1090,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonvalidatebcpostal",{"_index":4389,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":584,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatecity",{"_index":4397,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["commonvalidatecity]'},{'name",{"_index":586,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateemail",{"_index":4403,"title":{},"body":{"directives/ValidateEmailDirective.html":{},"coverage.html":{}}}],["commonvalidateemail]'},{'name",{"_index":588,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4410,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":590,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephn",{"_index":4414,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonvalidatephn(isbcphn",{"_index":5308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonvalidatephn]'},{'name",{"_index":592,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephone",{"_index":3949,"title":{},"body":{"components/PhoneNumberComponent.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["commonvalidatephone(control",{"_index":4450,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["commonvalidatephone]'},{'name",{"_index":594,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatepostalcode",{"_index":4464,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonvalidatepostalcode(hasmask",{"_index":5310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonvalidatepostalcode]'},{'name",{"_index":596,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateregion",{"_index":4482,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["commonvalidateregion]'},{'name",{"_index":598,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatesin",{"_index":4487,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["commonvalidatesin]'},{'name",{"_index":600,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatestreet",{"_index":4493,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["commonvalidatestreet]'},{'name",{"_index":602,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonyearvalidate",{"_index":4595,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["commonyearvalidate][ngmodel",{"_index":604,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["comoros",{"_index":1775,"title":{},"body":{"interfaces/CountryList.html":{}}}],["compare",{"_index":4435,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["comparing",{"_index":4614,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["compat",{"_index":3075,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compatibilty",{"_index":908,"title":{},"body":{"classes/Address.html":{}}}],["compatible",{"_index":4844,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":5460,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":4947,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":5431,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":5425,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":272,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["completed",{"_index":1122,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":1143,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1640,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":5352,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3485,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":5095,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":313,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3596,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":497,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentlist",{"_index":4310,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":407,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":4271,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":4255,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":4259,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":4261,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":4262,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":4257,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/validate",{"_index":4294,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/confirm",{"_index":4306,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":4263,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":4222,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":3279,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":4238,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":4235,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/day",{"_index":4236,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/year",{"_index":4240,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":4242,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":4251,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/duplicate",{"_index":4288,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/email.component",{"_index":4301,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/validate",{"_index":4302,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/error",{"_index":4290,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":4244,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":4224,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":4276,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/geocoder",{"_index":4308,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":4278,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":4318,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":4265,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":4272,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":4226,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":4228,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":4275,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/validate",{"_index":4286,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":4266,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":4248,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":4256,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":4268,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sample",{"_index":4300,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":4274,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/validate",{"_index":4284,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":4258,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/validate",{"_index":4292,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":4246,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":4254,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/validate",{"_index":4296,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":4229,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":4281,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":5474,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3524,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["computers",{"_index":5380,"title":{},"body":{"todo.html":{}}}],["concatenate",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["concatenates",{"_index":3876,"title":{},"body":{"classes/Person.html":{}}}],["conditions",{"_index":5363,"title":{},"body":{"license.html":{}}}],["config",{"_index":5094,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":5226,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configurable",{"_index":4446,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1644,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1504,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":1080,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configures",{"_index":5321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":5512,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":512,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["confirmation",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["confirmtemplatecomponent",{"_index":511,"title":{"components/ConfirmTemplateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conform",{"_index":5121,"title":{},"body":{"contributing.html":{}}}],["congo",{"_index":1777,"title":{},"body":{"interfaces/CountryList.html":{}}}],["connected",{"_index":3408,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["connectivity",{"_index":1481,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["consectetur",{"_index":1273,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":295,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3562,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":514,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":884,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":951,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1492,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PageFrameworkComponent.html":{},"todo.html":{}}}],["console",{"_index":189,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('an",{"_index":1519,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error('geocoder",{"_index":3317,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3614,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1523,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3615,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1502,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log",{"_index":182,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["console.log(\"error",{"_index":3138,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":2858,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":2915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":2894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":3042,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":2873,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3613,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":193,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":2978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":3088,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":3156,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1513,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log('opening",{"_index":2931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('scaled",{"_index":4376,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('setphonenumber",{"_index":4002,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["console.log('start",{"_index":2994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('this",{"_index":3100,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":3028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":2990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":3129,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":3159,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(response",{"_index":3158,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3628,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":2917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log({valid",{"_index":4462,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["const",{"_index":174,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":359,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["constructor(@optional",{"_index":3384,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["constructor(controldir",{"_index":1177,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["constructor(errorcode",{"_index":1420,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(form",{"_index":2239,"title":{},"body":{"components/DateComponent.html":{}}}],["constructor(http",{"_index":119,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":1033,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(message",{"_index":3664,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["constructor(private",{"_index":1054,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1402,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":21,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":4358,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1414,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":5518,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3555,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":1255,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["container",{"_index":1607,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/ErrorContainerComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":529,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["container.component",{"_index":4291,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["container.component.html",{"_index":2636,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.scss",{"_index":2635,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.ts",{"_index":2634,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:10",{"_index":2638,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.length",{"_index":4560,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container/error",{"_index":2633,"title":{},"body":{"components/ErrorContainerComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["container[0].scrollleft",{"_index":4565,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["contains",{"_index":3791,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["content",{"_index":278,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["contentchild",{"_index":2647,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2709,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3489,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1356,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":5241,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":16,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["continuebutton",{"_index":247,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contrast",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["contributing",{"_index":4880,"title":{"contributing.html":{}},"body":{"changelog.html":{},"contributing.html":{}}}],["contributing.md",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":1206,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["control.value",{"_index":2552,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["controlcontainer",{"_index":621,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":1174,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controldir.valueaccessor",{"_index":1208,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controls",{"_index":3579,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["controlvalueaccessor",{"_index":622,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["conventional",{"_index":5387,"title":{},"body":{"todo.html":{}}}],["convert",{"_index":2257,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2407,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2450,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["converted",{"_index":743,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["convertroutetotitle",{"_index":1612,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1617,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1619,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2408,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2452,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cook",{"_index":1781,"title":{},"body":{"interfaces/CountryList.html":{}}}],["copied",{"_index":389,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copies",{"_index":5312,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copy",{"_index":818,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["copy(object",{"_index":880,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3558,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":5197,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copylicense(_options",{"_index":5311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copyright",{"_index":5348,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":5236,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copyversionfile(options",{"_index":5286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":517,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":4221,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1641,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":516,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1321,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":5089,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correcting",{"_index":5109,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":4169,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["correspond",{"_index":245,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":353,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":399,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["costa",{"_index":1783,"title":{},"body":{"interfaces/CountryList.html":{}}}],["could've",{"_index":2839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["counter",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":256,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":323,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1657,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country",{"_index":382,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["country'},{'name",{"_index":520,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":2215,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country.component.scss",{"_index":2216,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":634,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["country/prov",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["country/province",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["country/province/region",{"_index":4484,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["country_",{"_index":2217,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country_list",{"_index":633,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["country_list.find",{"_index":2213,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycode",{"_index":1658,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/functions.html":{}}}],["countrycomponent",{"_index":519,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":630,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["countryobj",{"_index":807,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.countrycode",{"_index":811,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.description",{"_index":2214,"title":{},"body":{"interfaces/CountryList.html":{}}}],["counts",{"_index":325,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":5126,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":1752,"title":{},"body":{"interfaces/CountryList.html":{}}}],["create",{"_index":947,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["created",{"_index":2727,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"contributing.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":5219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createifmissing(host",{"_index":5315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":5445,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["creating",{"_index":1095,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":1782,"title":{},"body":{"interfaces/CountryList.html":{}}}],["criteria",{"_index":3811,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test",{"_index":4394,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test(control.value",{"_index":4406,"title":{},"body":{"directives/ValidateEmailDirective.html":{}}}],["criteriamsg",{"_index":3745,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":1789,"title":{},"body":{"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1610,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":3118,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":1790,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cuba",{"_index":1791,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cunha",{"_index":2068,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1329,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":1793,"title":{},"body":{"interfaces/CountryList.html":{}}}],["curr",{"_index":3068,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["current",{"_index":2328,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["currently",{"_index":297,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":3115,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currentyear",{"_index":4602,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["custom",{"_index":409,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["customize",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3578,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":1792,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cxr",{"_index":1767,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cycles",{"_index":2519,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cym",{"_index":1755,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyp",{"_index":1794,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyprus",{"_index":1795,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cze",{"_index":1796,"title":{},"body":{"interfaces/CountryList.html":{}}}],["czech",{"_index":1797,"title":{},"body":{"interfaces/CountryList.html":{}}}],["côte",{"_index":1786,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d",{"_index":3043,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["d.ts",{"_index":5438,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d4f0e3b",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["d5dd02f",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":876,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["d\\'ivoire",{"_index":1787,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2386,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":2067,"title":{},"body":{"interfaces/CountryList.html":{}}}],["danger",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["darken",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["darussalam",{"_index":1740,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1648,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":192,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.city",{"_index":821,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.country",{"_index":823,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.province",{"_index":822,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.service",{"_index":1089,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":1029,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":4212,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":4215,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":4213,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":1034,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":1041,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":1045,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":1037,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":4214,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":820,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["datachange",{"_index":1003,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2722,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":2791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1469,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["date'},{'name",{"_index":522,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2484,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.component.html",{"_index":2221,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.scss",{"_index":2220,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.ts",{"_index":4321,"title":{},"body":{"interfaces/SimpleDate.html":{},"todo.html":{}}}],["date.day",{"_index":2486,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2481,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2479,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2480,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.interface",{"_index":2316,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["date.interface.ts",{"_index":4317,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2485,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2483,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date/date.component",{"_index":2477,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datechange",{"_index":2238,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":521,"title":{"components/DateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":2246,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":577,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2413,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1468,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["dateofbirth",{"_index":3849,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":3853,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2323,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":524,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2401,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2400,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":523,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2402,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2403,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2445,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2494,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dates",{"_index":2432,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["datetime",{"_index":2472,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["day",{"_index":2262,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["day_",{"_index":2282,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["daylabelforid",{"_index":2222,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["dayoutofrange",{"_index":2287,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dayref",{"_index":2223,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["days",{"_index":2278,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["daysinmonth",{"_index":2555,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["dayvalidationdirective",{"_index":579,"title":{"directives/DayValidationDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dbb94e1",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["dd",{"_index":4609,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["dd29a60",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":5473,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":3254,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["debouncetime(500",{"_index":3387,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["december",{"_index":2307,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["declarations",{"_index":1064,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":37,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":5402,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":43,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["defaultcolor",{"_index":3168,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["defaultcountry",{"_index":659,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulted",{"_index":685,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulterrmsg",{"_index":1218,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["defaulterrmsg.dayoutofrange",{"_index":2360,"title":{},"body":{"components/DateComponent.html":{}}}],["defaulterrmsg.invalidbcpostal",{"_index":4046,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidchar",{"_index":1350,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{}}}],["defaulterrmsg.invalidvalue",{"_index":2365,"title":{},"body":{"components/DateComponent.html":{}}}],["defaulterrmsg.nofuturedatesallowed",{"_index":2364,"title":{},"body":{"components/DateComponent.html":{}}}],["defaulterrmsg.nopastdatesallowed",{"_index":2363,"title":{},"body":{"components/DateComponent.html":{}}}],["defaulterrmsg.pattern",{"_index":4045,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.required",{"_index":1349,"title":{},"body":{"components/CityComponent.html":{},"components/DateComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{}}}],["defaulterrmsg.yeardistantfuture",{"_index":2362,"title":{},"body":{"components/DateComponent.html":{}}}],["defaulterrmsg.yeardistantpast",{"_index":2361,"title":{},"body":{"components/DateComponent.html":{}}}],["defaulterrormessage",{"_index":1175,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["defaultprovince",{"_index":660,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaults",{"_index":750,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2511,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["delay",{"_index":2661,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":3140,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"todo.html":{}}}],["delete(evt",{"_index":4363,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage",{"_index":4357,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":3149,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delivery",{"_index":691,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["democratic",{"_index":1779,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denmark",{"_index":1799,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denominator",{"_index":4545,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":933,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":5483,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["depending",{"_index":763,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["deployed",{"_index":1081,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3486,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecate",{"_index":3988,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["deprecated",{"_index":987,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["desc",{"_index":4200,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["description",{"_index":109,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["descriptions",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["deserunt",{"_index":1337,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":609,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3514,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":5398,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["details",{"_index":5119,"title":{},"body":{"contributing.html":{}}}],["detect",{"_index":2755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["detection",{"_index":2518,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["detector",{"_index":2754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["deteremines",{"_index":4451,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["determine",{"_index":888,"title":{},"body":{"classes/Address.html":{},"directives/DayValidationDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["determines",{"_index":55,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":1846,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dev",{"_index":1154,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["development",{"_index":3880,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3523,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/schematics",{"_index":5454,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":2929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["diff",{"_index":3904,"title":{},"body":{"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["differ",{"_index":5515,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["different",{"_index":4448,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"additional-documentation/local-development/components.html":{}}}],["digit",{"_index":4437,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["direcive",{"_index":3948,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["directive",{"_index":495,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["directive's",{"_index":3597,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directive/function",{"_index":4447,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["directives",{"_index":576,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"overview.html":{}}}],["directly",{"_index":894,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disable",{"_index":653,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disablebefore",{"_index":2442,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disablecontinue",{"_index":3584,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["disabled",{"_index":10,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["disablegeocoder",{"_index":661,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disables",{"_index":32,"title":{},"body":{"classes/AbstractForm.html":{}}}],["disablesince",{"_index":2414,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2415,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3511,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":3424,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["display",{"_index":713,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["display=\"table",{"_index":4108,"title":{},"body":{"components/RadioComponent.html":{}}}],["display='inline",{"_index":4113,"title":{},"body":{"components/RadioComponent.html":{}}}],["displayed",{"_index":298,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["displayerror",{"_index":2637,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["displayicon",{"_index":1590,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["displaying",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":3954,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2654,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/common",{"_index":5511,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distinctio",{"_index":1300,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":3380,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["distributed",{"_index":5360,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4429,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["divisible",{"_index":4490,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["divs",{"_index":3727,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["dji",{"_index":1800,"title":{},"body":{"interfaces/CountryList.html":{}}}],["djibouti",{"_index":1801,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dma",{"_index":1802,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dnk",{"_index":1798,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dob",{"_index":3869,"title":{},"body":{"classes/Person.html":{}}}],["dobdt",{"_index":3902,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":3850,"title":{},"body":{"classes/Person.html":{}}}],["doc",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["docinitparams",{"_index":3120,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3560,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"contributing.html":{}}}],["document",{"_index":2599,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":430,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":3116,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":3091,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4558,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":3757,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":3775,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4633,"title":{},"body":{"changelog.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2718,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["doing",{"_index":990,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1270,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":468,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":1803,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dominican",{"_index":1804,"title":{},"body":{"interfaces/CountryList.html":{}}}],["don't",{"_index":1183,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"contributing.html":{}}}],["don'ts",{"_index":5400,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":2840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3527,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":5399,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3712,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":370,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":2768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":2854,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":2852,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":2856,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":2776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":327,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":525,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2561,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2560,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":380,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":2770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":2860,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":2862,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2700,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1324,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1530,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dummy",{"_index":3881,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":333,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["duplicatecheckdirective",{"_index":581,"title":{"directives/DuplicateCheckDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duplist",{"_index":2585,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"miscellaneous/functions.html":{}}}],["duplist.find",{"_index":2593,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.length",{"_index":2592,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["dutch",{"_index":2107,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dynamic",{"_index":5247,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":764,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["dza",{"_index":1669,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d{3",{"_index":3981,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["d{4",{"_index":3982,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["e",{"_index":3543,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":151,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e2271b7",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":237,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["e6db87e",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":2847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":850,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":2841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":958,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["easily",{"_index":2829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":3199,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ebb6998",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["ecu",{"_index":1805,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ecuador",{"_index":1806,"title":{},"body":{"interfaces/CountryList.html":{}}}],["edf0b2e",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["edward",{"_index":4091,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["egy",{"_index":1807,"title":{},"body":{"interfaces/CountryList.html":{}}}],["egypt",{"_index":1808,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eib",{"_index":3018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":1810,"title":{},"body":{"interfaces/CountryList.html":{}}}],["element",{"_index":423,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["element's",{"_index":2797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":268,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":277,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":432,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":980,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":41,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageSectionComponent.html":{}}}],["elementsgit",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["eligibility",{"_index":3548,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1275,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["email",{"_index":2602,"title":{},"body":{"components/EmailComponent.html":{},"changelog.html":{}}}],["email'},{'name",{"_index":527,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["email.component.html",{"_index":2604,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":2603,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.directive",{"_index":4303,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["email.directive.ts",{"_index":4402,"title":{},"body":{"directives/ValidateEmailDirective.html":{},"coverage.html":{}}}],["email.directive.ts:13",{"_index":4404,"title":{},"body":{"directives/ValidateEmailDirective.html":{}}}],["email_",{"_index":2609,"title":{},"body":{"components/EmailComponent.html":{}}}],["emailcomponent",{"_index":526,"title":{"components/EmailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["embedded",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":2180,"title":{},"body":{"interfaces/CountryList.html":{}}}],["emit",{"_index":2525,"title":{},"body":{"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"changelog.html":{}}}],["emits",{"_index":5047,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":912,"title":{},"body":{"classes/Address.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/GeocoderInputComponent.html":{},"classes/Person.html":{},"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["enable",{"_index":5122,"title":{},"body":{"contributing.html":{}}}],["enabled",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["enables",{"_index":674,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["encapsulation",{"_index":2695,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["enclose",{"_index":3186,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":5481,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":3080,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":355,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":1044,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":5501,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["ensure",{"_index":1508,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":415,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["entered",{"_index":3526,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":3422,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["entries",{"_index":2741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":4934,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2672,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1377,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":5261,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":5420,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3499,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["environment",{"_index":1155,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["equation",{"_index":2933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":1813,"title":{},"body":{"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2440,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["eri",{"_index":1815,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eritrea",{"_index":1816,"title":{},"body":{"interfaces/CountryList.html":{}}}],["erorr",{"_index":3619,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":3350,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["errmsg",{"_index":3212,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":3846,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":3845,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":3276,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":3275,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":148,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('common",{"_index":4584,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["error('this",{"_index":3103,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1514,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1520,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":2903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":2914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":2906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":2909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1484,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.name",{"_index":1486,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.rawimagefile",{"_index":2908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":2910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1524,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1488,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error_fetch_img",{"_index":5272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":5275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1403,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{}}}],["errorcontainercomponent",{"_index":528,"title":{"components/ErrorContainerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordescription",{"_index":1404,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1392,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2721,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1516,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":1223,"title":{"interfaces/ErrorMessage.html":{}},"body":{"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["errormessagerequired",{"_index":1001,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["errormessages",{"_index":2235,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errormessages.dayoutofrange",{"_index":2533,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2538,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2537,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2536,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2532,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2535,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2534,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1485,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errorr",{"_index":4581,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["errorr.ts",{"_index":3663,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["errorr.ts:1",{"_index":3665,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["errorreason",{"_index":3112,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":1478,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":3066,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":3079,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":3078,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":2203,"title":{},"body":{"interfaces/CountryList.html":{}}}],["esp",{"_index":2123,"title":{},"body":{"interfaces/CountryList.html":{}}}],["especially",{"_index":3521,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1293,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":1817,"title":{},"body":{"interfaces/CountryList.html":{}}}],["estonia",{"_index":1818,"title":{},"body":{"interfaces/CountryList.html":{}}}],["et",{"_index":1312,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":384,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":1819,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":1820,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eum",{"_index":1304,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":1721,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ev",{"_index":3478,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4536,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2508,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4550,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":979,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["event.datatransfer.files",{"_index":2864,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":3410,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.jsdate",{"_index":2524,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":3426,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.preventdefault",{"_index":2863,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":3180,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2380,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":2629,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["event.target['files",{"_index":2870,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":618,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2377,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":3421,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["everything",{"_index":1465,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":3033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":2925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":2859,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":3035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.value",{"_index":4003,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["ex",{"_index":2322,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["exactly",{"_index":2886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":215,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":4173,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":5516,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":5457,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":2811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1490,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3703,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":5269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4564,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exendable",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["exercitationem",{"_index":1317,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1115,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["existing",{"_index":5110,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{}}}],["exists",{"_index":2324,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":489,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":480,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":5418,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":1053,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":1065,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":5365,"title":{},"body":{"license.html":{}}}],["extend",{"_index":852,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extends",{"_index":652,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":865,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["extract",{"_index":2813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":3814,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f103e7c",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["f2ccfe6",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["f541d81",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":3813,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facere",{"_index":1288,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":5496,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facing",{"_index":3618,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":144,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":1822,"title":{},"body":{"interfaces/CountryList.html":{}}}],["false",{"_index":45,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"todo.html":{}}}],["family",{"_index":3943,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["faroe",{"_index":1825,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faso",{"_index":1745,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faster",{"_index":5379,"title":{},"body":{"todo.html":{}}}],["favicon_base64",{"_index":5209,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4532,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["feat",{"_index":5099,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":5100,"title":{},"body":{"contributing.html":{}}}],["feature.properties",{"_index":3307,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["february",{"_index":2298,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["februrary",{"_index":2280,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["federated",{"_index":1977,"title":{},"body":{"interfaces/CountryList.html":{}}}],["federation",{"_index":2057,"title":{},"body":{"interfaces/CountryList.html":{}}}],["feedback",{"_index":3834,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":1030,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":1035,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":1031,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":1039,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":5270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["field",{"_index":421,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"coverage.html":{}}}],["fieldmaxlenghts",{"_index":698,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fields",{"_index":654,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["fieldset",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["fiji",{"_index":1827,"title":{},"body":{"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":2790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":3162,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":2946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1357,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["filecontrol",{"_index":2734,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":2940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":2876,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":2784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/functions.html":{}}}],["fileobservable",{"_index":2973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":2977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":2874,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":2875,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":2861,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":2871,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":3008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":3009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileupload",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["fileuploadbrowse",{"_index":2736,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4642,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":530,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":2881,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2643,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":883,"title":{},"body":{"classes/Address.html":{}}}],["fills",{"_index":2277,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["filter",{"_index":2658,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["filter((mspimage",{"_index":2889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3477,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":2872,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":788,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":1828,"title":{},"body":{"interfaces/CountryList.html":{}}}],["final",{"_index":2835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finaldigit",{"_index":4438,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["finally",{"_index":2843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":712,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["findcountrycode",{"_index":806,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["findprovincedescription(prov",{"_index":798,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fine",{"_index":1471,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["finish",{"_index":3528,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":2795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":1829,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fire",{"_index":3405,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["firefox",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":335,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":3213,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":3219,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2688,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4621,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["fixing",{"_index":3077,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fji",{"_index":1826,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flag",{"_index":3617,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["flags",{"_index":5057,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":5377,"title":{},"body":{"todo.html":{}}}],["flatmap",{"_index":2659,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":3724,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["flk",{"_index":1821,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flow",{"_index":4161,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["fluid",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":827,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["focus",{"_index":898,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["focusable",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":5414,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":5037,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["follow",{"_index":5098,"title":{},"body":{"contributing.html":{}}}],["followed",{"_index":3246,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":2319,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/SimpleDate.html":{},"additional-documentation/local-development/components.html":{}}}],["follows",{"_index":5386,"title":{},"body":{"todo.html":{}}}],["fonts",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":2273,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["forceoverwrite",{"_index":5300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forcerender",{"_index":2756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1510,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["form",{"_index":11,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["form.ts",{"_index":7,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["form.ts:10",{"_index":39,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:13",{"_index":31,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:15",{"_index":46,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:17",{"_index":24,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:30",{"_index":54,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:36",{"_index":74,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:45",{"_index":66,"title":{},"body":{"classes/AbstractForm.html":{}}}],["formactionbar",{"_index":3183,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["formactionbarcomponent",{"_index":532,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2429,"title":{},"body":{"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["format.directive",{"_index":4239,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2367,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2375,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2371,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":3854,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":3300,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formatting",{"_index":5104,"title":{},"body":{"contributing.html":{}}}],["formcontrol",{"_index":2476,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/GeocoderInputComponent.html":{},"directives/YearValidateDirective.html":{},"todo.html":{}}}],["former",{"_index":1949,"title":{},"body":{"interfaces/CountryList.html":{}}}],["formerrors",{"_index":257,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["forms",{"_index":2595,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["formsmodule",{"_index":1087,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmibar",{"_index":5375,"title":{},"body":{"todo.html":{}}}],["formsubmitbar",{"_index":3181,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":534,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":1073,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":620,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/YearValidateDirective.html":{}}}],["found",{"_index":212,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"contributing.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":5410,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":4940,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3701,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":1830,"title":{},"body":{"interfaces/CountryList.html":{}}}],["framework",{"_index":3198,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":544,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":4227,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3711,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3710,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3700,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3713,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3714,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3699,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":1831,"title":{},"body":{"interfaces/CountryList.html":{}}}],["free",{"_index":946,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3544,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":1833,"title":{},"body":{"interfaces/CountryList.html":{}}}],["friendly",{"_index":2827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":1824,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2655,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":2866,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":2868,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":2853,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":2920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":2922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":2923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":1975,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1296,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":536,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":3278,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":3882,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":3897,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":535,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":3236,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3577,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":776,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":236,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":3942,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["functions",{"_index":4519,"title":{"miscellaneous/functions.html":{}},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["futuna",{"_index":2202,"title":{},"body":{"interfaces/CountryList.html":{}}}],["future",{"_index":956,"title":{},"body":{"components/ButtonComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":4459,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":1840,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gabon",{"_index":1841,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gambia",{"_index":1843,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gbr",{"_index":2181,"title":{},"body":{"interfaces/CountryList.html":{}}}],["general",{"_index":690,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["generally",{"_index":61,"title":{},"body":{"classes/AbstractForm.html":{}}}],["generate",{"_index":5075,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generated",{"_index":5290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generateskiptocontentlink",{"_index":3458,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generation",{"_index":5017,"title":{},"body":{"changelog.html":{},"contributing.html":{},"additional-documentation/local-development/schematics.html":{}}}],["geo",{"_index":1844,"title":{},"body":{"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":626,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":539,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["geocoderinput",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["geocoderinputcomponent",{"_index":538,"title":{"components/GeocoderInputComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geocoderservice",{"_index":3280,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["georgia",{"_index":1845,"title":{},"body":{"interfaces/CountryList.html":{}}}],["germany",{"_index":1847,"title":{},"body":{"interfaces/CountryList.html":{}}}],["get(url",{"_index":127,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4503,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4508,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":3851,"title":{},"body":{"classes/Person.html":{}}}],["getapplicationid",{"_index":1576,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getcontinuebutton",{"_index":258,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getcountrydescription",{"_index":2212,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcountrydescription(countrycode",{"_index":5326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdateofbirthshort",{"_index":3867,"title":{},"body":{"classes/Person.html":{}}}],["geterrorcode",{"_index":1598,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getformatdateofbirth",{"_index":3871,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":159,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{}}}],["getisbconly",{"_index":903,"title":{},"body":{"classes/Address.html":{}}}],["getmaxlenasnumber",{"_index":2626,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["getname",{"_index":3874,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":242,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":330,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":243,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":343,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnumericvalue",{"_index":2229,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["getnumericvalue(value",{"_index":2255,"title":{},"body":{"components/DateComponent.html":{}}}],["getpackageversionfrompackagejson",{"_index":5228,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpackageversionfrompackagejson(tree",{"_index":5302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpasswordstrength",{"_index":3751,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":3777,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getphonenumberstring",{"_index":3986,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["getprogramname",{"_index":1580,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getprovincedescription",{"_index":4102,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getprovincedescription(provincecode",{"_index":5327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":3374,"title":{},"body":{"components/GeocoderInputComponent.html":{},"miscellaneous/functions.html":{}}}],["getstarturl",{"_index":222,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getstreet",{"_index":899,"title":{},"body":{"classes/Address.html":{}}}],["getsuccesscode",{"_index":1596,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getting",{"_index":4615,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":1102,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":1111,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1265,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["getwarningcode",{"_index":1600,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["ggy",{"_index":1864,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gha",{"_index":1848,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ghana",{"_index":1849,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gib",{"_index":1850,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":1851,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gif",{"_index":2775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":2896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":1866,"title":{},"body":{"interfaces/CountryList.html":{}}}],["git",{"_index":5024,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gitcommit",{"_index":5232,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":390,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["give",{"_index":2980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["given",{"_index":346,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["gives",{"_index":1393,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":1858,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gmb",{"_index":1842,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnb",{"_index":1867,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnq",{"_index":1812,"title":{},"body":{"interfaces/CountryList.html":{}}}],["go",{"_index":352,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":5514,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":3084,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3702,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":5368,"title":{},"body":{"license.html":{}}}],["grab",{"_index":334,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":1852,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grd",{"_index":1856,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greece",{"_index":1853,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greenland",{"_index":1855,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenada",{"_index":1857,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenadines",{"_index":2082,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grl",{"_index":1854,"title":{},"body":{"interfaces/CountryList.html":{}}}],["group",{"_index":994,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":504,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":4260,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":996,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":995,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":986,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":1005,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":1009,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":1010,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":1006,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":1007,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":1008,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":1011,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":1021,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":1019,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":1004,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":1016,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":1012,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":1013,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":1014,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":1018,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":985,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":5342,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":1862,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":1859,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guam",{"_index":1861,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guard",{"_index":201,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service.ts",{"_index":4159,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:52",{"_index":4177,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":4184,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":4187,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":4179,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":1152,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["guatemala",{"_index":1863,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guernsey",{"_index":1865,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guessable",{"_index":3779,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":3781,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":1832,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guiana",{"_index":1834,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guide",{"_index":5118,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["guidelines",{"_index":610,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":1814,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gum",{"_index":1860,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guy",{"_index":1869,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guyana",{"_index":1870,"title":{},"body":{"interfaces/CountryList.html":{}}}],["haiti",{"_index":1872,"title":{},"body":{"interfaces/CountryList.html":{}}}],["half",{"_index":4551,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4553,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4563,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":2781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["handleerror",{"_index":114,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":140,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":143,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["handling",{"_index":173,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":58,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":356,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1335,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["haserror",{"_index":3326,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hash",{"_index":2832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasmask",{"_index":4465,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{}}}],["hasn't",{"_index":782,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["hasnoresults",{"_index":3327,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hasvalue",{"_index":855,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["having",{"_index":3729,"title":{},"body":{"components/PageSectionComponent.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{}}}],["header",{"_index":3445,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":542,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3455,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3454,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":541,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3623,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":124,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["health",{"_index":3540,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{}}}],["heard",{"_index":1874,"title":{},"body":{"interfaces/CountryList.html":{}}}],["height",{"_index":2800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1411,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":2064,"title":{},"body":{"interfaces/CountryList.html":{}}}],["help",{"_index":5422,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":5435,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["helpers/library",{"_index":4580,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["here",{"_index":1506,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":1725,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1415,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":2787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":48,"title":{},"body":{"classes/AbstractForm.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"contributing.html":{}}}],["hidefullsizeview",{"_index":4354,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":3746,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":5458,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["hkg",{"_index":1881,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hmd",{"_index":1873,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hnd",{"_index":1879,"title":{},"body":{"interfaces/CountryList.html":{}}}],["holy",{"_index":1877,"title":{},"body":{"interfaces/CountryList.html":{}}}],["homepage",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":1880,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hong",{"_index":1882,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hood",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["hook",{"_index":5123,"title":{},"body":{"contributing.html":{}}}],["hooks",{"_index":5015,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["hooksthe",{"_index":5124,"title":{},"body":{"contributing.html":{}}}],["horizontal",{"_index":4111,"title":{},"body":{"components/RadioComponent.html":{}}}],["horizontally",{"_index":4514,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["host",{"_index":5301,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hostlistener",{"_index":2376,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2378,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2370,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":1788,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hti",{"_index":1871,"title":{},"body":{"interfaces/CountryList.html":{}}}],["html",{"_index":494,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["html5",{"_index":2779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":2999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":2960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2381,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":110,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["http://full",{"_index":3487,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":5354,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1447,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpclient",{"_index":120,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":642,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["httperrorresponse",{"_index":141,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":122,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":118,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpopts",{"_index":175,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":177,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":128,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":1046,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":5331,"title":{},"body":{"index.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":3282,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":3285,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":3266,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":3783,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":3804,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2395,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["human",{"_index":304,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":1884,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hungary",{"_index":1885,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hyphen",{"_index":3247,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["hyphens",{"_index":1261,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["iceland",{"_index":1887,"title":{},"body":{"interfaces/CountryList.html":{}}}],["icon",{"_index":672,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["id",{"_index":1331,"title":{},"body":{"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3451,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":393,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":2887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":938,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":1890,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ids",{"_index":930,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":1149,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ie",{"_index":3941,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ie10",{"_index":4583,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["ignore",{"_index":3657,"title":{},"body":{"classes/MaskModel.html":{}}}],["ignored",{"_index":2966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1353,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":2963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":2948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":2989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":2987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":2996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.title",{"_index":4211,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["image/jpeg",{"_index":2992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":2880,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":2961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":2964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":4355,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4380,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":2919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2706,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":2955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":3105,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2711,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["images.length",{"_index":2944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":2947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2714,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":2890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":3045,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":3048,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":3047,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":2958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":3090,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":3099,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":3096,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":3092,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":3117,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":3141,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":1899,"title":{},"body":{"interfaces/CountryList.html":{}}}],["implement",{"_index":3071,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":2397,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["implemented",{"_index":35,"title":{},"body":{"classes/AbstractForm.html":{},"changelog.html":{}}}],["implementing",{"_index":4163,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["implements",{"_index":209,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["implied",{"_index":5366,"title":{},"body":{"license.html":{}}}],["import",{"_index":82,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["importable",{"_index":5486,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":2276,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["importantly",{"_index":3725,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imported",{"_index":338,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":5395,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":1077,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":2777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":2983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["improvement",{"_index":3723,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["improves",{"_index":5108,"title":{},"body":{"contributing.html":{}}}],["imydate",{"_index":2435,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1334,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":1257,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":379,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":2848,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":1117,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"directives/ValidatePhoneDirective.html":{}}}],["incompletepages",{"_index":1163,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":1166,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incorrect",{"_index":365,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":3188,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":5071,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":1888,"title":{},"body":{"interfaces/CountryList.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":5428,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1432,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":1889,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indian",{"_index":1735,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indicates",{"_index":1120,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["individual",{"_index":3208,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["indonesia",{"_index":1891,"title":{},"body":{"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":292,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":211,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2467,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["inheiritance",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":1203,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":3885,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3598,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["initinvalid",{"_index":3697,"title":{},"body":{"components/NameComponent.html":{}}}],["injectable",{"_index":196,"title":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":198,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injectiontoken",{"_index":4188,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["injector",{"_index":4189,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["inline",{"_index":4112,"title":{},"body":{"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3622,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":416,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["input'},{'name",{"_index":540,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["input(event",{"_index":2373,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.component",{"_index":4309,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["input.component.html",{"_index":3325,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.scss",{"_index":3324,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts",{"_index":3321,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:100",{"_index":3354,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:105",{"_index":3356,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:120",{"_index":3359,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:138",{"_index":3352,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:151",{"_index":3347,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:157",{"_index":3364,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:164",{"_index":3360,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:169",{"_index":3361,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:173",{"_index":3363,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:39",{"_index":3341,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:40",{"_index":3340,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:41",{"_index":3343,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:42",{"_index":3342,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:45",{"_index":3370,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:47",{"_index":3369,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:49",{"_index":3368,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:50",{"_index":3367,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:53",{"_index":3375,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:55",{"_index":3378,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:57",{"_index":3373,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:59",{"_index":3365,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:60",{"_index":3339,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:62",{"_index":3366,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:69",{"_index":3345,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:80",{"_index":3344,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:94",{"_index":3349,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.getattribute",{"_index":2382,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2387,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2385,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input/geocoder",{"_index":3320,"title":{},"body":{"components/GeocoderInputComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["input[type='file",{"_index":2729,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2735,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":33,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["inside",{"_index":306,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":5041,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":5336,"title":{},"body":{"index.html":{}}}],["installed",{"_index":5394,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":5220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1515,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instances",{"_index":5382,"title":{},"body":{"todo.html":{}}}],["instead",{"_index":410,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":2809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2715,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{}}}],["insurance",{"_index":3556,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":5417,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["intentional",{"_index":4586,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["interface",{"_index":606,"title":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":608,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1489,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["internet",{"_index":153,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["introduced",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":1396,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":4038,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["invalidchar",{"_index":1254,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["invalidemail",{"_index":4407,"title":{},"body":{"directives/ValidateEmailDirective.html":{}}}],["invalidimagehanlder",{"_index":3085,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":3106,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2292,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["invisible",{"_index":2419,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["invocation",{"_index":777,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iot",{"_index":1733,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1278,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1269,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iran",{"_index":1893,"title":{},"body":{"interfaces/CountryList.html":{}}}],["iraq",{"_index":1896,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ireland",{"_index":1898,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irl",{"_index":1897,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irn",{"_index":1892,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irq",{"_index":1895,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":3302,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1650,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":861,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":4416,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["iscanada",{"_index":746,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iscomplete",{"_index":859,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["iscontinuedisabled",{"_index":3639,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isdate",{"_index":2409,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2454,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":832,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["isdobempty",{"_index":3852,"title":{},"body":{"classes/Person.html":{}}}],["isl",{"_index":1886,"title":{},"body":{"interfaces/CountryList.html":{}}}],["islamic",{"_index":1894,"title":{},"body":{"interfaces/CountryList.html":{}}}],["island",{"_index":1730,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":1666,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isle",{"_index":1900,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isloading",{"_index":3169,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["isn't",{"_index":2732,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isnan",{"_index":2355,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["isopen",{"_index":482,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3494,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":223,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispagecomplete(url",{"_index":227,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":1103,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":2975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":224,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":1902,"title":{},"body":{"interfaces/CountryList.html":{}}}],["israel",{"_index":1903,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isrequired",{"_index":658,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["issue",{"_index":2971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":1084,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1289,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["istypeaheadloading",{"_index":3328,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["isundermaintenance",{"_index":3567,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":856,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["it'll",{"_index":2513,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["it's",{"_index":337,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":1904,"title":{},"body":{"interfaces/CountryList.html":{}}}],["italy",{"_index":1905,"title":{},"body":{"interfaces/CountryList.html":{}}}],["item",{"_index":802,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{}}}],["item.iscomplete",{"_index":1158,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":1113,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["iterate",{"_index":3404,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["itself",{"_index":4655,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["jam",{"_index":1906,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jamaica",{"_index":1907,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jan",{"_index":2133,"title":{},"body":{"interfaces/CountryList.html":{}}}],["january",{"_index":2297,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["japan",{"_index":1909,"title":{},"body":{"interfaces/CountryList.html":{}}}],["javascript",{"_index":887,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["jersey",{"_index":1911,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jey",{"_index":1910,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jor",{"_index":1912,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jordan",{"_index":1913,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jpeg",{"_index":2821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":2774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":1908,"title":{},"body":{"interfaces/CountryList.html":{}}}],["js",{"_index":5253,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":5230,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":5234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["jsdate",{"_index":2509,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":5076,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1532,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PhoneNumberComponent.html":{}}}],["json.stringify(error",{"_index":2954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["july",{"_index":2302,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["june",{"_index":2301,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["kaz",{"_index":1914,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":1915,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keeling",{"_index":1771,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keep",{"_index":939,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":1916,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kenya",{"_index":1917,"title":{},"body":{"interfaces/CountryList.html":{}}}],["key",{"_index":448,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["keyboard",{"_index":3420,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["keyboardevent",{"_index":2374,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["keys",{"_index":5305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyup",{"_index":2921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":1926,"title":{},"body":{"interfaces/CountryList.html":{}}}],["khm",{"_index":1748,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kib",{"_index":3014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":5364,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":2182,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kir",{"_index":1918,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kiribati",{"_index":1919,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kitts",{"_index":2070,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kna",{"_index":2069,"title":{},"body":{"interfaces/CountryList.html":{}}}],["know",{"_index":989,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":1083,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":1883,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kor",{"_index":1923,"title":{},"body":{"interfaces/CountryList.html":{}}}],["korea",{"_index":1921,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kuwait",{"_index":1925,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kwt",{"_index":1924,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":1927,"title":{},"body":{"interfaces/CountryList.html":{}}}],["label",{"_index":319,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":400,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["labelid",{"_index":398,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":340,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelreplacementtag",{"_index":2286,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["labels",{"_index":662,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["labeltext",{"_index":2416,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["labrador",{"_index":4084,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["land",{"_index":1665,"title":{},"body":{"interfaces/CountryList.html":{}}}],["language",{"_index":5367,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":2127,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lao",{"_index":1928,"title":{},"body":{"interfaces/CountryList.html":{}}}],["largely",{"_index":2392,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["last",{"_index":3207,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastname",{"_index":3214,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":3220,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":2785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":1930,"title":{},"body":{"interfaces/CountryList.html":{}}}],["law",{"_index":5356,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3194,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":1931,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lbr",{"_index":1935,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lby",{"_index":1937,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lca",{"_index":2072,"title":{},"body":{"interfaces/CountryList.html":{}}}],["leads",{"_index":361,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":3570,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lebanon",{"_index":1932,"title":{},"body":{"interfaces/CountryList.html":{}}}],["left",{"_index":1642,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":493,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":2691,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"changelog.html":{}}}],["lengths",{"_index":697,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePhoneDirective.html":{}}}],["leone",{"_index":2102,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lesotho",{"_index":1934,"title":{},"body":{"interfaces/CountryList.html":{}}}],["less",{"_index":953,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":2155,"title":{},"body":{"interfaces/CountryList.html":{}}}],["letter",{"_index":3245,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":1256,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["level",{"_index":1494,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":5437,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":241,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":1076,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":5419,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":5421,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":5029,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":5009,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":5409,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":5406,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":1936,"title":{},"body":{"interfaces/CountryList.html":{}}}],["libif",{"_index":5500,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2399,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":3805,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libsetup",{"_index":5337,"title":{},"body":{"index.html":{}}}],["libya",{"_index":1938,"title":{},"body":{"interfaces/CountryList.html":{}}}],["license",{"_index":5198,"title":{"license.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["license/index.ts",{"_index":5196,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["licensed",{"_index":5350,"title":{},"body":{"license.html":{}}}],["lie",{"_index":1939,"title":{},"body":{"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":1940,"title":{},"body":{"interfaces/CountryList.html":{}}}],["likes",{"_index":5404,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":5370,"title":{},"body":{"license.html":{}}}],["line",{"_index":677,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3588,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lines",{"_index":755,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["link",{"_index":318,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":5441,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":5510,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":357,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":803,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"contributing.html":{}}}],["listed",{"_index":5401,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":164,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["literals",{"_index":1546,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lithuania",{"_index":1942,"title":{},"body":{"interfaces/CountryList.html":{}}}],["live",{"_index":5493,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":2125,"title":{},"body":{"interfaces/CountryList.html":{}}}],["load",{"_index":2680,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{},"todo.html":{}}}],["loaded",{"_index":783,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["loadimage",{"_index":2678,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2683,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":12,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["local",{"_index":2590,"title":{"additional-documentation/local-development.html":{}},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street",{"_index":3296,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3536,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":2849,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":5461,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1455,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["log(message",{"_index":1560,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logentry",{"_index":2670,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1458,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logerror(errormessage",{"_index":1562,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logged",{"_index":1435,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logger",{"_index":1439,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logging",{"_index":190,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["logging/log",{"_index":2671,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror",{"_index":1552,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["loghttperror(error",{"_index":1483,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["loghttprequeststoconsole",{"_index":113,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":1096,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["logo",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3461,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1460,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logservice",{"_index":2723,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1445,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["long",{"_index":208,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["longer",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":5499,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":3310,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["lookup",{"_index":395,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["lookup(address",{"_index":3286,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1268,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1479,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lost",{"_index":152,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["lot",{"_index":4454,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["lower",{"_index":1620,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":1933,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ltu",{"_index":1941,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lucia",{"_index":2073,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lux",{"_index":1943,"title":{},"body":{"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":1944,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lva",{"_index":1929,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maarten",{"_index":2106,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mac",{"_index":1945,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macao",{"_index":1946,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macbooks",{"_index":5378,"title":{},"body":{"todo.html":{}}}],["macedonia",{"_index":1948,"title":{},"body":{"interfaces/CountryList.html":{}}}],["machine",{"_index":5453,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":1952,"title":{},"body":{"interfaces/CountryList.html":{}}}],["made",{"_index":5012,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":2074,"title":{},"body":{"interfaces/CountryList.html":{}}}],["magnam",{"_index":1277,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":949,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3501,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenanceflag",{"_index":3574,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3586,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":138,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":131,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":955,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":1954,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malaysia",{"_index":1956,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maldives",{"_index":1958,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malformed",{"_index":3065,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":1960,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malta",{"_index":1962,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malvinas",{"_index":1823,"title":{},"body":{"interfaces/CountryList.html":{}}}],["man",{"_index":1901,"title":{},"body":{"interfaces/CountryList.html":{}}}],["manage",{"_index":2830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":4079,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2517,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":4115,"title":{},"body":{"components/RadioComponent.html":{}}}],["map",{"_index":2657,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4535,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":2927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map([['acl",{"_index":3590,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["map(prov",{"_index":785,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["map(x",{"_index":1627,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":5439,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2434,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["mar",{"_index":1989,"title":{},"body":{"interfaces/CountryList.html":{}}}],["march",{"_index":2299,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["margins",{"_index":3196,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":2019,"title":{},"body":{"interfaces/CountryList.html":{}}}],["marino",{"_index":2086,"title":{},"body":{"interfaces/CountryList.html":{}}}],["markallinputstouched",{"_index":18,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markastouched",{"_index":69,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markdown",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["markdownlint",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":954,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":1964,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martin",{"_index":2075,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martinique",{"_index":1966,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mask",{"_index":732,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["maskmodel",{"_index":3642,"title":{"classes/MaskModel.html":{}},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["maskmodel:11",{"_index":3968,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:12",{"_index":3970,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:14",{"_index":3966,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:15",{"_index":3967,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:17",{"_index":3984,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:18",{"_index":3985,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:27",{"_index":3977,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:34",{"_index":3976,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["match",{"_index":3997,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["matching",{"_index":103,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":3303,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4566,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil",{"_index":3903,"title":{},"body":{"classes/Person.html":{}}}],["math.ceil(math.random()*100",{"_index":2984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4554,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":1968,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mauritius",{"_index":1970,"title":{},"body":{"interfaces/CountryList.html":{}}}],["max",{"_index":3039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxheight",{"_index":3058,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":2812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":1224,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{}}}],["maxlenasnumber",{"_index":2605,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["maxlength",{"_index":2383,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"todo.html":{}}}],["maxlengths",{"_index":639,"title":{"interfaces/Maxlengths.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["maxretry",{"_index":3063,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1390,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":3040,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":3055,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maybe",{"_index":4392,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["mayen",{"_index":2134,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mayotte",{"_index":1972,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mb",{"_index":2902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":1875,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mco",{"_index":1981,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mda",{"_index":1979,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdash",{"_index":3433,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["mdg",{"_index":1951,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdv",{"_index":1957,"title":{},"body":{"interfaces/CountryList.html":{}}}],["meaning",{"_index":5102,"title":{},"body":{"contributing.html":{}}}],["means",{"_index":288,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":3184,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["meet",{"_index":3812,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":3944,"title":{},"body":{"components/PhnComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["members",{"_index":4120,"title":{},"body":{"components/RadioComponent.html":{}}}],["menial",{"_index":5113,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":5408,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2656,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":2869,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1456,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["message.interface",{"_index":1660,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["message.interface.ts",{"_index":2640,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["message.interface.ts:13",{"_index":2641,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["messages",{"_index":1395,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["meta",{"_index":1461,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":473,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["method",{"_index":185,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":1973,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mexico",{"_index":1974,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mhl",{"_index":1963,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mib",{"_index":3015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":1976,"title":{},"body":{"interfaces/CountryList.html":{}}}],["middle",{"_index":3206,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":3215,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":3221,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":2773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["min_phone_length",{"_index":4449,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["mini",{"_index":2423,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2521,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["minimum",{"_index":3735,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3539,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":3754,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":3809,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":3747,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":3748,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":391,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"changelog.html":{}}}],["miquelon",{"_index":2079,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mirror",{"_index":394,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":5260,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missing",{"_index":5001,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["mistakes",{"_index":5338,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":1947,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mli",{"_index":1959,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mlt",{"_index":1961,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mm",{"_index":4608,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["mm').daysinmonth",{"_index":2558,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["mmr",{"_index":1993,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mne",{"_index":1985,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mng",{"_index":1983,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mnp",{"_index":2017,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mobile",{"_index":3960,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["mockups",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["mod",{"_index":4433,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["modal",{"_index":296,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":515,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":4264,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1378,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.scss",{"_index":3565,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.ts",{"_index":3497,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:18",{"_index":4208,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:19",{"_index":4207,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:21",{"_index":4206,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:27",{"_index":4210,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:31",{"_index":4209,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal/consent",{"_index":3496,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modal/sample",{"_index":4199,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":2651,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":4232,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":4313,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2404,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2676,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2674,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":4933,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/address.model",{"_index":629,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["models/base",{"_index":625,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4529,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/error",{"_index":1659,"title":{},"body":{"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["models/images.model",{"_index":2663,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.model",{"_index":3938,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":3253,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["models/simple",{"_index":2315,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["modified",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["modifyjson",{"_index":5200,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyjson(host",{"_index":5328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":1061,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":1063,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":1075,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":240,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohcommmonlibraryerror",{"_index":4582,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror",{"_index":3661,"title":{"classes/MoHCommonLibraryError.html":{}},"body":{"classes/MoHCommonLibraryError.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["mohcommonlibraryerror(msg",{"_index":4590,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohstart",{"_index":5221,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mohstart(_options",{"_index":5317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moldova",{"_index":1980,"title":{},"body":{"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1333,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1292,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1290,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":934,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().date",{"_index":2332,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().format",{"_index":4607,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().get",{"_index":4603,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().isutc",{"_index":4610,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().month",{"_index":2330,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().toisostring",{"_index":1535,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["moment().year",{"_index":2334,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment(str",{"_index":2556,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["moment_",{"_index":1437,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["momentjs",{"_index":5482,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":1982,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mongolia",{"_index":1984,"title":{},"body":{"interfaces/CountryList.html":{}}}],["montenegro",{"_index":1986,"title":{},"body":{"interfaces/CountryList.html":{}}}],["month",{"_index":2268,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["month_",{"_index":2295,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthlabelforid",{"_index":2224,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthlist",{"_index":2225,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthref",{"_index":2226,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["montserrat",{"_index":1988,"title":{},"body":{"interfaces/CountryList.html":{}}}],["more",{"_index":210,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":1990,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mouse",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":5028,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moz",{"_index":1991,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mozambique",{"_index":1992,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mrt",{"_index":1967,"title":{},"body":{"interfaces/CountryList.html":{}}}],["msg",{"_index":1499,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/XiconButtonComponent.html":{},"contributing.html":{}}}],["msp",{"_index":686,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["msp's",{"_index":3998,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["msp/api/env",{"_index":3575,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2666,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":3137,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":3136,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":2879,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":2985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":2991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":3133,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":3034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":3036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":2979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":2988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":2986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":3003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":3030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":3027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":3152,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":3135,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":2937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2664,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":1987,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mtq",{"_index":1965,"title":{},"body":{"interfaces/CountryList.html":{}}}],["multi",{"_index":993,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["multiple",{"_index":1545,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":3011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["multiply",{"_index":4424,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["mus",{"_index":1969,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mutually",{"_index":5268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":1953,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myanmar",{"_index":1994,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2394,"title":{},"body":{"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":5204,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":1955,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myself",{"_index":4118,"title":{},"body":{"components/RadioComponent.html":{}}}],["myselfonly",{"_index":4119,"title":{},"body":{"components/RadioComponent.html":{}}}],["myt",{"_index":1971,"title":{},"body":{"interfaces/CountryList.html":{}}}],["n",{"_index":2769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":1995,"title":{},"body":{"interfaces/CountryList.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":537,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":4277,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":3211,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":3210,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":3205,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":3232,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":3233,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":3234,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":3228,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":3230,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":3229,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":3225,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":3227,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":3226,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":3224,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":3238,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":3240,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":3239,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":3243,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":3237,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":3252,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":3251,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":3235,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":3223,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":3231,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":4273,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4409,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:26",{"_index":4411,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":3204,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":5456,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name^=\"${refnameval",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3678,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":246,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":3216,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":2982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["names.length",{"_index":3899,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":3898,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":3900,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":3901,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3674,"title":{},"body":{"components/NameComponent.html":{}}}],["namibia",{"_index":1996,"title":{},"body":{"interfaces/CountryList.html":{}}}],["naming",{"_index":5388,"title":{},"body":{"todo.html":{}}}],["napprox",{"_index":3022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":3026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":3024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":886,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":2798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1358,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1359,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1280,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":1998,"title":{},"body":{"interfaces/CountryList.html":{}}}],["navigate",{"_index":19,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":70,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigates",{"_index":75,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigateto",{"_index":260,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":62,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigationend",{"_index":3475,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":4080,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":3007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":2003,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nec",{"_index":2601,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["necessary",{"_index":276,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":385,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePhnDirective.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["negative",{"_index":3195,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1302,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":2000,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ner",{"_index":2009,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1339,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":3192,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1470,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["netherlands",{"_index":2002,"title":{},"body":{"interfaces/CountryList.html":{}}}],["network",{"_index":1480,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["never",{"_index":1509,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":2071,"title":{},"body":{"interfaces/CountryList.html":{}}}],["new",{"_index":669,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["new.target.prototype",{"_index":3671,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["newfoundland",{"_index":4083,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1454,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["next",{"_index":273,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":2962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":2015,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ng",{"_index":311,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2542,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["ng_value_accessor",{"_index":623,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["nga",{"_index":2011,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":2918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":3265,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["ngchanges",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["ngcontent",{"_index":3580,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ngcontrol",{"_index":1178,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"todo.html":{}}}],["ngform",{"_index":36,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":5469,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1182,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["ngmodelchange",{"_index":2369,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":203,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":4168,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2410,"title":{},"body":{"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{}}}],["ngonchanges(changes",{"_index":747,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ngondestroy",{"_index":4504,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ngoninit",{"_index":481,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["ngselect",{"_index":406,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":4252,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":3185,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":491,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2405,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2473,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":4243,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":4312,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2648,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":2007,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":2008,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niger",{"_index":2010,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nigeria",{"_index":2012,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nisi",{"_index":1287,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":2013,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niue",{"_index":2014,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nl",{"_index":4082,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nld",{"_index":2001,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":3021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1316,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":5332,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":5491,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":5464,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2291,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["noidimage",{"_index":2697,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1284,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":1040,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2420,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nonvdi",{"_index":5381,"title":{},"body":{"todo.html":{}}}],["nopastdatesallowed",{"_index":2290,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["norfolk",{"_index":2016,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northern",{"_index":2018,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northwest",{"_index":4097,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["norway",{"_index":2020,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1326,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":354,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nothing",{"_index":3403,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["notice",{"_index":291,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":2263,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3721,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":4086,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["november",{"_index":2306,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["now",{"_index":388,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":1999,"title":{},"body":{"interfaces/CountryList.html":{}}}],["npm",{"_index":931,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":873,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["nru",{"_index":1997,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ns",{"_index":4085,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nt",{"_index":4096,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nu",{"_index":4098,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["null",{"_index":754,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["null/undefined",{"_index":767,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{}}}],["nulls",{"_index":3886,"title":{},"body":{"classes/Person.html":{}}}],["num",{"_index":4427,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["number",{"_index":326,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":553,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number(phn.substring(9",{"_index":4439,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["number,number,number,number",{"_index":3993,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component",{"_index":4267,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.html",{"_index":3951,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.scss",{"_index":3950,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts",{"_index":3947,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["number.component.ts:40",{"_index":3983,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:41",{"_index":3959,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:42",{"_index":3965,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:43",{"_index":3961,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:46",{"_index":3964,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:49",{"_index":3963,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:50",{"_index":3969,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:52",{"_index":3978,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:53",{"_index":3958,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:56",{"_index":3979,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:69",{"_index":3987,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:74",{"_index":3974,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:83",{"_index":3971,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:87",{"_index":3972,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:91",{"_index":3975,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.directive",{"_index":4305,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.directive.ts",{"_index":4442,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["number.directive.ts:12",{"_index":4443,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["number.directive.ts:16",{"_index":4444,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["number.parseint",{"_index":2630,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["number/phone",{"_index":3946,"title":{},"body":{"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["number/validate",{"_index":4304,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["numbers",{"_index":1258,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["numerator",{"_index":4547,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numeric",{"_index":2258,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["numpages",{"_index":3124,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1327,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":4099,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":2005,"title":{},"body":{"interfaces/CountryList.html":{}}}],["o",{"_index":2895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1322,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":2465,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["obj.features.map(feature",{"_index":3305,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["object",{"_index":161,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{}}}],["object.addressline1",{"_index":920,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":922,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":924,"title":{},"body":{"classes/Address.html":{}}}],["object.city",{"_index":925,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":926,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth.day",{"_index":3909,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.month",{"_index":3908,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.year",{"_index":3910,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":3905,"title":{},"body":{"classes/Person.html":{}}}],["object.keys",{"_index":3892,"title":{},"body":{"classes/Person.html":{}}}],["object.keys(this.defaulterrmsg).map",{"_index":2359,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["object.keys(this.disabled).map",{"_index":847,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.errormessage).map",{"_index":1346,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["object.keys(this.errormessages).map",{"_index":2357,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["object.keys(this.fieldmaxlenghts).map",{"_index":840,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.keys(this.labels).map",{"_index":835,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.readonlyfields).map",{"_index":845,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.lastname",{"_index":3907,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":3906,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":927,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":928,"title":{},"body":{"classes/Address.html":{}}}],["object.setprototypeof(this",{"_index":3670,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["objectid",{"_index":935,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":5487,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":139,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":186,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":191,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observe",{"_index":1056,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":171,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":2969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":2957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":3049,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":3052,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":5353,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":2029,"title":{},"body":{"interfaces/CountryList.html":{}}}],["occured",{"_index":1518,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":1736,"title":{},"body":{"interfaces/CountryList.html":{}}}],["october",{"_index":2305,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["ocurrence",{"_index":420,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1330,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3621,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":2936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":5508,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":5334,"title":{},"body":{"index.html":{}}}],["oman",{"_index":2022,"title":{},"body":{"interfaces/CountryList.html":{}}}],["omit",{"_index":895,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":2021,"title":{},"body":{"interfaces/CountryList.html":{}}}],["onblur",{"_index":3332,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onblur(event",{"_index":3346,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onblurevent",{"_index":1219,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onblurevent(event",{"_index":1242,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["onbtnclick",{"_index":4572,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":2825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":3956,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["onchanges",{"_index":619,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["onclick",{"_index":965,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":977,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2411,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2459,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":4496,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["one",{"_index":274,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":3333,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onerror(err",{"_index":3348,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ongoing",{"_index":2846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":472,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["oninput",{"_index":2379,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":3752,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":3786,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":3334,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onkeyup(event",{"_index":3351,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onload",{"_index":3094,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onloading",{"_index":3335,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onloading(val",{"_index":3353,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onlyfuturedates",{"_index":2417,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["onnoresults",{"_index":3336,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onnoresults(val",{"_index":3355,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onpaste",{"_index":3833,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":3337,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onselect(event",{"_index":3357,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onstatuschange",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":4088,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["onupdate",{"_index":3644,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{}}}],["onupdate(value",{"_index":3648,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{}}}],["onvaluechange",{"_index":1220,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onvaluechange(value",{"_index":1244,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["open",{"_index":2780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":3101,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openfiledialog",{"_index":2930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3563,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["opens",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["openshift",{"_index":1082,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":5494,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":2815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opt",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":4533,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1294,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":401,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["optional()@self",{"_index":1200,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["optionally",{"_index":187,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":135,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optiontext",{"_index":375,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":756,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":2814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":3061,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":381,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2344,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":768,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["outlying",{"_index":2184,"title":{},"body":{"interfaces/CountryList.html":{}}}],["output",{"_index":617,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":967,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":4518,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":2901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"miscellaneous/functions.html":{}}}],["override",{"_index":348,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overridesscss",{"_index":5213,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":5372,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":275,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/functions.html":{}}}],["overwritefile",{"_index":5222,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["overwritefile(host",{"_index":5318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overwritten",{"_index":285,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3593,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["package",{"_index":932,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":5020,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":5446,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":5068,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":64,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1632,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":233,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":404,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":414,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":301,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":270,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":308,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":286,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":315,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":293,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":372,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":418,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":317,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":279,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":324,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":347,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":322,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":329,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":369,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":321,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":331,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":344,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":328,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":376,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":1101,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":543,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelistinterface",{"_index":1134,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagenumber",{"_index":2951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1625,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1631,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":1118,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["pagesection",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["pagesectioncomponent",{"_index":545,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pageurl",{"_index":4180,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["pains",{"_index":5343,"title":{},"body":{"index.html":{}}}],["pak",{"_index":2023,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pakistan",{"_index":2024,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palau",{"_index":2026,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palestinian",{"_index":2028,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pan",{"_index":2030,"title":{},"body":{"interfaces/CountryList.html":{}}}],["panama",{"_index":2031,"title":{},"body":{"interfaces/CountryList.html":{}}}],["papua",{"_index":2033,"title":{},"body":{"interfaces/CountryList.html":{}}}],["paraguay",{"_index":2035,"title":{},"body":{"interfaces/CountryList.html":{}}}],["param",{"_index":170,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePhnDirective.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":73,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":3299,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":647,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parents",{"_index":648,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1318,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parsed",{"_index":2352,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["parseint",{"_index":2353,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["parseint(scaledwidthstring",{"_index":4378,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parseint(this.maxlength",{"_index":3431,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["parsing",{"_index":1528,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["part",{"_index":2076,"title":{},"body":{"interfaces/CountryList.html":{}}}],["parts",{"_index":3883,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":367,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"directives/YearValidateDirective.html":{}}}],["passed",{"_index":51,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{}}}],["passes",{"_index":3790,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":3807,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password",{"_index":1398,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["password'},{'name",{"_index":548,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":3744,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":3743,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":3767,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":3742,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":547,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":3759,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":2250,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["pasting",{"_index":3832,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["patch",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":4172,"title":{},"body":{"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["paths",{"_index":4948,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":3217,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["payload",{"_index":1049,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":1058,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcn",{"_index":2040,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pdf",{"_index":1397,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["pdf.good",{"_index":1399,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":3125,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":3111,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":2949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2653,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":3114,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":3113,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":3122,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2687,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2652,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1386,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":3109,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":4089,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":1922,"title":{},"body":{"interfaces/CountryList.html":{}}}],["per",{"_index":2036,"title":{},"body":{"interfaces/CountryList.html":{}}}],["perf",{"_index":5107,"title":{},"body":{"contributing.html":{}}}],["performance",{"_index":778,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"contributing.html":{}}}],["period",{"_index":3248,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["periods",{"_index":1262,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["permissions",{"_index":5369,"title":{},"body":{"license.html":{}}}],["persisted",{"_index":720,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["person",{"_index":2673,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":3884,"title":{},"body":{"classes/Person.html":{}}}],["person.model.ts",{"_index":4319,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1621,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":3222,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["peru",{"_index":2037,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pg",{"_index":199,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":897,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":2039,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phl",{"_index":2038,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phn",{"_index":3912,"title":{},"body":{"components/PhnComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["phn'},{'name",{"_index":550,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phn.component.html",{"_index":3914,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.component.scss",{"_index":3913,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.directive",{"_index":4287,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["phn.directive.ts",{"_index":4413,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["phn.directive.ts:104",{"_index":4418,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.directive.ts:105",{"_index":4417,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.directive.ts:107",{"_index":4419,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.trim().length",{"_index":4423,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn_",{"_index":3918,"title":{},"body":{"components/PhnComponent.html":{}}}],["phncomponent",{"_index":549,"title":{"components/PhnComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":552,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["phone_",{"_index":3962,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumber",{"_index":3955,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["phonenumbercomponent",{"_index":551,"title":{"components/PhoneNumberComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumbercomponent's",{"_index":4453,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["phonenumberregex",{"_index":3952,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumberstring",{"_index":3957,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["pib",{"_index":3017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":2078,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pipe",{"_index":2926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["pipe(filter((evt",{"_index":2924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":2972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":2041,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pixel",{"_index":2817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pkg",{"_index":5299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["place",{"_index":206,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":1225,"title":{},"body":{"components/CityComponent.html":{},"components/DropdownComponent.html":{},"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["placeholders",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":4000,"title":{},"body":{"components/PhoneNumberComponent.html":{},"todo.html":{}}}],["please",{"_index":2716,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":1717,"title":{},"body":{"interfaces/CountryList.html":{}}}],["plus",{"_index":671,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["plw",{"_index":2025,"title":{},"body":{"interfaces/CountryList.html":{}}}],["png",{"_index":2032,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["po",{"_index":689,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["point",{"_index":349,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":4935,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":2042,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poland",{"_index":2043,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":5471,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":1836,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poor",{"_index":2396,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["populated",{"_index":3095,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":3121,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":2045,"title":{},"body":{"interfaces/CountryList.html":{}}}],["possible",{"_index":1207,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"todo.html":{}}}],["post",{"_index":115,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":154,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":555,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":4280,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4388,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:27",{"_index":4390,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":616,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["postalcode.directive",{"_index":4299,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postalcode.directive.ts",{"_index":4463,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["postalcode.directive.ts:48",{"_index":4467,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:49",{"_index":4466,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:51",{"_index":4468,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode_",{"_index":4017,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":858,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":554,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":2970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":4445,"title":{},"body":{"directives/ValidatePhoneDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":2935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":5082,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3450,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pre",{"_index":4192,"title":{},"body":{"guards/RouteGuardService.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["preceding",{"_index":2888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["premium",{"_index":3552,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prerequisites",{"_index":1125,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":3740,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["preservesymlinks",{"_index":4864,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":3831,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":5472,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":1160,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["previously",{"_index":2993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pri",{"_index":2046,"title":{},"body":{"interfaces/CountryList.html":{}}}],["primarily",{"_index":4513,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":970,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":339,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":4090,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["principe",{"_index":2090,"title":{},"body":{"interfaces/CountryList.html":{}}}],["print",{"_index":892,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":889,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":5440,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":5459,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3546,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":779,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["prk",{"_index":1920,"title":{},"body":{"interfaces/CountryList.html":{}}}],["probably",{"_index":3102,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["problem",{"_index":3732,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["proceed",{"_index":1129,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["process",{"_index":2553,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{},"contributing.html":{}}}],["processing",{"_index":2765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3566,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3435,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":3304,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1440,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1451,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["progress",{"_index":573,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"contributing.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":4231,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":4311,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":3087,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":3086,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1611,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":851,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":5517,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":5485,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":5264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../confirm",{"_index":5262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../country.component.ts",{"_index":5280,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../datepicker.component.ts",{"_index":5266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../duplicate",{"_index":5278,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../error",{"_index":5283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../images.model.ts",{"_index":5265,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../index.ts",{"_index":5276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../json.ts",{"_index":5282,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../logger.service.ts",{"_index":5267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../package",{"_index":5277,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../province.component.ts",{"_index":5281,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../validate",{"_index":5279,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/common/captcha/src/captcha",{"_index":1028,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":5129,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":1072,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":1074,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":231,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/helpers/library",{"_index":3662,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":470,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":486,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:22",{"_index":485,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":490,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":487,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:26",{"_index":484,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":611,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":984,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":943,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":972,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":973,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":974,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":975,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:40",{"_index":969,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:44",{"_index":976,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:47",{"_index":978,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":1171,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:31",{"_index":1202,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:36",{"_index":1180,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:37",{"_index":1187,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:38",{"_index":1184,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:39",{"_index":1186,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:40",{"_index":1185,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:41",{"_index":1188,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:42",{"_index":1189,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:43",{"_index":1199,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:46",{"_index":1197,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:47",{"_index":1179,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:49",{"_index":1201,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:56",{"_index":1191,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:64",{"_index":1195,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:71",{"_index":1190,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:75",{"_index":1192,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:79",{"_index":1193,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:83",{"_index":1196,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":1215,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:13",{"_index":1231,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":1236,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":1234,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":1229,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:17",{"_index":1237,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:18",{"_index":1230,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:21",{"_index":1238,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:26",{"_index":1266,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:30",{"_index":1240,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:31",{"_index":1239,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:33",{"_index":1252,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:35",{"_index":1264,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:41",{"_index":1251,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:42",{"_index":1228,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:44",{"_index":1253,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:51",{"_index":1241,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:55",{"_index":1245,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:60",{"_index":1243,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:65",{"_index":1250,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:72",{"_index":1246,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:77",{"_index":1247,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:81",{"_index":1248,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:85",{"_index":1249,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/validate",{"_index":4395,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/confirm",{"_index":1585,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/consent",{"_index":3495,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1634,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1656,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/date/date",{"_index":2366,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":2219,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts:111",{"_index":2261,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:123",{"_index":2270,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:138",{"_index":2272,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:148",{"_index":2281,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:159",{"_index":2256,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:164",{"_index":2265,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:46",{"_index":2310,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:47",{"_index":2285,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:48",{"_index":2314,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:50",{"_index":2253,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:51",{"_index":2249,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:52",{"_index":2245,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:53",{"_index":2248,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:54",{"_index":2244,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:56",{"_index":2251,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:57",{"_index":2247,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:59",{"_index":2254,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:61",{"_index":2308,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:66",{"_index":2296,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:67",{"_index":2283,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:68",{"_index":2312,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:70",{"_index":2293,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:78",{"_index":2242,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:80",{"_index":2294,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:85",{"_index":2259,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:98",{"_index":2267,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/day",{"_index":2539,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/year",{"_index":4593,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2391,"title":{},"body":{"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2453,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2455,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:116",{"_index":2458,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:167",{"_index":2457,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:177",{"_index":2460,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:186",{"_index":2449,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:194",{"_index":2461,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:198",{"_index":2462,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2464,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:36",{"_index":2446,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:37",{"_index":2426,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:38",{"_index":2448,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:39",{"_index":2430,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:40",{"_index":2438,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:42",{"_index":2444,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:46",{"_index":2436,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:49",{"_index":2431,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:52",{"_index":2439,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2421,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:72",{"_index":2428,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2437,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:78",{"_index":2471,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:81",{"_index":2470,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:83",{"_index":2475,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:86",{"_index":2468,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:88",{"_index":2466,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:89",{"_index":2418,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:95",{"_index":2451,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2559,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:11",{"_index":2580,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:13",{"_index":2571,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:14",{"_index":2572,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:15",{"_index":2573,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:16",{"_index":2569,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:17",{"_index":2567,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2568,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:19",{"_index":2574,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2570,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2578,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2566,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2579,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:32",{"_index":2577,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:36",{"_index":2575,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:40",{"_index":2576,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/duplicate",{"_index":2581,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/email/email.component.ts",{"_index":2598,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts:21",{"_index":2607,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:22",{"_index":2608,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:23",{"_index":2612,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:24",{"_index":2610,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:27",{"_index":2613,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:32",{"_index":2625,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:36",{"_index":2615,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:37",{"_index":2614,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:39",{"_index":2624,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:41",{"_index":2622,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:42",{"_index":2606,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:44",{"_index":2623,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:51",{"_index":2617,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:56",{"_index":2616,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:61",{"_index":2621,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:68",{"_index":2618,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:73",{"_index":2619,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:77",{"_index":2620,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:81",{"_index":2627,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/validate",{"_index":4401,"title":{},"body":{"directives/ValidateEmailDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/error",{"_index":2632,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/file",{"_index":2644,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":3163,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":3203,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/geocoder",{"_index":3319,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3442,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3467,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3468,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3466,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3474,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:25",{"_index":3464,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:30",{"_index":3470,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:39",{"_index":3472,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:43",{"_index":3473,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:51",{"_index":3469,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3673,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:21",{"_index":3676,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:22",{"_index":3677,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3680,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3679,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:27",{"_index":3681,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:32",{"_index":3693,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:36",{"_index":3683,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:37",{"_index":3682,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3692,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3690,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:42",{"_index":3675,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:44",{"_index":3691,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3685,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:56",{"_index":3684,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:61",{"_index":3689,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:68",{"_index":3686,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:73",{"_index":3687,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:77",{"_index":3688,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3694,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4408,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3698,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3733,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":3784,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":3789,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":3787,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":3776,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":3778,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":3763,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":3762,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":3761,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":3769,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":3771,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":3766,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":3765,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":3760,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":3772,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":3768,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":3774,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":3773,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":3793,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":3796,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":3798,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":3792,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":3797,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":3794,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":3795,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":3758,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":3785,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":3911,"title":{},"body":{"components/PhnComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:13",{"_index":3917,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:14",{"_index":3920,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:15",{"_index":3923,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:16",{"_index":3919,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:17",{"_index":3916,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:21",{"_index":3924,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:26",{"_index":3937,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:30",{"_index":3926,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:31",{"_index":3925,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:33",{"_index":3936,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:34",{"_index":3935,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:36",{"_index":3933,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:37",{"_index":3915,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:39",{"_index":3934,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:49",{"_index":3928,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:58",{"_index":3927,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:63",{"_index":3932,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:70",{"_index":3929,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:75",{"_index":3930,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:79",{"_index":3931,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/validate",{"_index":4412,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/phone",{"_index":3945,"title":{},"body":{"components/PhoneNumberComponent.html":{},"directives/ValidatePhoneDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":4007,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":4047,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/province/province.component.ts:100",{"_index":4071,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:107",{"_index":4067,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:112",{"_index":4068,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:116",{"_index":4069,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:120",{"_index":4070,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:42",{"_index":4053,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:43",{"_index":4058,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:44",{"_index":4055,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:45",{"_index":4051,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:46",{"_index":4059,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:47",{"_index":4057,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:48",{"_index":4056,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:49",{"_index":4060,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:50",{"_index":4052,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:53",{"_index":4061,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:58",{"_index":4076,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:62",{"_index":4063,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:63",{"_index":4062,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:65",{"_index":4075,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:67",{"_index":4074,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:73",{"_index":4072,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:74",{"_index":4050,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:76",{"_index":4073,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:83",{"_index":4064,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:87",{"_index":4066,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:95",{"_index":4065,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":4104,"title":{},"body":{"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:100",{"_index":4142,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:104",{"_index":4143,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:108",{"_index":4147,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:112",{"_index":4144,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:48",{"_index":4149,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:49",{"_index":4151,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:51",{"_index":4136,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:56",{"_index":4130,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:57",{"_index":4135,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:59",{"_index":4138,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:62",{"_index":4152,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:65",{"_index":4137,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:66",{"_index":4133,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:67",{"_index":4132,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:68",{"_index":4134,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:70",{"_index":4139,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:71",{"_index":4140,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:73",{"_index":4148,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:74",{"_index":4129,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:76",{"_index":4150,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:83",{"_index":4141,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:91",{"_index":4146,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sample",{"_index":4198,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":4322,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:13",{"_index":4329,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:14",{"_index":4332,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:15",{"_index":4333,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:16",{"_index":4331,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:17",{"_index":4327,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:20",{"_index":4334,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:28",{"_index":4347,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:33",{"_index":4336,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":4335,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:36",{"_index":4346,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:37",{"_index":4345,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:39",{"_index":4343,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:40",{"_index":4326,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:42",{"_index":4344,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:52",{"_index":4338,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:61",{"_index":4337,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:66",{"_index":4342,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:73",{"_index":4339,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:78",{"_index":4340,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:82",{"_index":4341,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/validate",{"_index":4485,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":5168,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/street/validate",{"_index":4491,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":4349,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":4360,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":4361,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4362,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:16",{"_index":4368,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:18",{"_index":4359,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4370,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:24",{"_index":4366,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:42",{"_index":4364,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:48",{"_index":4367,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:53",{"_index":4365,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4381,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4385,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4386,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4384,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4387,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/validate",{"_index":4480,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/wizard",{"_index":4495,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4570,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":849,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:11",{"_index":863,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":866,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:14",{"_index":871,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":868,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:16",{"_index":879,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":867,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":869,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":870,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:23",{"_index":900,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:27",{"_index":902,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:36",{"_index":885,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:44",{"_index":882,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:50",{"_index":904,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:61",{"_index":881,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":878,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:9",{"_index":862,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":929,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":936,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1608,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:12",{"_index":1615,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:18",{"_index":1618,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:22",{"_index":1624,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/error",{"_index":2639,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1352,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1422,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1424,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1421,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1423,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:29",{"_index":1363,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:35",{"_index":1368,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:36",{"_index":1365,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:38",{"_index":1373,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:39",{"_index":1375,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:40",{"_index":1374,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:41",{"_index":1371,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:42",{"_index":1372,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:43",{"_index":1370,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:46",{"_index":1369,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1367,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:49",{"_index":1364,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1426,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1428,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1427,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:68",{"_index":1429,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.model.ts",{"_index":3643,"title":{},"body":{"classes/MaskModel.html":{},"coverage.html":{}}}],["projects/common/lib/models/mask.model.ts:11",{"_index":3654,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:12",{"_index":3655,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:14",{"_index":3652,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:15",{"_index":3653,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:17",{"_index":3647,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:18",{"_index":3646,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:27",{"_index":3651,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:34",{"_index":3649,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":3848,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":3858,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":3860,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:16",{"_index":3859,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":3856,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":3855,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":3868,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":3872,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:45",{"_index":3866,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":3875,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:71",{"_index":3879,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:85",{"_index":3862,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":3861,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":4316,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":106,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":1093,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":3277,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:23",{"_index":3440,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3441,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:25",{"_index":3436,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:32",{"_index":3438,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:53",{"_index":3439,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:74",{"_index":3437,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1431,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:110",{"_index":1558,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:129",{"_index":1559,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:147",{"_index":1584,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:154",{"_index":1567,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:158",{"_index":1565,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:166",{"_index":1566,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:179",{"_index":1433,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/logger.service.ts:23",{"_index":1573,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:29",{"_index":1555,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:35",{"_index":1579,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:39",{"_index":1577,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:43",{"_index":1583,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:47",{"_index":1581,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:51",{"_index":1568,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:55",{"_index":1561,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:59",{"_index":1563,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:79",{"_index":1556,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:84",{"_index":1557,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:93",{"_index":1564,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/route",{"_index":4158,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":4220,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":5497,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":5430,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":5498,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":5195,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":5199,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/moh",{"_index":5202,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/version",{"_index":5229,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/src/public_api.ts",{"_index":5520,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":5240,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":5233,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":342,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/RouteGuardService.html":{}}}],["proper",{"_index":1394,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":3193,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1548,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["property",{"_index":1464,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["props",{"_index":3306,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":3316,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":3313,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3314,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":3308,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.provincecode",{"_index":3315,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3545,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prototype",{"_index":3668,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["protractor",{"_index":424,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":787,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["prov.country",{"_index":786,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provide",{"_index":204,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":320,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":1144,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1285,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":217,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":234,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":383,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":558,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":4049,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":4048,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":896,"title":{},"body":{"classes/Address.html":{}}}],["province/province.component",{"_index":638,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["province_",{"_index":4054,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":637,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["province_list.find",{"_index":4103,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecode",{"_index":4077,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"miscellaneous/functions.html":{}}}],["provincecomponent",{"_index":557,"title":{"components/ProvinceComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":635,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["provincial",{"_index":3549,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1649,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":682,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj",{"_index":791,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.description",{"_index":799,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.provincecode",{"_index":797,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["prt",{"_index":2044,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pry",{"_index":2034,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pse",{"_index":2027,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":3835,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":3836,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":3749,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":220,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["public_api",{"_index":1340,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["publish",{"_index":5506,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4634,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":2047,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pull",{"_index":5339,"title":{},"body":{"index.html":{}}}],["pure",{"_index":5416,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":3873,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3452,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":3755,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":1835,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qat",{"_index":2049,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qatar",{"_index":2050,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qc",{"_index":4092,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["quality",{"_index":2822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1311,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1279,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":4093,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["query",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":4524,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":72,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":3187,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["questions",{"_index":3554,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1286,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1328,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1308,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1299,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["radio",{"_index":4105,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":4116,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":560,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":4125,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":4124,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio.component.ts",{"_index":5384,"title":{},"body":{"todo.html":{}}}],["radio/checkbox",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["radiocomponent",{"_index":559,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":4117,"title":{},"body":{"components/RadioComponent.html":{}}}],["radios",{"_index":4106,"title":{},"body":{"components/RadioComponent.html":{}}}],["ran",{"_index":5488,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":3160,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rapid",{"_index":3609,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3612,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":2818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1323,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1389,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["re",{"_index":646,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":3082,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reactive",{"_index":2594,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["reactiveforms",{"_index":3382,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["read",{"_index":2783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":305,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":2976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":3032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":3053,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":3107,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":3093,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":282,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":4918,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readonlyfields",{"_index":640,"title":{"interfaces/ReadOnlyFields.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["readpdf(pdffile",{"_index":3108,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reason",{"_index":2752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["receiving",{"_index":1482,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["recieve",{"_index":3323,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["recommend",{"_index":3741,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":341,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["reduced",{"_index":2447,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ref",{"_index":2997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2520,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["refactored",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":5117,"title":{},"body":{"contributing.html":{}}}],["reference",{"_index":5002,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":312,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":314,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regex",{"_index":917,"title":{},"body":{"classes/Address.html":{},"components/PhoneNumberComponent.html":{}}}],["regex.test(this.postal",{"_index":919,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":3770,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4393,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":918,"title":{},"body":{"classes/Address.html":{}}}],["region.directive",{"_index":4298,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["region.directive.ts",{"_index":4481,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["region.directive.ts:26",{"_index":4483,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["region/validate",{"_index":4297,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["register",{"_index":1078,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registered",{"_index":643,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["registeronchange",{"_index":998,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registeronchange(fn",{"_index":825,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registerontouched",{"_index":999,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registerontouched(fn",{"_index":828,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registration",{"_index":4170,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":216,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["registrationservice",{"_index":219,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["reject",{"_index":4611,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["related",{"_index":4867,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":5490,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["release",{"_index":5069,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":5424,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remainder",{"_index":4430,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["remove",{"_index":762,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["removed",{"_index":2885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["removeline(line",{"_index":761,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["removing",{"_index":3074,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rename",{"_index":3991,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["render",{"_index":3559,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reorder",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["reorganize",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["repellat",{"_index":1298,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":3818,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"todo.html":{}}}],["replace(/\\s/g",{"_index":4458,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["replace(/_/g",{"_index":4456,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["replacelabeltag",{"_index":2317,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["replacelabeltag(str",{"_index":5330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo",{"_index":5295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo=https://github.com/bcgov/prime",{"_index":5296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reports",{"_index":2318,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["reprehenderit",{"_index":1314,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":1760,"title":{},"body":{"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1320,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1541,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["req",{"_index":4422,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{}}}],["request",{"_index":132,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1444,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["requests",{"_index":145,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":5242,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2679,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2686,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2682,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":50,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":3218,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requirements",{"_index":3737,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":641,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["requisite",{"_index":4193,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1282,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":1071,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":3142,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":2974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":2810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":2837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":5468,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["resolved",{"_index":3407,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["respective",{"_index":136,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1531,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["response",{"_index":1047,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["responsetype",{"_index":1526,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["rest",{"_index":3157,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restore",{"_index":3672,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["restrictdate",{"_index":2236,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["result",{"_index":102,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":104,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":2816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrieve",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["retry",{"_index":3062,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":3064,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2662,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["returned",{"_index":1050,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":57,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["reu",{"_index":2051,"title":{},"body":{"interfaces/CountryList.html":{}}}],["reverts",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["reviewmode",{"_index":4356,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["rica",{"_index":1784,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rico",{"_index":2048,"title":{},"body":{"interfaces/CountryList.html":{}}}],["right",{"_index":387,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":5036,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":3780,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":3838,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["romania",{"_index":2054,"title":{},"body":{"interfaces/CountryList.html":{}}}],["root",{"_index":1145,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":2802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":2053,"title":{},"body":{"interfaces/CountryList.html":{}}}],["route",{"_index":76,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeguard",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":214,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3459,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3471,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routepath",{"_index":1622,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1626,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":22,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4500,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":4234,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":4183,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routes",{"_index":4165,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":4171,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":5448,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":4109,"title":{},"body":{"components/RadioComponent.html":{}}}],["rule",{"_index":5297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rules",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":2274,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":5040,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":67,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":688,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["rus",{"_index":2055,"title":{},"body":{"interfaces/CountryList.html":{}}}],["russian",{"_index":2056,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwa",{"_index":2058,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwanda",{"_index":2059,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rxjs",{"_index":166,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":169,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":2052,"title":{},"body":{"interfaces/CountryList.html":{}}}],["s",{"_index":3006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["s+)@(\\s+)\\.(\\s",{"_index":4405,"title":{},"body":{"directives/ValidateEmailDirective.html":{}}}],["saba",{"_index":1722,"title":{},"body":{"interfaces/CountryList.html":{}}}],["safe",{"_index":4561,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":2205,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saint",{"_index":2061,"title":{},"body":{"interfaces/CountryList.html":{}}}],["salvador",{"_index":1811,"title":{},"body":{"interfaces/CountryList.html":{}}}],["same",{"_index":405,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":1673,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sample",{"_index":562,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["sampleimageinterface",{"_index":4197,"title":{"interfaces/SampleImageInterface.html":{}},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["samplemodal",{"_index":4202,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["samplemodalcomponent",{"_index":561,"title":{"components/SampleModalComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["san",{"_index":2085,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sandwich",{"_index":2120,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sao",{"_index":2088,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1276,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":4095,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2514,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["satisifed",{"_index":3582,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sau",{"_index":2091,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saudi",{"_index":2092,"title":{},"body":{"interfaces/CountryList.html":{}}}],["save",{"_index":3416,"title":{},"body":{"components/GeocoderInputComponent.html":{},"directives/ValidatePhnDirective.html":{},"index.html":{}}}],["saved",{"_index":2844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":3076,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scale",{"_index":1419,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":3029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":2995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1425,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1412,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":4352,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4372,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":2938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":3060,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":2939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":3057,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":2898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2660,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":3067,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4541,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schema",{"_index":3999,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["schematic",{"_index":5062,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":5451,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":5060,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":5450,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":5429,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3525,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scopes",{"_index":5115,"title":{},"body":{"contributing.html":{}}}],["scotia",{"_index":4087,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["screen",{"_index":281,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["screenreader",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":5087,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["scriptname",{"_index":5285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scripts",{"_index":4914,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":4559,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrolldown",{"_index":261,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolls",{"_index":78,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4505,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrollup",{"_index":262,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":5477,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":2128,"title":{},"body":{"interfaces/CountryList.html":{}}}],["search",{"_index":800,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{}}}],["searching",{"_index":3377,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["searchtext",{"_index":3329,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["second",{"_index":676,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["secondary",{"_index":971,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3448,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":546,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":4250,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3719,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3718,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3717,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:17",{"_index":3720,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:21",{"_index":3722,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3716,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3520,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":4926,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["see",{"_index":213,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":378,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":4253,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selected",{"_index":3434,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectedaddress",{"_index":3330,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectedday",{"_index":4596,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["selectedmonth",{"_index":2544,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["selectedyear",{"_index":2545,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["selectfilelabelref",{"_index":2708,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":411,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{}}}],["selection",{"_index":3428,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selections",{"_index":2433,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":263,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":374,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":474,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["selects",{"_index":377,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":1205,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["self.dataservice.getmspuuid",{"_index":2945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":3000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":3050,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":3001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["semantic",{"_index":5390,"title":{},"body":{"todo.html":{}}}],["semi",{"_index":5105,"title":{},"body":{"contributing.html":{}}}],["sen",{"_index":2094,"title":{},"body":{"interfaces/CountryList.html":{}}}],["send",{"_index":125,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["sending",{"_index":655,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sends",{"_index":408,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3610,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":2095,"title":{},"body":{"interfaces/CountryList.html":{}}}],["september",{"_index":2304,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["sequence",{"_index":1132,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":4162,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1338,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":2097,"title":{},"body":{"interfaces/CountryList.html":{}}}],["server",{"_index":147,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":1051,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":111,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":108,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:11",{"_index":121,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:16",{"_index":123,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:22",{"_index":129,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:30",{"_index":156,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:38",{"_index":158,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:52",{"_index":160,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:59",{"_index":142,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2665,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2667,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3462,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":4932,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3510,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/geocoder.service",{"_index":627,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["services/logger.service",{"_index":3509,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sessionid",{"_index":1443,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["set",{"_index":664,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["set('addressstring",{"_index":3297,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":3294,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":3290,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":3289,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":3295,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":3288,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":3287,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setaddress(data",{"_index":819,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setapplicationid(id",{"_index":1578,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setbuttongrpval",{"_index":1000,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":1015,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":1138,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setcheckboxval",{"_index":1176,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcheckboxval(event",{"_index":1194,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcity(value",{"_index":740,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setcountry(value",{"_index":728,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setday",{"_index":2230,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setday(value",{"_index":2260,"title":{},"body":{"components/DateComponent.html":{}}}],["setdefaultcountryasoption",{"_index":804,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultprovinceasoption(country",{"_index":790,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdisabledstate",{"_index":1221,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":830,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["seterrormsg",{"_index":1222,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["setfirstname(value",{"_index":3270,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setlabels",{"_index":833,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setlastname(value",{"_index":3274,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmaxlengths",{"_index":838,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setmiddlename(value",{"_index":3273,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmonth",{"_index":2231,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setmonth(value",{"_index":2266,"title":{},"body":{"components/DateComponent.html":{}}}],["setname(fullname",{"_index":3878,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":1104,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete",{"_index":1105,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpassword",{"_index":3753,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":3788,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setphonenumber",{"_index":3953,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setphonenumber(evt",{"_index":3973,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setpostalcode(value",{"_index":745,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setprogramname(name",{"_index":1582,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setprogresssteps",{"_index":1613,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1623,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":737,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setreadonlyfields",{"_index":843,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sets",{"_index":742,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["setseverity",{"_index":1553,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setseverity(severity",{"_index":1536,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setstarturl(url",{"_index":1136,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":4127,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(evt",{"_index":4145,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstreet(val",{"_index":901,"title":{},"body":{"classes/Address.html":{}}}],["setstreetaddress(value",{"_index":738,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["settags",{"_index":1554,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["settags(message",{"_index":1542,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["settimeout",{"_index":2346,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["settimestamp",{"_index":1533,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setting",{"_index":2441,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["settings",{"_index":5322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":202,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":5086,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["setuprequest",{"_index":116,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":157,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1501,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["seturl(newurl",{"_index":1452,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setvalue(val",{"_index":1267,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setyear",{"_index":2232,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setyear(value",{"_index":2269,"title":{},"body":{"components/DateComponent.html":{}}}],["severity",{"_index":1493,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["severitylevels",{"_index":1537,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":2099,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgp",{"_index":2103,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgs",{"_index":2119,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sha1",{"_index":2681,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":3037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2685,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3522,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":4216,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":358,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":2063,"title":{},"body":{"interfaces/CountryList.html":{}}}],["shouldn't",{"_index":3620,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"contributing.html":{}}}],["show",{"_index":47,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":1002,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/RadioComponent.html":{},"todo.html":{}}}],["showfullsizeview",{"_index":3601,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["showline${line",{"_index":759,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline2",{"_index":683,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline3",{"_index":684,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["shown",{"_index":3515,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":3756,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":4110,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1517,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":2101,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sign",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":3182,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/GeocoderInputComponent.html":{},"directives/YearValidateDirective.html":{},"contributing.html":{}}}],["simple",{"_index":1097,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["simplechanges",{"_index":2456,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["simpledate",{"_index":2243,"title":{"interfaces/SimpleDate.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":5476,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":952,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":3073,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{}}}],["simulates",{"_index":3402,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["sin",{"_index":4323,"title":{},"body":{"components/SinComponent.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":564,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":4325,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":4324,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.directive",{"_index":4285,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["sin.directive.ts",{"_index":4486,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["sin.directive.ts:74",{"_index":4488,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["sin.length",{"_index":4489,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["sin_",{"_index":4330,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":563,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":2104,"title":{},"body":{"interfaces/CountryList.html":{}}}],["single",{"_index":3446,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sint",{"_index":1720,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sit",{"_index":1271,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1651,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["sitereg",{"_index":3728,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["size",{"_index":1360,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["sizetxt",{"_index":1361,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1362,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":2131,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sk",{"_index":4094,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["skiblibcheck",{"_index":5325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":280,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3456,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":5465,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":5063,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3457,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":248,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":2112,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sle",{"_index":2100,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slightly",{"_index":3484,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1645,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1639,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":2109,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slovenia",{"_index":2111,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slv",{"_index":1809,"title":{},"body":{"interfaces/CountryList.html":{}}}],["small",{"_index":2836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smooth",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{}}}],["smr",{"_index":2084,"title":{},"body":{"interfaces/CountryList.html":{}}}],["social",{"_index":4328,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":5359,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":2113,"title":{},"body":{"interfaces/CountryList.html":{}}}],["solve",{"_index":2932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":2114,"title":{},"body":{"interfaces/CountryList.html":{}}}],["somalia",{"_index":2115,"title":{},"body":{"interfaces/CountryList.html":{}}}],["something",{"_index":893,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":5201,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortobjectbykeys(obj",{"_index":5303,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sorts",{"_index":5304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["south",{"_index":2117,"title":{},"body":{"interfaces/CountryList.html":{}}}],["southern",{"_index":1838,"title":{},"body":{"interfaces/CountryList.html":{}}}],["soutput",{"_index":3010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3498,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3502,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3503,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_acl_maintenance_flag\":\"\",\"spa_env_msp_acl_maintenance_message",{"_index":3591,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3504,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3592,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3505,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3611,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3506,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3507,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3508,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now",{"_index":3594,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2424,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":5502,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":3660,"title":{},"body":{"classes/MaskModel.html":{},"directives/ValidatePhoneDirective.html":{}}}],["spaenvres",{"_index":3585,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":2124,"title":{},"body":{"interfaces/CountryList.html":{}}}],["specfic",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":1259,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["specific",{"_index":656,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":5324,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["specificmember",{"_index":4123,"title":{},"body":{"components/RadioComponent.html":{}}}],["specified",{"_index":133,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["spinner",{"_index":49,"title":{},"body":{"classes/AbstractForm.html":{}}}],["split",{"_index":2943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":3291,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":1400,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["spm",{"_index":2077,"title":{},"body":{"interfaces/CountryList.html":{}}}],["srb",{"_index":2096,"title":{},"body":{"interfaces/CountryList.html":{}}}],["src/version.js",{"_index":5294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sri",{"_index":2126,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ssd",{"_index":2121,"title":{},"body":{"interfaces/CountryList.html":{}}}],["stable",{"_index":3309,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["stack",{"_index":4588,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["standard",{"_index":890,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":5061,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4552,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":5205,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":5208,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":5210,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":5203,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":5212,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":5214,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":5216,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":5218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start/package",{"_index":5225,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":4616,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":5396,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["starts",{"_index":2952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["starturl",{"_index":1106,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":694,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":5127,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1978,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":857,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["status",{"_index":1603,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{},"todo.html":{}}}],["statuschange",{"_index":4128,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["statustext",{"_index":1487,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["step",{"_index":2900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4569,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4501,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1616,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["stepper/wizard",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["stepper/wizardprogress",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":2766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["still",{"_index":2600,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PageSectionComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":864,"title":{},"body":{"classes/Address.html":{}}}],["stored",{"_index":774,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stp",{"_index":2087,"title":{},"body":{"interfaces/CountryList.html":{}}}],["str",{"_index":2554,"title":{},"body":{"directives/DayValidationDirective.html":{},"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{},"miscellaneous/functions.html":{}}}],["str.replace",{"_index":2642,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["str.slice(0",{"_index":3432,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["street",{"_index":673,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":566,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.ts",{"_index":5389,"title":{},"body":{"todo.html":{}}}],["street.directive",{"_index":4293,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["street.directive.ts",{"_index":4492,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["street.directive.ts:25",{"_index":4494,"title":{},"body":{"directives/ValidateStreetDirective.html":{}}}],["streetcomponent",{"_index":565,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3734,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":3750,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":71,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["stripped",{"_index":3394,"title":{},"body":{"components/GeocoderInputComponent.html":{},"directives/ValidatePhoneDirective.html":{}}}],["stripped.length",{"_index":4461,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["stripstringtomaxlength",{"_index":3338,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["stripstringtomaxlength(str",{"_index":3362,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["structure",{"_index":657,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/YearValidateDirective.html":{}}}],["style",{"_index":944,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageSectionComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["style.width]='strengthpercentage",{"_index":3839,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":3847,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":5447,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styled",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1637,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":5509,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":5504,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":5503,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":5444,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["stylesscss",{"_index":5215,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":476,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":962,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3443,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sub",{"_index":3292,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":1544,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["subfolder",{"_index":5079,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3372,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["submission",{"_index":1467,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["submit",{"_index":269,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3705,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitlabel",{"_index":3170,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["submitted",{"_index":711,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["subscribe",{"_index":1462,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["subscribe(evt",{"_index":2857,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3626,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3479,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4537,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscription",{"_index":4521,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["success",{"_index":194,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["success_fetch_img",{"_index":5271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":5274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successcode",{"_index":1591,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["successfully",{"_index":2942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":959,"title":{},"body":{"components/ButtonComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":2122,"title":{},"body":{"interfaces/CountryList.html":{}}}],["suggestion",{"_index":3731,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["sum",{"_index":4431,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{}}}],["sumofremainders",{"_index":4432,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["sunhighlight",{"_index":2491,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["super",{"_index":704,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":1448,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["super(message",{"_index":3666,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["supply",{"_index":4585,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["support",{"_index":4692,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sur",{"_index":2129,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sure",{"_index":717,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":2130,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svalbard",{"_index":2132,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svg",{"_index":5371,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":2108,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svn",{"_index":2110,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swaziland",{"_index":2136,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swe",{"_index":2137,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sweden",{"_index":2138,"title":{},"body":{"interfaces/CountryList.html":{}}}],["switch",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4549,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":3381,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switchmap(searchphrase",{"_index":3388,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switzerland",{"_index":2140,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swz",{"_index":2135,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sxm",{"_index":2105,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syc",{"_index":2098,"title":{},"body":{"interfaces/CountryList.html":{}}}],["symbol",{"_index":4460,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["symlink",{"_index":5449,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":2141,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syrian",{"_index":2142,"title":{},"body":{"interfaces/CountryList.html":{}}}],["system",{"_index":2764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":130,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":3427,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["tabbed",{"_index":284,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":4131,"title":{},"body":{"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5243,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":3089,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":5070,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1540,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["taiwan",{"_index":2145,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":2147,"title":{},"body":{"interfaces/CountryList.html":{}}}],["take",{"_index":3532,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":162,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":2149,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tap",{"_index":168,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["target",{"_index":137,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["targetpath",{"_index":5316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tca",{"_index":2171,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tcd",{"_index":1761,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tell",{"_index":5443,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":467,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["template'},{'name",{"_index":513,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["template.component",{"_index":4307,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["template.component.html",{"_index":1589,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.scss",{"_index":1588,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts",{"_index":1587,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["template.component.ts:18",{"_index":1593,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:25",{"_index":1597,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:29",{"_index":1599,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:33",{"_index":1601,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template/confirm",{"_index":1586,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["templateforms",{"_index":3322,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["templates",{"_index":5479,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":478,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":2981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1297,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1303,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":1839,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":1737,"title":{},"body":{"interfaces/CountryList.html":{}}}],["test",{"_index":232,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{}}}],["test(var1",{"_index":2916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":350,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["tests",{"_index":238,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{},"contributing.html":{}}}],["text",{"_index":300,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/ValidatePhoneDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["text)).click",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":3659,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":4247,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":2156,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tha",{"_index":2151,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thailand",{"_index":2152,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thanks",{"_index":4987,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1491,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{}}}],["there's",{"_index":2515,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["therefore",{"_index":817,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["theyt",{"_index":3083,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":3738,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3624,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._bypassguards",{"_index":1147,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":4190,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this._headers",{"_index":195,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1450,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set",{"_index":1449,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('severity",{"_index":1538,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('tags",{"_index":1543,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('timestamp",{"_index":1534,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._log",{"_index":1457,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._logerror",{"_index":1459,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._onchange",{"_index":826,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._onchange(event",{"_index":1213,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2527,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(evt",{"_index":4156,"title":{},"body":{"components/RadioComponent.html":{}}}],["this._onchange(null",{"_index":2523,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(stripped",{"_index":3419,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(this.addr",{"_index":734,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._onchange(this.person",{"_index":3272,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(this.search",{"_index":3430,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(true",{"_index":3607,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":1023,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this._onchange(value",{"_index":4005,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._onchange(values",{"_index":3269,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":829,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._ontouched(this.addr",{"_index":736,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._sendlog(errormessage",{"_index":1477,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._sendlog(message",{"_index":1474,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._starturl",{"_index":1146,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._value",{"_index":4153,"title":{},"body":{"components/RadioComponent.html":{}}}],["this.accept.emit(fn",{"_index":3638,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3604,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4538,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addline(2",{"_index":723,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addline(3",{"_index":725,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr",{"_index":667,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline1",{"_index":739,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline2",{"_index":722,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline3",{"_index":724,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.city",{"_index":741,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.country",{"_index":709,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.postal",{"_index":733,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.province",{"_index":715,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.address",{"_index":3376,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.address[addrlookup",{"_index":771,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.addr",{"_index":735,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.selectedaddress",{"_index":3417,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.addressline1",{"_index":910,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":921,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":923,"title":{},"body":{"classes/Address.html":{}}}],["this.addrlabels[x",{"_index":836,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.agreecheck",{"_index":3640,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.allowemptyvalue",{"_index":4441,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["this.allowextralines",{"_index":721,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.application",{"_index":2725,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.base_url}/addresses.json",{"_index":3284,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.bconly",{"_index":705,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["this.blurevent.emit",{"_index":1343,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":3144,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":2928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":3147,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":983,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":1024,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.cancontinue",{"_index":3179,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":3146,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":3148,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4543,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":2349,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":1214,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":2891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":911,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2522,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4592,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4591,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3606,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.commonyearvalidate",{"_index":4606,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.componentlabel",{"_index":3808,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3564,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.continuebutton",{"_index":428,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":427,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2738,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2503,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2507,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1633,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":913,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{}}}],["this.countrylist",{"_index":808,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.countrylist.find",{"_index":809,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.criteriamsg",{"_index":3817,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3636,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":1025,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":1212,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":1022,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":3128,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2337,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.date.day",{"_index":2331,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.month",{"_index":2329,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.year",{"_index":2333,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit",{"_index":2340,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2526,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2490,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":3893,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.day",{"_index":3890,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.month",{"_index":3889,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.year",{"_index":3888,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth[key",{"_index":3894,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2489,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2502,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2505,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2497,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2499,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dayref",{"_index":2341,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.defaultcountry",{"_index":805,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.defaulterrmsg[x",{"_index":1347,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.defaulterrormessage",{"_index":1210,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["this.defaultprovince",{"_index":794,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablecontinue",{"_index":3641,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.disabled",{"_index":831,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this.disabled[x",{"_index":848,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablegeocoder",{"_index":815,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.dobformat",{"_index":3891,"title":{},"body":{"classes/Person.html":{}}}],["this.duplist",{"_index":2597,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["this.email",{"_index":2628,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.errmsg",{"_index":3262,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":3824,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":3822,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":3820,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":3139,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessage",{"_index":1345,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.errormessage[x",{"_index":1348,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.errormessagerequired",{"_index":1209,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["this.errormessages",{"_index":2356,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":3823,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":3821,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":3819,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages[x",{"_index":2358,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.fieldmaxlenghts[x",{"_index":842,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.findcountrycode",{"_index":714,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.firstname",{"_index":3256,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":649,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.controls[this.daylabelforid",{"_index":2347,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls[this.daylabelforid].updatevalueandvalidity",{"_index":2348,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls[this.yearlabelforid",{"_index":2350,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls[this.yearlabelforid].updatevalueandvalidity",{"_index":2351,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.form.get(x).markastouched",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":3267,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3602,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3605,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3603,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3483,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":3389,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.get",{"_index":5412,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":3298,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4542,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4539,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2726,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getnumericvalue",{"_index":2335,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.getpasswordstrength",{"_index":3828,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":1150,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":2883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":2911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":2913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":2905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":2892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":2893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.haserror",{"_index":3401,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.hasmask",{"_index":4479,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["this.hasnoresults",{"_index":3398,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.heightfactor",{"_index":1418,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":179,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":1060,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":183,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":1055,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":176,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2737,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4375,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4374,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":2882,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":3150,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":3155,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":3130,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":3131,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.inmaintenance",{"_index":3600,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.isbcphn",{"_index":4440,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["this.iscanada",{"_index":730,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.isdate(this.disablesince",{"_index":2501,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2504,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdobempty",{"_index":3887,"title":{},"body":{"classes/Person.html":{}}}],["this.isloading",{"_index":3178,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.ispagelistempty",{"_index":1148,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.istypeaheadloading",{"_index":3397,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.isundermaintenance",{"_index":3599,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":1211,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"components/XiconButtonComponent.html":{}}}],["this.labels",{"_index":834,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labels[x",{"_index":837,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labeltext",{"_index":2488,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":3258,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":181,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":3126,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1466,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3616,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":2941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.maintenanceflag",{"_index":3630,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3631,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":3940,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlen",{"_index":3696,"title":{},"body":{"components/NameComponent.html":{}}}],["this.maxlength",{"_index":2631,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.maxlengths",{"_index":839,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.maxlengths[x",{"_index":841,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.middlename",{"_index":3260,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":3810,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":3815,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":3816,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2512,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.monthref",{"_index":2336,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.namestr",{"_index":3695,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2390,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2528,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2531,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":1233,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":2877,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":3271,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(this.phonenumber",{"_index":4004,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.onchange.emit(values",{"_index":3268,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":3391,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.onlyfuturedates",{"_index":2506,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":1156,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":1164,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":1167,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":1170,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":1157,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":1161,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":1159,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.password",{"_index":3826,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":3830,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":3264,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person",{"_index":3255,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":3257,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":3259,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":3261,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.phn",{"_index":3939,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phonenumber",{"_index":4001,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.placeholder",{"_index":3994,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.post()these",{"_index":5413,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1511,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":915,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":916,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":4044,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1630,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4555,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4546,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":914,"title":{},"body":{"classes/Address.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist",{"_index":781,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provincelist.find",{"_index":792,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provlist",{"_index":784,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.pswdstrength",{"_index":3827,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":2959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.readonlyfields[x",{"_index":846,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.required",{"_index":3154,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":3263,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":2884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":2950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":2965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.events.pipe",{"_index":3476,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":4195,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.url",{"_index":1151,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.router.url.includes(url",{"_index":3481,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3493,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4534,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4544,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.samplemodal.hide",{"_index":4205,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.samplemodal.show",{"_index":4203,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.scaledwidth",{"_index":4377,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4540,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.search",{"_index":3396,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.search.length",{"_index":3409,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":3429,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.pipe",{"_index":3386,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.selectedaddress",{"_index":3399,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.selectedday",{"_index":4601,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.selectedmonth",{"_index":2551,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["this.selectedyear",{"_index":2550,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["this.sendspaenvserver(headername",{"_index":3625,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":4191,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":4196,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":4194,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setdefaultcountryasoption",{"_index":710,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption",{"_index":729,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption(this.addr.country",{"_index":716,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.seterrormsg",{"_index":1341,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.setlabels",{"_index":706,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setmaxlengths",{"_index":707,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setpagecomplete",{"_index":4175,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":4174,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setreadonlyfields",{"_index":708,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1476,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1473,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settags(message.event",{"_index":1498,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settimestamp",{"_index":1497,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setuprequest(observable",{"_index":180,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":3132,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.showline2",{"_index":757,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.showline3",{"_index":758,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.sin",{"_index":4348,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2493,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3482,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":431,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3627,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3629,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3632,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3633,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3634,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3635,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.statuschange.emit(evt",{"_index":4154,"title":{},"body":{"components/RadioComponent.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4557,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.strengthpercentage",{"_index":3829,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.stripstringtomaxlength(changes.address.currentvalue._geocoderfulladdress",{"_index":3395,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.stripstringtomaxlength(data.fulladdress",{"_index":3418,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.triggerdayvalidation",{"_index":2338,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.triggeryearvalidation",{"_index":2339,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.typeaheadlist",{"_index":3385,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.updateprovlist",{"_index":726,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.updateskipcontentlink",{"_index":3480,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1453,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.usecurrentdate",{"_index":2327,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.uuid",{"_index":1405,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.value",{"_index":4006,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{}}}],["this.valuechange.emit",{"_index":1342,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.valuechange.emit(evt",{"_index":4155,"title":{},"body":{"components/RadioComponent.html":{}}}],["this.viewcontainerref",{"_index":4371,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1416,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this[lookup",{"_index":760,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["those",{"_index":5397,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":2998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3583,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["throw",{"_index":146,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/XiconButtonComponent.html":{}}}],["throwerror",{"_index":1436,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('geocoder",{"_index":3318,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1525,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["throwerror(msg",{"_index":1503,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["thumbnail",{"_index":2851,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["thumbnail'},{'name",{"_index":568,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":4351,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":4350,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":567,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":3016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tiff",{"_index":2806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":3197,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":3005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":2343,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["times",{"_index":2897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["timor",{"_index":2154,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tip",{"_index":1079,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3709,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":483,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":2146,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkl",{"_index":2158,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkm",{"_index":2169,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tls",{"_index":2153,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobago",{"_index":2164,"title":{},"body":{"interfaces/CountryList.html":{}}}],["today",{"_index":2252,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["todo",{"_index":34,"title":{"todo.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"todo.html":{}}}],["together",{"_index":3877,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":992,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":570,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4383,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4382,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":569,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":2157,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tohse",{"_index":5507,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tokelau",{"_index":2159,"title":{},"body":{"interfaces/CountryList.html":{}}}],["told",{"_index":2771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":2089,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2443,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ton",{"_index":2160,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tonga",{"_index":2161,"title":{},"body":{"interfaces/CountryList.html":{}}}],["toobig",{"_index":1382,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":3803,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1381,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":79,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":860,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1495,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["touched",{"_index":1344,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["trace",{"_index":4589,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["track",{"_index":940,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1401,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3519,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":3031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["transformfn",{"_index":5329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translation",{"_index":1036,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["treated",{"_index":4420,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["tree",{"_index":469,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["trigger",{"_index":184,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["triggerdayvalidation",{"_index":2233,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["triggers",{"_index":3153,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["triggeryearvalidation",{"_index":2234,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["trimmed",{"_index":2384,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2388,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2389,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":3301,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":2163,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tristan",{"_index":2066,"title":{},"body":{"interfaces/CountryList.html":{}}}],["true",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3568,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["try/catch",{"_index":4562,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ts",{"_index":5427,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":5064,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsconfig.json",{"_index":5323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tsdoc",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["tslint",{"_index":2689,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3587,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2690,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":2162,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tun",{"_index":2165,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tunisia",{"_index":2166,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tur",{"_index":2167,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkey",{"_index":2168,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":2170,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turks",{"_index":2172,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turn",{"_index":2820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":1153,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":2174,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":2175,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tweak",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["tweaks",{"_index":392,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":2144,"title":{},"body":{"interfaces/CountryList.html":{}}}],["two",{"_index":5495,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeahead",{"_index":3379,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":3331,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmatch",{"_index":3358,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmodule",{"_index":4233,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":4314,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typed",{"_index":3371,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeof",{"_index":844,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["typeoption",{"_index":264,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":403,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":5463,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":419,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"contributing.html":{}}}],["types/pdfjs",{"_index":5249,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4898,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["typetext",{"_index":265,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":413,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":266,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":417,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":4160,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["typically",{"_index":4452,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["typo",{"_index":366,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":2148,"title":{},"body":{"interfaces/CountryList.html":{}}}],["u.s",{"_index":2199,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uga",{"_index":2176,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uganda",{"_index":2177,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ui",{"_index":3425,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ukr",{"_index":2178,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ukraine",{"_index":2179,"title":{},"body":{"interfaces/CountryList.html":{}}}],["umi",{"_index":2183,"title":{},"body":{"interfaces/CountryList.html":{}}}],["unable",{"_index":1500,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["unchecked",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":5470,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1283,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":178,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["under",{"_index":3038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlines",{"_index":4457,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["underlying",{"_index":5344,"title":{},"body":{"index.html":{}}}],["underscore",{"_index":4455,"title":{},"body":{"directives/ValidatePhoneDirective.html":{}}}],["understand",{"_index":3573,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1407,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":2325,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["united",{"_index":2150,"title":{},"body":{"interfaces/CountryList.html":{}}}],["united_states",{"_index":632,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["unknown",{"_index":1384,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":988,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unreleased",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["unsuccessful",{"_index":1522,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":3070,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":2794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["up",{"_index":373,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":5467,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":336,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":5223,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateangularjson(host",{"_index":5319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateappcomponentts",{"_index":5237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateappcomponentts(tree",{"_index":5288,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updated",{"_index":2321,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":5238,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatepackagejson(tree",{"_index":5291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateprovlist",{"_index":780,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updates",{"_index":772,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"miscellaneous/functions.html":{}}}],["updateskipcontentlink",{"_index":3460,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":5224,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatetsconfig(host",{"_index":5320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updating",{"_index":960,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":2717,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploaded",{"_index":1354,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2692,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":531,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":4245,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2693,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2694,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1379,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2645,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":3051,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":3127,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2710,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["upper",{"_index":744,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["uppercase",{"_index":3658,"title":{},"body":{"classes/MaskModel.html":{}}}],["uppercasepipe",{"_index":3645,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":3650,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["url",{"_index":80,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/WizardProgressBarComponent.html":{}}}],["url.com/fpcare/example#content",{"_index":3488,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.includes",{"_index":1168,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["url.includes(x.route",{"_index":4556,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["urlbasename",{"_index":3463,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urltree",{"_index":4185,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":2186,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ury",{"_index":2185,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usa",{"_index":1661,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usable",{"_index":5407,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1647,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":239,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["usecurrentdate",{"_index":2237,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["used",{"_index":163,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedropdownlist",{"_index":2218,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":218,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["useful",{"_index":2425,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":814,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["user",{"_index":59,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["user's",{"_index":2845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":3739,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["users",{"_index":675,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["uses",{"_index":801,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["using",{"_index":134,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1313,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":941,"title":{},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":937,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["uzb",{"_index":2187,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":2188,"title":{},"body":{"interfaces/CountryList.html":{}}}],["val",{"_index":666,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["val.country",{"_index":796,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.countrycode",{"_index":810,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.description",{"_index":795,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.label",{"_index":4157,"title":{},"body":{"components/RadioComponent.html":{}}}],["val.provincecode",{"_index":793,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["valid",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"contributing.html":{}}}],["validate",{"_index":2326,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["validate(control",{"_index":2548,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validate.directive",{"_index":4241,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validate.directive.ts",{"_index":4594,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["validate.directive.ts:16",{"_index":4597,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:17",{"_index":4598,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:18",{"_index":4599,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:20",{"_index":4600,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validatebcpostaldirective",{"_index":583,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatecitydirective",{"_index":585,"title":{"directives/ValidateCityDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateCityDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validated",{"_index":5120,"title":{},"body":{"contributing.html":{}}}],["validateemaildirective",{"_index":587,"title":{"directives/ValidateEmailDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateEmailDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatenamedirective",{"_index":589,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepc",{"_index":4478,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatepc(control",{"_index":4469,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{}}}],["validatephn",{"_index":4421,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatephn(phn",{"_index":5309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatephndirective",{"_index":591,"title":{"directives/ValidatePhnDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatephonedirective",{"_index":593,"title":{"directives/ValidatePhoneDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhoneDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepostalcodedirective",{"_index":595,"title":{"directives/ValidatePostalcodeDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateregiondirective",{"_index":597,"title":{"directives/ValidateRegionDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateRegionDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatesindirective",{"_index":599,"title":{"directives/ValidateSinDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatestreetdirective",{"_index":601,"title":{"directives/ValidateStreetDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validation",{"_index":42,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CaptchaDataService.html":{},"components/DatepickerComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validation.directive",{"_index":4237,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validation.directive.ts",{"_index":2540,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["validation.directive.ts:14",{"_index":2546,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validation.directive.ts:15",{"_index":2547,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validation.directive.ts:17",{"_index":2549,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validationerrors",{"_index":4391,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validations",{"_index":3736,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["validator",{"_index":2541,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["validatorfn",{"_index":2589,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateEmailDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/ValidateStreetDirective.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":44,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidatePhoneDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["valuechange",{"_index":1227,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["valuemax=\"100",{"_index":3844,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":3843,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":3841,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":773,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vanuatu",{"_index":2190,"title":{},"body":{"interfaces/CountryList.html":{}}}],["var",{"_index":496,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":765,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["variablescss",{"_index":5217,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":1876,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vatican",{"_index":1878,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vct",{"_index":2080,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ven",{"_index":2191,"title":{},"body":{"interfaces/CountryList.html":{}}}],["venezuela",{"_index":2192,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verde",{"_index":1754,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":1057,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":1032,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":1042,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":5273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":2398,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["version.js",{"_index":5293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versionjs",{"_index":5239,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["versionjs(options",{"_index":5292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versions",{"_index":4636,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":4107,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4516,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":2196,"title":{},"body":{"interfaces/CountryList.html":{}}}],["via",{"_index":396,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":2195,"title":{},"body":{"interfaces/CountryList.html":{}}}],["view",{"_index":4515,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":83,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2701,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":981,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":1020,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2719,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2703,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":1198,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3561,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dayref",{"_index":2284,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('dp",{"_index":2474,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2699,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":38,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3576,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2705,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('monthref",{"_index":2309,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('samplesmodal",{"_index":4201,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2707,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4522,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchild('yearref",{"_index":2313,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchildren",{"_index":4527,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4525,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":4353,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":2650,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewencapsulation.none",{"_index":2696,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewprovider",{"_index":3989,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["viewproviders",{"_index":651,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":2081,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vir",{"_index":2198,"title":{},"body":{"interfaces/CountryList.html":{}}}],["virgin",{"_index":2197,"title":{},"body":{"interfaces/CountryList.html":{}}}],["visibility",{"_index":2422,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["visible",{"_index":719,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vitae",{"_index":1315,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":2194,"title":{},"body":{"interfaces/CountryList.html":{}}}],["void",{"_index":65,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1291,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1336,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1305,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1309,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":5403,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":2189,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":872,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":5432,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":2793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wallis",{"_index":2201,"title":{},"body":{"interfaces/CountryList.html":{}}}],["want",{"_index":402,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":1602,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"components/PasswordComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warningcode",{"_index":1592,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["warnings",{"_index":5373,"title":{},"body":{"todo.html":{}}}],["warranties",{"_index":5362,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5466,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":5433,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":891,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/getting-started.html":{}}}],["waze",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["we'll",{"_index":2530,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["we're",{"_index":3990,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4548,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3530,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":267,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weight",{"_index":4426,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["weights[i",{"_index":4428,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["well",{"_index":3406,"title":{},"body":{"components/GeocoderInputComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["western",{"_index":2204,"title":{},"body":{"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1417,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":207,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":1121,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/YearValidateDirective.html":{}}}],["white",{"_index":5103,"title":{},"body":{"contributing.html":{}}}],["whole",{"_index":5492,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1441,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["width",{"_index":2799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2495,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1410,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3569,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1446,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["window.location.href",{"_index":3491,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3490,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3492,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4567,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{}}}],["winds",{"_index":2510,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wip",{"_index":4881,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["wish",{"_index":3581,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":345,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":3423,"title":{},"body":{"components/GeocoderInputComponent.html":{},"classes/MaskModel.html":{},"components/XiconButtonComponent.html":{},"license.html":{}}}],["wizard",{"_index":572,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":5462,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":571,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1614,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":2200,"title":{},"body":{"interfaces/CountryList.html":{}}}],["won't",{"_index":1529,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["work",{"_index":362,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"contributing.html":{}}}],["workaround",{"_index":2728,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["working",{"_index":2733,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":386,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["wrap",{"_index":2342,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PageSectionComponent.html":{}}}],["wrapped",{"_index":2469,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2393,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper/row",{"_index":3726,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wraps",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":5426,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":824,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["writevalue(obj",{"_index":2463,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":1017,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["writing",{"_index":5358,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":2805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1380,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":2083,"title":{},"body":{"interfaces/CountryList.html":{}}}],["x",{"_index":789,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2487,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":1165,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.route",{"_index":1169,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1629,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":3151,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1628,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":575,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{}}}],["xiconbutton",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":574,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":2801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["y",{"_index":4604,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["year",{"_index":2271,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["year_",{"_index":2311,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yeardistantfuture",{"_index":2289,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yeardistantpast",{"_index":2288,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yearlabelforid",{"_index":2227,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearref",{"_index":2228,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearvalidatedirective",{"_index":603,"title":{"directives/YearValidateDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"overview.html":{}}}],["yellow",{"_index":5376,"title":{},"body":{"todo.html":{}}}],["yem",{"_index":2206,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yemen",{"_index":2207,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yes",{"_index":81,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImageProcessingError.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"classes/MoHCommonLibraryError.html":{},"components/RadioComponent.html":{},"miscellaneous/functions.html":{}}}],["yes/no",{"_index":991,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":3020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":5442,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":945,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":5393,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":5340,"title":{},"body":{"index.html":{}}}],["yt",{"_index":4100,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":1950,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yukon",{"_index":4101,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yyyy",{"_index":2557,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["yyyy/mm/dd",{"_index":2427,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":3870,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":875,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z0",{"_index":4400,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["z])[a",{"_index":4399,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z]/i",{"_index":3656,"title":{},"body":{"classes/MaskModel.html":{}}}],["z][0",{"_index":4471,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["z][a",{"_index":3242,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":877,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["z]\\s?[0",{"_index":4473,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["za",{"_index":3241,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["zabceghj",{"_index":874,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":2116,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zambia",{"_index":2209,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zealand",{"_index":2006,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zero",{"_index":2953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["zeros",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["zib",{"_index":3019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":2211,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zip",{"_index":696,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["zmb",{"_index":2208,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zone",{"_index":2724,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":5258,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1070,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":2210,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":3800,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":3799,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:13\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:10\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:15\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:30\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:17\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:45\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:36\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, Params } from '@angular/router';\n\n/**\n *\n */\nexport abstract class AbstractForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string, queryParams?: Params ) {\n\n    this.router.navigate([url], { queryParams: queryParams })\n      .then((data) => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:16\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:59\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:52\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractPgCheckService.\nYour application's route guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n * \n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AccordionComponent } from 'ngx-bootstrap';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddrLabelList.html":{"url":"interfaces/AddrLabelList.html","title":"interface - AddrLabelList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddrLabelList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address1\n                                \n                                \n                                            Optional\n                                        address2\n                                \n                                \n                                            Optional\n                                        address3\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address3\n                                    \n                                \n                                \n                                    \n                                        address3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    street\n                                \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:11\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:44\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:36\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:23\n                                \n                            \n\n                \n                    \n                        setstreet(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  public addressLine1: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine2: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n  public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n  // For backward compatibilty with applications that use street.\n  get street() {\n    return this.addressLine1;\n  }\n\n  set street( val: string ) {\n    this.addressLine1 = val;\n  }\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.addressLine1}, ${this.city}`;\n  }\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.addressLine1 && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:101\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:93\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:82\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:50\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:72\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:57\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:37\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setCheckboxVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:36\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:41\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:42\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCheckboxVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetCheckboxVal(event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n\n  // TODO: Remove to make custom form control -- possible breaking change\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\nexport class CheckboxComponent extends Base implements  OnInit, ControlValueAccessor {\n  defaultErrorMessage: string = '';\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() required: boolean = false;  // TODO: Remove - breaking change\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() errorMessageRequired: string;\n  @Input() showError: boolean;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    if ( this.errorMessageRequired ) {\n      this.defaultErrorMessage = this.errorMessageRequired;\n    } else {\n      this.defaultErrorMessage = this.label + ' is required.';\n    }\n  }\n\n  setCheckboxVal(event: boolean) {\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n\n    {{defaultErrorMessage}}\n\n\n\n  {{defaultErrorMessage}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}    {{defaultErrorMessage}}  {{defaultErrorMessage}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n            \n                styleUrls\n                ./city.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:26\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../../public_api';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss']\n})\nexport class CityComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlen: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() placeholder: string = 'City name';\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.city = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{label}} {{defaultErrMsg.required}}\n  \n  \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{label}} {{defaultErrMsg.required}}        {{label}} {{defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:179\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonLogger.html":{"url":"injectables/CommonLogger.html","title":"injectable - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                url\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _log\n                            \n                            \n                                    Protected\n                                _logError\n                            \n                            \n                                    Private\n                                _sendLog\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logError\n                            \n                            \n                                    Public\n                                logHttpError\n                            \n                            \n                                    Private\n                                setSeverity\n                            \n                            \n                                    Private\n                                setTags\n                            \n                            \n                                    Private\n                                setTimestamp\n                            \n                            \n                                setURL\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    applicationId\n                                \n                                \n                                    programName\n                                \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _log(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:79\n                \n            \n\n\n            \n                \n                    Log a message to Splunk. This is the main way to send logs and\nautomatically includes meta-data. You do not need to subscribe to the\nresponse, as the service already does that. The input object must have an\n'event' property set, everything else is optional.\nExample:\nthis.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object, nesting is fine, with event property\nset.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _logError(errorMessage: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _sendLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _sendLog(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:110\n                \n            \n\n\n            \n                \n                    Internal method to send logs to Splunk, includes meta-data except that's\nconsistent across all requests, but not specific values like severity\nlevel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object or anything that can be toString()'d,\nlike Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:93\n                \n            \n\n\n            \n                \n                    Log HTTP errors, e.g. when losing network connectivity or receiving an\nerror response code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSeverity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeverity(severity: SeverityLevels)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    severity\n                                    \n                                                SeverityLevels\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTags(message: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:166\n                \n            \n\n\n            \n                \n                    The headers are easier to search in splunk, and we aren't using tags, so\nrepurpose it to event type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setURL\n                        \n                        \n                    \n                \n            \n            \n                \nsetURL(newURL: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  })\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:23\n                            \n                        \n\n                \n                    \n                        The HTTP Headers which go with each request.  These MUST be set if you are\nusing the logger.  Fields include:\n\nprogram (REQUIRED, the application wide code)\napplicationId (REQUIRED, like sessionId)\nrequest_method (REQUIRED, 'POST')\nlogsource: (REQUIRED, window.location.hostname)\nhttp_x_forwarded_host (REQUIRED, window.location.hostname)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        applicationId\n                    \n                \n\n                \n                    \n                        getapplicationId()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:39\n                                \n                            \n\n                \n                    \n                        setapplicationId(id: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        programName\n                    \n                \n\n                \n                    \n                        getprogramName()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:47\n                                \n                            \n\n                \n                    \n                        setprogramName(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:147\n                                \n                            \n                    \n                        \n                                Overwrite the inherited httpOptions so we can set responseType to text.\nThis updates Angular's parsing, and it won't error out due to the server\nnot responding with JSON.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmTemplateComponent.html":{"url":"components/ConfirmTemplateComponent.html","title":"component - ConfirmTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-confirm-template\n            \n\n            \n                styleUrls\n                ./confirm-template.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-template.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayIcon\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    successCode\n                                \n                                \n                                    errorCode\n                                \n                                \n                                    warningCode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayIcon\n                    \n                \n                \n                    \n                        Type :         ApiStatusCodes\n\n                    \n                \n                \n                    \n                        Default value : ApiStatusCodes.SUCCESS\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        successCode\n                    \n                \n\n                \n                    \n                        getsuccessCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorCode\n                    \n                \n\n                \n                    \n                        geterrorCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        warningCode\n                    \n                \n\n                \n                    \n                        getwarningCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Base } from '../../models/base';\n\n\nexport enum ApiStatusCodes {\n  SUCCESS = '0',\n  ERROR = '1',\n  WARNING = '2'\n}\n\n@Component({\n  selector: 'common-confirm-template',\n  templateUrl: './confirm-template.component.html',\n  styleUrls: ['./confirm-template.component.scss']\n})\nexport class ConfirmTemplateComponent extends Base {\n\n  @Input() displayIcon: ApiStatusCodes = ApiStatusCodes.SUCCESS;\n\n  constructor() {\n    super();\n  }\n\n  // Status codes\n  get successCode() {\n    return ApiStatusCodes.SUCCESS;\n  }\n\n  get errorCode() {\n    return ApiStatusCodes.ERROR;\n  }\n\n  get warningCode() {\n    return ApiStatusCodes.WARNING;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n  \n\n\n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Base functionality for container that is used to display bread crumbs \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:12\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:18\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../models/error-message.interface';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, periods, apostrophes and blank characters.',\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateComponent.html":{"url":"components/DateComponent.html","title":"component - DateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/date/date.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-date\n            \n\n            \n                styleUrls\n                ./date.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dayLabelforId\n                            \n                            \n                                dayRef\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                monthLabelforId\n                            \n                            \n                                    Public\n                                monthList\n                            \n                            \n                                monthRef\n                            \n                            \n                                yearLabelforId\n                            \n                            \n                                yearRef\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getNumericValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDay\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                setMonth\n                            \n                            \n                                setYear\n                            \n                            \n                                    Private\n                                triggerDayValidation\n                            \n                            \n                                    Private\n                                triggerYearValidation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessages\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                restrictDate\n                            \n                            \n                                useCurrentDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(form: NgForm, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/date/date.component.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                        NgForm\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         SimpleDate\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :     ErrorMessage | DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Date'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        restrictDate\n                    \n                \n                \n                    \n                        Type :     \"future\" | \"past\" | \"any\"\n\n                    \n                \n                \n                    \n                        Default value : 'any'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:56\n                            \n                        \n                \n                    \n                        Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useCurrentDate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:50\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:59\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getNumericValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumericValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:159\n                \n            \n\n\n            \n                \n                    Convert string to numeric value or null if not \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDay\n                        \n                        \n                    \n                \n            \n            \n                \nsetDay(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:111\n                \n            \n\n\n            \n                \n                    Set the day and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMonth\n                        \n                        \n                    \n                \n            \n            \n                \nsetMonth(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:98\n                \n            \n\n\n            \n                \n                    Set the month and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setYear\n                        \n                        \n                    \n                \n            \n            \n                \nsetYear(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:123\n                \n            \n\n\n            \n                \n                    Set the year and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            triggerDayValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerDayValidation()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:138\n                \n            \n\n\n            \n                \n                    Force the day input to run it's directives again. Important in cases\nwhere user fills fields out of order, e.g. sets days to 31 then month to\nFebrurary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            triggerYearValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerYearValidation()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'day_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dayRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    dayOutOfRange: `Invalid ${LabelReplacementTag}.`,\n    yearDistantPast: `Invalid ${LabelReplacementTag}.`,\n    yearDistantFuture: `Invalid ${LabelReplacementTag}.`,\n    noPastDatesAllowed: `Invalid ${LabelReplacementTag}.`,\n    noFutureDatesAllowed: `Invalid ${LabelReplacementTag}.`,\n    invalidValue: `Invalid ${LabelReplacementTag}.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'month_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            monthList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('monthRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'year_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('yearRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { SimpleDate } from '../../models/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nimport { ErrorMessage, LabelReplacementTag, replaceLabelTag } from '../../models/error-message.interface';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: ErrorMessage | DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  monthLabelforId: string = 'month_' + this.objectId;\n  dayLabelforId: string = 'day_' + this.objectId;\n  yearLabelforId: string = 'year_' + this.objectId;\n\n  defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    dayOutOfRange: `Invalid ${LabelReplacementTag}.`,\n    yearDistantPast: `Invalid ${LabelReplacementTag}.`,\n    yearDistantFuture: `Invalid ${LabelReplacementTag}.`,\n    noPastDatesAllowed: `Invalid ${LabelReplacementTag}.`,\n    noFutureDatesAllowed: `Invalid ${LabelReplacementTag}.`,\n    invalidValue: `Invalid ${LabelReplacementTag}.`\n  };\n\n  constructor( public form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n\n    this.setErrorMsg();\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.triggerYearValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.triggerYearValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the year and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.dayLabelforId] ) {\n        this.form.controls[this.dayLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  private triggerYearValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.yearLabelforId] ) {\n        this.form.controls[this.yearLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessages ) {\n      Object.keys(this.errorMessages).map( x => this.defaultErrMsg[x] = this.errorMessages[x] );\n    }\n    Object.keys(this.defaultErrMsg).map( x => this.defaultErrMsg[x] = replaceLabelTag( this.defaultErrMsg[x] , this.label ) );\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n\n    Month\n    \n      \n      \n      {{month}}\n    \n\n    Day\n    \n\n    Year\n    \n\n  \n\n\n\n\n  \n      {{defaultErrMsg.required}}\n  \n  \n      {{defaultErrMsg.dayOutOfRange}}\n  \n  \n      {{defaultErrMsg.yearDistantPast}}\n  \n  \n      {{defaultErrMsg.yearDistantFuture}}\n  \n  \n        {{defaultErrMsg.noPastDatesAllowed}}\n  \n  \n      {{defaultErrMsg.noFutureDatesAllowed}}\n  \n  \n  \n      {{defaultErrMsg.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}      Month                      {{month}}        Day        Year              {{defaultErrMsg.required}}          {{defaultErrMsg.dayOutOfRange}}          {{defaultErrMsg.yearDistantPast}}          {{defaultErrMsg.yearDistantFuture}}            {{defaultErrMsg.noPastDatesAllowed}}          {{defaultErrMsg.noFutureDatesAllowed}}            {{defaultErrMsg.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\nThis component reports the following errors.\n    required\n    dayOutOfRange\n    yearDistantPast\n    yearDistantFuture\n    noFutureDatesAllowed\n    invalidValue\n  These messages can be changed by updated messages using the errorMessages interface/\n  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                            Optional\n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { SimpleDate } from '../../models/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nimport { ErrorMessage, LabelReplacementTag, replaceLabelTag } from '../../models/error-message.interface';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: ErrorMessage | DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  monthLabelforId: string = 'month_' + this.objectId;\n  dayLabelforId: string = 'day_' + this.objectId;\n  yearLabelforId: string = 'year_' + this.objectId;\n\n  defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    dayOutOfRange: `Invalid ${LabelReplacementTag}.`,\n    yearDistantPast: `Invalid ${LabelReplacementTag}.`,\n    yearDistantFuture: `Invalid ${LabelReplacementTag}.`,\n    noPastDatesAllowed: `Invalid ${LabelReplacementTag}.`,\n    noFutureDatesAllowed: `Invalid ${LabelReplacementTag}.`,\n    invalidValue: `Invalid ${LabelReplacementTag}.`\n  };\n\n  constructor( public form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n\n    this.setErrorMsg();\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.triggerYearValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.triggerYearValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the year and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.dayLabelforId] ) {\n        this.form.controls[this.dayLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  private triggerYearValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.yearLabelforId] ) {\n        this.form.controls[this.yearLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessages ) {\n      Object.keys(this.errorMessages).map( x => this.defaultErrMsg[x] = this.errorMessages[x] );\n    }\n    Object.keys(this.defaultErrMsg).map( x => this.defaultErrMsg[x] = replaceLabelTag( this.defaultErrMsg[x] , this.label ) );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:72\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:49\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:46\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:52\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:36\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:86\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:78\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DateErrorMsg } from '../date/date.component';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DayValidationDirective.html":{"url":"directives/DayValidationDirective.html","title":"directive - DayValidationDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DayValidationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/day-validation.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDayValidation][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedMonth\n                            \n                            \n                                selectedYear\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedMonth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/day-validation.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedYear\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/day-validation.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/day-validation.directive.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Directive({\n  selector: '[commonDayValidation][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true}\n  ]\n})\nexport class DayValidationDirective implements Validator {\n\n  @Input() selectedMonth: string;\n  @Input() selectedYear: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const year: number = parseInt( this.selectedYear, 10 );\n    const month: number = parseInt( this.selectedMonth, 10 );\n\n    if ( undefined === control.value || null === control.value ) {\n      return null; // empty value\n    }\n\n    const day: number = parseInt( control.value, 10 );\n\n    if ( !isNaN( day ) && day > 0 ) {\n\n      // Only process of value is numeric\n      if ( !isNaN( month )  && !isNaN( year ) ) {\n\n        // Determine days in month\n        const str = `${year}-${month}`;\n        let daysInMonth: number = moment(str, 'YYYY-MM').daysInMonth();\n\n        if ( isNaN( daysInMonth ) ) {\n          daysInMonth = 31;\n        }\n\n        // Validate days\n        if ( day > daysInMonth || day \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends Base implements ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n\n  {{label}} is required.\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{label}} is required.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DuplicateCheckDirective.html":{"url":"directives/DuplicateCheckDirective.html","title":"directive - DuplicateCheckDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DuplicateCheckDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDuplicateCheck]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dupList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dupList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// Local function\nfunction checkForDuplicates( control: AbstractControl,\n                             dupList: string[] ): { [key: string]: boolean } | null {\n  // Duplicate check\n  if ( dupList && dupList.length ) {\n\n  const duplicate = dupList.find( x => x === control.value );\n  return (duplicate ? { 'duplicate': true } : null);\n  }\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonDuplicateCheck( dupList: string[] ): ValidatorFn {\n\n  console.log( 'function commonDuplicateSin: param = ', dupList );\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    console.log( 'Control value = ', control.value );\n    return checkForDuplicates( control, dupList );\n  };\n}\n\n@Directive({\n  selector: '[commonDuplicateCheck]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true}\n    ]\n})\nexport class DuplicateCheckDirective implements Validator {\n\n  @Input() dupList: string[];\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n  return checkForDuplicates( control, this.dupList );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/email/email.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-email\n            \n\n            \n                styleUrls\n                ./email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Email';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'email_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.email = val;\n    }\n  }\n  get value() {\n    return this.email;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public email: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.email = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlength, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n    Invalid email format.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.        Invalid email format.  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorContainerComponent.html":{"url":"components/ErrorContainerComponent.html","title":"component - ErrorContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/error-container/error-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-error-container\n            \n\n            \n                styleUrls\n                ./error-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'common-error-container',\n  templateUrl: './error-container.component.html',\n  styleUrls: ['./error-container.component.scss']\n})\nexport class ErrorContainerComponent {\n\n  @Input() displayError: boolean = false;\n\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/error-message.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/error-message.interface.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const LabelReplacementTag = '{label}';\nexport interface ErrorMessage {\n  required?: string;\n  [key: string]: string;\n}\n\n// Function only used with library\nexport function replaceLabelTag( str: string, value: string ) {\n  return str.replace( LabelReplacementTag, value );\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['images'] && (\n            (changes['images'].currentValue && changes['images'].currentValue.length === 0)\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n\n    /** Opens the file upload dialog from the browser. */\n    openFileDialog() {\n        console.log('opening file dialog');\n        this.browseFileRef.nativeElement.click();\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeocoderInputComponent.html":{"url":"components/GeocoderInputComponent.html","title":"component - GeocoderInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeocoderInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n\n\n    \n        Description\n    \n    \n        For TemplateForms, pass in an Address and recieve an Address\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-geocoder-input\n            \n\n            \n                styleUrls\n                ./geocoder-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geocoder-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                hasNoResults\n                            \n                            \n                                    Public\n                                isTypeaheadLoading\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                    Public\n                                selectedAddress\n                            \n                            \n                                    Public\n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onLoading\n                            \n                            \n                                onNoResults\n                            \n                            \n                                onSelect\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                stripStringToMaxLength\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                label\n                            \n                            \n                                maxlength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : new Address()\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Address Lookup'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoading\n                        \n                        \n                    \n                \n            \n            \n                \nonLoading(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoResults\n                        \n                        \n                    \n                \n            \n            \n                \nonNoResults(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            stripStringToMaxLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stripStringToMaxLength(str: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasNoResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:49\n                            \n                        \n\n                \n                    \n                        Geocoder API has returned and has no results, an empty array. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTypeaheadLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:47\n                            \n                        \n\n                \n                    \n                        Is the Geocoder API request still in progress? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:45\n                            \n                        \n\n                \n                    \n                        The string in the box the user has typed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:57\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:53\n                            \n                        \n\n                \n                    \n                        Similar to this.address, but we can null it when user is searching for new addresses \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:55\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, SimpleChanges, OnChanges, Optional, Self } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, tap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\nimport { GeocoderService, GeoAddressResult } from '../../services/geocoder.service';\nimport { CANADA } from '../country/country.component';\nimport { BRITISH_COLUMBIA } from '../province/province.component';\nimport { Address } from '../../models/address.model';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\n\n\n/**\n * For TemplateForms, pass in an Address and recieve an Address\n * @example\n *           \n *           \n *\n * @note\n * For ReactiveForms, pass in a string and recieve a string.  If you need the\n * Address object you can use (addressChange) in addition.\n *\n * @example\n *           \n *          \n */\n@Component({\n  selector: 'common-geocoder-input',\n  templateUrl: './geocoder-input.component.html',\n  styleUrls: ['./geocoder-input.component.scss']\n})\nexport class GeocoderInputComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n\n  @Input() label: string = 'Address Lookup';\n  @Input() address: Address = new Address();\n  @Output() addressChange = new EventEmitter();\n  @Input() maxlength: string = '255';\n\n  /** The string in the box the user has typed */\n  public search: string;\n  /** Is the Geocoder API request still in progress? */\n  public isTypeaheadLoading: boolean = false;\n  /** Geocoder API has returned and has no results, an empty array. */\n  public hasNoResults: boolean = false;\n  public hasError: boolean = false;\n\n  /** Similar to this.address, but we can null it when user is searching for new addresses */\n  public selectedAddress: Address;\n  /** The list of results, from API, that is passed to the typeahead list */\n  public typeaheadList$: Observable; // Result from GeoCoderService address lookup\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n  constructor(@Optional() @Self() public controlDir: NgControl, private geocoderService: GeocoderService, private cd: ChangeDetectorRef) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => this.geocoderService.lookup(searchPhrase)),\n      catchError(err => this.onError(err))\n    );\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes &&\n      changes.address &&\n      changes.address.currentValue._geocoderFullAddress) {\n        const stripped = this.stripStringToMaxLength(changes.address.currentValue._geocoderFullAddress);\n\n        this.search = stripped;\n        this.isTypeaheadLoading = false;\n        this.hasNoResults = false;\n        this.selectedAddress = changes.address.currentValue;\n      }\n\n  }\n\n  onError(err): Observable {\n    this.hasError = true;\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onLoading(val: boolean): void {\n    this.isTypeaheadLoading = val;\n  }\n\n  // Note - this will fire after an onError as well\n  onNoResults(val: boolean): void {\n    // If we have results, the error has resolved (e.g. network has re-connected)\n    if (val === false) {\n      this.hasError = false;\n    }\n\n    // If we have no search text, hide the no results errors\n    if (this.search.length === 0) {\n      this.hasNoResults = false;\n      return;\n    }\n\n    this.hasNoResults = val;\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n    const data: GeoAddressResult = event.item;\n\n    const addr = new Address();\n    addr.city = data.city;\n    // GeoCoder is only for BC, Canada, values can be set.\n    addr.country = CANADA; // Default country is Canda\n    addr.province = BRITISH_COLUMBIA;  // Default province is BC\n    addr.street = data.street;\n    // Save and emit Address for (addressChange)\n    this.selectedAddress = addr;\n    this.addressChange.emit(this.selectedAddress);\n\n    // Output string to FormControl.\n    const stripped = this.stripStringToMaxLength(data.fullAddress);\n    this._onChange(stripped);\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    // Filter out 'enter' and other similar keyboard events that can trigger\n    // when user is selecting a typeahead option instead of entering new text.\n    // Without this filter, we do another HTTP request + force disiplay the UI\n    // for now reason\n    if (event.keyCode === 13 || event.keyCode === 9) {  // enter & tab\n      return;\n    }\n    // Clear out selection\n    this.selectedAddress = null;\n    this.searchText$.next(this.search);\n  }\n\n  onBlur(event): void {\n    this._onTouched();\n    this._onChange(this.search);\n  }\n\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.search = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  private stripStringToMaxLength(str: string){\n    const maxlength = parseInt(this.maxlength, 10);\n    return str.slice(0, maxlength);\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n  \n     &mdash; Loading\n      \n    \n  \n\n  \n    \n  \n\n\n        \n\n\n\n     &mdash; Selected\n        \n    \n\n\n\n     &mdash; No Results\n        \n    \n\n\n\n\n     &mdash; Error\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       — Loading                                 — Selected                 — No Results                 — Error            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'GeocoderInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Protected\n                                ADDRESS_URL\n                            \n                            \n                                    Protected\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Protected\n                                processResponse\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:53\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, OnInit} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger } from '../../services/logger.service';\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .\n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    /**\n     * Used in cases where we have custom form controls inside NgContent that we\n     * wish to be satisifed before user can continue through modal.\n     */\n    @Input() disableContinue: boolean = false;\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n\n    // public maintenanceFlag: string ;\n\n\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([['ACL', '{\"SPA_ENV_MSP_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_ACL_MAINTENANCE_MESSAGE\":\"\"}'], ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'], ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\"}']]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n\n  isContinueDisabled(): boolean {\n    return !this.agreeCheck || this.disableContinue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaskModel.html":{"url":"classes/MaskModel.html","title":"class - MaskModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaskModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/mask.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/mask.model.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/mask.model.ts:34\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/mask.model.ts:27\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {EventEmitter, Input, Output} from '@angular/core';\nimport { Base } from './base';\n\nexport const LETTER = /[A-Z]/i; // Ignore case here, then upperCase it via pipe.\nexport const NUMBER = /\\d/;\nexport const SPACE = ' ';\n\nexport class MaskModel extends Base {\n\n  @Input() value: string;\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = true;\n\n  public mask: any;\n  public placeholder: string;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  /**\n   * Updates the value\n   */\n  onUpdate( value: string ) {\n\n    // Emit value without spaces\n    this.valueChange.emit( value );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Maxlengths.html":{"url":"interfaces/Maxlengths.html","title":"interface - Maxlengths","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Maxlengths\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoHCommonLibraryError.html":{"url":"classes/MoHCommonLibraryError.html","title":"class - MoHCommonLibraryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoHCommonLibraryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/helpers/library-errorr.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/helpers/library-errorr.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MoHCommonLibraryError extends Error {\n    constructor(message?: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlen: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlen, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n     1; else initInvalid;\">\n        {{label}} must begin with a letter and cannot include special characters except hyphens,\n        periods, apostrophes and blank characters.\n    \n  \n\n\n\n  {{label}} must be with a letter.\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.         1; else initInvalid;\">        {{label}} must begin with a letter and cannot include special characters except hyphens,        periods, apostrophes and blank characters.        {{label}} must be with a letter.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:10\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n// IMPROVEMENT: Add a 'flex' @Input(), that adds display flex.  Importantly, it\n// must set flex on the wrapper/row divs in the html.  There are some cases\n// (like SiteReg) where having flex layout is beneficial.  My first suggestion\n// was to simply style the , but the problem is that we\n// need flex on the child elements of page-section (that still wrap ng-content).\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                            \n                                isDobEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SimpleDate\n\n                        \n                    \n                    \n                        \n                            Default value : { year: null, month: null, day: null }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YYYY/MM/DD'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:85\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDobEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisDobEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:45\n                \n            \n\n\n            \n                \n                    Indicates whether or not the date of birth is empty \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:71\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import * as moment_ from 'moment';\nimport { Base } from './base';\nimport { SimpleDate } from './simple-date.interface';\nconst moment = moment_;\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'YYYY/MM/DD';\n\n  // Initialize dob to nulls\n  public dateOfBirth: SimpleDate = { year: null, month: null, day: null };\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( 'YYYYMMDD' );\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( this.dobFormat );\n  }\n\n  /** Indicates whether or not the date of birth is empty */\n  isDobEmpty(): boolean {\n    return Object.keys( this.dateOfBirth )\n        .map( key => this.dateOfBirth[key] )\n        .filter( x => x ) // Filter out null/undefined\n        .length !== 3;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    const dobDt = new Date( this.dateOfBirth.year, this.dateOfBirth.month, this.dateOfBirth.day );\n    return Math.ceil( moment( ).diff( dobDt, 'year', true ) );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth.month = object.dateOfBirth.month;\n    this.dateOfBirth.day = object.dateOfBirth.day;\n    this.dateOfBirth.year = object.dateOfBirth.year;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhnComponent.html":{"url":"components/PhnComponent.html","title":"component - PhnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phn/phn.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phn\n            \n\n            \n                styleUrls\n                ./phn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                phn\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Personal Health Number (PHN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phn_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:26\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { NUMBER, SPACE } from '../../models/mask.model';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-phn',\n  templateUrl: './phn.component.html',\n  styleUrls: ['./phn.component.scss']\n})\nexport class PhnComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Personal Health Number (PHN)';\n  @Input() maxlen: string = '15';\n  @Input() placeholder: string = '1111 111 111';\n  @Input() labelforId: string = 'phn_' + this.objectId;\n  @Input() disabled: boolean = false;\n\n\n  @Input()\n  set value( val: string ) {\n    if ( val) {\n      this.phn = val;\n    }\n  }\n  get value() {\n    return this.phn;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  phn: string = '';\n  mask: any;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.phn ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.phn = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.phn = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      {{label}} is invalid.\n    \n    \n      {{label}} was already used for another family member.\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              {{label}} is invalid.              {{label}} was already used for another family member.      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneNumberComponent.html":{"url":"components/PhoneNumberComponent.html","title":"component - PhoneNumberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhoneNumberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phone-number/phone-number.component.ts\n\n\n    \n        Description\n    \n    \n        PhoneNumberComponent is a used to show the Phone number.\nMake sure to add the direcive commonValidatePhone\n\n    \n\n    \n        Extends\n    \n    \n                MaskModel\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phone-number\n            \n\n            \n                styleUrls\n                ./phone-number.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-number.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Static\n                                PhoneNumberRegEx\n                            \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setPhoneNumber\n                            \n                            \n                                writeValue\n                            \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                objectID\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                required\n                            \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    phoneNumberString\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/phone-number.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mobile'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phone_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        phoneNumber\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:14\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:11\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:12\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetPhoneNumber(evt)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:34\n\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:27\n\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PhoneNumberRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        phoneNumberString\n                    \n                \n\n                \n                    \n                        getphoneNumberString()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  Optional,\n  Self\n} from '@angular/core';\nimport { ControlContainer, NgForm, NgControl } from '@angular/forms';\nimport { MaskModel, NUMBER, SPACE } from '../../models/mask.model';\n\nimport {  ControlValueAccessor,  NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * PhoneNumberComponent is a used to show the Phone number.\n *\n * Make sure to add the direcive `commonValidatePhone`\n *\n * @example\n *         \n * @export\n */\n\n\n@Component({\n  selector: 'common-phone-number',\n  templateUrl: './phone-number.component.html',\n  styleUrls: ['./phone-number.component.scss'],\n  /* @deprecate this ViewProvider as we're using ControlValueAccessor @Optional  */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class PhoneNumberComponent extends MaskModel implements ControlValueAccessor {\n\n  static PhoneNumberRegEx = '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$';\n  @Input() displayMask: boolean = true;\n  @Input() required: boolean = false;\n  @Input() label: string = 'Mobile';\n\n  /** @deprecated - use ngModel - rename this to `value`. */\n  @Input() phoneNumber: string = '';\n\n  /** @deprecate - Do we have any applications that need to use this? */\n  @Input() objectID: string = 'phone_' + this.objectId;\n  @Output() onChange = new EventEmitter();\n  // public mask = ['+','1',SPACE,'(',NUMBER,NUMBER,NUMBER,')',SPACE,NUMBER,NUMBER,NUMBER,'-',NUMBER,NUMBER,NUMBER,NUMBER];\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n\n    this.placeholder = '+1 (555) 555-5555';\n    // Note - we added in the /[2-9]/ regex in order to match MSP's JSON Schema.\n    // Make sure both places match.\n    this.mask = ['+', '1', SPACE, '(', /[2-9]/, NUMBER, NUMBER, ')', SPACE, NUMBER, NUMBER, NUMBER, '-', NUMBER, NUMBER, NUMBER, NUMBER];\n  }\n\n  get phoneNumberString(): string {\n    return this.phoneNumber ? this.phoneNumber : '';\n  }\n\n\n  setPhoneNumber(evt) {\n    console.log('setphonenumber', evt.target.value);\n    const value = evt.target.value;\n    this.phoneNumber = value;\n    this.onChange.emit(this.phoneNumber);\n    this._onChange(value);\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    // phoneNumber is where the actual data is displayed to user for this\n    // component\n    this.phoneNumber = value;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n  \n  \n  \n    \n      {{label}} is required.\n    \n  \n\n\n\n\n  \n          \n  \n    \n      {{label}} is required.\n     \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} is required.                              {{label}} is required.       '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhoneNumberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                mask\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'A1A 1A1'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:102\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:30\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.model';\nimport { Base } from '../../models/base';\nimport { ErrorMessage } from '../../../public_api';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() placeholder: string = 'A1A 1A1';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n     //console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} {{defaultErrMsg.required}}\n    \n    \n      {{defaultErrMsg.pattern}} {{placeholder}}.\n    \n    \n      {{defaultErrMsg.invalidBCPostal}}\n    \n    \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} {{defaultErrMsg.required}}              {{defaultErrMsg.pattern}} {{placeholder}}.              {{defaultErrMsg.invalidBCPostal}}            {{label}} {{defaultErrMsg.invalidChar}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceComponent.html":{"url":"components/ProvinceComponent.html","title":"component - ProvinceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProvinceComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/province/province.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-province\n            \n\n            \n                styleUrls\n                ./province.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./province.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                province\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                provinceList\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/province/province.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'province_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please select a province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provinceList\n                    \n                \n                \n                    \n                        Type :         ProvinceList[]\n\n                    \n                \n                \n                    \n                        Default value : PROVINCE_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:53\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:62\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:58\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:53\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { ErrorMessage } from '../../../public_api';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlen: string = '250';\n  @Input() useDropDownList: boolean = true;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n\n\n\n  \n    {{label}} {{defaultErrMsg.required}}\n  \n  \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{label}} {{defaultErrMsg.required}}        {{label}} {{defaultErrMsg.invalidChar}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { ErrorMessage } from '../../../public_api';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlen: string = '250';\n  @Input() useDropDownList: boolean = true;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n    \n        Description\n    \n    \n        RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value should be passed in the below format\n  [\n         {\n           \"label\": \"Myself only\",\n           \"value\": \"MyselfOnly\"\n         },\n         {\n           \"label\": \"All members on my MSP account\",\n           \"value\": \"AllMembers\"\n         },\n         {\n           \"label\": \"One specific member on my MSP account\",\n           \"value\": \"SpecificMember\"\n         }\n  ];\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                _value\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                display\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                instructionText\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                showError\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                statusChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instructionText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ]\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:59\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        statusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:71\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(evt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport {Base} from '../../models/base';\nimport {ControlValueAccessor, NgControl} from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value should be passed in the below format\n *\n *\n *      [\n *             {\n *               \"label\": \"Myself only\",\n *               \"value\": \"MyselfOnly\"\n *             },\n *             {\n *               \"label\": \"All members on my MSP account\",\n *               \"value\": \"AllMembers\"\n *             },\n *             {\n *               \"label\": \"One specific member on my MSP account\",\n *               \"value\": \"SpecificMember\"\n *             }\n *      ];\n *\n * @example\n *        \n *        \n *\n * @export\n *\n */\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends Base implements OnInit, ControlValueAccessor {\n\n  _value: string = '';\n  defaultErrorMessage: string = '';\n\n  @Input() radioLabels: Array = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() disabled: boolean = false;\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n  @Input() showError: boolean; // TODO: Remove - breaking change\n  @Input() errorMessageRequired: string;\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n  // TODO: remove status change - breaking change\n  @Output() statusChange: EventEmitter = new EventEmitter();\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    if ( this.errorMessageRequired ) {\n      this.defaultErrorMessage = this.errorMessageRequired;\n    } else {\n      this.defaultErrorMessage = (this.label ? this.label : 'Field' ) + ' is required.';\n    }\n  }\n\n  setStatus(evt: string) {\n    this.value = evt;\n    this.statusChange.emit(evt);\n    this.valueChange.emit(evt);\n\n    this._onChange(evt);\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  {{instructionText}}\n  \n    \n      \n      \n      {{val.label}}\n      \n    \n  \n\n  \n  \n      {{defaultErrorMessage}}\n  \n\n  \n    {{defaultErrorMessage}}\n  \n\n\n\n\n  \n    \n  \n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}  {{instructionText}}                        {{val.label}}                      {{defaultErrorMessage}}        {{defaultErrorMessage}}              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyFields.html":{"url":"interfaces/ReadOnlyFields.html","title":"interface - ReadOnlyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyFields\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPgService (\"RegistrationService\")\nSetup AbstractPgCheckService in NgModule providers, to useExisting the service from previous step.\nAdd this RouteGuardService to same providers from previous step.\nConfigure routes to use RouteGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"RegistrationService\")\n\nYou must make sure to setup AbstractPgCheckService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SampleImageInterface.html":{"url":"interfaces/SampleImageInterface.html","title":"interface - SampleImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SampleImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sample-modal/sample-modal.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        desc\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleModalComponent.html":{"url":"components/SampleModalComponent.html","title":"component - SampleModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sample-modal/sample-modal.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sample-modal\n            \n\n            \n                styleUrls\n                ./sample-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sample-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sampleModal\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                    Public\n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :         SampleImageInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sampleModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('samplesModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{title}}\n        \n          \n        \n      \n\n      \n        \n          {{image.title}}\n          \n        \n      \n\n      \n        Close\n      \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                        {{image.title}}                                      Close            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SampleModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateEmailDirective\n\nValidateEmailDirective\n\nSharedCoreModule -->\n\nValidateEmailDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePhnDirective\n\nValidatePhnDirective\n\nSharedCoreModule -->\n\nValidatePhnDirective->SharedCoreModule\n\n\n\n\n\nValidatePhoneDirective\n\nValidatePhoneDirective\n\nSharedCoreModule -->\n\nValidatePhoneDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateSinDirective\n\nValidateSinDirective\n\nSharedCoreModule -->\n\nValidateSinDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateEmailDirective \n\nValidateEmailDirective \n\nValidateEmailDirective  -->\n\nSharedCoreModule->ValidateEmailDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePhnDirective \n\nValidatePhnDirective \n\nValidatePhnDirective  -->\n\nSharedCoreModule->ValidatePhnDirective \n\n\n\n\n\nValidatePhoneDirective \n\nValidatePhoneDirective \n\nValidatePhoneDirective  -->\n\nSharedCoreModule->ValidatePhoneDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateSinDirective \n\nValidateSinDirective \n\nValidateSinDirective  -->\n\nSharedCoreModule->ValidateSinDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateEmailDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePhnDirective\n                        \n                        \n                            ValidatePhoneDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateSinDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateEmailDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePhnDirective\n                        \n                        \n                            ValidatePhoneDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateSinDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DayValidationDirective } from './components/date/day-validation.directive';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\nimport { YearValidateDirective } from './components/date/year-validate.directive';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\nimport { ValidateSinDirective } from './components/sin/validate-sin.directive';\nimport { ValidatePhnDirective } from './components/phn/validate-phn.directive';\nimport { DuplicateCheckDirective } from './components/duplicate-check/duplicate-check.directive';\nimport { ErrorContainerComponent } from './components/error-container/error-container.component';\nimport { ValidateStreetDirective } from './components/street/validate-street.directive';\nimport { ValidateCityDirective } from './components/city/validate-city.directive';\nimport { ValidateRegionDirective } from './components/validate-region/validate-region.directive';\nimport { ValidatePostalcodeDirective } from './components/postal-code/validate-postalcode.directive';\nimport { SampleModalComponent } from './components/sample-modal/sample-modal.component';\nimport { EmailComponent } from './components/email/email.component';\nimport { ValidateEmailDirective } from './components/email/validate-email.directive';\nimport { ValidatePhoneDirective } from './components/phone-number/validate-phone-number.directive';\nimport { ConfirmTemplateComponent } from './components/confirm-template/confirm-template.component';\nimport { GeocoderInputComponent } from './components/geocoder-input/geocoder-input.component';\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  XiconButtonComponent,\n  ErrorContainerComponent,\n  SampleModalComponent,\n  EmailComponent,\n  ConfirmTemplateComponent,\n  GeocoderInputComponent,\n\n  // Directives\n  DayValidationDirective,\n  DateFieldFormatDirective,\n  YearValidateDirective,\n  ValidateNameDirective,\n  ValidateSinDirective,\n  ValidatePhnDirective,\n  DuplicateCheckDirective,\n  ValidateBcPostalDirective,\n  ValidateStreetDirective,\n  ValidateCityDirective,\n  ValidateRegionDirective,\n  ValidatePostalcodeDirective,\n  ValidateEmailDirective,\n  ValidatePhoneDirective,\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:28\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { NUMBER, SPACE } from '../../models/mask.model';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlen: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n  @Input() disabled: boolean = false;\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n\n      console.log( 'value: ', this.sin );\n    }\n  }\n  get value() {\n    console.log( 'get value: ', this.sin );\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  sin: string = '';\n  mask: any;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.sin = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      {{label}} is invalid.\n    \n    \n      {{label}} was already used for another family member.\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              {{label}} is invalid.              {{label}} was already used for another family member.      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\n// TODO: determine whether this is used or not.  If not use, maybe it can be removed\n//  @deprecated - logic added to validate-postalcode directive\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateCityDirective.html":{"url":"directives/ValidateCityDirective.html","title":"directive - ValidateCityDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateCityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/city/validate-city.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateCity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/validate-city.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateCity: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for  city names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z0-9\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateCity]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true}\n  ]\n})\nexport class ValidateCityDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateCity( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateEmailDirective.html":{"url":"directives/ValidateEmailDirective.html","title":"directive - ValidateEmailDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateEmailDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/email/validate-email.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateEmailDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateEmail]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/validate-email.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\n@Directive({\n  selector: '[commonValidateEmail]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateEmailDirective, multi: true}\n  ]\n})\nexport class ValidateEmailDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateEmail( control );\n  }\n}\n\n\nexport const commonValidateEmail: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const criteria: RegExp = /^(\\S+)@(\\S+)\\.(\\S+)$/;\n\n  if (control.value) {\n    const result = criteria.test(control.value);\n    return result ? null : { invalidEmail: true };\n  }\n  return { invalidEmail: true };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePhnDirective.html":{"url":"directives/ValidatePhnDirective.html","title":"directive - ValidatePhnDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePhnDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/phn/validate-phn.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePhnDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePhn]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowEmptyValue\n                            \n                            \n                                isBCPhn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowEmptyValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:105\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCPhn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:104\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\n\n// Empty value (null, undefined, empty string) are treated as invalid.\n function validatePHN ( phn: string,\n                        isBCPhn: boolean = true,\n                        allowEmptyValue: boolean = false ): { [key: string]: boolean } | null {\n  // pre req checks\n  if (phn === null || phn === undefined || phn.trim().length  0) {\n    // multiply the value against the weight\n    result = num * weights[i];\n\n    // divide by 11 and save the remainder\n    result = result % 11;\n\n    // add it to our sum\n    sumOfRemainders += result;\n    }\n  }\n\n  // mod by 11\n  const checkDigit = 11 - (sumOfRemainders % 11);\n\n  // if the result is 10 or 11, it is an invalid PHN\n  if (checkDigit === 10 || checkDigit === 11) {\n    return { 'invalid': true };\n  }\n\n  // Compare against 10th digit\n  const finalDigit = Number(phn.substring(9, 10));\n  if (checkDigit !== finalDigit) {\n   return { 'invalid': true };\n  }\n\n  // All done!\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonValidatePhn( isBCPhn: boolean = true,\n                                   allowEmptyValue: boolean = false): ValidatorFn {\n\n  console.log( 'function commonValidatePhn: param = ', isBCPhn );\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    console.log( 'Control value = ', control.value );\n    return validatePHN( control.value, isBCPhn, allowEmptyValue );\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePhn]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePhnDirective, multi: true}\n  ]\n})\nexport class ValidatePhnDirective implements Validator {\n\n  @Input() isBCPhn: boolean = true;\n  @Input() allowEmptyValue: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePHN( control.value, this.isBCPhn, this.allowEmptyValue );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePhoneDirective.html":{"url":"directives/ValidatePhoneDirective.html","title":"directive - ValidatePhoneDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePhoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/phone-number/validate-phone-number.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePhoneDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePhone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/validate-phone-number.directive.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/validate-phone-number.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\n\n// TODO: Potentially make this configurable in the directive/function if we ever\n// have different phone lengths.\nconst MIN_PHONE_LENGTH = 11;\n\n@Directive({\n  selector: '[commonValidatePhone]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: ValidatePhoneDirective, multi: true }]\n})\nexport class ValidatePhoneDirective implements Validator {\n\n  constructor() { }\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return commonValidatePhone(control);\n  }\n\n}\n\n/**\n * Deteremines if a phone number is incomplete, typically from\n * PhoneNumberComponent's text-mask having a lot of underscore characters.\n */\nexport const commonValidatePhone: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const value = control.value;\n\n  if (value) {\n    const stripped = value\n      .replace(/_/g, '') // remove underlines\n      .replace(/\\s/g, '') // spaces\n      .replace(/\\+|-/g, '') // + or - symbol\n      .replace('(', '')\n      .replace(')', '');\n\n    const valid = stripped.length === MIN_PHONE_LENGTH;\n\n    console.log({valid, stripped});\n    return valid ? null : { required: true };\n\n  }\n  return null;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePostalcodeDirective.html":{"url":"directives/ValidatePostalcodeDirective.html","title":"directive - ValidatePostalcodeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePostalcodeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePostalcode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bcOnly\n                            \n                            \n                                hasMask\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bcOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:48\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// local function\nfunction validatePC(control: AbstractControl, hasMask: boolean, bcOnly: boolean): { [key: string]: boolean } | null {\n\n  if ( control.value ) {\n\n    if ( hasMask ) {\n      const cdnFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n      if ( !cdnFormat.test( control.value ) ) {\n        return { 'pattern': true };\n      }\n    } else {\n      const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9 ]*$' );\n\n      if ( !criteria.test( control.value ) ) {\n        return  { 'invalidChar': true };\n      }\n    }\n\n    if ( bcOnly ) {\n      // Valid characters for BC postal code\n      const bcFormat: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Z][ ]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$');\n      if ( !bcFormat.test( control.value ) ) {\n        return { 'invalidBCPostal': true };\n      }\n    }\n  }\n  return null;\n}\n\nexport function commonValidatePostalcode( hasMask: boolean, bcOnly: boolean ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return validatePC( control, hasMask , bcOnly);\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePostalcode]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true}\n  ]\n})\nexport class ValidatePostalcodeDirective implements Validator {\n  @Input() hasMask: boolean = true;\n  @Input() bcOnly: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePC( control, this.hasMask , this.bcOnly );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateRegionDirective.html":{"url":"directives/ValidateRegionDirective.html","title":"directive - ValidateRegionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateRegionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/validate-region/validate-region.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateRegion]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/validate-region/validate-region.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateRegion: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for country/province/region names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateRegion]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true}\n  ]\n})\nexport class ValidateRegionDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateRegion( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateSinDirective.html":{"url":"directives/ValidateSinDirective.html","title":"directive - ValidateSinDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateSinDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sin/validate-sin.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateSinDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateSin]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/validate-sin.directive.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateSin: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  let sin = control.value;\n\n  // pre req checks\n  if (sin === null || sin === undefined || sin.length  9) {\n      result = result - 9;\n    }\n\n    // add it to our sum\n    sum += result;\n  }\n\n  // The sum must be divisible by 10\n  if (sum % 10 !== 0) {\n    return { 'invalid': true };\n  }\n\n  // All done!\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateSin]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateSinDirective, multi: true}\n  ]\n})\nexport class ValidateSinDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateSin( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateStreetDirective.html":{"url":"directives/ValidateStreetDirective.html","title":"directive - ValidateStreetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateStreetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/street/validate-street.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateStreet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/validate-street.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateStreet: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for street\n  */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9#/&\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateStreet]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true}\n  ]\n})\nexport class ValidateStreetDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateStreet( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n                \n                    \n                        Label to use for accessibility.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MoHCommonLibraryError } from '../../../helpers/library-errorr';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent implements OnInit {\n\n  /**\n   * Label to use for accessibility.\n   * @required\n   */\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.label) {\n      // todo - change to MohCommmonLibraryError -> test in IE10\n      // throw Error('common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.');\n      const msg = `common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.\n      e.g. \n`; // Intentional to create a blank line between our error and stack trace.\n      throw new MoHCommonLibraryError(msg);\n    }\n  }\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateEmailDirective', 'selector': '[commonValidateEmail]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidatePhoneDirective', 'selector': '[commonValidatePhone]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/YearValidateDirective.html":{"url":"directives/YearValidateDirective.html","title":"directive - YearValidateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  YearValidateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/year-validate.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonYearValidate][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonYearValidate\n                            \n                            \n                                selectedDay\n                            \n                            \n                                selectedMonth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonYearValidate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDay\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMonth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/year-validate.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n// TODO:  Create a message structure to pass in error messages similar to password module.\n\n@Directive({\n  selector: '[commonYearValidate][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true}\n  ]\n})\nexport class YearValidateDirective implements Validator  {\n\n  @Input() commonYearValidate: string;\n  @Input() selectedDay: string;\n  @Input() selectedMonth: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const day: number = parseInt( this.selectedDay, 10 );\n    const month: number = parseInt( this.selectedMonth, 10 );\n\n    // console.log( 'validate year: control value = ', control.value );\n\n    if ( undefined === control.value || null === control.value ) {\n      return null; // empty value\n    }\n\n    const year: number = parseInt( control.value, 10 );\n\n    // console.log( 'validate year: year = ', year );\n    // console.log( 'validate year: isNaN( year ) = ', isNaN( year ) );\n\n    // Only process if value is numeric\n    if ( !isNaN( year ) && year > 0 ) {\n\n      const currentYear = moment().get( 'y' );\n\n      // console.log( 'validate year: currentYear = ', currentYear );\n\n      if ( currentYear - year > 150 ) {\n        // console.log( 'validate year: yearDistantPast' );\n        return { 'yearDistantPast': true };\n      }\n\n      if ( year - currentYear > 150 ) {\n        // console.log( 'validate year: yearDistantFuture' );\n        return { 'yearDistantFuture': true} ;\n      }\n\n      // console.log( 'validate year: commonYearValidate = ', this.commonYearValidate, day, month );\n\n      // Check whether dates can be present or past\n      if ( this.commonYearValidate && this.commonYearValidate !== 'any' &&\n           !isNaN( day ) && !isNaN( month ) ) {\n\n        // Month - 1, select box adds one to array index\n        const diff = moment( { year: year, month: month - 1, day: day } )\n          .diff( moment(), 'days', true );\n\n       // console.log( 'validate year: diff = ', diff, moment().format( 'YYYY-MM-DD'), moment().isUTC() );\n\n        /**\n        * Validate current date as if it's a future date, and reject it when only\n        * accepting past dates.  We accomplish this by comparing diff against 1.\n        */\n        if ( diff = -1 && this.commonYearValidate === 'past' ) {\n          return { 'noFutureDatesAllowed': true };\n        }\n      }\n\n      return null;\n    }\n\n    return { 'invalidValue': true };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2019-10-16)\n2.27.0 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nGeocoderService: Change default API filter (34f0a40)\nGeocoderService: Exendable methods via inheiritance (7355610)\n\nFeatures\n\nGeocoderInput: New Component CommonGeocoderInput (224e362)\nGeocoderInput: Now a ControlValueAccessor (730f9c7)\n\n2.26.0 \"moh-common-lib\" (2019-10-15)\nBug Fixes\n\nlogic in validate postal-code directive to handle bcOnly flag (88bc3f3)\n\nDocumentation\n\nPublishing: Make it more clear when to use \"patch\" or \"minor\" versions. (02cb2c5)\n\nFeatures\n\nCAPTCHA: Shows required error on touched (16be24b)\nadded bc only postal code check for address component (e6db87e)\nConsentModal: Add disableContinue @Input(), used with custom controls (8aa41ec)\n\n2.24.0 \"moh-common-lib\" (2019-10-11)\nFeatures\n\nFileUploader: Add a blank \"Add\" thumbnail user can click (1251212)\nAdded confirmation template for response pages (1f1a0f9)\nAdded confirmation template for response pages (aa2b7f9)\n\n2.23.0 \"moh-common-lib\" (2019-10-10)\nFeatures\n\nadded abilty to modify messages in date rather than replace. (2235059)\n\n2.22.0 \"moh-common-lib\" (2019-10-09)\nFeatures\n\ncommonValidatePhone: Phone format validation (510ad9e)\n\n2.21.0 \"moh-common-lib\" (2019-10-09)\nBug Fixes\n\nPhone: Can now use [ngModel] by itself (5910979)\n\nFeatures\n\nemail: Create EmailComponent (based on Name) (27b488b)\n\nStyles\n\nPageSection: Change bullet styles (f541d81)\n\n2.20.1 \"moh-common-lib\" (2019-10-09)\nStyles\n\nHeader: Header text wraps on mobile, no longer breaking mobile (1303722)\n\n2.20.0 \"moh-common-lib\" (2019-10-08)\nFeatures\n\nadded ability to set query parameters on navigate method in abstract form (4f3e59f)\n\n2.19.0 \"moh-common-lib\" (2019-10-01)\nBug Fixes\n\ndate component to check for null, undefined and zero, trigger year validation on month change (0ed3875)\nfile uploader - check to confirm have array to check length in onChange method (c6067fd)\n\n2.18.1 \"moh-common-lib\" (2019-09-27)\nBug Fixes\n\nfixed off by 1 date in year validator (9a38474)\n\n2.18.0 \"moh-common-lib\" (2019-09-26)\nBug Fixes\n\nbug in file uploader - check for null array (cf962bc)\n\nFeatures\n\nadded sample-modal component to display sample doc images (4f8f2e7)\n\n2.17.1 \"moh-common-lib\" (2019-09-25)\nBug Fixes\n\nadded check for errors when component not used as form control (7d274e8)\ncolor-success changed to 83D31D to match color on mockups (c64c066)\nerror in checkbox html check errors exist (29c5160)\n\nDocumentation\n\nTODO: Create TODO file with list of breaking changes for version 3 (9dc5375)\nTODO: Rename todo to a markdown file for GitHub support (496c252)\n\n2.17.0 \"moh-common-lib\" (2019-09-24)\nBug Fixes\n\nadded space in error message (radio) (6427f10)\nbug introduced when try to display errors when field touched (radio/checkbox) (aceb028)\ncheckbox fixed to be custom form control (1c51f01)\nset radio touched on blur, display required message when touched (c78856a)\n\nDocumentation\n\nTweak publishing so it passes markdownlint (901885e)\n\nFeatures\n\nAdded required error message to component (d5dd02f)\n\n2.16.0 \"moh-common-lib\" (2019-09-20)\nBug Fixes\n\nupdate address1 when street updated (29e521c)\n\n2.15.0 \"moh-common-lib\" (2019-09-19)\nBug Fixes\n\nremoved check for US from address component (996cad7)\n\n2.14.0 \"moh-common-lib\" (2019-09-17)\nFeatures\n\nSet label defaults to yes/no in radio component (66e58e7)\n\n2.13.0 \"moh-common-lib\" (2019-09-17)\nBug Fixes\n\nclear province when country changes, placeholders updated (8380850)\n\n2.12.0 \"moh-common-lib\" (2019-09-16)\nBug Fixes\n\nradio buttons working for more than 2 options as custom form control (f2ccfe6)\nRemoved check for undefined (7398e93)\n\nFeatures\n\nAdded ability to disable specfic fields in address component (5965aec)\n\n2.11.0 \"moh-common-lib\" (2019-09-12)\nBug Fixes\n\nPostal code clears when country changes to Canada (2c0b127)\n\nDocumentation\n\nAdd info on publishing new builds (9855d9c)\n\n2.10.0 \"moh-common-lib\" (2019-09-05)\nBug Fixes\n\nPhoneNumber: The first numbers within the brackets must be 2-9 now (5069fe8)\n\n2.9.0 \"moh-common-lib\" (2019-08-30)\nBug Fixes\n\nexport common image elementsgit (483b735)\n\n2.8.1 \"moh-common-lib\" (2019-08-22)\nBug Fixes\n\nDate: Capitalize placeholders (4d39002)\n\n2.8.0 \"moh-common-lib\" (2019-08-20)\nBug Fixes\n\nReorder address fields (cbbfaa8)\n\nFeatures\n\nadded validation for street component (0699178)\nadded validations for postal code, country/province, added abiltiy to update error messages (60befc2)\nvalidation for valid characters in city component (16da113)\n\n2.7.1 \"moh-common-lib\" (2019-08-15)\nBug Fixes\n\nDateComponent: Handles having 00 as day (67b6f78)\nFileUpload: Remove console log on ngchanges (7c99c1e)\n\n2.7.0 \"moh-common-lib\" (2019-08-13)\nBug Fixes\n\nFixed displaying of the error message in name component (1650a23)\nAddress:  Clear out address line data when removing the line (3f1149e)\n\n2.6.0 \"moh-common-lib\" (2019-08-09)\nCode Refactoring\n\nModified address to used MSP label and length defaults (5bb54fc)\n\nFeatures\n\nfunctions to retrieve country, prov descriptions,  maxlengths input for addresss (978250b)\n\n2.5.2 \"moh-common-lib\" (2019-08-02)\n2.5.1 \"moh-common-lib\" (2019-07-31)\nBug Fixes\n\nremoved plus sign used to concatenate string for aria-label (#32) (3a5677b), closes #32\n\n2.5.0 \"moh-common-lib\" (2019-07-31)\nFeatures\n\nAddress: added input to address component to allow users to change default labels on fields. (#31) (ebb6998), closes #31\n\n2.4.0 \"moh-common-lib\" (2019-07-29)\n2.3.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Now has default country/prov behaviour built in (8361a0e)\n\n2.2.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Additional lines must be removed in order (ac9d61c)\nAddress: Now can show 2 extra address lines (previously only one) (af91989)\n\nStyles\n\nXIconButton: Change icon from 'times' to 'times-circle' (aad93b5)\n\n2.1.5 \"moh-common-lib\" (2019-07-18)\nAccessibility\n\nRadio: Hide radio for FireFox but keep tab-focusable. (8f6886f)\nXIconButton: Add label (867f969)\n\n2.1.4 \"moh-common-lib\" (2019-07-16)\nAccessibility\n\nPhone: Fix association of labels for phone component (c122a2a)\n\n2.1.3 \"moh-common-lib\" (2019-07-11)\nAccessibility\n\nRadio: Convert radio to use fieldset. (2c2f322)\nRadio: New focus style for RadioComponent, styled better for mouse (c2fd959)\n\n2.1.2 \"moh-common-lib\" (2019-07-10)\nAccessibility\n\nRadio: Radio is now focusable via tab / screenreader (126d876)\n\nStyles\n\nConsentModal: Backdrop enabled when modal is open. (b901868)\n\n2.1.1 \"moh-common-lib\" (2019-07-09)\nBug Fixes\n\nAddress: Implement allowExtralines to opt-in to new multi-line (5a7c37b)\n\nBREAKING CHANGES\n\nAddress: This reverts an accidentally introduced breaking change in 2.1.0 where all address components would use the new line behaviour.  Now, it is opt-in.\n\n2.1.0 \"moh-common-lib\" (2019-07-09)\nAccessibility\n\nStepper/Wizard: Darken link text by 5% to get AA colour contrast (a27faa9)\n\nBug Fixes\n\nRadio: Fix empty label for RadioComponent for a11y (Waze) (7400a64)\n\nBuild\n\nAdd \"a11y\" type to changelog and commit types (edf0b2e)\n\nCode Refactoring\n\nAddressComponent: Reorganize order of inputs, add AddressLine1 (5d8f61d)\n\nDocumentation\n\nAddressModel: Add TSDOC descriptions on street and addressLine1 (6f093d2)\n\nFeatures\n\nAddressComponent: Add 'disableGeocoder' @Input (a512eb0)\n\n2.0.1 \"moh-common-lib\" (2019-07-04)\nBug Fixes\n\nPhoneNumber: Required @Input works properly (5b18c5f)\n\nCode Refactoring\n\nXIconButton: Add (click) event, @deprecate (clickEvent) (baee5ad)\n\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input) (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nGit Commit Format\nFor changelog generation, all git commits must follow this format:\n(): \n\n\n\nList of valid types:\n\nfeat: A new feature\nfix: A bug fix\ndocs: Documentation only changes\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing\nsemi-colons, etc)\nrefactor: A code change that neither fixes a bug nor adds a feature\nperf: A code change that improves performance\ntest: Adding missing or correcting existing tests\nchore: Does NOT appear in changelog. Use this to hide menial commits that don't need to be in the changelog.\ngeneration\nWIP: Similar to chore, this does NOT appear in changelog. Use this for work-in-progress commits that shouldn't bein changelog.\nbuild: Changes to the build process\n\nScopes may arbitrarily be created.\nRefer to Angular's contributing guide for more details.\nGit commit hooks\nCommits can be automatically validated that they conform to the format, you just need to enable the pre-commit hook.\nnpm run setup:git-hooksThe commit hook itself can be found at build_utils/commit-msg.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                10 %\n                (4/40)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/helpers/library-errorr.ts\n            \n            class\n            MoHCommonLibraryError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                18 %\n                (9/49)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            AddrLabelList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            Maxlengths\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            ReadOnlyFields\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                4 %\n                (1/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            directive\n            ValidateCityDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            variable\n            commonValidateCity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/confirm-template/confirm-template.component.ts\n            \n            component\n            ConfirmTemplateComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                18 %\n                (7/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            function\n            getCountryDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                25 %\n                (7/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            directive\n            DayValidationDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            directive\n            YearValidateDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            directive\n            DuplicateCheckDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            checkForDuplicates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            commonDuplicateCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/validate-email.directive.ts\n            \n            directive\n            ValidateEmailDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/validate-email.directive.ts\n            \n            variable\n            commonValidateEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/error-container/error-container.component.ts\n            \n            component\n            ErrorContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                26 %\n                (10/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n            \n            component\n            GeocoderInputComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            directive\n            ValidatePhnDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            function\n            commonValidatePhn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            function\n            validatePHN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                16 %\n                (4/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/validate-phone-number.directive.ts\n            \n            directive\n            ValidatePhoneDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/validate-phone-number.directive.ts\n            \n            variable\n            commonValidatePhone\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/validate-phone-number.directive.ts\n            \n            variable\n            MIN_PHONE_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                7 %\n                (2/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            directive\n            ValidatePostalcodeDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            commonValidatePostalcode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            validatePC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            function\n            getProvinceDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                8 %\n                (2/24)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            component\n            SampleModalComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            interface\n            SampleImageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/validate-sin.directive.ts\n            \n            directive\n            ValidateSinDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/validate-sin.directive.ts\n            \n            variable\n            commonValidateSin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                12 %\n                (4/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            directive\n            ValidateStreetDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            variable\n            commonValidateStreet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            directive\n            ValidateRegionDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            variable\n            commonValidateRegion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            interface\n            ErrorMessage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            function\n            replaceLabelTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            LabelReplacementTag\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            class\n            MaskModel\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiStatusCodes   (projects/.../confirm-template.component.ts)\n                        \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiStatusCodes\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addPackageJsonScript   (projects/.../index.ts)\n                        \n                        \n                            addPackageToPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            checkForDuplicates   (projects/.../duplicate-check.directive.ts)\n                        \n                        \n                            commonDuplicateCheck   (projects/.../duplicate-check.directive.ts)\n                        \n                        \n                            commonValidatePhn   (projects/.../validate-phn.directive.ts)\n                        \n                        \n                            commonValidatePostalcode   (projects/.../validate-postalcode.directive.ts)\n                        \n                        \n                            copyLicense   (projects/.../index.ts)\n                        \n                        \n                            copyVersionFile   (projects/.../index.ts)\n                        \n                        \n                            createIfMissing   (projects/.../index.ts)\n                        \n                        \n                            getCountryDescription   (projects/.../country.component.ts)\n                        \n                        \n                            getPackageVersionFromPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            getProvinceDescription   (projects/.../province.component.ts)\n                        \n                        \n                            installPackageJsonDependencies   (projects/.../index.ts)\n                        \n                        \n                            modifyJSON   (projects/.../json.ts)\n                        \n                        \n                            mohStart   (projects/.../index.ts)\n                        \n                        \n                            overwriteFile   (projects/.../index.ts)\n                        \n                        \n                            replaceLabelTag   (projects/.../error-message.interface.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../package-config.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../json.ts)\n                        \n                        \n                            updateAngularJson   (projects/.../index.ts)\n                        \n                        \n                            updateAppComponentTs   (projects/.../index.ts)\n                        \n                        \n                            updatePackageJson   (projects/.../index.ts)\n                        \n                        \n                            updateTsConfig   (projects/.../index.ts)\n                        \n                        \n                            validatePC   (projects/.../validate-postalcode.directive.ts)\n                        \n                        \n                            validatePHN   (projects/.../validate-phn.directive.ts)\n                        \n                        \n                            versionJS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/schematics/src/version-js/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageJsonScript\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageJsonScript(tree, scriptName, script)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scriptName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    script\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyVersionFile\n                        \n                        \n                    \n                \n            \n            \n                \ncopyVersionFile(options: any, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAppComponentTs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAppComponentTs(tree, _context)\n                \n            \n\n\n\n\n            \n                \n                    Updates app.component.ts to console.log out the generated version file \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePackageJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePackageJson(tree, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            versionJS\n                        \n                        \n                    \n                \n            \n            \n                \nversionJS(options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copy over version.js to src/version.js, and update the package.json.\nMust be called with repo, e.g. --repo=https://github.com/bcgov/prime-web/\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/package-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageToPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageToPackageJson(host, pkg, version, forceOverwrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Adds a package to the package.json in the given host tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pkg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forceOverwrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPackageVersionFromPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetPackageVersionFromPackageJson(tree, name)\n                \n            \n\n\n\n\n            \n                \n                    Gets the version of the specified package by looking at the package.json in the given tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            checkForDuplicates\n                        \n                        \n                    \n                \n            \n            \n                \ncheckForDuplicates(control, dupList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dupList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commonDuplicateCheck\n                        \n                        \n                    \n                \n            \n            \n                \ncommonDuplicateCheck(dupList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dupList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/phn/validate-phn.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            commonValidatePhn\n                        \n                        \n                    \n                \n            \n            \n                \ncommonValidatePhn(isBCPhn: boolean, allowEmptyValue: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isBCPhn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    allowEmptyValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePHN\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePHN(phn, isBCPhn: boolean, allowEmptyValue: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phn\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isBCPhn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    allowEmptyValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            commonValidatePostalcode\n                        \n                        \n                    \n                \n            \n            \n                \ncommonValidatePostalcode(hasMask: boolean, bcOnly: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hasMask\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bcOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePC\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePC(control, hasMask: boolean, bcOnly: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hasMask\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bcOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/copy-license/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            copyLicense\n                        \n                        \n                    \n                \n            \n            \n                \ncopyLicense(_options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copies over an APACHE-2 License to the top level of a project.  This rule\nwill overwrite any pre-existing LICENSE file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createIfMissing\n                        \n                        \n                    \n                \n            \n            \n                \ncreateIfMissing(host, targetPath, content: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mohStart\n                        \n                        \n                    \n                \n            \n            \n                \nmohStart(_options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            overwriteFile\n                        \n                        \n                    \n                \n            \n            \n                \noverwriteFile(host, targetPath, content)\n                \n            \n\n\n\n\n            \n                \n                    Use a string to overwrite a file. Checks to make sure file does not have content. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAngularJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAngularJson(host)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTsConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTsConfig(host, _context)\n                \n            \n\n\n\n\n            \n                \n                    Configures settings in tsconfig.json that are required to properly import\nfrom moh-common-lib\nSpecifically, skibLibCheck\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/country/country.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getCountryDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetCountryDescription(countryCode)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countryCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/province/province.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getProvinceDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetProvinceDescription(provinceCode)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provinceCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/helpers/json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            modifyJSON\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyJSON(host, fileName, transformFn)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transformFn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/models/error-message.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            replaceLabelTag\n                        \n                        \n                    \n                \n            \n            \n                \nreplaceLabelTag(str, value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateEmailDirective\n\nValidateEmailDirective\n\nSharedCoreModule -->\n\nValidateEmailDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePhnDirective\n\nValidatePhnDirective\n\nSharedCoreModule -->\n\nValidatePhnDirective->SharedCoreModule\n\n\n\n\n\nValidatePhoneDirective\n\nValidatePhoneDirective\n\nSharedCoreModule -->\n\nValidatePhoneDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateSinDirective\n\nValidateSinDirective\n\nSharedCoreModule -->\n\nValidateSinDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateEmailDirective \n\nValidateEmailDirective \n\nValidateEmailDirective  -->\n\nSharedCoreModule->ValidateEmailDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePhnDirective \n\nValidatePhnDirective \n\nValidatePhnDirective  -->\n\nSharedCoreModule->ValidatePhnDirective \n\n\n\n\n\nValidatePhoneDirective \n\nValidatePhoneDirective \n\nValidatePhoneDirective  -->\n\nSharedCoreModule->ValidatePhoneDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateSinDirective \n\nValidateSinDirective \n\nValidateSinDirective  -->\n\nSharedCoreModule->ValidateSinDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    14 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nMoh-Common-Lib:\n- [ ] Security warnings (GitHub)\nBreaking Changes for version 3.0.0:\n\n FormActionBar / FormSubmiBar - make the on load default colour yellow\nThis can fix a \"flash\" of the first colour on macbooks and faster computers (nonVDI)\n\n\n Delete all instances of showError. We never use it as an @Input.\n address.model.ts\n public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n radio.component.ts\n @Input() showError: boolean; // TODO: Remove - breaking change\n // TODO: remove status change - breaking change\n\n\n checkbox.component.ts\n Remove to make custom form control -- possible breaking change\n @Input() required: boolean = false;  // TODO: Remove - breaking change\n Remove the showError\n\n\n xicon-button.component.ts\n Remove clickEvent output. Should be able to just use \"click\", which follows conventional Angular naming.\n\n\n street.component.ts\n Replace \"maxlen\" with \"maxlength\" across this and other components. Maxlength is more semantic / consistent.  Search for this in other places too.\n\n\n date.component.ts - Should become a FormControl (NgControl)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocal Development\n\ncomponents\nschematics\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n ~~*High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:*~~ [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/common\nIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nTypeScript\nimport { example } from 'moh-common-lib'\nIf you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
